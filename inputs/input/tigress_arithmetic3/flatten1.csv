METHOD factorial
METHOD_RETURN long
PARAM int x
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_factorial_next = 5
LITERAL 1 while (1)
IDENTIFIER _1_factorial_next switch(_1_factorial_next)
LITERAL 5 <empty>
<operator>.assignment fac = (long )x
<operator>.assignment i = 1
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 1 <empty>
<operator>.assignmentMultiplication fac *= (long )(x - i)
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (fac); return (fac);
<operator>.assignment _1_factorial_next = 3
<operator>.lessThan i < x
<operator>.assignment _1_factorial_next = 3
IDENTIFIER fac return (fac);
<operator>.cast (long )x
BLOCK <empty> <empty>
<operator>.cast (long )(x - i)
<operator>.assignment _1_factorial_next = 1
BLOCK <empty> <empty>
<operator>.subtraction x - i
<operator>.assignment _1_factorial_next = 0
>>>PDG&30 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->19 0->20 0->21 0->22 0->23 0->24 0->26 0->27 0->28 0->29 2->1 2->9 2->20 2->23 2->28 5->1 5->1 9->1 9->1 9->1 9->14 9->22 10->1 10->1 10->20 10->28 14->1 14->1 14->1 14->22 15->1 15->1 15->20 15->28 18->1 19->1 19->1 20->1 20->1 20->1 20->9 20->23 20->26 20->28 20->28 20->29 21->1 21->1 22->18 23->1 25->1 26->1 26->1 28->1 28->9 28->14 28->14 28->15 28->20 28->23 28->25 28->25 29->1 29->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; long factorial ( int x ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } long factorial ( int x ) { int i ; long fac ; unsigned long _1_factorial_next ; { { _1_factorial_next = 5 ; } while ( 1 ) { switch ( _1_factorial_next ) { case 5 : fac = ( long ) x ; i = 1 ; { _1_factorial_next = 3 ; } break ; case 3 : ; if ( i < x ) { { _1_factorial_next = 1 ; } } else { { _1_factorial_next = 0 ; } } break ; case 1 : fac *= ( long ) ( x - i ) ; i ++ ; { _1_factorial_next = 3 ; } break ; case 0 : ; return ( fac ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 7
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 7 <empty>
<operator>.assignment c = (unsigned char )*(*(argv + 1) + 0)
BLOCK <empty> <empty>
LITERAL 6 <empty>
LITERAL 5 <empty>
printf printf("if-1-win ")
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 3 <empty>
printf printf("if-2-win\n")
BLOCK <empty> <empty>
LITERAL 2 <empty>
printf printf("if-2-lose\n")
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("if-1-lose\n")
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 6
<operator>.greaterThan (int )c > 63
<operator>.assignment _1_main_next = 4
<operator>.equals (int )c == 127
<operator>.assignment _1_main_next = 0
<operator>.assignment _1_main_next = 0
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
<operator>.cast (unsigned char )*(*(argv + 1) + 0)
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.cast (int )c
<operator>.assignment _1_main_next = 5
BLOCK <empty> <empty>
<operator>.cast (int )c
<operator>.assignment _1_main_next = 3
BLOCK <empty> <empty>
<operator>.addition *(argv + 1) + 0
<operator>.assignment _1_main_next = 1
<operator>.assignment _1_main_next = 2
<operator>.addition argv + 1
>>>PDG&55 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 2->7 3->8 3->54 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->1 16->35 16->37 16->45 16->48 20->1 24->1 27->1 30->1 33->1 34->1 34->1 35->1 35->1 35->46 35->52 36->1 36->1 37->1 37->1 37->49 37->53 38->1 38->1 39->1 39->1 40->1 40->1 41->33 42->1 45->1 46->1 46->1 48->1 49->1 49->1 51->1 52->1 52->1 53->1 53->1 54->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int argc , char * * argv , char * * _formal_envp ) { unsigned char c ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 7 ; } while ( 1 ) { switch ( _1_main_next ) { case 7 : c = ( unsigned char ) * ( * ( argv + 1 ) + 0 ) ; { _1_main_next = 6 ; } break ; case 6 : ; if ( ( int ) c > 63 ) { { _1_main_next = 5 ; } } else { { _1_main_next = 1 ; } } break ; case 5 : printf ( " " ) ; { _1_main_next = 4 ; } break ; case 4 : ; if ( ( int ) c == 127 ) { { _1_main_next = 3 ; } } else { { _1_main_next = 2 ; } } break ; case 3 : printf ( " \n " ) ; { _1_main_next = 0 ; } break ; case 2 : printf ( " \n " ) ; { _1_main_next = 0 ; } break ; case 1 : printf ( " \n " ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 1 <empty>
test_crc32 test_crc32()
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
>>>PDG&22 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 19->1 20->1 20->1 21->19
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern int ( /* missing proto */ test_crc32 ) ( ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern double log ( double x ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 1 ; } while ( 1 ) { switch ( _1_main_next ) { case 1 : test_crc32 ( ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD c_atoi
METHOD_RETURN int
PARAM char const   *str
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_c_atoi_next = 31
LITERAL 1 while (1)
IDENTIFIER _1_c_atoi_next switch(_1_c_atoi_next)
LITERAL 31 <empty>
<operator>.assignment i = 0
<operator>.assignment sign = 1
<operator>.assignment value = 0L
BLOCK <empty> <empty>
LITERAL 29 <empty>
LITERAL 28 <empty>
LITERAL 25 <empty>
LITERAL 24 <empty>
LITERAL 21 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 20 <empty>
LITERAL 19 <empty>
<operator>.assignment sign = -1
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 18 <empty>
LITERAL 17 <empty>
<operator>.assignment sign = 1
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 15 <empty>
LITERAL 14 <empty>
LITERAL 13 <empty>
LITERAL 9 <empty>
<operator>.assignment prev = value
<operator>.assignment value = value * 10L + (long )(sign * (int )((int const   )*(str + i) - 48))
BLOCK <empty> <empty>
LITERAL 8 <empty>
LITERAL 7 <empty>
LITERAL 6 <empty>
RETURN return (-1); return (-1);
LITERAL 4 <empty>
LITERAL 3 <empty>
LITERAL 2 <empty>
RETURN return (0); return (0);
LITERAL 1 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return ((int )value); return ((int )value);
<operator>.assignment _1_c_atoi_next = 29
<operator>.lessEqualsThan (int const   )*(str + i) <= 13
<operator>.greaterEqualsThan (int const   )*(str + i) >= 9
<operator>.equals (int const   )*(str + i) == 32
<operator>.notEquals (int const   )*(str + i) != 0
<operator>.assignment _1_c_atoi_next = 29
<operator>.equals (int const   )*(str + i) == 45
<operator>.assignment _1_c_atoi_next = 15
<operator>.equals (int const   )*(str + i) == 43
<operator>.assignment _1_c_atoi_next = 15
<operator>.greaterEqualsThan (int const   )*(str + i) >= 48
<operator>.lessEqualsThan (int const   )*(str + i) <= 57
<operator>.notEquals (int const   )*(str + i) != 0
<operator>.assignment _1_c_atoi_next = 8
<operator>.equals sign == 1
<operator>.greaterThan prev > value
<operator>.minus -1
<operator>.equals sign == -1
<operator>.lessThan prev < value
LITERAL 0 return (0);
<operator>.assignment _1_c_atoi_next = 15
<operator>.cast (int )value
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.minus -1
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.addition value * 10L + (long )(sign * (int )((int const   )*(str + i) - 48))
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.cast (int const   )*(str + i)
<operator>.assignment _1_c_atoi_next = 28
BLOCK <empty> <empty>
<operator>.cast (int const   )*(str + i)
<operator>.assignment _1_c_atoi_next = 24
BLOCK <empty> <empty>
<operator>.cast (int const   )*(str + i)
<operator>.assignment _1_c_atoi_next = 24
BLOCK <empty> <empty>
<operator>.cast (int const   )*(str + i)
<operator>.assignment _1_c_atoi_next = 21
BLOCK <empty> <empty>
<operator>.cast (int const   )*(str + i)
<operator>.assignment _1_c_atoi_next = 19
BLOCK <empty> <empty>
<operator>.cast (int const   )*(str + i)
<operator>.assignment _1_c_atoi_next = 17
BLOCK <empty> <empty>
<operator>.cast (int const   )*(str + i)
<operator>.assignment _1_c_atoi_next = 14
BLOCK <empty> <empty>
<operator>.cast (int const   )*(str + i)
<operator>.assignment _1_c_atoi_next = 13
BLOCK <empty> <empty>
<operator>.cast (int const   )*(str + i)
<operator>.assignment _1_c_atoi_next = 9
BLOCK <empty> <empty>
<operator>.multiplication value * 10L
<operator>.cast (long )(sign * (int )((int const   )*(str + i) - 48))
<operator>.assignment _1_c_atoi_next = 7
BLOCK <empty> <empty>
<operator>.assignment _1_c_atoi_next = 6
BLOCK <empty> <empty>
<operator>.minus -1
<operator>.assignment _1_c_atoi_next = 3
BLOCK <empty> <empty>
<operator>.assignment _1_c_atoi_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_c_atoi_next = 25
<operator>.assignment _1_c_atoi_next = 25
<operator>.assignment _1_c_atoi_next = 20
<operator>.assignment _1_c_atoi_next = 20
<operator>.assignment _1_c_atoi_next = 18
<operator>.assignment _1_c_atoi_next = 15
<operator>.assignment _1_c_atoi_next = 0
<operator>.assignment _1_c_atoi_next = 0
<operator>.assignment _1_c_atoi_next = 0
<operator>.multiplication sign * (int )((int const   )*(str + i) - 48)
<operator>.assignment _1_c_atoi_next = 4
<operator>.assignment _1_c_atoi_next = 4
<operator>.assignment _1_c_atoi_next = 1
<operator>.assignment _1_c_atoi_next = 1
<operator>.addition str + i
<operator>.addition str + i
<operator>.addition str + i
<operator>.addition str + i
<operator>.addition str + i
<operator>.addition str + i
<operator>.addition str + i
<operator>.addition str + i
<operator>.addition str + i
<operator>.cast (int )((int const   )*(str + i) - 48)
<operator>.subtraction (int const   )*(str + i) - 48
<operator>.cast (int const   )*(str + i)
<operator>.addition str + i
>>>PDG&152 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->36 0->37 0->38 0->39 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 0->59 0->60 0->61 0->62 0->63 0->64 0->65 0->66 0->67 0->68 0->69 0->70 0->71 0->72 0->73 0->74 0->75 0->76 0->77 0->78 0->79 0->80 0->81 0->83 0->84 0->85 0->86 0->88 0->89 0->91 0->92 0->94 0->95 0->97 0->98 0->100 0->101 0->103 0->104 0->106 0->107 0->109 0->110 0->112 0->113 0->114 0->116 0->117 0->118 0->119 0->120 0->121 0->122 0->123 0->124 0->125 0->126 0->127 0->128 0->129 0->130 0->131 0->132 0->133 0->134 0->135 0->136 0->137 0->138 0->139 0->140 0->141 0->142 0->143 0->144 0->145 0->146 0->147 0->149 0->151 2->1 2->139 2->140 2->141 2->142 2->143 2->144 2->145 2->146 2->147 2->151 5->1 5->1 9->1 9->1 9->18 9->23 9->28 9->46 9->139 9->140 9->141 9->142 9->143 9->144 9->145 9->146 9->147 9->151 10->1 10->1 10->64 10->67 10->134 11->1 11->1 11->34 11->65 11->68 11->71 11->114 18->1 18->1 18->23 18->28 18->46 18->139 18->140 18->141 18->142 18->143 18->144 18->145 18->146 18->147 18->151 22->1 22->1 22->64 22->67 22->134 23->1 23->1 23->18 23->28 23->46 23->139 23->140 23->141 23->142 23->143 23->144 23->145 23->146 23->147 23->151 27->1 27->1 27->64 27->67 27->134 28->1 28->1 28->18 28->23 28->46 28->139 28->140 28->141 28->142 28->143 28->144 28->145 28->146 28->147 28->151 34->1 34->1 34->65 34->68 35->1 35->1 35->1 35->34 35->65 35->68 35->71 35->114 40->1 44->1 46->1 46->1 46->18 46->23 46->28 46->139 46->140 46->141 46->142 46->143 46->144 46->145 46->146 46->147 46->151 49->1 50->1 50->1 51->1 51->1 51->88 51->125 52->1 52->1 52->91 52->126 53->1 53->1 53->94 53->127 54->1 54->1 54->97 54->128 55->1 55->1 56->1 56->1 56->100 56->129 57->1 57->1 58->1 58->1 58->103 58->130 59->1 59->1 60->1 60->1 60->106 60->131 61->1 61->1 61->109 61->132 62->1 62->1 62->112 62->133 63->1 63->1 64->1 64->1 64->67 64->116 64->134 64->135 65->1 65->1 65->1 65->34 65->68 65->68 65->71 65->114 65->118 65->136 66->1 66->40 67->1 67->1 67->64 67->121 67->134 67->137 68->1 68->1 68->1 68->34 68->65 68->65 68->71 68->114 68->123 68->138 69->44 70->1 70->1 71->49 77->22 82->1 82->1 87->1 88->1 88->1 90->1 91->1 91->1 93->1 94->1 94->1 96->1 97->1 97->1 99->1 100->1 100->1 102->1 103->1 103->1 105->1 106->1 106->1 108->1 109->1 109->1 111->1 112->1 112->1 114->35 114->35 114->82 114->82 115->1 116->1 116->1 118->1 118->1 120->67 121->1 121->1 123->1 123->1 125->1 125->1 126->1 126->1 127->1 127->1 128->1 128->1 129->1 129->1 130->1 130->1 131->1 131->1 132->1 132->1 133->1 133->1 134->1 134->1 134->35 134->35 134->64 134->67 134->82 134->82 134->115 134->115 135->1 135->1 136->1 136->1 137->1 137->1 138->1 138->1 139->1 139->1 140->1 140->1 141->1 141->1 142->1 142->1 143->1 143->1 144->1 144->1 145->1 145->1 146->1 146->1 147->1 147->1 148->1 149->1 149->134 149->134 149->148 149->148 150->1 151->1 151->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; int c_atoi ( char const * str ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } int c_atoi ( char const * str ) { int i ; int sign ; long value ; long prev ; unsigned long _1_c_atoi_next ; { { _1_c_atoi_next = 31 ; } while ( 1 ) { switch ( _1_c_atoi_next ) { case 31 : i = 0 ; sign = 1 ; value = 0L ; { _1_c_atoi_next = 29 ; } break ; case 29 : ; if ( ( int const ) * ( str + i ) <= 13 ) { { _1_c_atoi_next = 28 ; } } else { { _1_c_atoi_next = 25 ; } } break ; case 28 : ; if ( ( int const ) * ( str + i ) >= 9 ) { { _1_c_atoi_next = 24 ; } } else { { _1_c_atoi_next = 25 ; } } break ; case 25 : _L___0 : /* CIL Label */ ; if ( ( int const ) * ( str + i ) == 32 ) { { _1_c_atoi_next = 24 ; } } else { { _1_c_atoi_next = 20 ; } } break ; case 24 : _L : /* CIL Label */ ; if ( ( int const ) * ( str + i ) != 0 ) { { _1_c_atoi_next = 21 ; } } else { { _1_c_atoi_next = 20 ; } } break ; case 21 : i ++ ; { _1_c_atoi_next = 29 ; } break ; case 20 : ; if ( ( int const ) * ( str + i ) == 45 ) { { _1_c_atoi_next = 19 ; } } else { { _1_c_atoi_next = 18 ; } } break ; case 19 : sign = -1 ; i ++ ; { _1_c_atoi_next = 15 ; } break ; case 18 : ; if ( ( int const ) * ( str + i ) == 43 ) { { _1_c_atoi_next = 17 ; } } else { { _1_c_atoi_next = 15 ; } } break ; case 17 : sign = 1 ; i ++ ; { _1_c_atoi_next = 15 ; } break ; case 15 : ; if ( ( int const ) * ( str + i ) >= 48 ) { { _1_c_atoi_next = 14 ; } } else { { _1_c_atoi_next = 0 ; } } break ; case 14 : ; if ( ( int const ) * ( str + i ) <= 57 ) { { _1_c_atoi_next = 13 ; } } else { { _1_c_atoi_next = 0 ; } } break ; case 13 : ; if ( ( int const ) * ( str + i ) != 0 ) { { _1_c_atoi_next = 9 ; } } else { { _1_c_atoi_next = 0 ; } } break ; case 9 : prev = value ; value = value * 10L + ( long ) ( sign * ( int ) ( ( int const ) * ( str + i ) - 48 ) ) ; { _1_c_atoi_next = 8 ; } break ; case 8 : ; if ( sign == 1 ) { { _1_c_atoi_next = 7 ; } } else { { _1_c_atoi_next = 4 ; } } break ; case 7 : ; if ( prev > value ) { { _1_c_atoi_next = 6 ; } } else { { _1_c_atoi_next = 4 ; } } break ; case 6 : ; return ( -1 ) ; break ; case 4 : _L___1 : /* CIL Label */ ; if ( sign == -1 ) { { _1_c_atoi_next = 3 ; } } else { { _1_c_atoi_next = 1 ; } } break ; case 3 : ; if ( prev < value ) { { _1_c_atoi_next = 2 ; } } else { { _1_c_atoi_next = 1 ; } } break ; case 2 : ; return ( 0 ) ; break ; case 1 : i ++ ; { _1_c_atoi_next = 15 ; } break ; case 0 : ; return ( ( int ) value ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD firstBadVersion
METHOD_RETURN int
PARAM int n
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_firstBadVersion_next = 8
LITERAL 1 while (1)
IDENTIFIER _1_firstBadVersion_next switch(_1_firstBadVersion_next)
LITERAL 8 <empty>
<operator>.assignment low = 1
<operator>.assignment high = n
BLOCK <empty> <empty>
LITERAL 6 <empty>
LITERAL 4 <empty>
<operator>.assignment mid = low + (high - low) / 2
<operator>.assignment tmp = isBadVersion(mid)
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 2 <empty>
<operator>.assignment high = mid - 1
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operator>.assignment low = mid + 1
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (low); return (low);
<operator>.assignment _1_firstBadVersion_next = 6
<operator>.lessEqualsThan low <= high
<operator>.assignment _1_firstBadVersion_next = 3
IDENTIFIER tmp if (tmp)
<operator>.assignment _1_firstBadVersion_next = 6
<operator>.assignment _1_firstBadVersion_next = 6
IDENTIFIER low return (low);
BLOCK <empty> <empty>
<operator>.addition low + (high - low) / 2
isBadVersion isBadVersion(mid)
BLOCK <empty> <empty>
<operator>.subtraction mid - 1
<operator>.addition mid + 1
<operator>.assignment _1_firstBadVersion_next = 4
BLOCK <empty> <empty>
<operator>.division (high - low) / 2
<operator>.assignment _1_firstBadVersion_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_firstBadVersion_next = 0
<operator>.subtraction high - low
<operator>.assignment _1_firstBadVersion_next = 1
>>>PDG&47 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->16 0->17 0->18 0->20 0->21 0->22 0->23 0->24 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 2->1 2->10 5->1 5->1 9->1 9->1 9->27 9->32 9->45 10->1 10->1 10->1 10->27 10->45 14->1 14->1 14->35 15->1 15->1 15->1 19->1 19->1 19->1 19->27 19->45 22->1 22->1 22->1 22->27 22->32 22->45 25->1 26->1 26->1 27->1 27->1 27->1 27->32 27->39 27->44 27->45 27->45 28->1 28->1 30->1 30->1 31->1 31->1 32->25 34->1 34->1 35->1 35->15 35->22 35->37 35->38 37->1 37->19 37->19 37->22 37->38 38->1 39->1 39->1 41->1 41->14 41->14 41->34 41->34 42->1 42->1 44->1 44->1 45->1 45->14 45->27 45->27 45->32 45->34 45->41 45->41 46->1 46->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int ( /* missing proto */ isBadVersion ) ( ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; int firstBadVersion ( int n ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } } int firstBadVersion ( int n ) { int low ; int high ; int mid ; int tmp ; unsigned long _1_firstBadVersion_next ; { { _1_firstBadVersion_next = 8 ; } while ( 1 ) { switch ( _1_firstBadVersion_next ) { case 8 : low = 1 ; high = n ; { _1_firstBadVersion_next = 6 ; } break ; case 6 : ; if ( low <= high ) { { _1_firstBadVersion_next = 4 ; } } else { { _1_firstBadVersion_next = 0 ; } } break ; case 4 : mid = low + ( high - low ) / 2 ; tmp = isBadVersion ( mid ) ; { _1_firstBadVersion_next = 3 ; } break ; case 3 : ; if ( tmp ) { { _1_firstBadVersion_next = 2 ; } } else { { _1_firstBadVersion_next = 1 ; } } break ; case 2 : high = mid - 1 ; { _1_firstBadVersion_next = 6 ; } break ; case 1 : low = mid + 1 ; { _1_firstBadVersion_next = 6 ; } break ; case 0 : ; return ( low ) ; break ; } } } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 98
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 111 <empty>
<operator>.assignment j = 0
BLOCK <empty> <empty>
LITERAL 109 <empty>
LITERAL 107 <empty>
<operator>.assignment str2[i * K + p[j]] = str[i * K + j]
<operator>.postIncrement j ++
BLOCK <empty> <empty>
LITERAL 106 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 105 <empty>
<operator>.assignment str2[len] = (char)0
<operator>.assignment c = 0
<operator>.assignment i = 1
BLOCK <empty> <empty>
LITERAL 103 <empty>
LITERAL 101 <empty>
LITERAL 100 <empty>
<operator>.postIncrement c ++
BLOCK <empty> <empty>
LITERAL 99 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 98 <empty>
scanf scanf(" %d", & N)
<operator>.assignment n = 0
BLOCK <empty> <empty>
LITERAL 96 <empty>
LITERAL 95 <empty>
<operator>.assignment min = c
BLOCK <empty> <empty>
LITERAL 94 <empty>
LITERAL 93 <empty>
<operator>.postIncrement (p[3]) ++
BLOCK <empty> <empty>
LITERAL 91 <empty>
<operator>.postIncrement (p[2]) ++
BLOCK <empty> <empty>
LITERAL 90 <empty>
scanf scanf(" %d", & K)
scanf scanf(" %s", str)
<operator>.assignment len = strlen(str)
<operator>.assignment min = 100000
BLOCK <empty> <empty>
LITERAL 89 <empty>
<operator>.postIncrement (p[1]) ++
BLOCK <empty> <empty>
LITERAL 88 <empty>
LITERAL 87 <empty>
<operator>.postIncrement (p[0]) ++
BLOCK <empty> <empty>
LITERAL 86 <empty>
<operator>.assignment p[0] = 0
BLOCK <empty> <empty>
LITERAL 83 <empty>
<operator>.assignment p[0] = 0
BLOCK <empty> <empty>
LITERAL 82 <empty>
LITERAL 79 <empty>
LITERAL 78 <empty>
<operator>.assignment p[1] = 0
BLOCK <empty> <empty>
LITERAL 75 <empty>
<operator>.assignment p[1] = 0
BLOCK <empty> <empty>
LITERAL 74 <empty>
LITERAL 71 <empty>
LITERAL 70 <empty>
LITERAL 68 <empty>
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 67 <empty>
LITERAL 65 <empty>
<operator>.assignment p[2] = 0
BLOCK <empty> <empty>
LITERAL 64 <empty>
LITERAL 177 <empty>
LITERAL 176 <empty>
LITERAL 61 <empty>
LITERAL 174 <empty>
LITERAL 60 <empty>
<operator>.assignment j = 0
BLOCK <empty> <empty>
LITERAL 173 <empty>
LITERAL 172 <empty>
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 171 <empty>
<operator>.postIncrement c ++
BLOCK <empty> <empty>
LITERAL 57 <empty>
LITERAL 56 <empty>
LITERAL 169 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 55 <empty>
LITERAL 168 <empty>
LITERAL 167 <empty>
LITERAL 53 <empty>
<operator>.assignment p[3] = 0
BLOCK <empty> <empty>
LITERAL 52 <empty>
<operator>.assignment str2[i * K + p[j]] = str[i * K + j]
<operator>.postIncrement j ++
BLOCK <empty> <empty>
LITERAL 165 <empty>
<operator>.assignment min = c
BLOCK <empty> <empty>
LITERAL 164 <empty>
<operator>.assignment j = 0
BLOCK <empty> <empty>
LITERAL 50 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 163 <empty>
<operator>.postIncrement (p[4]) ++
BLOCK <empty> <empty>
LITERAL 49 <empty>
LITERAL 48 <empty>
<operator>.assignment c = 0
<operator>.assignment i = 1
BLOCK <empty> <empty>
LITERAL 161 <empty>
<operator>.postIncrement (p[3]) ++
BLOCK <empty> <empty>
LITERAL 160 <empty>
LITERAL 159 <empty>
<operator>.postIncrement (p[2]) ++
BLOCK <empty> <empty>
LITERAL 45 <empty>
LITERAL 44 <empty>
LITERAL 157 <empty>
<operator>.postIncrement (p[1]) ++
BLOCK <empty> <empty>
LITERAL 43 <empty>
LITERAL 156 <empty>
<operator>.assignment str2[i * K + p[j]] = str[i * K + j]
<operator>.postIncrement j ++
BLOCK <empty> <empty>
LITERAL 155 <empty>
<operator>.postIncrement (p[0]) ++
BLOCK <empty> <empty>
LITERAL 41 <empty>
LITERAL 154 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 40 <empty>
LITERAL 39 <empty>
<operator>.assignment p[4] = 0
BLOCK <empty> <empty>
LITERAL 152 <empty>
<operator>.assignment c = 0
<operator>.assignment i = 1
BLOCK <empty> <empty>
LITERAL 38 <empty>
<operator>.postIncrement c ++
BLOCK <empty> <empty>
LITERAL 151 <empty>
printf printf("Case #%d: %d\n", n + 1, min + 1)
<operator>.postIncrement n ++
BLOCK <empty> <empty>
LITERAL 36 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 149 <empty>
RETURN return (0); return (0);
LITERAL 35 <empty>
LITERAL 148 <empty>
LITERAL 34 <empty>
LITERAL 146 <empty>
LITERAL 32 <empty>
<operator>.assignment min = c
BLOCK <empty> <empty>
LITERAL 145 <empty>
<operator>.postIncrement c ++
BLOCK <empty> <empty>
LITERAL 31 <empty>
LITERAL 144 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 30 <empty>
<operator>.postIncrement (p[1]) ++
BLOCK <empty> <empty>
LITERAL 143 <empty>
LITERAL 29 <empty>
LITERAL 142 <empty>
<operator>.assignment min = c
BLOCK <empty> <empty>
LITERAL 28 <empty>
<operator>.postIncrement (p[0]) ++
BLOCK <empty> <empty>
LITERAL 141 <empty>
<operator>.postIncrement (p[2]) ++
BLOCK <empty> <empty>
LITERAL 27 <empty>
LITERAL 140 <empty>
<operator>.postIncrement (p[1]) ++
BLOCK <empty> <empty>
LITERAL 139 <empty>
<operator>.postIncrement (p[0]) ++
BLOCK <empty> <empty>
LITERAL 25 <empty>
LITERAL 24 <empty>
<operator>.assignment p[0] = 0
BLOCK <empty> <empty>
LITERAL 137 <empty>
<operator>.assignment p[0] = 0
BLOCK <empty> <empty>
LITERAL 23 <empty>
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 135 <empty>
LITERAL 20 <empty>
LITERAL 133 <empty>
<operator>.assignment p[1] = 0
BLOCK <empty> <empty>
LITERAL 19 <empty>
LITERAL 131 <empty>
LITERAL 16 <empty>
<operator>.assignment p[1] = 0
BLOCK <empty> <empty>
LITERAL 129 <empty>
LITERAL 15 <empty>
<operator>.assignment j = 0
BLOCK <empty> <empty>
LITERAL 128 <empty>
<operator>.assignment p[2] = 0
BLOCK <empty> <empty>
LITERAL 126 <empty>
LITERAL 12 <empty>
LITERAL 11 <empty>
LITERAL 124 <empty>
LITERAL 123 <empty>
LITERAL 122 <empty>
<operator>.assignment p[3] = 0
BLOCK <empty> <empty>
LITERAL 8 <empty>
LITERAL 7 <empty>
<operator>.assignment str2[i * K + p[j]] = str[i * K + j]
<operator>.postIncrement j ++
BLOCK <empty> <empty>
LITERAL 120 <empty>
LITERAL 6 <empty>
<operator>.assignment p[2] = 0
BLOCK <empty> <empty>
LITERAL 5 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 118 <empty>
LITERAL 117 <empty>
LITERAL 3 <empty>
<operator>.assignment c = 0
<operator>.assignment i = 1
BLOCK <empty> <empty>
LITERAL 116 <empty>
LITERAL 2 <empty>
LITERAL 115 <empty>
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 113 <empty>
<operator>.assignment _1_main_next = 109
<operator>.lessThan j < K
<operator>.assignment _1_main_next = 109
<operator>.assignment _1_main_next = 113
<operator>.assignment _1_main_next = 103
<operator>.lessThan i < len
<operator>.notEquals (int )str2[i] != (int )str2[i - 1]
<operator>.assignment _1_main_next = 99
<operator>.assignment _1_main_next = 103
<operator>.assignment _1_main_next = 94
<operator>.lessThan c < min
<operator>.assignment _1_main_next = 93
<operator>.lessThan n < N
<operator>.assignment _1_main_next = 120
<operator>.assignment _1_main_next = 126
<operator>.assignment _1_main_next = 88
<operator>.assignment _1_main_next = 131
IDENTIFIER K switch(K)
<operator>.assignment _1_main_next = 135
<operator>.assignment _1_main_next = 82
<operator>.assignment _1_main_next = 79
<operator>.lessThan p[0] < K
<operator>.lessThan p[0] < K
<operator>.assignment _1_main_next = 74
<operator>.assignment _1_main_next = 71
<operator>.lessThan p[1] < K
<operator>.lessThan p[1] < K
<operator>.notEquals p[1] != p[0]
<operator>.assignment _1_main_next = 64
<operator>.notEquals p[1] != p[0]
<operator>.assignment _1_main_next = 61
<operator>.lessThan i < len / K
<operator>.lessThan i < len
<operator>.notEquals p[2] != p[0]
<operator>.lessThan p[2] < K
<operator>.notEquals p[2] != p[1]
<operator>.assignment _1_main_next = 56
<operator>.notEquals (int )str2[i] != (int )str2[i - 1]
<operator>.assignment _1_main_next = 168
<operator>.assignment _1_main_next = 169
<operator>.notEquals p[2] != p[0]
<operator>.lessThan j < K
<operator>.assignment _1_main_next = 177
<operator>.notEquals p[2] != p[1]
<operator>.lessThan i < len / K
<operator>.lessThan c < min
<operator>.assignment _1_main_next = 49
<operator>.assignment _1_main_next = 56
<operator>.assignment _1_main_next = 163
<operator>.assignment _1_main_next = 160
<operator>.assignment _1_main_next = 64
<operator>.assignment _1_main_next = 35
<operator>.lessThan p[3] < K
<operator>.assignment _1_main_next = 44
<operator>.assignment _1_main_next = 49
<operator>.lessThan j < K
<operator>.assignment _1_main_next = 61
<operator>.notEquals p[3] != p[0]
<operator>.lessThan i < len
<operator>.assignment _1_main_next = 71
<operator>.notEquals p[3] != p[1]
<operator>.assignment _1_main_next = 160
<operator>.assignment _1_main_next = 79
<operator>.notEquals p[3] != p[2]
<operator>.assignment _1_main_next = 168
<operator>.notEquals (int )str2[i] != (int )str2[i - 1]
<operator>.assignment _1_main_next = 35
<operator>.assignment _1_main_next = 148
<operator>.assignment _1_main_next = 36
<operator>.assignment _1_main_next = 94
<operator>.assignment _1_main_next = 44
LITERAL 0 return (0);
<operator>.lessThan p[4] < K
<operator>.lessThan i < len
<operator>.lessThan c < min
<operator>.notEquals (int )str2[i] != (int )str2[i - 1]
<operator>.assignment _1_main_next = 30
<operator>.assignment _1_main_next = 144
<operator>.notEquals p[4] != p[0]
<operator>.assignment _1_main_next = 148
<operator>.assignment _1_main_next = 74
<operator>.lessThan c < min
<operator>.notEquals p[4] != p[1]
<operator>.assignment _1_main_next = 141
<operator>.assignment _1_main_next = 82
<operator>.assignment _1_main_next = 2
<operator>.notEquals p[4] != p[2]
<operator>.assignment _1_main_next = 12
<operator>.assignment _1_main_next = 20
<operator>.notEquals p[4] != p[3]
<operator>.assignment _1_main_next = 20
<operator>.assignment _1_main_next = 135
<operator>.assignment _1_main_next = 19
<operator>.lessThan p[0] < K
<operator>.lessThan p[0] < K
<operator>.assignment _1_main_next = 131
<operator>.lessThan i < len / K
<operator>.lessThan p[1] < K
<operator>.assignment _1_main_next = 12
<operator>.notEquals p[1] != p[0]
<operator>.assignment _1_main_next = 11
<operator>.assignment _1_main_next = 126
<operator>.lessThan p[2] < K
<operator>.lessThan p[1] < K
<operator>.lessThan j < K
<operator>.notEquals p[2] != p[0]
<operator>.notEquals p[2] != p[1]
<operator>.assignment _1_main_next = 120
<operator>.notEquals p[1] != p[0]
<operator>.assignment _1_main_next = 11
<operator>.lessThan p[3] < K
<operator>.assignment _1_main_next = 2
<operator>.assignment _1_main_next = 19
<operator>.notEquals p[3] != p[0]
<operator>.notEquals p[3] != p[1]
<operator>.assignment _1_main_next = 177
<operator>.notEquals p[3] != p[2]
<operator>.lessThan p[2] < K
<operator>.assignment _1_main_next = 113
<operator>.lessThan i < len / K
BLOCK <empty> <empty>
<operator>.cast (char)0
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
strlen strlen(str)
LITERAL 2 <empty>
BLOCK <empty> <empty>
LITERAL 3 <empty>
BLOCK <empty> <empty>
LITERAL 4 <empty>
BLOCK <empty> <empty>
LITERAL 5 <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.addition n + 1
<operator>.addition min + 1
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 107
BLOCK <empty> <empty>
<operator>.addition i * K + p[j]
<operator>.addition i * K + j
<operator>.assignment _1_main_next = 101
BLOCK <empty> <empty>
<operator>.cast (int )str2[i]
<operator>.cast (int )str2[i - 1]
<operator>.assignment _1_main_next = 100
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 95
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 90
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 86
<operator>.assignment _1_main_next = 24
<operator>.assignment _1_main_next = 137
<operator>.assignment _1_main_next = 83
<operator>.assignment _1_main_next = 151
<operator>.assignment _1_main_next = 78
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 75
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 70
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 67
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 68
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 65
BLOCK <empty> <empty>
<operator>.division len / K
<operator>.assignment _1_main_next = 60
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 173
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 174
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 57
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 172
BLOCK <empty> <empty>
<operator>.cast (int )str2[i]
<operator>.cast (int )str2[i - 1]
<operator>.assignment _1_main_next = 171
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 55
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 52
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 53
BLOCK <empty> <empty>
<operator>.division len / K
<operator>.assignment _1_main_next = 164
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 165
BLOCK <empty> <empty>
<operator>.addition i * K + p[j]
<operator>.addition i * K + j
<operator>.assignment _1_main_next = 45
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 156
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 43
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 40
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 41
BLOCK <empty> <empty>
<operator>.addition i * K + p[j]
<operator>.addition i * K + j
<operator>.assignment _1_main_next = 39
BLOCK <empty> <empty>
<operator>.cast (int )str2[i]
<operator>.cast (int )str2[i - 1]
<operator>.assignment _1_main_next = 38
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 31
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 146
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 32
BLOCK <empty> <empty>
<operator>.cast (int )str2[i]
<operator>.cast (int )str2[i - 1]
<operator>.assignment _1_main_next = 145
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 29
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 142
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 27
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 25
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 23
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 133
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 16
BLOCK <empty> <empty>
<operator>.division len / K
<operator>.assignment _1_main_next = 15
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 129
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 128
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 124
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 8
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 7
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 123
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 122
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 6
BLOCK <empty> <empty>
<operator>.addition i * K + p[j]
<operator>.addition i * K + j
<operator>.assignment _1_main_next = 118
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 117
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 116
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 115
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 176
BLOCK <empty> <empty>
<operator>.division len / K
<operator>.assignment _1_main_next = 111
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 106
<operator>.multiplication i * K
<operator>.multiplication i * K
<operator>.assignment _1_main_next = 96
<operator>.assignment _1_main_next = 99
<operator>.assignment _1_main_next = 93
<operator>.assignment _1_main_next = 149
<operator>.assignment _1_main_next = 151
<operator>.assignment _1_main_next = 151
<operator>.assignment _1_main_next = 28
<operator>.assignment _1_main_next = 155
<operator>.assignment _1_main_next = 30
<operator>.assignment _1_main_next = 157
<operator>.assignment _1_main_next = 48
<operator>.assignment _1_main_next = 167
<operator>.assignment _1_main_next = 141
<operator>.assignment _1_main_next = 157
<operator>.assignment _1_main_next = 141
<operator>.assignment _1_main_next = 169
<operator>.assignment _1_main_next = 159
<operator>.assignment _1_main_next = 50
<operator>.assignment _1_main_next = 159
<operator>.assignment _1_main_next = 152
<operator>.assignment _1_main_next = 163
<operator>.multiplication i * K
<operator>.multiplication i * K
<operator>.assignment _1_main_next = 159
<operator>.assignment _1_main_next = 154
<operator>.assignment _1_main_next = 161
<operator>.assignment _1_main_next = 34
<operator>.assignment _1_main_next = 161
<operator>.multiplication i * K
<operator>.multiplication i * K
<operator>.assignment _1_main_next = 161
<operator>.assignment _1_main_next = 36
<operator>.assignment _1_main_next = 161
<operator>.assignment _1_main_next = 143
<operator>.assignment _1_main_next = 30
<operator>.assignment _1_main_next = 144
<operator>.assignment _1_main_next = 163
<operator>.assignment _1_main_next = 141
<operator>.assignment _1_main_next = 163
<operator>.assignment _1_main_next = 163
<operator>.assignment _1_main_next = 163
<operator>.assignment _1_main_next = 151
<operator>.assignment _1_main_next = 151
<operator>.assignment _1_main_next = 3
<operator>.assignment _1_main_next = 87
<operator>.assignment _1_main_next = 89
<operator>.assignment _1_main_next = 89
<operator>.assignment _1_main_next = 139
<operator>.assignment _1_main_next = 5
<operator>.assignment _1_main_next = 91
<operator>.assignment _1_main_next = 91
<operator>.assignment _1_main_next = 140
<operator>.multiplication i * K
<operator>.multiplication i * K
<operator>.assignment _1_main_next = 91
<operator>.assignment _1_main_next = 93
<operator>.assignment _1_main_next = 93
<operator>.assignment _1_main_next = 93
<operator>.assignment _1_main_next = 140
<operator>.assignment _1_main_next = 105
<operator>.subtraction i - 1
<operator>.subtraction i - 1
<operator>.subtraction i - 1
<operator>.subtraction i - 1
>>>PDG&666 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->50 0->51 0->53 0->54 0->55 0->56 0->58 0->59 0->60 0->62 0->63 0->64 0->66 0->67 0->68 0->69 0->70 0->71 0->72 0->73 0->74 0->75 0->76 0->77 0->78 0->79 0->80 0->81 0->82 0->83 0->84 0->85 0->86 0->87 0->88 0->89 0->90 0->91 0->92 0->93 0->94 0->95 0->96 0->97 0->98 0->99 0->100 0->101 0->102 0->103 0->104 0->105 0->106 0->107 0->108 0->109 0->110 0->111 0->112 0->113 0->114 0->115 0->116 0->117 0->119 0->120 0->121 0->122 0->123 0->124 0->125 0->126 0->127 0->128 0->129 0->130 0->132 0->133 0->134 0->135 0->136 0->137 0->138 0->140 0->141 0->142 0->144 0->145 0->146 0->147 0->149 0->150 0->151 0->153 0->154 0->155 0->157 0->158 0->159 0->160 0->161 0->162 0->163 0->164 0->165 0->166 0->167 0->168 0->169 0->170 0->171 0->172 0->173 0->174 0->175 0->176 0->177 0->178 0->179 0->180 0->181 0->182 0->183 0->184 0->185 0->186 0->187 0->188 0->189 0->190 0->191 0->192 0->193 0->194 0->195 0->196 0->198 0->199 0->200 0->201 0->202 0->203 0->204 0->206 0->207 0->209 0->210 0->211 0->213 0->214 0->216 0->217 0->218 0->219 0->220 0->221 0->222 0->223 0->224 0->225 0->226 0->227 0->228 0->229 0->230 0->231 0->232 0->233 0->234 0->235 0->236 0->237 0->238 0->239 0->240 0->241 0->242 0->243 0->244 0->245 0->246 0->247 0->248 0->249 0->250 0->251 0->252 0->253 0->255 0->256 0->257 0->258 0->259 0->260 0->261 0->262 0->263 0->264 0->265 0->266 0->267 0->268 0->269 0->270 0->271 0->272 0->273 0->274 0->275 0->276 0->277 0->278 0->279 0->280 0->281 0->283 0->284 0->285 0->286 0->287 0->288 0->289 0->290 0->291 0->292 0->293 0->294 0->295 0->296 0->297 0->298 0->299 0->300 0->301 0->302 0->304 0->306 0->307 0->308 0->310 0->312 0->314 0->315 0->317 0->318 0->320 0->321 0->322 0->323 0->324 0->325 0->326 0->327 0->328 0->329 0->330 0->331 0->332 0->334 0->335 0->337 0->338 0->340 0->342 0->343 0->344 0->345 0->346 0->347 0->348 0->349 0->350 0->352 0->353 0->355 0->356 0->357 0->359 0->360 0->361 0->363 0->364 0->366 0->367 0->368 0->369 0->370 0->371 0->372 0->373 0->374 0->376 0->377 0->378 0->379 0->380 0->383 0->385 0->386 0->387 0->388 0->391 0->393 0->394 0->395 0->396 0->397 0->398 0->399 0->400 0->401 0->402 0->403 0->404 0->405 0->406 0->407 0->408 0->409 0->410 0->411 0->412 0->413 0->414 0->415 0->416 0->417 0->418 0->419 0->420 0->421 0->422 0->423 0->424 0->425 0->426 0->427 0->428 0->429 0->430 0->431 0->432 0->433 0->434 0->435 0->436 0->437 0->438 0->439 0->440 0->441 0->442 0->443 0->444 0->445 0->446 0->447 0->448 0->449 0->450 0->451 0->452 0->453 0->454 0->455 0->456 0->457 0->458 0->459 0->460 0->461 0->462 0->463 0->464 0->465 0->467 0->468 0->469 0->472 0->473 0->474 0->475 0->476 0->477 0->478 0->479 0->480 0->481 0->482 0->483 0->484 0->485 0->486 0->487 0->488 0->489 0->490 0->491 0->492 0->493 0->494 0->495 0->496 0->497 0->498 0->499 0->500 0->501 0->502 0->503 0->504 0->505 0->508 0->509 0->510 0->511 0->512 0->513 0->514 0->515 0->516 0->517 0->518 0->519 0->520 0->522 0->523 0->524 0->525 0->526 0->527 0->528 0->529 0->530 0->531 0->532 0->534 0->535 0->536 0->539 0->540 0->541 0->542 0->543 0->544 0->545 0->546 0->549 0->550 0->551 0->552 0->553 0->554 0->555 0->556 0->557 0->558 0->559 0->560 0->561 0->562 0->563 0->564 0->565 0->566 0->567 0->568 0->569 0->570 0->571 0->572 0->573 0->574 0->575 0->576 0->577 0->578 0->579 0->580 0->581 0->582 0->583 0->585 0->586 0->587 0->588 0->589 0->590 0->591 0->592 0->593 0->594 0->595 0->596 0->597 0->598 0->599 0->600 0->601 0->602 0->603 0->604 0->605 0->606 0->607 0->608 0->609 0->610 0->611 0->612 0->613 0->614 0->615 0->616 0->617 0->618 0->619 0->620 0->621 0->622 0->623 0->624 0->625 0->626 0->627 0->628 0->629 0->630 0->631 0->632 0->633 0->634 0->635 0->636 0->637 0->638 0->639 0->640 0->641 0->642 0->643 0->644 0->645 0->646 0->647 0->648 0->649 0->650 0->651 0->652 0->653 0->654 0->655 0->656 0->657 0->658 0->659 0->660 0->661 0->662 0->663 0->664 0->665 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->21 16->119 16->153 16->255 16->277 16->317 16->331 16->380 16->467 16->522 16->534 16->585 20->1 20->1 20->1 21->1 21->1 21->119 21->153 21->255 21->277 21->317 21->331 21->380 21->467 21->522 21->534 21->585 24->1 24->1 24->37 24->109 24->128 24->160 24->178 24->194 24->262 24->281 24->307 24->308 24->320 24->334 24->349 24->372 24->395 24->600 24->623 24->630 24->654 24->662 24->663 24->664 24->665 27->1 27->1 27->1 28->1 28->1 28->34 28->45 28->104 28->122 28->171 28->187 28->190 28->202 28->286 28->321 28->350 28->357 29->1 29->1 29->24 29->37 29->109 29->128 29->160 29->178 29->194 29->262 29->281 29->307 29->308 29->320 29->334 29->349 29->372 29->395 29->600 29->623 29->630 29->654 29->662 29->663 29->664 29->665 34->1 34->1 34->45 34->104 34->122 34->171 34->187 34->190 34->202 34->286 34->321 34->350 34->357 37->1 37->1 37->24 37->109 37->128 37->160 37->178 37->194 37->262 37->281 37->307 37->308 37->320 37->334 37->349 37->372 37->395 37->600 37->623 37->630 37->654 37->662 37->663 37->664 37->665 40->1 40->288 41->1 41->1 41->174 41->175 41->288 41->436 45->1 45->1 45->1 45->174 45->286 45->321 45->350 45->357 45->437 49->1 49->1 49->139 49->328 49->333 49->336 49->339 49->365 49->386 49->389 49->390 49->392 52->1 52->1 52->143 52->208 52->309 52->310 52->311 52->316 52->319 52->339 52->362 52->378 52->381 52->382 52->392 52->393 55->1 55->277 55->297 55->298 55->301 55->302 55->310 55->317 55->328 55->331 55->348 55->369 55->370 55->373 55->378 55->379 55->380 55->386 55->393 55->495 55->516 55->565 55->596 55->600 55->601 55->623 55->624 55->630 55->631 55->654 55->655 56->402 57->1 57->1 57->1 57->281 57->308 57->334 57->349 57->495 57->516 57->565 57->596 58->1 58->1 58->174 58->286 58->321 58->350 58->357 58->437 61->1 61->1 61->148 61->197 61->212 61->301 61->302 61->303 61->305 61->311 61->319 61->336 61->358 61->373 61->375 61->379 61->382 61->384 61->390 65->1 65->1 65->156 65->205 65->215 65->297 65->298 65->303 65->305 65->309 65->316 65->333 65->354 65->369 65->370 65->375 65->381 65->384 65->389 68->1 68->1 68->65 68->156 68->205 68->215 68->297 68->298 68->303 68->305 68->309 68->316 68->333 68->354 68->369 68->370 68->375 68->381 68->384 68->389 71->1 71->1 71->65 71->156 71->205 71->215 71->297 71->298 71->303 71->305 71->309 71->316 71->333 71->354 71->369 71->370 71->375 71->381 71->384 71->389 76->1 76->1 76->61 76->148 76->197 76->212 76->301 76->302 76->303 76->305 76->311 76->319 76->336 76->358 76->373 76->375 76->379 76->382 76->384 76->390 79->1 79->1 79->61 79->148 79->197 79->212 79->301 79->302 79->303 79->305 79->311 79->319 79->336 79->358 79->373 79->375 79->379 79->382 79->384 79->390 85->1 85->1 85->24 85->37 85->109 85->128 85->160 85->178 85->194 85->262 85->281 85->307 85->308 85->320 85->334 85->349 85->372 85->395 85->600 85->623 85->630 85->654 85->662 85->663 85->664 85->665 89->1 89->1 89->52 89->143 89->208 89->309 89->310 89->311 89->316 89->319 89->339 89->362 89->378 89->381 89->382 89->392 89->393 97->1 97->1 97->21 97->119 97->153 97->255 97->277 97->317 97->331 97->380 97->467 97->522 97->534 97->585 101->1 101->1 101->24 101->37 101->109 101->128 101->160 101->178 101->194 101->262 101->281 101->307 101->308 101->320 101->334 101->349 101->372 101->395 101->600 101->623 101->630 101->654 101->662 101->663 101->664 101->665 104->1 104->1 104->34 104->45 104->122 104->171 104->187 104->190 104->202 104->286 104->321 104->350 104->357 109->1 109->1 109->24 109->37 109->128 109->160 109->178 109->194 109->262 109->281 109->307 109->308 109->320 109->334 109->349 109->372 109->395 109->600 109->623 109->630 109->654 109->662 109->663 109->664 109->665 115->1 115->1 115->49 115->139 115->328 115->333 115->336 115->339 115->365 115->386 115->389 115->390 115->392 118->1 118->1 118->1 119->1 119->1 119->21 119->153 119->255 119->277 119->317 119->331 119->380 119->467 119->522 119->534 119->585 122->1 122->1 122->1 122->174 122->286 122->321 122->350 122->357 122->437 125->1 125->1 125->21 125->119 125->153 125->255 125->277 125->317 125->331 125->380 125->467 125->522 125->534 125->585 128->1 128->1 128->24 128->37 128->109 128->160 128->178 128->194 128->262 128->281 128->307 128->308 128->320 128->334 128->349 128->372 128->395 128->600 128->623 128->630 128->654 128->662 128->663 128->664 128->665 131->1 131->1 131->348 131->354 131->358 131->362 131->365 135->1 135->1 135->34 135->45 135->104 135->122 135->171 135->187 135->190 135->202 135->286 135->321 135->350 135->357 136->1 136->1 136->24 136->37 136->109 136->128 136->160 136->178 136->194 136->262 136->281 136->307 136->308 136->320 136->334 136->349 136->372 136->395 136->600 136->623 136->630 136->654 136->662 136->663 136->664 136->665 139->1 139->1 139->49 139->328 139->333 139->336 139->339 139->365 139->386 139->389 139->390 139->392 143->1 143->1 143->52 143->208 143->309 143->310 143->311 143->316 143->319 143->339 143->362 143->378 143->381 143->382 143->392 143->393 148->1 148->1 148->61 148->197 148->212 148->301 148->302 148->303 148->305 148->311 148->319 148->336 148->358 148->373 148->375 148->379 148->382 148->384 148->390 152->1 152->1 152->1 153->1 153->1 153->21 153->119 153->255 153->277 153->317 153->331 153->380 153->467 153->522 153->534 153->585 156->1 156->1 156->65 156->205 156->215 156->297 156->298 156->303 156->305 156->309 156->316 156->333 156->354 156->369 156->370 156->375 156->381 156->384 156->389 160->1 160->1 160->24 160->37 160->109 160->128 160->178 160->194 160->262 160->281 160->307 160->308 160->320 160->334 160->349 160->372 160->395 160->600 160->623 160->630 160->654 160->662 160->663 160->664 160->665 164->1 164->1 164->131 164->348 164->354 164->358 164->362 164->365 167->1 167->1 167->34 167->45 167->104 167->122 167->171 167->187 167->190 167->202 167->286 167->321 167->350 167->357 168->1 168->1 168->24 168->37 168->109 168->128 168->160 168->178 168->194 168->262 168->281 168->307 168->308 168->320 168->334 168->349 168->372 168->395 168->600 168->623 168->630 168->654 168->662 168->663 168->664 168->665 171->1 171->1 171->34 171->45 171->104 171->122 171->187 171->190 171->202 171->286 171->321 171->350 171->357 174->1 174->1 174->1 175->1 175->1 175->174 175->288 175->436 178->1 178->1 178->24 178->37 178->109 178->128 178->160 178->194 178->262 178->281 178->307 178->308 178->320 178->334 178->349 178->372 178->395 178->600 178->623 178->630 178->654 178->662 178->663 178->664 178->665 181->1 187->1 187->1 187->1 187->174 187->286 187->321 187->350 187->357 187->437 190->1 190->1 190->34 190->45 190->104 190->122 190->171 190->187 190->202 190->286 190->321 190->350 190->357 194->1 194->1 194->24 194->37 194->109 194->128 194->160 194->178 194->262 194->281 194->307 194->308 194->320 194->334 194->349 194->372 194->395 194->600 194->623 194->630 194->654 194->662 194->663 194->664 194->665 197->1 197->1 197->61 197->148 197->212 197->301 197->302 197->303 197->305 197->311 197->319 197->336 197->358 197->373 197->375 197->379 197->382 197->384 197->390 202->1 202->1 202->1 202->174 202->286 202->321 202->350 202->357 202->437 205->1 205->1 205->65 205->156 205->215 205->297 205->298 205->303 205->305 205->309 205->316 205->333 205->354 205->369 205->370 205->375 205->381 205->384 205->389 208->1 208->1 208->52 208->143 208->309 208->310 208->311 208->316 208->319 208->339 208->362 208->378 208->381 208->382 208->392 208->393 212->1 212->1 212->61 212->148 212->197 212->301 212->302 212->303 212->305 212->311 212->319 212->336 212->358 212->373 212->375 212->379 212->382 212->384 212->390 215->1 215->1 215->65 215->156 215->205 215->297 215->298 215->303 215->305 215->309 215->316 215->333 215->354 215->369 215->370 215->375 215->381 215->384 215->389 219->1 219->1 219->65 219->156 219->205 219->215 219->297 219->298 219->303 219->305 219->309 219->316 219->333 219->354 219->369 219->370 219->375 219->381 219->384 219->389 222->1 222->1 222->65 222->156 222->205 222->215 222->297 222->298 222->303 222->305 222->309 222->316 222->333 222->354 222->369 222->370 222->375 222->381 222->384 222->389 225->1 225->1 225->24 225->37 225->109 225->128 225->160 225->178 225->194 225->262 225->281 225->307 225->308 225->320 225->334 225->349 225->372 225->395 225->600 225->623 225->630 225->654 225->662 225->663 225->664 225->665 230->1 230->1 230->61 230->148 230->197 230->212 230->301 230->302 230->303 230->305 230->311 230->319 230->336 230->358 230->373 230->375 230->379 230->382 230->384 230->390 235->1 235->1 235->61 235->148 235->197 235->212 235->301 235->302 235->303 235->305 235->311 235->319 235->336 235->358 235->373 235->375 235->379 235->382 235->384 235->390 239->1 239->1 239->21 239->119 239->153 239->255 239->277 239->317 239->331 239->380 239->467 239->522 239->534 239->585 242->1 242->1 242->52 242->143 242->208 242->309 242->310 242->311 242->316 242->319 242->339 242->362 242->378 242->381 242->382 242->392 242->393 250->1 250->1 250->49 250->139 250->328 250->333 250->336 250->339 250->365 250->386 250->389 250->390 250->392 254->1 254->1 254->1 255->1 255->1 255->21 255->119 255->153 255->277 255->317 255->331 255->380 255->467 255->522 255->534 255->585 259->1 259->1 259->52 259->143 259->208 259->309 259->310 259->311 259->316 259->319 259->339 259->362 259->378 259->381 259->382 259->392 259->393 262->1 262->1 262->24 262->37 262->109 262->128 262->160 262->178 262->194 262->281 262->307 262->308 262->320 262->334 262->349 262->372 262->395 262->600 262->623 262->630 262->654 262->662 262->663 262->664 262->665 267->1 267->1 267->34 267->45 267->104 267->122 267->171 267->187 267->190 267->202 267->286 267->321 267->350 267->357 268->1 268->1 268->24 268->37 268->109 268->128 268->160 268->178 268->194 268->262 268->281 268->307 268->308 268->320 268->334 268->349 268->372 268->395 268->600 268->623 268->630 268->654 268->662 268->663 268->664 268->665 273->1 273->1 273->24 273->37 273->109 273->128 273->160 273->178 273->194 273->262 273->281 273->307 273->308 273->320 273->334 273->349 273->372 273->395 273->600 273->623 273->630 273->654 273->662 273->663 273->664 273->665 276->1 276->1 277->1 277->1 277->1 277->21 277->55 277->119 277->153 277->255 277->297 277->298 277->301 277->302 277->310 277->317 277->317 277->328 277->331 277->331 277->348 277->369 277->370 277->373 277->378 277->379 277->380 277->380 277->386 277->393 277->464 277->467 277->495 277->516 277->522 277->534 277->565 277->585 277->596 277->599 277->600 277->623 277->630 277->654 278->1 278->1 279->1 279->1 280->1 280->1 281->1 281->1 281->1 281->24 281->37 281->109 281->128 281->160 281->178 281->194 281->262 281->307 281->308 281->308 281->320 281->334 281->334 281->349 281->349 281->372 281->395 281->468 281->495 281->516 281->565 281->596 281->600 281->602 281->623 281->630 281->654 281->662 281->663 281->664 281->665 282->1 282->1 282->1 282->472 282->603 283->1 283->1 284->1 284->1 285->1 285->1 286->1 286->1 286->1 286->34 286->45 286->104 286->122 286->171 286->174 286->187 286->190 286->202 286->321 286->321 286->350 286->350 286->357 286->357 286->437 286->474 286->604 287->1 287->1 288->1 288->1 288->1 288->40 288->174 288->175 288->436 288->476 288->605 289->1 289->1 290->1 290->1 291->1 291->1 292->1 292->1 294->1 294->1 295->1 295->1 296->1 296->1 297->1 297->1 297->1 297->55 297->65 297->156 297->205 297->215 297->277 297->298 297->298 297->301 297->302 297->303 297->305 297->309 297->310 297->316 297->317 297->328 297->331 297->333 297->348 297->354 297->369 297->369 297->370 297->370 297->373 297->375 297->378 297->379 297->380 297->381 297->384 297->386 297->389 297->393 297->483 297->495 297->516 297->565 297->596 297->600 297->606 297->623 297->630 297->654 298->1 298->1 298->1 298->55 298->65 298->156 298->205 298->215 298->277 298->297 298->297 298->301 298->302 298->303 298->305 298->309 298->310 298->316 298->317 298->328 298->331 298->333 298->348 298->354 298->369 298->369 298->370 298->370 298->373 298->375 298->378 298->379 298->380 298->381 298->384 298->386 298->389 298->393 298->485 298->495 298->516 298->565 298->596 298->600 298->607 298->623 298->630 298->654 299->1 299->1 300->1 300->1 301->1 301->1 301->1 301->55 301->61 301->148 301->197 301->212 301->277 301->297 301->298 301->302 301->302 301->303 301->305 301->310 301->311 301->317 301->319 301->328 301->331 301->336 301->348 301->358 301->369 301->370 301->373 301->373 301->375 301->378 301->379 301->379 301->380 301->382 301->384 301->386 301->390 301->393 301->487 301->495 301->516 301->565 301->596 301->600 301->608 301->623 301->630 301->654 302->1 302->1 302->1 302->55 302->61 302->148 302->197 302->212 302->277 302->297 302->298 302->301 302->301 302->303 302->305 302->310 302->311 302->317 302->319 302->328 302->331 302->336 302->348 302->358 302->369 302->370 302->373 302->373 302->375 302->378 302->379 302->379 302->380 302->382 302->384 302->386 302->390 302->393 302->489 302->495 302->516 302->565 302->596 302->600 302->609 302->623 302->630 302->654 303->1 303->1 303->1 303->61 303->65 303->148 303->156 303->197 303->205 303->212 303->215 303->297 303->298 303->301 303->302 303->305 303->305 303->309 303->311 303->316 303->319 303->333 303->336 303->354 303->358 303->369 303->370 303->373 303->375 303->375 303->379 303->381 303->382 303->384 303->384 303->389 303->390 303->491 303->610 304->1 304->1 305->1 305->1 305->1 305->61 305->65 305->148 305->156 305->197 305->205 305->212 305->215 305->297 305->298 305->301 305->302 305->303 305->303 305->309 305->311 305->316 305->319 305->333 305->336 305->354 305->358 305->369 305->370 305->373 305->375 305->375 305->379 305->381 305->382 305->384 305->384 305->389 305->390 305->493 305->611 306->1 306->1 307->1 307->1 307->1 307->24 307->37 307->109 307->128 307->160 307->178 307->194 307->262 307->281 307->308 307->320 307->334 307->349 307->372 307->395 307->496 307->600 307->612 307->623 307->630 307->654 307->662 307->663 307->664 307->665 308->1 308->1 308->1 308->24 308->37 308->109 308->128 308->160 308->178 308->194 308->262 308->281 308->281 308->307 308->320 308->334 308->334 308->349 308->349 308->372 308->395 308->495 308->498 308->516 308->565 308->596 308->600 308->613 308->623 308->630 308->654 308->662 308->663 308->664 308->665 309->1 309->1 309->1 309->52 309->65 309->143 309->156 309->205 309->208 309->215 309->297 309->298 309->303 309->305 309->310 309->311 309->316 309->316 309->319 309->333 309->339 309->354 309->362 309->369 309->370 309->375 309->378 309->381 309->381 309->382 309->384 309->389 309->392 309->393 309->500 309->614 310->1 310->1 310->1 310->52 310->55 310->143 310->208 310->277 310->297 310->298 310->301 310->302 310->309 310->311 310->316 310->317 310->319 310->328 310->331 310->339 310->348 310->362 310->369 310->370 310->373 310->378 310->378 310->379 310->380 310->381 310->382 310->386 310->392 310->393 310->393 310->495 310->502 310->516 310->565 310->596 310->600 310->615 310->623 310->630 310->654 311->1 311->1 311->1 311->52 311->61 311->143 311->148 311->197 311->208 311->212 311->301 311->302 311->303 311->305 311->309 311->310 311->316 311->319 311->319 311->336 311->339 311->358 311->362 311->373 311->375 311->378 311->379 311->381 311->382 311->382 311->384 311->390 311->392 311->393 311->504 311->616 312->1 312->1 313->1 313->1 313->1 313->508 313->617 314->1 314->1 315->1 315->1 316->1 316->1 316->1 316->52 316->65 316->143 316->156 316->205 316->208 316->215 316->297 316->298 316->303 316->305 316->309 316->309 316->310 316->311 316->319 316->333 316->339 316->354 316->362 316->369 316->370 316->375 316->378 316->381 316->381 316->382 316->384 316->389 316->392 316->393 316->510 316->618 317->1 317->1 317->1 317->21 317->55 317->119 317->153 317->255 317->277 317->277 317->297 317->298 317->301 317->302 317->310 317->328 317->331 317->331 317->348 317->369 317->370 317->373 317->378 317->379 317->380 317->380 317->386 317->393 317->467 317->495 317->512 317->516 317->522 317->534 317->565 317->585 317->596 317->600 317->619 317->623 317->630 317->654 318->1 318->1 319->1 319->1 319->1 319->52 319->61 319->143 319->148 319->197 319->208 319->212 319->301 319->302 319->303 319->305 319->309 319->310 319->311 319->311 319->316 319->336 319->339 319->358 319->362 319->373 319->375 319->378 319->379 319->381 319->382 319->382 319->384 319->390 319->392 319->393 319->514 319->620 320->1 320->1 320->1 320->24 320->37 320->109 320->128 320->160 320->178 320->194 320->262 320->281 320->307 320->308 320->334 320->349 320->372 320->395 320->517 320->600 320->621 320->623 320->630 320->654 320->662 320->663 320->664 320->665 321->1 321->1 321->1 321->34 321->45 321->104 321->122 321->171 321->174 321->187 321->190 321->202 321->286 321->286 321->350 321->350 321->357 321->357 321->437 321->519 321->622 322->1 322->1 323->1 323->1 324->1 324->1 325->1 325->1 326->1 326->1 327->1 327->1 328->1 328->1 328->1 328->49 328->55 328->139 328->277 328->297 328->298 328->301 328->302 328->310 328->317 328->331 328->333 328->336 328->339 328->348 328->365 328->369 328->370 328->373 328->378 328->379 328->380 328->386 328->386 328->389 328->390 328->392 328->393 328->495 328->516 328->523 328->565 328->596 328->600 328->623 328->625 328->630 328->654 329->1 329->1 330->1 330->1 331->1 331->1 331->1 331->21 331->55 331->119 331->153 331->255 331->277 331->277 331->297 331->298 331->301 331->302 331->310 331->317 331->317 331->328 331->348 331->369 331->370 331->373 331->378 331->379 331->380 331->380 331->386 331->393 331->467 331->495 331->516 331->522 331->525 331->534 331->565 331->585 331->596 331->600 331->623 331->626 331->630 331->654 332->1 332->1 333->1 333->1 333->1 333->49 333->65 333->139 333->156 333->205 333->215 333->297 333->298 333->303 333->305 333->309 333->316 333->328 333->336 333->339 333->354 333->365 333->369 333->370 333->375 333->381 333->384 333->386 333->389 333->389 333->390 333->392 333->527 333->627 334->1 334->1 334->1 334->24 334->37 334->109 334->128 334->160 334->178 334->194 334->262 334->281 334->281 334->307 334->308 334->308 334->320 334->349 334->349 334->372 334->395 334->495 334->516 334->529 334->565 334->596 334->600 334->623 334->628 334->630 334->654 334->662 334->663 334->664 334->665 335->1 335->1 336->1 336->1 336->1 336->49 336->61 336->139 336->148 336->197 336->212 336->301 336->302 336->303 336->305 336->311 336->319 336->328 336->333 336->339 336->358 336->365 336->373 336->375 336->379 336->382 336->384 336->386 336->389 336->390 336->390 336->392 336->531 336->629 337->1 337->1 338->1 338->1 339->1 339->1 339->1 339->49 339->52 339->139 339->143 339->208 339->309 339->310 339->311 339->316 339->319 339->328 339->333 339->336 339->362 339->365 339->378 339->381 339->382 339->386 339->389 339->390 339->392 339->392 339->393 339->535 339->632 340->1 340->1 341->1 341->1 341->1 341->539 341->633 342->1 342->1 343->1 343->1 344->1 344->1 345->1 345->1 346->1 346->1 347->181 348->1 348->1 348->1 348->55 348->131 348->277 348->297 348->298 348->301 348->302 348->310 348->317 348->328 348->331 348->354 348->358 348->362 348->365 348->369 348->370 348->373 348->378 348->379 348->380 348->386 348->393 348->495 348->516 348->541 348->565 348->596 348->600 348->623 348->630 348->634 348->654 349->1 349->1 349->1 349->24 349->37 349->109 349->128 349->160 349->178 349->194 349->262 349->281 349->281 349->307 349->308 349->308 349->320 349->334 349->334 349->372 349->395 349->495 349->516 349->543 349->565 349->596 349->600 349->623 349->630 349->635 349->654 349->662 349->663 349->664 349->665 350->1 350->1 350->1 350->34 350->45 350->104 350->122 350->171 350->174 350->187 350->190 350->202 350->286 350->286 350->321 350->321 350->357 350->357 350->437 350->545 350->636 351->1 351->1 351->1 351->549 351->637 352->1 352->1 353->1 353->1 354->1 354->1 354->1 354->65 354->131 354->156 354->205 354->215 354->297 354->298 354->303 354->305 354->309 354->316 354->333 354->348 354->358 354->362 354->365 354->369 354->370 354->375 354->381 354->384 354->389 354->551 354->638 355->1 355->1 356->1 356->1 357->1 357->1 357->1 357->34 357->45 357->104 357->122 357->171 357->174 357->187 357->190 357->202 357->286 357->286 357->321 357->321 357->350 357->350 357->437 357->553 357->639 358->1 358->1 358->1 358->61 358->131 358->148 358->197 358->212 358->301 358->302 358->303 358->305 358->311 358->319 358->336 358->348 358->354 358->362 358->365 358->373 358->375 358->379 358->382 358->384 358->390 358->555 358->640 359->1 359->1 360->1 360->1 361->1 361->1 362->1 362->1 362->1 362->52 362->131 362->143 362->208 362->309 362->310 362->311 362->316 362->319 362->339 362->348 362->354 362->358 362->365 362->378 362->381 362->382 362->392 362->393 362->557 362->641 363->1 363->1 364->1 364->1 365->1 365->1 365->1 365->49 365->131 365->139 365->328 365->333 365->336 365->339 365->348 365->354 365->358 365->362 365->386 365->389 365->390 365->392 365->559 365->642 366->1 366->1 367->1 367->1 368->1 368->1 369->1 369->1 369->1 369->55 369->65 369->156 369->205 369->215 369->277 369->297 369->297 369->298 369->298 369->301 369->302 369->303 369->305 369->309 369->310 369->316 369->317 369->328 369->331 369->333 369->348 369->354 369->370 369->370 369->373 369->375 369->378 369->379 369->380 369->381 369->384 369->386 369->389 369->393 369->495 369->516 369->561 369->565 369->596 369->600 369->623 369->630 369->643 369->654 370->1 370->1 370->1 370->55 370->65 370->156 370->205 370->215 370->277 370->297 370->297 370->298 370->298 370->301 370->302 370->303 370->305 370->309 370->310 370->316 370->317 370->328 370->331 370->333 370->348 370->354 370->369 370->369 370->373 370->375 370->378 370->379 370->380 370->381 370->384 370->386 370->389 370->393 370->495 370->516 370->563 370->565 370->596 370->600 370->623 370->630 370->644 370->654 371->1 371->1 372->1 372->1 372->1 372->24 372->37 372->109 372->128 372->160 372->178 372->194 372->262 372->281 372->307 372->308 372->320 372->334 372->349 372->395 372->566 372->600 372->623 372->630 372->645 372->654 372->662 372->663 372->664 372->665 373->1 373->1 373->1 373->55 373->61 373->148 373->197 373->212 373->277 373->297 373->298 373->301 373->301 373->302 373->302 373->303 373->305 373->310 373->311 373->317 373->319 373->328 373->331 373->336 373->348 373->358 373->369 373->370 373->375 373->378 373->379 373->379 373->380 373->382 373->384 373->386 373->390 373->393 373->495 373->516 373->565 373->568 373->596 373->600 373->623 373->630 373->646 373->654 374->1 374->1 375->1 375->1 375->1 375->61 375->65 375->148 375->156 375->197 375->205 375->212 375->215 375->297 375->298 375->301 375->302 375->303 375->303 375->305 375->305 375->309 375->311 375->316 375->319 375->333 375->336 375->354 375->358 375->369 375->370 375->373 375->379 375->381 375->382 375->384 375->384 375->389 375->390 375->570 375->647 376->1 376->1 377->1 377->1 378->1 378->1 378->1 378->52 378->55 378->143 378->208 378->277 378->297 378->298 378->301 378->302 378->309 378->310 378->310 378->311 378->316 378->317 378->319 378->328 378->331 378->339 378->348 378->362 378->369 378->370 378->373 378->379 378->380 378->381 378->382 378->386 378->392 378->393 378->393 378->495 378->516 378->565 378->572 378->596 378->600 378->623 378->630 378->648 378->654 379->1 379->1 379->1 379->55 379->61 379->148 379->197 379->212 379->277 379->297 379->298 379->301 379->301 379->302 379->302 379->303 379->305 379->310 379->311 379->317 379->319 379->328 379->331 379->336 379->348 379->358 379->369 379->370 379->373 379->373 379->375 379->378 379->380 379->382 379->384 379->386 379->390 379->393 379->495 379->516 379->565 379->574 379->596 379->600 379->623 379->630 379->649 379->654 380->1 380->1 380->1 380->21 380->55 380->119 380->153 380->255 380->277 380->277 380->297 380->298 380->301 380->302 380->310 380->317 380->317 380->328 380->331 380->331 380->348 380->369 380->370 380->373 380->378 380->379 380->386 380->393 380->467 380->495 380->516 380->522 380->534 380->565 380->576 380->585 380->596 380->600 380->623 380->630 380->650 380->654 381->1 381->1 381->1 381->52 381->65 381->143 381->156 381->205 381->208 381->215 381->297 381->298 381->303 381->305 381->309 381->309 381->310 381->311 381->316 381->316 381->319 381->333 381->339 381->354 381->362 381->369 381->370 381->375 381->378 381->382 381->384 381->389 381->392 381->393 381->578 381->651 382->1 382->1 382->1 382->52 382->61 382->143 382->148 382->197 382->208 382->212 382->301 382->302 382->303 382->305 382->309 382->310 382->311 382->311 382->316 382->319 382->319 382->336 382->339 382->358 382->362 382->373 382->375 382->378 382->379 382->381 382->384 382->390 382->392 382->393 382->580 382->652 383->1 383->1 384->1 384->1 384->1 384->61 384->65 384->148 384->156 384->197 384->205 384->212 384->215 384->297 384->298 384->301 384->302 384->303 384->303 384->305 384->305 384->309 384->311 384->316 384->319 384->333 384->336 384->354 384->358 384->369 384->370 384->373 384->375 384->375 384->379 384->381 384->382 384->389 384->390 384->582 384->653 385->1 385->1 386->1 386->1 386->1 386->49 386->55 386->139 386->277 386->297 386->298 386->301 386->302 386->310 386->317 386->328 386->328 386->331 386->333 386->336 386->339 386->348 386->365 386->369 386->370 386->373 386->378 386->379 386->380 386->389 386->390 386->392 386->393 386->495 386->516 386->565 386->586 386->596 386->600 386->623 386->630 386->654 386->656 387->1 387->1 388->1 388->1 389->1 389->1 389->1 389->49 389->65 389->139 389->156 389->205 389->215 389->297 389->298 389->303 389->305 389->309 389->316 389->328 389->333 389->333 389->336 389->339 389->354 389->365 389->369 389->370 389->375 389->381 389->384 389->386 389->390 389->392 389->588 389->657 390->1 390->1 390->1 390->49 390->61 390->139 390->148 390->197 390->212 390->301 390->302 390->303 390->305 390->311 390->319 390->328 390->333 390->336 390->336 390->339 390->358 390->365 390->373 390->375 390->379 390->382 390->384 390->386 390->389 390->392 390->590 390->658 391->1 391->1 392->1 392->1 392->1 392->49 392->52 392->139 392->143 392->208 392->309 392->310 392->311 392->316 392->319 392->328 392->333 392->336 392->339 392->339 392->362 392->365 392->378 392->381 392->382 392->386 392->389 392->390 392->393 392->592 392->659 393->1 393->1 393->1 393->52 393->55 393->143 393->208 393->277 393->297 393->298 393->301 393->302 393->309 393->310 393->310 393->311 393->316 393->317 393->319 393->328 393->331 393->339 393->348 393->362 393->369 393->370 393->373 393->378 393->378 393->379 393->380 393->381 393->382 393->386 393->392 393->495 393->516 393->565 393->594 393->596 393->600 393->623 393->630 393->654 393->660 394->1 394->1 395->1 395->1 395->1 395->24 395->37 395->109 395->128 395->160 395->178 395->194 395->262 395->281 395->307 395->308 395->320 395->334 395->349 395->372 395->597 395->600 395->623 395->630 395->654 395->661 395->662 395->663 395->664 395->665 402->1 402->20 402->56 402->57 402->118 402->152 402->254 437->1 464->1 464->1 466->1 467->1 468->1 468->1 470->1 471->1 472->1 472->1 474->1 474->1 476->1 476->1 478->1 478->1 479->1 479->1 480->1 480->1 481->1 481->1 482->1 482->1 483->1 483->1 485->1 485->1 487->1 487->1 489->1 489->1 491->1 491->1 493->1 493->1 495->1 495->1 495->55 495->277 495->281 495->297 495->298 495->301 495->302 495->307 495->307 495->308 495->310 495->317 495->328 495->331 495->334 495->348 495->349 495->369 495->370 495->373 495->378 495->379 495->380 495->386 495->393 495->516 495->516 495->565 495->565 495->596 495->596 495->600 495->623 495->630 495->654 496->1 496->1 498->1 498->1 500->1 500->1 502->1 502->1 504->1 504->1 506->1 507->1 508->1 508->1 510->1 510->1 512->1 512->1 514->1 514->1 516->1 516->1 516->55 516->277 516->281 516->297 516->298 516->301 516->302 516->308 516->310 516->317 516->320 516->320 516->328 516->331 516->334 516->348 516->349 516->369 516->370 516->373 516->378 516->379 516->380 516->386 516->393 516->495 516->495 516->565 516->565 516->596 516->596 516->600 516->623 516->630 516->654 517->1 517->1 519->1 519->1 521->1 522->1 523->1 523->1 525->1 525->1 527->1 527->1 529->1 529->1 531->1 531->1 533->1 534->1 535->1 535->1 537->1 538->1 539->1 539->1 541->1 541->1 543->1 543->1 545->1 545->1 547->1 548->1 549->1 549->1 551->1 551->1 553->1 553->1 555->1 555->1 557->1 557->1 559->1 559->1 561->1 561->1 563->1 563->1 565->1 565->1 565->55 565->277 565->281 565->297 565->298 565->301 565->302 565->308 565->310 565->317 565->328 565->331 565->334 565->348 565->349 565->369 565->370 565->372 565->372 565->373 565->378 565->379 565->380 565->386 565->393 565->495 565->495 565->516 565->516 565->596 565->596 565->600 565->623 565->630 565->654 566->1 566->1 568->1 568->1 570->1 570->1 572->1 572->1 574->1 574->1 576->1 576->1 578->1 578->1 580->1 580->1 582->1 582->1 584->1 585->1 586->1 586->1 588->1 588->1 590->1 590->1 592->1 592->1 594->1 594->1 596->1 596->1 596->55 596->277 596->281 596->297 596->298 596->301 596->302 596->308 596->310 596->317 596->328 596->331 596->334 596->348 596->349 596->369 596->370 596->373 596->378 596->379 596->380 596->386 596->393 596->395 596->395 596->495 596->495 596->516 596->516 596->565 596->565 596->600 596->623 596->630 596->654 597->1 597->1 599->1 599->1 600->466 600->466 600->601 600->601 601->1 601->1 601->24 601->37 601->55 601->109 601->128 601->160 601->178 601->194 601->262 601->277 601->281 601->297 601->298 601->301 601->302 601->307 601->308 601->310 601->317 601->320 601->328 601->331 601->334 601->348 601->349 601->369 601->370 601->372 601->373 601->378 601->379 601->380 601->386 601->393 601->395 601->467 601->467 601->495 601->516 601->565 601->596 601->600 601->600 601->623 601->623 601->630 601->630 601->654 601->654 601->662 601->663 601->664 601->665 602->1 602->1 603->1 603->1 604->1 604->1 605->1 605->1 606->1 606->1 607->1 607->1 608->1 608->1 609->1 609->1 610->1 610->1 611->1 611->1 612->1 612->1 613->1 613->1 614->1 614->1 615->1 615->1 616->1 616->1 617->1 617->1 618->1 618->1 619->1 619->1 620->1 620->1 621->1 621->1 622->1 622->1 623->521 623->521 623->624 623->624 624->1 624->1 624->24 624->37 624->55 624->109 624->128 624->160 624->178 624->194 624->262 624->277 624->281 624->297 624->298 624->301 624->302 624->307 624->308 624->310 624->317 624->320 624->328 624->331 624->334 624->348 624->349 624->369 624->370 624->372 624->373 624->378 624->379 624->380 624->386 624->393 624->395 624->495 624->516 624->522 624->522 624->565 624->596 624->600 624->600 624->623 624->623 624->630 624->630 624->654 624->654 624->662 624->663 624->664 624->665 625->1 625->1 626->1 626->1 627->1 627->1 628->1 628->1 629->1 629->1 630->533 630->533 630->631 630->631 631->1 631->1 631->24 631->37 631->55 631->109 631->128 631->160 631->178 631->194 631->262 631->277 631->281 631->297 631->298 631->301 631->302 631->307 631->308 631->310 631->317 631->320 631->328 631->331 631->334 631->348 631->349 631->369 631->370 631->372 631->373 631->378 631->379 631->380 631->386 631->393 631->395 631->495 631->516 631->534 631->534 631->565 631->596 631->600 631->600 631->623 631->623 631->630 631->630 631->654 631->654 631->662 631->663 631->664 631->665 632->1 632->1 633->1 633->1 634->1 634->1 635->1 635->1 636->1 636->1 637->1 637->1 638->1 638->1 639->1 639->1 640->1 640->1 641->1 641->1 642->1 642->1 643->1 643->1 644->1 644->1 645->1 645->1 646->1 646->1 647->1 647->1 648->1 648->1 649->1 649->1 650->1 650->1 651->1 651->1 652->1 652->1 653->1 653->1 654->584 654->584 654->655 654->655 655->1 655->1 655->24 655->37 655->55 655->109 655->128 655->160 655->178 655->194 655->262 655->277 655->281 655->297 655->298 655->301 655->302 655->307 655->308 655->310 655->317 655->320 655->328 655->331 655->334 655->348 655->349 655->369 655->370 655->372 655->373 655->378 655->379 655->380 655->386 655->393 655->395 655->495 655->516 655->565 655->585 655->585 655->596 655->600 655->600 655->623 655->623 655->630 655->630 655->654 655->654 655->662 655->663 655->664 655->665 656->1 656->1 657->1 657->1 658->1 658->1 659->1 659->1 660->1 660->1 661->1 661->1 662->1 662->24 662->37 662->109 662->128 662->160 662->178 662->194 662->262 662->281 662->307 662->308 662->320 662->334 662->349 662->372 662->395 662->600 662->623 662->630 662->654 662->663 662->664 662->665 663->1 663->24 663->37 663->109 663->128 663->160 663->178 663->194 663->262 663->281 663->307 663->308 663->320 663->334 663->349 663->372 663->395 663->600 663->623 663->630 663->654 663->662 663->664 663->665 664->1 664->24 664->37 664->109 664->128 664->160 664->178 664->194 664->262 664->281 664->307 664->308 664->320 664->334 664->349 664->372 664->395 664->600 664->623 664->630 664->654 664->662 664->663 664->665 665->1 665->24 665->37 665->109 665->128 665->160 665->178 665->194 665->262 665->281 665->307 665->308 665->320 665->334 665->349 665->372 665->395 665->600 665->623 665->630 665->654 665->662 665->663 665->664
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern int ( /* missing proto */ strlen ) ( ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int ( /* missing proto */ scanf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern void signal ( int sig , void * func ) ; extern double difftime ( long tv1 , long tv0 ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { int N ; int K ; char str [ 1050 ] ; char str2 [ 1050 ] ; int p [ 10 ] ; int i ; int j ; int len ; int n ; int c ; int min ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 98 ; } while ( 1 ) { switch ( _1_main_next ) { case 111 : j = 0 ; { _1_main_next = 109 ; } break ; case 109 : ; if ( j < K ) { { _1_main_next = 107 ; } } else { { _1_main_next = 106 ; } } break ; case 107 : str2 [ i * K + p [ j ] ] = str [ i * K + j ] ; j ++ ; { _1_main_next = 109 ; } break ; case 106 : i ++ ; { _1_main_next = 113 ; } break ; case 105 : str2 [ len ] = ( char ) 0 ; c = 0 ; i = 1 ; { _1_main_next = 103 ; } break ; case 103 : ; if ( i < len ) { { _1_main_next = 101 ; } } else { { _1_main_next = 96 ; } } break ; case 101 : ; if ( ( int ) str2 [ i ] != ( int ) str2 [ i - 1 ] ) { { _1_main_next = 100 ; } } else { { _1_main_next = 99 ; } } break ; case 100 : c ++ ; { _1_main_next = 99 ; } break ; case 99 : i ++ ; { _1_main_next = 103 ; } break ; case 98 : scanf ( " " , & N ) ; n = 0 ; { _1_main_next = 94 ; } break ; case 96 : ; if ( c < min ) { { _1_main_next = 95 ; } } else { { _1_main_next = 93 ; } } break ; case 95 : min = c ; { _1_main_next = 93 ; } break ; case 94 : ; if ( n < N ) { { _1_main_next = 90 ; } } else { { _1_main_next = 149 ; } } break ; case 93 : ( p [ 3 ] ) ++ ; { _1_main_next = 120 ; } break ; case 91 : ( p [ 2 ] ) ++ ; { _1_main_next = 126 ; } break ; case 90 : scanf ( " " , & K ) ; scanf ( " " , str ) ; len = strlen ( str ) ; min = 100000 ; { _1_main_next = 88 ; } break ; case 89 : ( p [ 1 ] ) ++ ; { _1_main_next = 131 ; } break ; case 88 : ; switch ( K ) { case 2 : { _1_main_next = 86 ; } break ; case 3 : { _1_main_next = 24 ; } break ; case 4 : { _1_main_next = 137 ; } break ; case 5 : { _1_main_next = 83 ; } break ; default : { _1_main_next = 151 ; } break ; } break ; case 87 : ( p [ 0 ] ) ++ ; { _1_main_next = 135 ; } break ; case 86 : p [ 0 ] = 0 ; { _1_main_next = 82 ; } break ; case 83 : p [ 0 ] = 0 ; { _1_main_next = 79 ; } break ; case 82 : ; if ( p [ 0 ] < K ) { { _1_main_next = 78 ; } } else { { _1_main_next = 151 ; } } break ; case 79 : ; if ( p [ 0 ] < K ) { { _1_main_next = 75 ; } } else { { _1_main_next = 151 ; } } break ; case 78 : p [ 1 ] = 0 ; { _1_main_next = 74 ; } break ; case 75 : p [ 1 ] = 0 ; { _1_main_next = 71 ; } break ; case 74 : ; if ( p [ 1 ] < K ) { { _1_main_next = 70 ; } } else { { _1_main_next = 28 ; } } break ; case 71 : ; if ( p [ 1 ] < K ) { { _1_main_next = 67 ; } } else { { _1_main_next = 155 ; } } break ; case 70 : ; if ( p [ 1 ] != p [ 0 ] ) { { _1_main_next = 68 ; } } else { { _1_main_next = 30 ; } } break ; case 68 : i = 0 ; { _1_main_next = 64 ; } break ; case 67 : ; if ( p [ 1 ] != p [ 0 ] ) { { _1_main_next = 65 ; } } else { { _1_main_next = 157 ; } } break ; case 65 : p [ 2 ] = 0 ; { _1_main_next = 61 ; } break ; case 64 : ; if ( i < len / K ) { { _1_main_next = 60 ; } } else { { _1_main_next = 48 ; } } break ; case 177 : ; if ( i < len ) { { _1_main_next = 173 ; } } else { { _1_main_next = 167 ; } } break ; case 176 : ; if ( p [ 2 ] != p [ 0 ] ) { { _1_main_next = 174 ; } } else { { _1_main_next = 141 ; } } break ; case 61 : ; if ( p [ 2 ] < K ) { { _1_main_next = 57 ; } } else { { _1_main_next = 157 ; } } break ; case 174 : ; if ( p [ 2 ] != p [ 1 ] ) { { _1_main_next = 172 ; } } else { { _1_main_next = 141 ; } } break ; case 60 : j = 0 ; { _1_main_next = 56 ; } break ; case 173 : ; if ( ( int ) str2 [ i ] != ( int ) str2 [ i - 1 ] ) { { _1_main_next = 171 ; } } else { { _1_main_next = 169 ; } } break ; case 172 : i = 0 ; { _1_main_next = 168 ; } break ; case 171 : c ++ ; { _1_main_next = 169 ; } break ; case 57 : ; if ( p [ 2 ] != p [ 0 ] ) { { _1_main_next = 55 ; } } else { { _1_main_next = 159 ; } } break ; case 56 : ; if ( j < K ) { { _1_main_next = 52 ; } } else { { _1_main_next = 50 ; } } break ; case 169 : i ++ ; { _1_main_next = 177 ; } break ; case 55 : ; if ( p [ 2 ] != p [ 1 ] ) { { _1_main_next = 53 ; } } else { { _1_main_next = 159 ; } } break ; case 168 : ; if ( i < len / K ) { { _1_main_next = 164 ; } } else { { _1_main_next = 152 ; } } break ; case 167 : ; if ( c < min ) { { _1_main_next = 165 ; } } else { { _1_main_next = 163 ; } } break ; case 53 : p [ 3 ] = 0 ; { _1_main_next = 49 ; } break ; case 52 : str2 [ i * K + p [ j ] ] = str [ i * K + j ] ; j ++ ; { _1_main_next = 56 ; } break ; case 165 : min = c ; { _1_main_next = 163 ; } break ; case 164 : j = 0 ; { _1_main_next = 160 ; } break ; case 50 : i ++ ; { _1_main_next = 64 ; } break ; case 163 : ( p [ 4 ] ) ++ ; { _1_main_next = 35 ; } break ; case 49 : ; if ( p [ 3 ] < K ) { { _1_main_next = 45 ; } } else { { _1_main_next = 159 ; } } break ; case 48 : c = 0 ; i = 1 ; { _1_main_next = 44 ; } break ; case 161 : ( p [ 3 ] ) ++ ; { _1_main_next = 49 ; } break ; case 160 : ; if ( j < K ) { { _1_main_next = 156 ; } } else { { _1_main_next = 154 ; } } break ; case 159 : ( p [ 2 ] ) ++ ; { _1_main_next = 61 ; } break ; case 45 : ; if ( p [ 3 ] != p [ 0 ] ) { { _1_main_next = 43 ; } } else { { _1_main_next = 161 ; } } break ; case 44 : ; if ( i < len ) { { _1_main_next = 40 ; } } else { { _1_main_next = 34 ; } } break ; case 157 : ( p [ 1 ] ) ++ ; { _1_main_next = 71 ; } break ; case 43 : ; if ( p [ 3 ] != p [ 1 ] ) { { _1_main_next = 41 ; } } else { { _1_main_next = 161 ; } } break ; case 156 : str2 [ i * K + p [ j ] ] = str [ i * K + j ] ; j ++ ; { _1_main_next = 160 ; } break ; case 155 : ( p [ 0 ] ) ++ ; { _1_main_next = 79 ; } break ; case 41 : ; if ( p [ 3 ] != p [ 2 ] ) { { _1_main_next = 39 ; } } else { { _1_main_next = 161 ; } } break ; case 154 : i ++ ; { _1_main_next = 168 ; } break ; case 40 : ; if ( ( int ) str2 [ i ] != ( int ) str2 [ i - 1 ] ) { { _1_main_next = 38 ; } } else { { _1_main_next = 36 ; } } break ; case 39 : p [ 4 ] = 0 ; { _1_main_next = 35 ; } break ; case 152 : c = 0 ; i = 1 ; { _1_main_next = 148 ; } break ; case 38 : c ++ ; { _1_main_next = 36 ; } break ; case 151 : printf ( " \n " , n + 1 , min + 1 ) ; n ++ ; { _1_main_next = 94 ; } break ; case 36 : i ++ ; { _1_main_next = 44 ; } break ; case 149 : ; return ( 0 ) ; break ; case 35 : ; if ( p [ 4 ] < K ) { { _1_main_next = 31 ; } } else { { _1_main_next = 161 ; } } break ; case 148 : ; if ( i < len ) { { _1_main_next = 146 ; } } else { { _1_main_next = 143 ; } } break ; case 34 : ; if ( c < min ) { { _1_main_next = 32 ; } } else { { _1_main_next = 30 ; } } break ; case 146 : ; if ( ( int ) str2 [ i ] != ( int ) str2 [ i - 1 ] ) { { _1_main_next = 145 ; } } else { { _1_main_next = 144 ; } } break ; case 32 : min = c ; { _1_main_next = 30 ; } break ; case 145 : c ++ ; { _1_main_next = 144 ; } break ; case 31 : ; if ( p [ 4 ] != p [ 0 ] ) { { _1_main_next = 29 ; } } else { { _1_main_next = 163 ; } } break ; case 144 : i ++ ; { _1_main_next = 148 ; } break ; case 30 : ( p [ 1 ] ) ++ ; { _1_main_next = 74 ; } break ; case 143 : ; if ( c < min ) { { _1_main_next = 142 ; } } else { { _1_main_next = 141 ; } } break ; case 29 : ; if ( p [ 4 ] != p [ 1 ] ) { { _1_main_next = 27 ; } } else { { _1_main_next = 163 ; } } break ; case 142 : min = c ; { _1_main_next = 141 ; } break ; case 28 : ( p [ 0 ] ) ++ ; { _1_main_next = 82 ; } break ; case 141 : ( p [ 2 ] ) ++ ; { _1_main_next = 2 ; } break ; case 27 : ; if ( p [ 4 ] != p [ 2 ] ) { { _1_main_next = 25 ; } } else { { _1_main_next = 163 ; } } break ; case 140 : ( p [ 1 ] ) ++ ; { _1_main_next = 12 ; } break ; case 139 : ( p [ 0 ] ) ++ ; { _1_main_next = 20 ; } break ; case 25 : ; if ( p [ 4 ] != p [ 3 ] ) { { _1_main_next = 23 ; } } else { { _1_main_next = 163 ; } } break ; case 24 : p [ 0 ] = 0 ; { _1_main_next = 20 ; } break ; case 137 : p [ 0 ] = 0 ; { _1_main_next = 135 ; } break ; case 23 : i = 0 ; { _1_main_next = 19 ; } break ; case 135 : ; if ( p [ 0 ] < K ) { { _1_main_next = 133 ; } } else { { _1_main_next = 151 ; } } break ; case 20 : ; if ( p [ 0 ] < K ) { { _1_main_next = 16 ; } } else { { _1_main_next = 151 ; } } break ; case 133 : p [ 1 ] = 0 ; { _1_main_next = 131 ; } break ; case 19 : ; if ( i < len / K ) { { _1_main_next = 15 ; } } else { { _1_main_next = 3 ; } } break ; case 131 : ; if ( p [ 1 ] < K ) { { _1_main_next = 129 ; } } else { { _1_main_next = 87 ; } } break ; case 16 : p [ 1 ] = 0 ; { _1_main_next = 12 ; } break ; case 129 : ; if ( p [ 1 ] != p [ 0 ] ) { { _1_main_next = 128 ; } } else { { _1_main_next = 89 ; } } break ; case 15 : j = 0 ; { _1_main_next = 11 ; } break ; case 128 : p [ 2 ] = 0 ; { _1_main_next = 126 ; } break ; case 126 : ; if ( p [ 2 ] < K ) { { _1_main_next = 124 ; } } else { { _1_main_next = 89 ; } } break ; case 12 : ; if ( p [ 1 ] < K ) { { _1_main_next = 8 ; } } else { { _1_main_next = 139 ; } } break ; case 11 : ; if ( j < K ) { { _1_main_next = 7 ; } } else { { _1_main_next = 5 ; } } break ; case 124 : ; if ( p [ 2 ] != p [ 0 ] ) { { _1_main_next = 123 ; } } else { { _1_main_next = 91 ; } } break ; case 123 : ; if ( p [ 2 ] != p [ 1 ] ) { { _1_main_next = 122 ; } } else { { _1_main_next = 91 ; } } break ; case 122 : p [ 3 ] = 0 ; { _1_main_next = 120 ; } break ; case 8 : ; if ( p [ 1 ] != p [ 0 ] ) { { _1_main_next = 6 ; } } else { { _1_main_next = 140 ; } } break ; case 7 : str2 [ i * K + p [ j ] ] = str [ i * K + j ] ; j ++ ; { _1_main_next = 11 ; } break ; case 120 : ; if ( p [ 3 ] < K ) { { _1_main_next = 118 ; } } else { { _1_main_next = 91 ; } } break ; case 6 : p [ 2 ] = 0 ; { _1_main_next = 2 ; } break ; case 5 : i ++ ; { _1_main_next = 19 ; } break ; case 118 : ; if ( p [ 3 ] != p [ 0 ] ) { { _1_main_next = 117 ; } } else { { _1_main_next = 93 ; } } break ; case 117 : ; if ( p [ 3 ] != p [ 1 ] ) { { _1_main_next = 116 ; } } else { { _1_main_next = 93 ; } } break ; case 3 : c = 0 ; i = 1 ; { _1_main_next = 177 ; } break ; case 116 : ; if ( p [ 3 ] != p [ 2 ] ) { { _1_main_next = 115 ; } } else { { _1_main_next = 93 ; } } break ; case 2 : ; if ( p [ 2 ] < K ) { { _1_main_next = 176 ; } } else { { _1_main_next = 140 ; } } break ; case 115 : i = 0 ; { _1_main_next = 113 ; } break ; case 113 : ; if ( i < len / K ) { { _1_main_next = 111 ; } } else { { _1_main_next = 105 ; } } break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD cmp
METHOD_RETURN int
PARAM int *a
PARAM int *b
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_cmp_next = 0
LITERAL 1 while (1)
IDENTIFIER _1_cmp_next switch(_1_cmp_next)
LITERAL 0 <empty>
RETURN return (*b - *a); return (*b - *a);
<operator>.subtraction *b - *a
>>>PDG&12 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 2->1 3->1 6->1 6->1 10->1 11->1 11->1 11->1 11->10
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; int cmp ( int * a , int * b ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int cmp ( int * a , int * b ) { unsigned long _1_cmp_next ; { { _1_cmp_next = 0 ; } while ( 1 ) { switch ( _1_cmp_next ) { case 0 : ; return ( * b - * a ) ; break ; } } } } void megaInit ( void ) { { } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD checkforbase
METHOD_RETURN int
PARAM int x
PARAM int basei
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_checkforbase_next = 11
LITERAL 1 while (1)
IDENTIFIER _1_checkforbase_next switch(_1_checkforbase_next)
LITERAL 11 <empty>
<operator>.assignment k = -1
<operator>.assignment cont = 0
BLOCK <empty> <empty>
LITERAL 9 <empty>
LITERAL 8 <empty>
LITERAL 7 <empty>
LITERAL 3 <empty>
<operator>.assignment k = x
<operator>.assignment tmp = baseconv(x, basei)
<operator>.assignment x = process(tmp)
<operator>.postIncrement cont ++
BLOCK <empty> <empty>
LITERAL 2 <empty>
LITERAL 1 <empty>
RETURN return (0); return (0);
LITERAL 0 <empty>
RETURN return (1); return (1);
<operator>.assignment _1_checkforbase_next = 9
<operator>.notEquals k != x
<operator>.notEquals x != 1
<operator>.lessThan cont < 10
<operator>.assignment _1_checkforbase_next = 9
<operator>.notEquals x != 1
LITERAL 0 return (0);
LITERAL 1 return (1);
<operator>.minus -1
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
baseconv baseconv(x, basei)
process process(tmp)
BLOCK <empty> <empty>
<operator>.assignment _1_checkforbase_next = 8
BLOCK <empty> <empty>
<operator>.assignment _1_checkforbase_next = 7
BLOCK <empty> <empty>
<operator>.assignment _1_checkforbase_next = 3
BLOCK <empty> <empty>
<operator>.assignment _1_checkforbase_next = 1
BLOCK <empty> <empty>
<operator>.assignment _1_checkforbase_next = 2
<operator>.assignment _1_checkforbase_next = 2
<operator>.assignment _1_checkforbase_next = 2
<operator>.assignment _1_checkforbase_next = 0
>>>PDG&54 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 2->1 2->17 2->28 2->29 2->32 2->39 3->1 3->39 6->1 6->1 10->1 10->1 10->1 10->28 11->1 11->1 11->20 11->30 17->1 17->1 17->28 18->1 18->1 18->40 19->1 19->1 19->1 19->17 19->28 19->29 19->32 19->39 20->1 20->1 20->30 24->1 26->1 27->1 27->1 28->1 28->1 28->1 28->17 28->29 28->32 28->39 28->42 28->50 29->1 29->1 29->17 29->28 29->32 29->39 29->44 29->51 30->1 30->1 30->20 30->46 30->52 31->1 31->1 32->1 32->1 32->17 32->28 32->29 32->39 32->48 32->53 33->24 34->26 35->10 39->1 39->18 39->18 40->1 40->19 42->1 42->1 44->1 44->1 46->1 46->1 48->1 48->1 50->1 50->1 51->1 51->1 52->1 52->1 53->1 53->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; int checkforbase ( int x , int basei ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int ( /* missing proto */ baseconv ) ( ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int ( /* missing proto */ process ) ( ) ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } } int checkforbase ( int x , int basei ) { int k ; int cont ; int tmp ; unsigned long _1_checkforbase_next ; { { _1_checkforbase_next = 11 ; } while ( 1 ) { switch ( _1_checkforbase_next ) { case 11 : k = -1 ; cont = 0 ; { _1_checkforbase_next = 9 ; } break ; case 9 : ; if ( k != x ) { { _1_checkforbase_next = 8 ; } } else { { _1_checkforbase_next = 2 ; } } break ; case 8 : ; if ( x != 1 ) { { _1_checkforbase_next = 7 ; } } else { { _1_checkforbase_next = 2 ; } } break ; case 7 : ; if ( cont < 10 ) { { _1_checkforbase_next = 3 ; } } else { { _1_checkforbase_next = 2 ; } } break ; case 3 : k = x ; tmp = baseconv ( x , basei ) ; x = process ( tmp ) ; cont ++ ; { _1_checkforbase_next = 9 ; } break ; case 2 : ; if ( x != 1 ) { { _1_checkforbase_next = 1 ; } } else { { _1_checkforbase_next = 0 ; } } break ; case 1 : ; return ( 0 ) ; break ; case 0 : ; return ( 1 ) ; break ; } } } }
>>>Func
METHOD rangeBitwiseAnd
METHOD_RETURN int
PARAM int m
PARAM int n
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_rangeBitwiseAnd_next = 4
LITERAL 1 while (1)
IDENTIFIER _1_rangeBitwiseAnd_next switch(_1_rangeBitwiseAnd_next)
LITERAL 4 <empty>
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 1 <empty>
<operators>.assignmentAnd n &= n - 1
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (n); return (n);
<operator>.assignment _1_rangeBitwiseAnd_next = 3
<operator>.lessThan m < n
<operator>.assignment _1_rangeBitwiseAnd_next = 3
IDENTIFIER n return (n);
BLOCK <empty> <empty>
<operator>.subtraction n - 1
<operator>.assignment _1_rangeBitwiseAnd_next = 1
BLOCK <empty> <empty>
<operator>.assignment _1_rangeBitwiseAnd_next = 0
>>>PDG&26 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 2->1 2->18 3->1 3->18 3->20 3->22 6->1 6->1 13->1 13->1 13->18 13->20 13->22 16->1 17->1 17->1 18->1 18->1 18->1 18->20 18->22 18->23 18->25 19->1 19->1 20->16 22->13 22->13 23->1 23->1 25->1 25->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; int rangeBitwiseAnd ( int m , int n ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } int rangeBitwiseAnd ( int m , int n ) { unsigned long _1_rangeBitwiseAnd_next ; { { _1_rangeBitwiseAnd_next = 4 ; } while ( 1 ) { switch ( _1_rangeBitwiseAnd_next ) { case 4 : ; { _1_rangeBitwiseAnd_next = 3 ; } break ; case 3 : ; if ( m < n ) { { _1_rangeBitwiseAnd_next = 1 ; } } else { { _1_rangeBitwiseAnd_next = 0 ; } } break ; case 1 : n &= n - 1 ; { _1_rangeBitwiseAnd_next = 3 ; } break ; case 0 : ; return ( n ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD removeDuplicates
METHOD_RETURN int
PARAM int *nums
PARAM int numsSize
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_removeDuplicates_next = 8
LITERAL 1 while (1)
IDENTIFIER _1_removeDuplicates_next switch(_1_removeDuplicates_next)
LITERAL 8 <empty>
<operator>.assignment count = 0
<operator>.assignment i = 1
BLOCK <empty> <empty>
LITERAL 6 <empty>
LITERAL 4 <empty>
LITERAL 3 <empty>
<operator>.postIncrement count ++
BLOCK <empty> <empty>
LITERAL 2 <empty>
<operator>.assignment *(nums + (i - count)) = *(nums + i)
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (numsSize - count); return (numsSize - count);
<operator>.assignment _1_removeDuplicates_next = 6
<operator>.lessThan i < numsSize
<operator>.equals *(nums + i) == *(nums + (i - 1))
<operator>.assignment _1_removeDuplicates_next = 1
<operator>.assignment _1_removeDuplicates_next = 1
<operator>.assignment _1_removeDuplicates_next = 6
<operator>.subtraction numsSize - count
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_removeDuplicates_next = 4
BLOCK <empty> <empty>
<operator>.assignment _1_removeDuplicates_next = 3
BLOCK <empty> <empty>
<operator>.addition nums + (i - count)
<operator>.addition nums + i
<operator>.assignment _1_removeDuplicates_next = 0
<operator>.addition nums + i
<operator>.addition nums + (i - 1)
<operator>.assignment _1_removeDuplicates_next = 2
<operator>.subtraction i - count
<operator>.subtraction i - 1
>>>PDG&47 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->20 0->21 0->22 0->23 0->24 0->26 0->27 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 2->1 2->39 2->42 2->43 3->27 3->32 6->1 6->1 10->1 10->16 10->32 10->45 11->1 11->1 11->22 11->27 11->42 11->45 11->46 16->1 16->32 16->45 19->1 19->1 19->1 22->1 22->1 22->27 22->42 22->45 22->46 25->1 26->1 26->1 27->1 27->1 27->22 27->32 27->35 27->41 27->42 27->45 27->46 28->1 28->1 28->1 28->37 28->44 29->1 29->1 30->1 30->1 31->1 31->1 32->1 32->1 32->1 32->25 35->1 35->1 37->1 37->1 39->1 40->1 40->1 41->1 41->1 43->1 43->1 44->1 44->1 45->16 45->22 45->27 45->32 45->39 45->39 45->40 45->42 45->46 46->1 46->22 46->27 46->42 46->43 46->43 46->45
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; int removeDuplicates ( int * nums , int numsSize ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int removeDuplicates ( int * nums , int numsSize ) { int count ; int i ; unsigned long _1_removeDuplicates_next ; { { _1_removeDuplicates_next = 8 ; } while ( 1 ) { switch ( _1_removeDuplicates_next ) { case 8 : count = 0 ; i = 1 ; { _1_removeDuplicates_next = 6 ; } break ; case 6 : ; if ( i < numsSize ) { { _1_removeDuplicates_next = 4 ; } } else { { _1_removeDuplicates_next = 0 ; } } break ; case 4 : ; if ( * ( nums + i ) == * ( nums + ( i - 1 ) ) ) { { _1_removeDuplicates_next = 3 ; } } else { { _1_removeDuplicates_next = 2 ; } } break ; case 3 : count ++ ; { _1_removeDuplicates_next = 1 ; } break ; case 2 : * ( nums + ( i - count ) ) = * ( nums + i ) ; { _1_removeDuplicates_next = 1 ; } break ; case 1 : i ++ ; { _1_removeDuplicates_next = 6 ; } break ; case 0 : ; return ( numsSize - count ) ; break ; } } } } void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 10
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 10 <empty>
<operator>.assignment sum = 0
BLOCK <empty> <empty>
LITERAL 9 <empty>
LITERAL 8 <empty>
printf printf("Usage: program-name char\n")
BLOCK <empty> <empty>
LITERAL 7 <empty>
RETURN return (1); return (1);
LITERAL 6 <empty>
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
<operator>.assignmentPlus sum += i
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("Sum is: %d\n", sum)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 9
<operator>.lessThan argc < 2
<operator>.assignment _1_main_next = 7
LITERAL 1 return (1);
<operator>.assignment _1_main_next = 4
<operator>.lessThan i < (int )*(*(argv + 1) + 0)
<operator>.assignment _1_main_next = 4
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 8
BLOCK <empty> <empty>
<operator>.cast (int )*(*(argv + 1) + 0)
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 6
<operator>.assignment _1_main_next = 1
<operator>.addition *(argv + 1) + 0
<operator>.addition argv + 1
>>>PDG&57 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->51 0->52 0->53 0->54 0->55 0->56 2->7 2->38 3->8 3->56 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->29 16->33 20->1 23->1 25->1 25->1 25->29 25->30 25->42 29->1 29->1 29->33 30->1 30->1 30->29 30->42 33->1 33->1 33->29 36->1 37->1 37->1 38->1 38->1 38->48 38->53 39->1 39->1 40->23 41->1 41->1 42->1 42->1 42->1 42->29 42->30 42->51 42->54 43->1 43->1 44->1 44->1 45->36 48->1 48->1 50->1 51->1 51->1 53->1 53->1 54->1 54->1 55->1 56->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int argc , char * * argv , char * * _formal_envp ) { int i ; int sum ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 10 ; } while ( 1 ) { switch ( _1_main_next ) { case 10 : sum = 0 ; { _1_main_next = 9 ; } break ; case 9 : ; if ( argc < 2 ) { { _1_main_next = 8 ; } } else { { _1_main_next = 6 ; } } break ; case 8 : printf ( " \n " ) ; { _1_main_next = 7 ; } break ; case 7 : ; return ( 1 ) ; break ; case 6 : i = 0 ; { _1_main_next = 4 ; } break ; case 4 : ; if ( i < ( int ) * ( * ( argv + 1 ) + 0 ) ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : sum += i ; i ++ ; { _1_main_next = 4 ; } break ; case 1 : printf ( " \n " , sum ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 13
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 13 <empty>
BLOCK <empty> <empty>
LITERAL 12 <empty>
LITERAL 11 <empty>
RETURN return (1); return (1);
LITERAL 10 <empty>
<operator>.assignment multiply = 0L
<operator>.assignment factor = 1
<operator>.assignment binary1 = (long )*(*(argv + 1) + 0)
<operator>.assignment binary2 = (long )*(*(argv + 2) + 0)
BLOCK <empty> <empty>
LITERAL 8 <empty>
LITERAL 6 <empty>
<operator>.assignment digit = (int )(binary2 % 10L)
BLOCK <empty> <empty>
LITERAL 5 <empty>
LITERAL 4 <empty>
<operator>.assignmentMultiplication binary1 *= (long )factor
<operator>.assignment tmp = binaryAddition(binary1, multiply)
<operator>.assignment multiply = (long )tmp
BLOCK <empty> <empty>
LITERAL 3 <empty>
<operator>.assignmentMultiplication binary1 *= (long )factor
BLOCK <empty> <empty>
LITERAL 2 <empty>
<operator>.assignmentDivision binary2 /= 10L
<operator>.assignment factor = 10
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("Product of two binary numbers: %ld\n", multiply)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 12
<operator>.lessThan argc < 3
LITERAL 1 return (1);
<operator>.assignment _1_main_next = 8
<operator>.notEquals binary2 != 0L
<operator>.assignment _1_main_next = 5
<operator>.equals digit == 1
<operator>.assignment _1_main_next = 2
<operator>.assignment _1_main_next = 2
<operator>.assignment _1_main_next = 8
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
BLOCK <empty> <empty>
<operator>.cast (long )*(*(argv + 1) + 0)
<operator>.cast (long )*(*(argv + 2) + 0)
BLOCK <empty> <empty>
<operator>.cast (int )(binary2 % 10L)
BLOCK <empty> <empty>
<operator>.cast (long )factor
binaryAddition binaryAddition(binary1, multiply)
<operator>.cast (long )tmp
<operator>.cast (long )factor
<operator>.assignment _1_main_next = 11
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 6
BLOCK <empty> <empty>
<operator>.modulo binary2 % 10L
<operator>.assignment _1_main_next = 4
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 10
<operator>.addition *(argv + 1) + 0
<operator>.addition *(argv + 2) + 0
<operator>.assignment _1_main_next = 1
<operator>.assignment _1_main_next = 3
<operator>.addition argv + 1
<operator>.addition argv + 2
>>>PDG&84 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->25 0->26 0->27 0->29 0->30 0->31 0->32 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 0->59 0->60 0->63 0->65 0->66 0->67 0->68 0->69 0->70 0->71 0->72 0->73 0->74 0->75 0->76 0->77 0->78 0->79 0->80 0->81 0->82 0->83 2->7 2->49 3->8 3->82 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 19->1 21->1 21->1 21->44 21->67 22->1 22->1 22->32 22->37 22->66 22->69 23->1 23->1 23->1 23->32 23->37 24->1 24->1 24->1 24->40 24->52 24->74 28->1 28->1 28->1 28->54 32->1 32->1 32->67 33->1 33->1 33->34 33->68 34->1 34->1 34->1 34->44 34->67 37->1 37->1 37->1 37->32 40->1 40->1 40->52 40->74 41->1 41->1 41->32 41->37 41->66 41->69 44->1 44->1 44->67 47->1 48->1 48->1 49->1 49->1 49->70 49->77 50->19 51->1 51->1 52->1 52->1 52->40 52->72 52->74 52->80 53->1 53->1 54->1 54->1 54->75 54->81 55->1 55->1 56->1 56->1 57->1 57->1 58->1 58->1 59->47 61->1 62->1 64->1 66->1 67->1 67->32 67->33 67->33 67->37 68->1 69->1 70->1 70->1 72->1 72->1 74->1 74->28 74->28 74->40 74->52 74->64 74->64 75->1 75->1 77->1 77->1 78->1 79->1 80->1 80->1 81->1 81->1 83->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern int ( /* missing proto */ binaryAddition ) ( ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int ( /* missing proto */ printf ) ( ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int argc , char * * argv , char * * _formal_envp ) { long binary1 ; long binary2 ; long multiply ; int digit ; int factor ; int tmp ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 13 ; } while ( 1 ) { switch ( _1_main_next ) { case 13 : ; { _1_main_next = 12 ; } break ; case 12 : ; if ( argc < 3 ) { { _1_main_next = 11 ; } } else { { _1_main_next = 10 ; } } break ; case 11 : ; return ( 1 ) ; break ; case 10 : multiply = 0L ; factor = 1 ; binary1 = ( long ) * ( * ( argv + 1 ) + 0 ) ; binary2 = ( long ) * ( * ( argv + 2 ) + 0 ) ; { _1_main_next = 8 ; } break ; case 8 : ; if ( binary2 != 0L ) { { _1_main_next = 6 ; } } else { { _1_main_next = 1 ; } } break ; case 6 : digit = ( int ) ( binary2 % 10L ) ; { _1_main_next = 5 ; } break ; case 5 : ; if ( digit == 1 ) { { _1_main_next = 4 ; } } else { { _1_main_next = 3 ; } } break ; case 4 : binary1 *= ( long ) factor ; tmp = binaryAddition ( binary1 , multiply ) ; multiply = ( long ) tmp ; { _1_main_next = 2 ; } break ; case 3 : binary1 *= ( long ) factor ; { _1_main_next = 2 ; } break ; case 2 : binary2 /= 10L ; factor = 10 ; { _1_main_next = 8 ; } break ; case 1 : printf ( " \n " , multiply ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 1 <empty>
<operator>.assignment str[0] = (char )'A'
<operator>.assignment str[1] = (char )'A'
<operator>.assignment str[2] = (char )'B'
<operator>.assignment str[3] = (char )'C'
<operator>.assignment str[4] = (char )'A'
<operator>.assignment str[5] = (char )'B'
<operator>.assignment str[6] = (char )'1'
<operator>.assignment str[7] = (char )'2'
<operator>.assignment str[8] = (char )'A'
<operator>.assignment str[9] = (char )'F'
<operator>.assignment str[10] = (char )'A'
<operator>.assignment str[11] = (char )'A'
<operator>.assignment str[12] = (char )'B'
<operator>.assignment str[13] = (char )'C'
<operator>.assignment str[14] = (char )'A'
<operator>.assignment str[15] = (char )'B'
<operator>.assignment str[16] = (char )'F'
<operator>.assignment str[17] = (char )'F'
<operator>.assignment str[18] = (char )'E'
<operator>.assignment str[19] = (char )'G'
<operator>.assignment str[20] = (char )'A'
<operator>.assignment str[21] = (char )'B'
<operator>.assignment str[22] = (char )'C'
<operator>.assignment str[23] = (char )'A'
<operator>.assignment str[24] = (char )'B'
<operator>.assignment str[25] = (char )'\000'
<operator>.assignment pat1[0] = (char )'A'
<operator>.assignment pat1[1] = (char )'B'
<operator>.assignment pat1[2] = (char )'C'
<operator>.assignment pat1[3] = (char )'A'
<operator>.assignment pat1[4] = (char )'B'
<operator>.assignment pat1[5] = (char )'\000'
<operator>.assignment pat2[0] = (char )'F'
<operator>.assignment pat2[1] = (char )'F'
<operator>.assignment pat2[2] = (char )'F'
<operator>.assignment pat2[3] = (char )'\000'
<operator>.assignment pat3[0] = (char )'C'
<operator>.assignment pat3[1] = (char )'A'
<operator>.assignment pat3[2] = (char )'B'
<operator>.assignment pat3[3] = (char )'\000'
printf printf("String test: %s\n", str)
printf printf("Test1: search pattern %s\n", pat1)
boyer_moore_search boyer_moore_search(str, pat1)
printf printf("Test2: search pattern %s\n", pat2)
boyer_moore_search boyer_moore_search(str, pat2)
printf printf("Test3: search pattern %s\n", pat3)
boyer_moore_search boyer_moore_search(str, pat3)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
<operator>.cast (char )'A'
<operator>.cast (char )'A'
<operator>.cast (char )'B'
<operator>.cast (char )'C'
<operator>.cast (char )'A'
<operator>.cast (char )'B'
<operator>.cast (char )'1'
<operator>.cast (char )'2'
<operator>.cast (char )'A'
<operator>.cast (char )'F'
<operator>.cast (char )'A'
<operator>.cast (char )'A'
<operator>.cast (char )'B'
<operator>.cast (char )'C'
<operator>.cast (char )'A'
<operator>.cast (char )'B'
<operator>.cast (char )'F'
<operator>.cast (char )'F'
<operator>.cast (char )'E'
<operator>.cast (char )'G'
<operator>.cast (char )'A'
<operator>.cast (char )'B'
<operator>.cast (char )'C'
<operator>.cast (char )'A'
<operator>.cast (char )'B'
<operator>.cast (char )'\000'
<operator>.cast (char )'A'
<operator>.cast (char )'B'
<operator>.cast (char )'C'
<operator>.cast (char )'A'
<operator>.cast (char )'B'
<operator>.cast (char )'\000'
<operator>.cast (char )'F'
<operator>.cast (char )'F'
<operator>.cast (char )'F'
<operator>.cast (char )'\000'
<operator>.cast (char )'C'
<operator>.cast (char )'A'
<operator>.cast (char )'B'
<operator>.cast (char )'\000'
>>>PDG&108 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 0->59 0->60 0->61 0->62 0->63 0->64 0->65 0->66 0->67 0->68 0->69 0->70 0->71 0->72 0->73 0->74 0->75 0->76 0->77 0->78 0->79 0->80 0->81 0->82 0->83 0->84 0->85 0->86 0->87 0->88 0->89 0->90 0->91 0->92 0->93 0->94 0->95 0->96 0->97 0->98 0->99 0->100 0->101 0->102 0->103 0->104 0->105 0->106 0->107 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->56 16->58 16->60 16->62 17->1 17->1 17->56 17->58 17->60 17->62 18->1 18->1 18->56 18->58 18->60 18->62 19->1 19->1 19->56 19->58 19->60 19->62 20->1 20->1 20->56 20->58 20->60 20->62 21->1 21->1 21->56 21->58 21->60 21->62 22->1 22->1 22->1 22->56 22->58 22->60 22->62 23->1 23->1 23->1 23->56 23->58 23->60 23->62 24->1 24->1 24->56 24->58 24->60 24->62 25->1 25->1 25->56 25->58 25->60 25->62 26->1 26->1 26->56 26->58 26->60 26->62 27->1 27->1 27->56 27->58 27->60 27->62 28->1 28->1 28->56 28->58 28->60 28->62 29->1 29->1 29->56 29->58 29->60 29->62 30->1 30->1 30->56 30->58 30->60 30->62 31->1 31->1 31->56 31->58 31->60 31->62 32->1 32->1 32->56 32->58 32->60 32->62 33->1 33->1 33->56 33->58 33->60 33->62 34->1 34->1 34->1 34->56 34->58 34->60 34->62 35->1 35->1 35->1 35->56 35->58 35->60 35->62 36->1 36->1 36->56 36->58 36->60 36->62 37->1 37->1 37->56 37->58 37->60 37->62 38->1 38->1 38->56 38->58 38->60 38->62 39->1 39->1 39->56 39->58 39->60 39->62 40->1 40->1 40->56 40->58 40->60 40->62 41->1 41->1 41->56 41->58 41->60 41->62 42->1 42->1 42->57 42->58 43->1 43->1 43->57 43->58 44->1 44->1 44->57 44->58 45->1 45->1 45->57 45->58 46->1 46->1 46->57 46->58 47->1 47->1 47->57 47->58 48->1 48->1 48->59 48->60 49->1 49->1 49->59 49->60 50->1 50->1 50->1 50->59 50->60 51->1 51->1 51->59 51->60 52->1 52->1 52->1 52->61 52->62 53->1 53->1 53->1 53->61 53->62 54->1 54->1 54->1 54->61 54->62 55->1 55->1 55->1 55->61 55->62 56->1 56->58 57->1 57->58 58->1 58->1 58->57 58->60 59->1 59->60 60->1 60->1 60->59 60->62 61->1 61->62 62->1 62->1 62->1 62->56 62->61 65->1 66->1 66->1 67->65
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int ( /* missing proto */ boyer_moore_search ) ( ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern double log ( double x ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { char str [ 26 ] ; char pat1 [ 6 ] ; char pat2 [ 4 ] ; char pat3 [ 4 ] ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 1 ; } while ( 1 ) { switch ( _1_main_next ) { case 1 : str [ 0 ] = ( char ) ' ' ; str [ 1 ] = ( char ) ' ' ; str [ 2 ] = ( char ) ' ' ; str [ 3 ] = ( char ) ' ' ; str [ 4 ] = ( char ) ' ' ; str [ 5 ] = ( char ) ' ' ; str [ 6 ] = ( char ) ' ' ; str [ 7 ] = ( char ) ' ' ; str [ 8 ] = ( char ) ' ' ; str [ 9 ] = ( char ) ' ' ; str [ 10 ] = ( char ) ' ' ; str [ 11 ] = ( char ) ' ' ; str [ 12 ] = ( char ) ' ' ; str [ 13 ] = ( char ) ' ' ; str [ 14 ] = ( char ) ' ' ; str [ 15 ] = ( char ) ' ' ; str [ 16 ] = ( char ) ' ' ; str [ 17 ] = ( char ) ' ' ; str [ 18 ] = ( char ) ' ' ; str [ 19 ] = ( char ) ' ' ; str [ 20 ] = ( char ) ' ' ; str [ 21 ] = ( char ) ' ' ; str [ 22 ] = ( char ) ' ' ; str [ 23 ] = ( char ) ' ' ; str [ 24 ] = ( char ) ' ' ; str [ 25 ] = ( char ) ' \000 ' ; pat1 [ 0 ] = ( char ) ' ' ; pat1 [ 1 ] = ( char ) ' ' ; pat1 [ 2 ] = ( char ) ' ' ; pat1 [ 3 ] = ( char ) ' ' ; pat1 [ 4 ] = ( char ) ' ' ; pat1 [ 5 ] = ( char ) ' \000 ' ; pat2 [ 0 ] = ( char ) ' ' ; pat2 [ 1 ] = ( char ) ' ' ; pat2 [ 2 ] = ( char ) ' ' ; pat2 [ 3 ] = ( char ) ' \000 ' ; pat3 [ 0 ] = ( char ) ' ' ; pat3 [ 1 ] = ( char ) ' ' ; pat3 [ 2 ] = ( char ) ' ' ; pat3 [ 3 ] = ( char ) ' \000 ' ; printf ( " \n " , str ) ; printf ( " \n " , pat1 ) ; boyer_moore_search ( str , pat1 ) ; printf ( " \n " , pat2 ) ; boyer_moore_search ( str , pat2 ) ; printf ( " \n " , pat3 ) ; boyer_moore_search ( str , pat3 ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 22
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 39 <empty>
<operator>.assignment j2 = 0
BLOCK <empty> <empty>
LITERAL 37 <empty>
LITERAL 35 <empty>
<operator>.assignment s = (i1 - i0) * (j2 - j0) - (i2 - i0) * (j1 - j0)
BLOCK <empty> <empty>
LITERAL 34 <empty>
LITERAL 33 <empty>
printf printf("Case #%d: %d %d %d %d %d %d\n", n + 1, i0, j0, i1, j1, i2, j2)
BLOCK <empty> <empty>
LITERAL 31 <empty>
<operator>.postIncrement j2 ++
BLOCK <empty> <empty>
LITERAL 30 <empty>
<operator>.postIncrement i2 ++
BLOCK <empty> <empty>
LITERAL 29 <empty>
<operator>.postIncrement j1 ++
BLOCK <empty> <empty>
LITERAL 28 <empty>
<operator>.postIncrement i1 ++
BLOCK <empty> <empty>
LITERAL 27 <empty>
<operator>.postIncrement j0 ++
BLOCK <empty> <empty>
LITERAL 26 <empty>
<operator>.postIncrement i0 ++
BLOCK <empty> <empty>
LITERAL 25 <empty>
printf printf("Case #%d: IMPOSSIBLE\n", n + 1)
BLOCK <empty> <empty>
LITERAL 24 <empty>
<operator>.postIncrement n ++
BLOCK <empty> <empty>
LITERAL 23 <empty>
RETURN return (0); return (0);
LITERAL 22 <empty>
scanf scanf(" %d", & C)
<operator>.assignment n = 0
BLOCK <empty> <empty>
LITERAL 20 <empty>
LITERAL 18 <empty>
scanf scanf(" %d %d %d", & N, & M, & A)
<operator>.assignment flag = 0
<operator>.assignment i0 = 0
BLOCK <empty> <empty>
LITERAL 16 <empty>
LITERAL 14 <empty>
<operator>.assignment j0 = 0
BLOCK <empty> <empty>
LITERAL 12 <empty>
LITERAL 10 <empty>
<operator>.assignment i1 = i0
BLOCK <empty> <empty>
LITERAL 8 <empty>
LITERAL 6 <empty>
<operator>.assignment j1 = 0
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
<operator>.assignment i2 = i1
BLOCK <empty> <empty>
LITERAL 0 <empty>
<operator>.assignment _1_main_next = 37
<operator>.lessEqualsThan j2 <= M
<operator>.assignment _1_main_next = 34
<operator>.equals s == A
<operator>.assignment _1_main_next = 24
<operator>.assignment _1_main_next = 37
<operator>.assignment _1_main_next = 0
<operator>.assignment _1_main_next = 4
<operator>.assignment _1_main_next = 8
<operator>.assignment _1_main_next = 12
<operator>.assignment _1_main_next = 16
<operator>.assignment _1_main_next = 24
<operator>.assignment _1_main_next = 20
LITERAL 0 return (0);
<operator>.assignment _1_main_next = 20
<operator>.lessThan n < C
<operator>.assignment _1_main_next = 16
<operator>.lessEqualsThan i0 <= N
<operator>.assignment _1_main_next = 12
<operator>.lessEqualsThan j0 <= M
<operator>.assignment _1_main_next = 8
<operator>.lessEqualsThan i1 <= N
<operator>.assignment _1_main_next = 4
<operator>.lessEqualsThan j1 <= M
<operator>.assignment _1_main_next = 0
<operator>.lessEqualsThan i2 <= N
BLOCK <empty> <empty>
<operator>.subtraction (i1 - i0) * (j2 - j0) - (i2 - i0) * (j1 - j0)
BLOCK <empty> <empty>
<operator>.addition n + 1
<operator>.addition n + 1
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 35
BLOCK <empty> <empty>
<operator>.multiplication (i1 - i0) * (j2 - j0)
<operator>.multiplication (i2 - i0) * (j1 - j0)
<operator>.assignment _1_main_next = 33
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 18
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 14
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 10
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 6
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 39
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 30
<operator>.subtraction i1 - i0
<operator>.subtraction j2 - j0
<operator>.subtraction i2 - i0
<operator>.subtraction j1 - j0
<operator>.assignment _1_main_next = 31
<operator>.assignment _1_main_next = 23
<operator>.assignment _1_main_next = 25
<operator>.assignment _1_main_next = 26
<operator>.assignment _1_main_next = 27
<operator>.assignment _1_main_next = 28
<operator>.assignment _1_main_next = 29
>>>PDG&146 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 0->59 0->60 0->61 0->62 0->63 0->64 0->65 0->66 0->67 0->68 0->69 0->70 0->71 0->72 0->73 0->74 0->75 0->76 0->77 0->78 0->79 0->80 0->81 0->82 0->83 0->84 0->85 0->86 0->87 0->88 0->89 0->90 0->91 0->92 0->93 0->94 0->95 0->96 0->97 0->98 0->99 0->100 0->101 0->102 0->103 0->104 0->105 0->107 0->108 0->109 0->110 0->111 0->112 0->113 0->114 0->115 0->116 0->117 0->120 0->121 0->122 0->123 0->124 0->125 0->126 0->127 0->128 0->129 0->130 0->131 0->132 0->133 0->134 0->135 0->136 0->137 0->138 0->139 0->140 0->141 0->142 0->143 0->144 0->145 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->24 16->27 16->80 16->136 20->1 20->1 20->1 20->82 24->1 24->1 24->1 24->1 24->1 24->1 24->1 24->1 24->27 24->30 24->33 24->36 24->39 24->42 24->68 24->76 24->80 24->96 24->98 24->100 24->102 24->104 24->135 24->135 24->136 24->136 24->137 24->138 27->1 27->1 27->24 27->80 27->136 30->1 30->1 30->24 30->104 30->137 33->1 33->1 33->24 33->102 33->138 36->1 36->1 36->24 36->76 36->100 36->135 39->1 39->1 39->24 39->98 39->136 42->1 42->1 42->24 42->68 42->96 42->135 45->1 45->1 48->1 48->1 48->24 48->45 48->94 48->108 48->109 51->1 53->1 53->94 54->1 54->1 54->24 54->45 54->48 54->94 54->108 54->109 58->1 58->1 58->1 58->96 58->100 58->104 59->1 59->1 60->1 60->1 60->24 60->42 60->68 60->96 60->135 64->1 64->1 64->24 64->39 64->98 64->136 68->1 68->1 68->1 68->24 68->36 68->76 68->100 68->135 72->1 72->1 72->24 72->33 72->102 72->138 76->1 76->1 76->1 76->24 76->30 76->104 76->137 79->1 79->1 80->1 80->1 80->1 80->24 80->27 80->98 80->102 80->116 80->134 80->136 81->1 81->1 82->1 82->1 82->1 82->120 82->139 83->1 83->1 84->1 84->1 85->1 85->1 86->1 86->1 87->1 87->1 88->1 88->1 89->1 89->1 90->1 90->1 91->1 91->1 92->51 93->1 93->1 94->1 94->1 94->1 94->24 94->45 94->48 94->53 94->108 94->109 94->122 94->140 95->1 95->1 96->1 96->1 96->1 96->24 96->42 96->58 96->68 96->100 96->104 96->124 96->135 96->141 97->1 97->1 98->1 98->1 98->1 98->24 98->39 98->80 98->102 98->126 98->136 98->142 99->1 99->1 100->1 100->1 100->1 100->24 100->36 100->58 100->76 100->96 100->104 100->128 100->135 100->143 101->1 101->1 102->1 102->1 102->1 102->24 102->33 102->80 102->98 102->130 102->138 102->144 103->1 103->1 104->1 104->1 104->1 104->24 104->30 104->58 104->96 104->100 104->132 104->137 104->145 106->1 106->1 106->20 106->20 108->1 109->1 116->1 116->1 118->1 118->1 118->106 118->106 119->1 119->1 119->106 119->106 120->1 120->1 122->1 122->1 124->1 124->1 126->1 126->1 128->1 128->1 130->1 130->1 132->1 132->1 134->1 134->1 135->1 135->24 135->36 135->76 135->100 135->118 135->118 135->137 136->1 136->24 136->27 136->80 136->118 136->118 136->138 137->1 137->1 137->24 137->24 137->30 137->42 137->68 137->96 137->104 137->119 137->119 137->135 138->1 138->1 138->24 138->24 138->33 138->39 138->98 138->102 138->119 138->119 138->136 139->1 139->1 140->1 140->1 141->1 141->1 142->1 142->1 143->1 143->1 144->1 144->1 145->1 145->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int ( /* missing proto */ scanf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { int N ; int M ; int A ; int C ; int i0 ; int i1 ; int i2 ; int j0 ; int j1 ; int j2 ; int s ; int n ; int flag ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 22 ; } while ( 1 ) { switch ( _1_main_next ) { case 39 : j2 = 0 ; { _1_main_next = 37 ; } break ; case 37 : ; if ( j2 <= M ) { { _1_main_next = 35 ; } } else { { _1_main_next = 30 ; } } break ; case 35 : s = ( i1 - i0 ) * ( j2 - j0 ) - ( i2 - i0 ) * ( j1 - j0 ) ; { _1_main_next = 34 ; } break ; case 34 : ; if ( s == A ) { { _1_main_next = 33 ; } } else { { _1_main_next = 31 ; } } break ; case 33 : printf ( " \n " , n + 1 , i0 , j0 , i1 , j1 , i2 , j2 ) ; { _1_main_next = 24 ; } break ; case 31 : j2 ++ ; { _1_main_next = 37 ; } break ; case 30 : i2 ++ ; { _1_main_next = 0 ; } break ; case 29 : j1 ++ ; { _1_main_next = 4 ; } break ; case 28 : i1 ++ ; { _1_main_next = 8 ; } break ; case 27 : j0 ++ ; { _1_main_next = 12 ; } break ; case 26 : i0 ++ ; { _1_main_next = 16 ; } break ; case 25 : printf ( " \n " , n + 1 ) ; { _1_main_next = 24 ; } break ; case 24 : end : n ++ ; { _1_main_next = 20 ; } break ; case 23 : ; return ( 0 ) ; break ; case 22 : scanf ( " " , & C ) ; n = 0 ; { _1_main_next = 20 ; } break ; case 20 : ; if ( n < C ) { { _1_main_next = 18 ; } } else { { _1_main_next = 23 ; } } break ; case 18 : scanf ( " " , & N , & M , & A ) ; flag = 0 ; i0 = 0 ; { _1_main_next = 16 ; } break ; case 16 : ; if ( i0 <= N ) { { _1_main_next = 14 ; } } else { { _1_main_next = 25 ; } } break ; case 14 : j0 = 0 ; { _1_main_next = 12 ; } break ; case 12 : ; if ( j0 <= M ) { { _1_main_next = 10 ; } } else { { _1_main_next = 26 ; } } break ; case 10 : i1 = i0 ; { _1_main_next = 8 ; } break ; case 8 : ; if ( i1 <= N ) { { _1_main_next = 6 ; } } else { { _1_main_next = 27 ; } } break ; case 6 : j1 = 0 ; { _1_main_next = 4 ; } break ; case 4 : ; if ( j1 <= M ) { { _1_main_next = 2 ; } } else { { _1_main_next = 28 ; } } break ; case 2 : i2 = i1 ; { _1_main_next = 0 ; } break ; case 0 : ; if ( i2 <= N ) { { _1_main_next = 39 ; } } else { { _1_main_next = 29 ; } } break ; } } } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 11
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 11 <empty>
<operator>.assignment sum = 0
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 9 <empty>
LITERAL 7 <empty>
<operator>.assignment j = 0
BLOCK <empty> <empty>
LITERAL 5 <empty>
LITERAL 3 <empty>
<operator>.assignmentPlus sum += j
<operator>.postIncrement j ++
BLOCK <empty> <empty>
LITERAL 2 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("Sum is: %d\n", sum)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 9
<operator>.lessThan i < 127
<operator>.assignment _1_main_next = 5
<operator>.lessThan j < (int )*(*(argv + 1) + 0)
<operator>.assignment _1_main_next = 5
<operator>.assignment _1_main_next = 9
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 7
BLOCK <empty> <empty>
<operator>.cast (int )*(*(argv + 1) + 0)
<operator>.assignment _1_main_next = 3
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
<operator>.assignment _1_main_next = 2
<operator>.addition *(argv + 1) + 0
<operator>.addition argv + 1
>>>PDG&55 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->49 0->50 0->51 0->52 0->53 0->54 2->7 3->8 3->54 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->25 16->32 17->1 17->1 17->29 17->37 21->1 21->1 21->25 21->26 21->39 25->1 25->1 25->32 26->1 26->1 26->25 26->39 29->1 29->1 29->37 32->1 32->1 32->25 35->1 36->1 36->1 37->1 37->1 37->29 37->46 37->51 38->1 38->1 39->1 39->1 39->1 39->25 39->26 39->49 39->52 40->1 40->1 41->1 41->1 42->1 42->1 43->35 46->1 46->1 48->1 49->1 49->1 51->1 51->1 52->1 52->1 53->1 54->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int argc , char * * argv , char * * _formal_envp ) { int i ; int j ; int sum ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 11 ; } while ( 1 ) { switch ( _1_main_next ) { case 11 : sum = 0 ; i = 0 ; { _1_main_next = 9 ; } break ; case 9 : ; if ( i < 127 ) { { _1_main_next = 7 ; } } else { { _1_main_next = 1 ; } } break ; case 7 : j = 0 ; { _1_main_next = 5 ; } break ; case 5 : ; if ( j < ( int ) * ( * ( argv + 1 ) + 0 ) ) { { _1_main_next = 3 ; } } else { { _1_main_next = 2 ; } } break ; case 3 : sum += j ; j ++ ; { _1_main_next = 5 ; } break ; case 2 : i ++ ; { _1_main_next = 9 ; } break ; case 1 : printf ( " \n " , sum ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD removeElement
METHOD_RETURN int
PARAM int *nums
PARAM int numsSize
PARAM int val
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_removeElement_next = 7
LITERAL 1 while (1)
IDENTIFIER _1_removeElement_next switch(_1_removeElement_next)
LITERAL 7 <empty>
<operator>.assignment start = 0
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 5 <empty>
LITERAL 3 <empty>
LITERAL 2 <empty>
<operator>.assignment tmp = start
<operator>.postIncrement start ++
<operator>.assignment *(nums + tmp) = *(nums + i)
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (start); return (start);
<operator>.assignment _1_removeElement_next = 5
<operator>.lessThan i < numsSize
<operator>.notEquals *(nums + i) != val
<operator>.assignment _1_removeElement_next = 1
<operator>.assignment _1_removeElement_next = 5
IDENTIFIER start return (start);
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_removeElement_next = 3
BLOCK <empty> <empty>
<operator>.assignment _1_removeElement_next = 2
BLOCK <empty> <empty>
<operator>.addition nums + tmp
<operator>.addition nums + i
<operator>.assignment _1_removeElement_next = 0
<operator>.addition nums + i
<operator>.assignment _1_removeElement_next = 1
>>>PDG&43 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->20 0->21 0->22 0->23 0->24 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 2->1 2->38 2->41 3->1 3->27 4->1 4->28 7->1 7->1 11->1 11->1 11->17 11->18 11->31 12->1 12->1 12->22 12->27 12->39 12->41 17->1 17->38 18->1 18->1 18->17 18->31 19->1 19->1 19->1 22->1 22->1 22->27 22->39 22->41 25->1 26->1 26->1 27->1 27->1 27->1 27->22 27->34 27->39 27->40 27->41 28->1 28->1 28->1 28->36 28->42 29->1 29->1 30->1 30->1 31->25 34->1 34->1 36->1 36->1 38->1 39->1 39->1 40->1 40->1 41->1 41->1 42->1 42->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; int removeElement ( int * nums , int numsSize , int val ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int removeElement ( int * nums , int numsSize , int val ) { int i ; int start ; int tmp ; unsigned long _1_removeElement_next ; { { _1_removeElement_next = 7 ; } while ( 1 ) { switch ( _1_removeElement_next ) { case 7 : start = 0 ; i = 0 ; { _1_removeElement_next = 5 ; } break ; case 5 : ; if ( i < numsSize ) { { _1_removeElement_next = 3 ; } } else { { _1_removeElement_next = 0 ; } } break ; case 3 : ; if ( * ( nums + i ) != val ) { { _1_removeElement_next = 2 ; } } else { { _1_removeElement_next = 1 ; } } break ; case 2 : tmp = start ; start ++ ; * ( nums + tmp ) = * ( nums + i ) ; { _1_removeElement_next = 1 ; } break ; case 1 : i ++ ; { _1_removeElement_next = 5 ; } break ; case 0 : ; return ( start ) ; break ; } } } } void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 1 <empty>
test test()
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
>>>PDG&22 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 19->1 20->1 20->1 21->19
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int ( /* missing proto */ test ) ( ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern double log ( double x ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 1 ; } while ( 1 ) { switch ( _1_main_next ) { case 1 : test ( ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD hammingDistance
METHOD_RETURN int
PARAM int x
PARAM int y
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_hammingDistance_next = 8
LITERAL 1 while (1)
IDENTIFIER _1_hammingDistance_next switch(_1_hammingDistance_next)
LITERAL 8 <empty>
<operator>.assignment difference = x ^ y
<operator>.assignment TotalBits = (int )(sizeof(difference) * 8UL)
<operator>.assignment distance = 0
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 6 <empty>
LITERAL 4 <empty>
<operator>.assignment tmp = UINT32_C(1)
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 2 <empty>
<operator>.postIncrement distance ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (distance); return (distance);
<operator>.assignment _1_hammingDistance_next = 6
<operator>.lessThan i < TotalBits
<operator>.assignment _1_hammingDistance_next = 3
<operator>.and difference & (tmp << i)
<operator>.assignment _1_hammingDistance_next = 1
<operator>.assignment _1_hammingDistance_next = 6
IDENTIFIER distance return (distance);
<operator>.xor x ^ y
<operator>.cast (int )(sizeof(difference) * 8UL)
BLOCK <empty> <empty>
UINT32_C UINT32_C(1)
BLOCK <empty> <empty>
<operator>.multiplication sizeof(difference) * 8UL
<operator>.assignment _1_hammingDistance_next = 4
BLOCK <empty> <empty>
<operator>.shiftLeft tmp << i
<operator>.assignment _1_hammingDistance_next = 2
BLOCK <empty> <empty>
<operator>.sizeOf sizeof(difference)
<operator>.assignment _1_hammingDistance_next = 0
<operator>.assignment _1_hammingDistance_next = 1
>>>PDG&49 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->12 0->13 0->14 0->15 0->16 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->47 0->48 2->1 2->35 3->1 3->35 6->1 6->1 10->1 10->1 11->1 11->1 11->1 11->29 12->1 12->1 12->21 12->34 13->1 13->1 13->24 13->29 13->43 17->1 17->1 17->1 17->43 21->1 21->1 21->34 24->1 24->1 24->29 24->43 27->1 28->1 28->1 29->1 29->1 29->1 29->24 29->41 29->43 29->47 30->1 30->1 31->1 31->1 31->1 31->44 31->48 32->1 32->1 33->1 33->1 34->27 35->1 35->1 35->10 35->10 36->1 38->17 40->11 40->36 41->1 41->1 43->1 43->1 43->24 43->29 43->31 43->31 44->1 44->1 46->1 47->1 47->1 48->1 48->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; int hammingDistance ( int x , int y ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; extern int ( /* missing proto */ UINT32_C ) ( ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } } int hammingDistance ( int x , int y ) { int difference ; int TotalBits ; int i ; int distance ; int tmp ; unsigned long _1_hammingDistance_next ; { { _1_hammingDistance_next = 8 ; } while ( 1 ) { switch ( _1_hammingDistance_next ) { case 8 : difference = x ^ y ; TotalBits = ( int ) ( sizeof ( difference ) * 8UL ) ; distance = 0 ; i = 0 ; { _1_hammingDistance_next = 6 ; } break ; case 6 : ; if ( i < TotalBits ) { { _1_hammingDistance_next = 4 ; } } else { { _1_hammingDistance_next = 0 ; } } break ; case 4 : tmp = UINT32_C ( 1 ) ; { _1_hammingDistance_next = 3 ; } break ; case 3 : ; if ( difference & ( tmp << i ) ) { { _1_hammingDistance_next = 2 ; } } else { { _1_hammingDistance_next = 1 ; } } break ; case 2 : distance ++ ; { _1_hammingDistance_next = 1 ; } break ; case 1 : i ++ ; { _1_hammingDistance_next = 6 ; } break ; case 0 : ; return ( distance ) ; break ; } } } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 11
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 11 <empty>
<operator>.assignment sum = 0
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 9 <empty>
LITERAL 7 <empty>
<operator>.assignmentPlus sum += i
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 6 <empty>
<operator>.assignment i = 1
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
<operator>.assignmentPlus sum += sum
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("Sum is: %d\n", sum)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 9
<operator>.lessThan i < argc
<operator>.assignment _1_main_next = 9
<operator>.assignment _1_main_next = 4
<operator>.lessEqualsThan i <= 4
<operator>.assignment _1_main_next = 4
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 7
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 6
<operator>.assignment _1_main_next = 1
>>>PDG&53 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 2->7 2->38 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->21 16->29 16->33 17->1 17->1 17->21 17->22 17->30 17->38 17->41 21->1 21->1 21->29 21->33 22->1 22->1 22->21 22->30 22->38 22->41 25->1 25->1 25->21 25->22 25->30 25->38 25->41 29->1 29->1 29->21 29->33 30->1 30->1 30->21 30->22 30->38 30->41 33->1 33->1 33->21 33->29 36->1 37->1 37->1 38->1 38->1 38->1 38->21 38->22 38->30 38->41 38->47 38->51 39->1 39->1 40->1 40->1 41->1 41->1 41->21 41->22 41->30 41->38 41->49 41->52 42->1 42->1 43->1 43->1 44->36 47->1 47->1 49->1 49->1 51->1 51->1 52->1 52->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int argc , char * * argv , char * * _formal_envp ) { int i ; int sum ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 11 ; } while ( 1 ) { switch ( _1_main_next ) { case 11 : sum = 0 ; i = 0 ; { _1_main_next = 9 ; } break ; case 9 : ; if ( i < argc ) { { _1_main_next = 7 ; } } else { { _1_main_next = 6 ; } } break ; case 7 : sum += i ; i ++ ; { _1_main_next = 9 ; } break ; case 6 : i = 1 ; { _1_main_next = 4 ; } break ; case 4 : ; if ( i <= 4 ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : sum += sum ; i ++ ; { _1_main_next = 4 ; } break ; case 1 : printf ( " \n " , sum ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 7
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 7 <empty>
<operator>.assignment c = (unsigned char )*(*(argv + 1) + 0)
BLOCK <empty> <empty>
LITERAL 6 <empty>
LITERAL 5 <empty>
printf printf("if-1-win ")
BLOCK <empty> <empty>
LITERAL 4 <empty>
printf printf("if-1-lose ")
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 2 <empty>
printf printf("if-2-win\n")
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("if-2-lose\n")
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 6
<operator>.equals (int )c == 127
<operator>.assignment _1_main_next = 3
<operator>.assignment _1_main_next = 3
<operator>.equals (int )c == 63
<operator>.assignment _1_main_next = 0
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
<operator>.cast (unsigned char )*(*(argv + 1) + 0)
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.cast (int )c
<operator>.assignment _1_main_next = 5
BLOCK <empty> <empty>
<operator>.cast (int )c
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.addition *(argv + 1) + 0
<operator>.assignment _1_main_next = 4
<operator>.assignment _1_main_next = 1
<operator>.addition argv + 1
>>>PDG&55 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 2->7 3->8 3->54 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->1 16->35 16->38 16->45 16->48 20->1 23->1 27->1 30->1 33->1 34->1 34->1 35->1 35->1 35->46 35->52 36->1 36->1 37->1 37->1 38->1 38->1 38->49 38->53 39->1 39->1 40->1 40->1 41->33 42->1 45->1 46->1 46->1 48->1 49->1 49->1 51->1 52->1 52->1 53->1 53->1 54->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int argc , char * * argv , char * * _formal_envp ) { unsigned char c ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 7 ; } while ( 1 ) { switch ( _1_main_next ) { case 7 : c = ( unsigned char ) * ( * ( argv + 1 ) + 0 ) ; { _1_main_next = 6 ; } break ; case 6 : ; if ( ( int ) c == 127 ) { { _1_main_next = 5 ; } } else { { _1_main_next = 4 ; } } break ; case 5 : printf ( " " ) ; { _1_main_next = 3 ; } break ; case 4 : printf ( " " ) ; { _1_main_next = 3 ; } break ; case 3 : ; if ( ( int ) c == 63 ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : printf ( " \n " ) ; { _1_main_next = 0 ; } break ; case 1 : printf ( " \n " ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD cmpvalue
METHOD_RETURN int
PARAM void const   *a
PARAM void const   *b
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_cmpvalue_next = 0
LITERAL 1 while (1)
IDENTIFIER _1_cmpvalue_next switch(_1_cmpvalue_next)
LITERAL 0 <empty>
RETURN return (*((int *)b) - *((int *)a)); return (*((int *)b) - *((int *)a));
<operator>.subtraction *((int *)b) - *((int *)a)
<operator>.cast (int *)b
<operator>.cast (int *)a
>>>PDG&14 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->12 0->13 2->13 3->12 6->1 6->1 10->1 11->1 11->1 11->1 11->10 12->1 13->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; int cmpvalue ( void const * a , void const * b ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int cmpvalue ( void const * a , void const * b ) { unsigned long _1_cmpvalue_next ; { { _1_cmpvalue_next = 0 ; } while ( 1 ) { switch ( _1_cmpvalue_next ) { case 0 : ; return ( * ( ( int * ) b ) - * ( ( int * ) a ) ) ; break ; } } } } void megaInit ( void ) { { } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD isArmstrong
METHOD_RETURN int
PARAM int x
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_isArmstrong_next = 8
LITERAL 1 while (1)
IDENTIFIER _1_isArmstrong_next switch(_1_isArmstrong_next)
LITERAL 8 <empty>
<operator>.assignment tmp = order(x)
<operator>.assignment n = tmp
<operator>.assignment temp = x
<operator>.assignment sum = 0
BLOCK <empty> <empty>
LITERAL 6 <empty>
LITERAL 4 <empty>
<operator>.assignment r = temp % 10
<operator>.assignment tmp___0 = power(r, n)
<operator>.assignmentPlus sum += tmp___0
<operator>.assignmentDivision temp /= 10
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 2 <empty>
RETURN return (1); return (1);
LITERAL 1 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_isArmstrong_next = 6
IDENTIFIER temp if (temp)
<operator>.assignment _1_isArmstrong_next = 6
<operator>.equals sum == x
LITERAL 1 return (1);
LITERAL 0 return (0);
order order(x)
BLOCK <empty> <empty>
<operator>.modulo temp % 10
power power(r, n)
BLOCK <empty> <empty>
<operator>.assignment _1_isArmstrong_next = 4
BLOCK <empty> <empty>
<operator>.assignment _1_isArmstrong_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_isArmstrong_next = 3
<operator>.assignment _1_isArmstrong_next = 1
>>>PDG&43 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->10 0->11 0->12 0->13 0->14 0->15 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 2->1 2->29 2->32 5->1 5->1 9->1 9->1 9->10 10->1 10->1 10->1 10->35 11->1 11->1 11->1 11->34 12->1 12->1 12->18 12->29 16->1 16->1 16->35 17->1 17->1 17->18 18->1 18->1 18->1 18->29 19->1 19->1 19->34 23->1 25->1 26->1 26->1 28->1 28->1 29->1 29->1 29->1 29->18 29->32 29->39 29->42 30->23 31->25 32->9 32->11 32->29 34->16 34->16 34->19 35->1 35->1 35->17 35->17 37->1 37->1 39->1 39->1 41->1 41->1 42->1 42->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern double ceil ( double x ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; int isArmstrong ( int x ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern int ( /* missing proto */ power ) ( ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern int ( /* missing proto */ order ) ( ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int isArmstrong ( int x ) { int n ; int tmp ; int temp ; int sum ; int r ; int tmp___0 ; unsigned long _1_isArmstrong_next ; { { _1_isArmstrong_next = 8 ; } while ( 1 ) { switch ( _1_isArmstrong_next ) { case 8 : tmp = order ( x ) ; n = tmp ; temp = x ; sum = 0 ; { _1_isArmstrong_next = 6 ; } break ; case 6 : ; if ( temp ) { { _1_isArmstrong_next = 4 ; } } else { { _1_isArmstrong_next = 3 ; } } break ; case 4 : r = temp % 10 ; tmp___0 = power ( r , n ) ; sum += tmp___0 ; temp /= 10 ; { _1_isArmstrong_next = 6 ; } break ; case 3 : ; if ( sum == x ) { { _1_isArmstrong_next = 2 ; } } else { { _1_isArmstrong_next = 1 ; } } break ; case 2 : ; return ( 1 ) ; break ; case 1 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 5
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 5 <empty>
test_c_atoi test_c_atoi()
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 3 <empty>
<operator>.assignment tmp = c_atoi(*(argv + 1))
printf printf("Your number + 5 is %d\n", tmp + 5)
BLOCK <empty> <empty>
LITERAL 2 <empty>
RETURN return (0); return (0);
LITERAL 1 <empty>
printf printf("wrong number of parmeters\n")
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (1); return (1);
<operator>.assignment _1_main_next = 4
<operator>.equals argc == 2
<operator>.assignment _1_main_next = 2
LITERAL 0 return (0);
<operator>.assignment _1_main_next = 0
LITERAL 1 return (1);
BLOCK <empty> <empty>
c_atoi c_atoi(*(argv + 1))
<operator>.addition tmp + 5
<operator>.assignment _1_main_next = 3
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
<operator>.addition argv + 1
>>>PDG&43 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->38 0->39 0->40 0->41 0->42 2->7 2->31 3->8 3->42 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 20->1 20->1 20->21 20->38 21->1 21->1 24->1 26->1 29->1 30->1 30->1 31->1 31->1 31->39 31->41 32->1 32->1 33->24 34->1 34->1 35->29 37->1 37->20 38->1 39->1 39->1 41->1 41->1 42->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int ( /* missing proto */ test_c_atoi ) ( ) ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern int raise ( int sig ) ; extern int ( /* missing proto */ c_atoi ) ( ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern double ceil ( double x ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int argc , char * * argv , char * * _formal_envp ) { int tmp ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 5 ; } while ( 1 ) { switch ( _1_main_next ) { case 5 : test_c_atoi ( ) ; { _1_main_next = 4 ; } break ; case 4 : ; if ( argc == 2 ) { { _1_main_next = 3 ; } } else { { _1_main_next = 1 ; } } break ; case 3 : tmp = c_atoi ( * ( argv + 1 ) ) ; printf ( " \n " , tmp + 5 ) ; { _1_main_next = 2 ; } break ; case 2 : ; return ( 0 ) ; break ; case 1 : printf ( " \n " ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 1 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 1 <empty>
readfile readfile(*(argv + 1))
exit exit(0)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
<operator>.addition argv + 1
>>>PDG&24 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->17 0->18 0->19 0->20 0->21 0->22 0->23 2->7 3->8 3->23 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 20->1 21->1 21->1 22->20 23->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern int ( /* missing proto */ exit ) ( ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern double strtod ( char const * str , char const * endptr ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; extern int ( /* missing proto */ readfile ) ( ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern double log ( double x ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int argc , char * * argv , char * * _formal_envp ) { int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 1 ; } while ( 1 ) { switch ( _1_main_next ) { case 1 : readfile ( * ( argv + 1 ) ) ; exit ( 0 ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD countPalin
METHOD_RETURN int
PARAM char *s
PARAM int head
PARAM int tail
PARAM int len
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_countPalin_next = 8
LITERAL 1 while (1)
IDENTIFIER _1_countPalin_next switch(_1_countPalin_next)
LITERAL 8 <empty>
LITERAL 7 <empty>
<operator>.assignment tmp = 1
BLOCK <empty> <empty>
LITERAL 6 <empty>
<operator>.assignment tmp = 0
BLOCK <empty> <empty>
LITERAL 5 <empty>
<operator>.assignment ret = tmp
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 3 <empty>
LITERAL 2 <empty>
LITERAL 1 <empty>
<operator>.assignment tmp___0 = countPalin(s, head - 1, tail + 1, len)
<operator>.assignmentPlus ret += tmp___0
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (ret); return (ret);
<operator>.equals (int )*(s + head) == (int )*(s + tail)
<operator>.assignment _1_countPalin_next = 5
<operator>.assignment _1_countPalin_next = 5
<operator>.assignment _1_countPalin_next = 4
IDENTIFIER ret if (ret)
<operator>.greaterEqualsThan head - 1 >= 0
<operator>.lessThan tail + 1 < len
<operator>.assignment _1_countPalin_next = 0
IDENTIFIER ret return (ret);
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
countPalin countPalin(s, head - 1, tail + 1, len)
<operator>.cast (int )*(s + head)
<operator>.cast (int )*(s + tail)
<operator>.assignment _1_countPalin_next = 7
BLOCK <empty> <empty>
<operator>.assignment _1_countPalin_next = 3
BLOCK <empty> <empty>
<operator>.subtraction head - 1
<operator>.assignment _1_countPalin_next = 2
BLOCK <empty> <empty>
<operator>.addition tail + 1
<operator>.assignment _1_countPalin_next = 1
BLOCK <empty> <empty>
<operator>.subtraction head - 1
<operator>.addition tail + 1
<operator>.assignment _1_countPalin_next = 6
<operator>.assignment _1_countPalin_next = 0
<operator>.assignment _1_countPalin_next = 0
<operator>.assignment _1_countPalin_next = 0
<operator>.addition s + head
<operator>.addition s + tail
>>>PDG&64 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->26 0->27 0->28 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 0->59 0->60 0->61 0->62 0->63 2->1 2->43 2->62 2->63 3->1 3->50 3->56 3->62 4->1 4->36 4->43 4->53 4->57 4->63 5->1 5->36 5->43 8->1 8->1 13->1 13->1 13->19 16->1 16->1 16->19 19->1 19->1 19->1 19->26 19->38 25->1 25->1 25->26 26->1 26->1 26->1 26->38 29->1 30->1 30->1 30->1 30->46 30->58 31->1 31->1 32->1 32->1 33->1 33->1 35->1 35->1 35->51 35->60 36->1 36->1 36->1 36->43 36->54 36->61 37->1 37->1 38->29 43->1 43->1 43->1 43->1 43->25 43->25 43->25 43->25 43->36 43->62 43->63 44->1 45->1 46->1 46->1 48->1 48->1 50->1 50->35 50->35 50->56 50->62 51->1 51->1 53->1 54->1 54->1 56->1 56->43 56->43 56->50 56->62 57->1 58->1 58->1 59->1 59->1 60->1 60->1 61->1 61->1 62->1 63->1 63->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; int countPalin ( char * s , int head , int tail , int len ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } int countPalin ( char * s , int head , int tail , int len ) { int ret ; int tmp ; int tmp___0 ; unsigned long _1_countPalin_next ; { { _1_countPalin_next = 8 ; } while ( 1 ) { switch ( _1_countPalin_next ) { case 8 : ; if ( ( int ) * ( s + head ) == ( int ) * ( s + tail ) ) { { _1_countPalin_next = 7 ; } } else { { _1_countPalin_next = 6 ; } } break ; case 7 : tmp = 1 ; { _1_countPalin_next = 5 ; } break ; case 6 : tmp = 0 ; { _1_countPalin_next = 5 ; } break ; case 5 : ret = tmp ; { _1_countPalin_next = 4 ; } break ; case 4 : ; if ( ret ) { { _1_countPalin_next = 3 ; } } else { { _1_countPalin_next = 0 ; } } break ; case 3 : ; if ( head - 1 >= 0 ) { { _1_countPalin_next = 2 ; } } else { { _1_countPalin_next = 0 ; } } break ; case 2 : ; if ( tail + 1 < len ) { { _1_countPalin_next = 1 ; } } else { { _1_countPalin_next = 0 ; } } break ; case 1 : tmp___0 = countPalin ( s , head - 1 , tail + 1 , len ) ; ret += tmp___0 ; { _1_countPalin_next = 0 ; } break ; case 0 : ; return ( ret ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 8
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 8 <empty>
<operator>.assignment test = 0
<operator>.assignment count = 0
scanf scanf("%d", & n)
<operator>.assignment i = 1
BLOCK <empty> <empty>
LITERAL 6 <empty>
<operator>.assignment tmp = pow(5, i)
<operator>.assignment test = n / tmp
BLOCK <empty> <empty>
LITERAL 5 <empty>
LITERAL 4 <empty>
<operator>.assignmentPlus count += test
BLOCK <empty> <empty>
LITERAL 2 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("%d\n", count)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 6
<operator>.assignment _1_main_next = 5
<operator>.notEquals test != 0
<operator>.assignment _1_main_next = 2
<operator>.assignment _1_main_next = 6
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
pow pow(5, i)
<operator>.division n / tmp
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 4
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
>>>PDG&50 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->27 16->39 17->1 17->1 17->27 17->33 18->1 18->45 19->1 19->1 19->30 19->44 22->1 22->1 22->45 23->1 23->1 23->1 23->27 23->39 27->1 27->1 27->1 27->33 30->1 30->1 30->44 33->1 33->1 33->27 36->1 37->1 37->1 38->1 38->1 39->1 39->1 39->27 39->47 39->49 40->1 40->1 41->1 41->1 42->1 42->1 43->36 44->1 44->22 44->22 44->30 45->1 45->1 45->18 45->23 45->23 47->1 47->1 49->1 49->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern int ( /* missing proto */ pow ) ( ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; char * * _global_envp = ( char * * ) 0 ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int ( /* missing proto */ scanf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { int i ; int n ; int test ; int count ; int tmp ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 8 ; } while ( 1 ) { switch ( _1_main_next ) { case 8 : test = 0 ; count = 0 ; scanf ( " " , & n ) ; i = 1 ; { _1_main_next = 6 ; } break ; case 6 : tmp = pow ( 5 , i ) ; test = n / tmp ; { _1_main_next = 5 ; } break ; case 5 : ; if ( test != 0 ) { { _1_main_next = 4 ; } } else { { _1_main_next = 1 ; } } break ; case 4 : count += test ; { _1_main_next = 2 ; } break ; case 2 : i ++ ; { _1_main_next = 6 ; } break ; case 1 : printf ( " \n " , count ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD toLowerCase
METHOD_RETURN char*
PARAM char *str
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_toLowerCase_next = 6
LITERAL 1 while (1)
IDENTIFIER _1_toLowerCase_next switch(_1_toLowerCase_next)
LITERAL 6 <empty>
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 4 <empty>
<operator>.assignment tmp___0 = strlen(str)
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 1 <empty>
<operator>.assignment tmp = tolower((int )*(str + i))
<operator>.assignment *(str + i) = (char )tmp
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (str); return (str);
<operator>.assignment _1_toLowerCase_next = 4
<operator>.assignment _1_toLowerCase_next = 3
<operator>.lessThan i < tmp___0
<operator>.assignment _1_toLowerCase_next = 4
IDENTIFIER str return (str);
strlen strlen(str)
BLOCK <empty> <empty>
tolower tolower((int )*(str + i))
<operator>.cast (char )tmp
<operator>.assignment _1_toLowerCase_next = 1
BLOCK <empty> <empty>
<operator>.addition str + i
<operator>.assignment _1_toLowerCase_next = 0
<operator>.addition str + i
>>>PDG&36 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->13 0->14 0->15 0->17 0->18 0->19 0->20 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->30 0->31 0->32 0->33 0->34 0->35 2->1 2->26 2->27 2->33 2->35 5->1 5->1 9->1 9->1 9->18 9->24 9->33 9->35 12->1 12->1 12->1 12->24 16->1 16->1 16->17 16->30 17->1 17->1 17->1 18->1 18->1 18->24 18->33 18->35 21->1 22->1 22->1 23->1 23->1 24->1 24->1 24->1 24->18 24->31 24->33 24->34 24->35 25->1 25->1 26->21 27->1 27->12 27->26 27->33 27->35 29->1 29->16 30->1 31->1 31->1 33->1 34->1 34->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern int ( /* missing proto */ strlen ) ( ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern int ( /* missing proto */ tolower ) ( ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; char * toLowerCase ( char * str ) ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; char * toLowerCase ( char * str ) { int i ; int tmp ; int tmp___0 ; unsigned long _1_toLowerCase_next ; { { _1_toLowerCase_next = 6 ; } while ( 1 ) { switch ( _1_toLowerCase_next ) { case 6 : i = 0 ; { _1_toLowerCase_next = 4 ; } break ; case 4 : tmp___0 = strlen ( str ) ; { _1_toLowerCase_next = 3 ; } break ; case 3 : ; if ( i < tmp___0 ) { { _1_toLowerCase_next = 1 ; } } else { { _1_toLowerCase_next = 0 ; } } break ; case 1 : tmp = tolower ( ( int ) * ( str + i ) ) ; * ( str + i ) = ( char ) tmp ; i ++ ; { _1_toLowerCase_next = 4 ; } break ; case 0 : ; return ( str ) ; break ; } } } } void megaInit ( void ) { { } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 12
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 12 <empty>
BLOCK <empty> <empty>
LITERAL 11 <empty>
LITERAL 10 <empty>
RETURN return (1); return (1);
LITERAL 9 <empty>
<operator>.assignment i = 1
BLOCK <empty> <empty>
LITERAL 7 <empty>
LITERAL 5 <empty>
<operator>.assignment a[i - 1] = (int )*(*(argv + i) + 0)
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 4 <empty>
<operator>.assignment m = (int )*(*(argv + (argc - 1)) + 0)
<operator>.assignment l = 0
<operator>.assignment u = argc - 2
<operator>.assignment c = binary(a, argc - 1, m, l, u)
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 2 <empty>
printf printf("Number is not found.\n")
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("Number is found.\n")
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 11
<operator>.lessThan argc < 12
LITERAL 1 return (1);
<operator>.assignment _1_main_next = 7
<operator>.lessThan i < argc - 1
<operator>.assignment _1_main_next = 7
<operator>.assignment _1_main_next = 3
<operator>.equals c == 0
<operator>.assignment _1_main_next = 0
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.cast (int )*(*(argv + i) + 0)
<operator>.cast (int )*(*(argv + (argc - 1)) + 0)
<operator>.subtraction argc - 2
binary binary(a, argc - 1, m, l, u)
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 10
BLOCK <empty> <empty>
<operator>.subtraction argc - 1
<operator>.assignment _1_main_next = 5
BLOCK <empty> <empty>
<operator>.subtraction i - 1
<operator>.subtraction argc - 1
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 9
<operator>.assignment _1_main_next = 4
<operator>.addition *(argv + i) + 0
<operator>.addition *(argv + (argc - 1)) + 0
<operator>.assignment _1_main_next = 1
<operator>.addition argv + i
<operator>.addition argv + (argc - 1)
<operator>.subtraction argc - 1
>>>PDG&78 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->26 0->27 0->28 0->30 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->58 0->59 0->60 0->61 0->62 0->63 0->64 0->65 0->66 0->67 0->68 0->69 0->70 0->71 0->72 0->73 0->74 0->75 0->76 0->77 2->7 2->44 2->63 2->77 3->8 3->75 3->76 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 19->1 21->1 21->1 21->47 21->66 25->1 25->1 25->1 25->59 26->1 26->1 26->47 26->66 29->1 29->1 29->59 30->1 30->59 31->1 31->1 31->59 32->1 32->1 32->1 32->50 36->1 39->1 42->1 43->1 43->1 44->1 44->1 44->61 44->63 44->70 44->77 45->19 46->1 46->1 47->1 47->1 47->1 47->64 47->66 47->71 48->1 48->1 49->1 49->1 50->1 50->1 50->68 50->74 51->1 51->1 52->1 52->1 53->42 56->1 57->1 58->31 58->31 58->67 59->1 59->1 59->1 59->1 59->1 59->32 59->32 59->32 59->32 59->32 61->1 61->1 63->1 63->44 63->47 63->47 63->77 64->1 64->1 66->26 66->75 67->1 67->44 67->59 67->59 67->63 67->77 68->1 68->1 70->1 70->1 71->1 71->1 72->1 73->1 74->1 74->1 75->1 76->1 77->58 77->76 77->76
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int ( /* missing proto */ printf ) ( ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int ( /* missing proto */ binary ) ( ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int argc , char * * argv , char * * _formal_envp ) { int a [ 10 ] ; int i ; int m ; int c ; int l ; int u ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 12 ; } while ( 1 ) { switch ( _1_main_next ) { case 12 : ; { _1_main_next = 11 ; } break ; case 11 : ; if ( argc < 12 ) { { _1_main_next = 10 ; } } else { { _1_main_next = 9 ; } } break ; case 10 : ; return ( 1 ) ; break ; case 9 : i = 1 ; { _1_main_next = 7 ; } break ; case 7 : ; if ( i < argc - 1 ) { { _1_main_next = 5 ; } } else { { _1_main_next = 4 ; } } break ; case 5 : a [ i - 1 ] = ( int ) * ( * ( argv + i ) + 0 ) ; i ++ ; { _1_main_next = 7 ; } break ; case 4 : m = ( int ) * ( * ( argv + ( argc - 1 ) ) + 0 ) ; l = 0 ; u = argc - 2 ; c = binary ( a , argc - 1 , m , l , u ) ; { _1_main_next = 3 ; } break ; case 3 : ; if ( c == 0 ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : printf ( " \n " ) ; { _1_main_next = 0 ; } break ; case 1 : printf ( " \n " ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 7
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 7 <empty>
<operator>.assignment c = (unsigned char )*(*(argv + 1) + 0)
BLOCK <empty> <empty>
LITERAL 6 <empty>
LITERAL 5 <empty>
printf printf("if-1-win ")
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 3 <empty>
printf printf("if-2-win\n")
BLOCK <empty> <empty>
LITERAL 2 <empty>
printf printf("if-2-lose\n")
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("if-1-lose\n")
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 6
<operator>.greaterThan (int )c > 63
<operator>.assignment _1_main_next = 4
<operator>.greaterThan (int )c > 127
<operator>.assignment _1_main_next = 0
<operator>.assignment _1_main_next = 0
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
<operator>.cast (unsigned char )*(*(argv + 1) + 0)
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.cast (int )c
<operator>.assignment _1_main_next = 5
BLOCK <empty> <empty>
<operator>.cast (int )c
<operator>.assignment _1_main_next = 3
BLOCK <empty> <empty>
<operator>.addition *(argv + 1) + 0
<operator>.assignment _1_main_next = 1
<operator>.assignment _1_main_next = 2
<operator>.addition argv + 1
>>>PDG&55 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 2->7 3->8 3->54 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->1 16->35 16->37 16->45 16->48 20->1 24->1 27->1 30->1 33->1 34->1 34->1 35->1 35->1 35->46 35->52 36->1 36->1 37->1 37->1 37->49 37->53 38->1 38->1 39->1 39->1 40->1 40->1 41->33 42->1 45->1 46->1 46->1 48->1 49->1 49->1 51->1 52->1 52->1 53->1 53->1 54->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int argc , char * * argv , char * * _formal_envp ) { unsigned char c ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 7 ; } while ( 1 ) { switch ( _1_main_next ) { case 7 : c = ( unsigned char ) * ( * ( argv + 1 ) + 0 ) ; { _1_main_next = 6 ; } break ; case 6 : ; if ( ( int ) c > 63 ) { { _1_main_next = 5 ; } } else { { _1_main_next = 1 ; } } break ; case 5 : printf ( " " ) ; { _1_main_next = 4 ; } break ; case 4 : ; if ( ( int ) c > 127 ) { { _1_main_next = 3 ; } } else { { _1_main_next = 2 ; } } break ; case 3 : printf ( " \n " ) ; { _1_main_next = 0 ; } break ; case 2 : printf ( " \n " ) ; { _1_main_next = 0 ; } break ; case 1 : printf ( " \n " ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 17
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 17 <empty>
BLOCK <empty> <empty>
LITERAL 16 <empty>
LITERAL 15 <empty>
RETURN return (1); return (1);
LITERAL 14 <empty>
<operator>.assignment i = 1
<operator>.assignment decimalNumber = (long )((int )*(*(argv + 1) + 0))
<operator>.assignment quotient = decimalNumber
BLOCK <empty> <empty>
LITERAL 12 <empty>
LITERAL 10 <empty>
<operator>.assignment temp = (int )(quotient % 16L)
BLOCK <empty> <empty>
LITERAL 9 <empty>
LITERAL 8 <empty>
<operator>.assignmentPlus temp += 48
BLOCK <empty> <empty>
LITERAL 7 <empty>
<operator>.assignmentPlus temp += 55
BLOCK <empty> <empty>
LITERAL 6 <empty>
<operator>.assignment tmp = i
<operator>.postIncrement i ++
<operator>.assignment hexadecimalNumber[tmp] = (char )temp
<operator>.assignmentDivision quotient /= 16L
BLOCK <empty> <empty>
LITERAL 5 <empty>
printf printf("Equivalent hexadecimal value of decimal number %d: \n", decimalNumber)
<operator>.assignment j = i - 1
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 1 <empty>
printf printf("%c"  (int )hexadecimalNumber[j])
<operator>.postDecrement j --
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 16
<operator>.lessThan argc < 2
LITERAL 1 return (1);
<operator>.assignment _1_main_next = 12
<operator>.notEquals quotient != 0L
<operator>.assignment _1_main_next = 9
<operator>.lessThan temp < 10
<operator>.assignment _1_main_next = 6
<operator>.assignment _1_main_next = 6
<operator>.assignment _1_main_next = 12
<operator>.assignment _1_main_next = 3
<operator>.greaterThan j > 0
<operator>.assignment _1_main_next = 3
LITERAL 0 return (0);
BLOCK <empty> <empty>
<operator>.cast (long )((int )*(*(argv + 1) + 0))
BLOCK <empty> <empty>
<operator>.cast (int )(quotient % 16L)
BLOCK <empty> <empty>
<operator>.cast (char )temp
<operator>.subtraction i - 1
BLOCK <empty> <empty>
<operator>.cast (int )hexadecimalNumber[j]
<operator>.assignment _1_main_next = 15
BLOCK <empty> <empty>
<operator>.cast (int )*(*(argv + 1) + 0)
<operator>.assignment _1_main_next = 10
BLOCK <empty> <empty>
<operator>.modulo quotient % 16L
<operator>.assignment _1_main_next = 8
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 14
<operator>.assignment _1_main_next = 5
<operator>.assignment _1_main_next = 7
<operator>.assignment _1_main_next = 0
<operator>.addition *(argv + 1) + 0
<operator>.addition argv + 1
>>>PDG&92 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->23 0->24 0->25 0->26 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 0->59 0->60 0->61 0->62 0->63 0->64 0->65 0->66 0->67 0->69 0->71 0->72 0->73 0->74 0->76 0->77 0->79 0->80 0->81 0->82 0->83 0->84 0->85 0->86 0->87 0->88 0->89 0->90 0->91 2->7 2->54 3->8 3->91 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 19->1 21->1 21->1 21->37 21->38 21->73 22->1 22->1 22->23 22->43 23->1 23->1 23->1 23->40 23->57 23->81 27->1 27->1 27->1 27->31 27->34 27->39 27->59 27->72 31->1 31->1 31->34 31->39 31->59 31->72 34->1 34->1 34->31 34->39 34->59 34->72 37->1 37->1 38->1 38->1 38->37 38->73 39->1 39->1 39->1 40->1 40->1 40->57 40->81 43->1 43->1 44->1 44->1 44->1 44->49 44->64 48->1 48->1 49->1 49->1 49->64 52->1 53->1 53->1 54->1 54->1 54->76 54->86 55->19 56->1 56->1 57->1 57->1 57->40 57->79 57->81 57->87 58->1 58->1 59->1 59->1 59->31 59->34 59->39 59->72 59->82 59->88 60->1 60->1 61->1 61->1 62->1 62->1 63->1 63->1 64->1 64->1 64->49 64->84 64->89 65->1 65->1 66->52 68->1 70->1 72->1 73->1 73->37 73->38 73->44 73->44 75->1 76->1 76->1 78->1 79->1 79->1 81->1 81->27 81->27 81->40 81->57 81->70 81->70 82->1 82->1 84->1 84->1 86->1 86->1 87->1 87->1 88->1 88->1 89->1 89->1 90->1 91->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int argc , char * * argv , char * * _formal_envp ) { long decimalNumber ; long quotient ; int i ; int j ; int temp ; char hexadecimalNumber [ 100 ] ; int tmp ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 17 ; } while ( 1 ) { switch ( _1_main_next ) { case 17 : ; { _1_main_next = 16 ; } break ; case 16 : ; if ( argc < 2 ) { { _1_main_next = 15 ; } } else { { _1_main_next = 14 ; } } break ; case 15 : ; return ( 1 ) ; break ; case 14 : i = 1 ; decimalNumber = ( long ) ( ( int ) * ( * ( argv + 1 ) + 0 ) ) ; quotient = decimalNumber ; { _1_main_next = 12 ; } break ; case 12 : ; if ( quotient != 0L ) { { _1_main_next = 10 ; } } else { { _1_main_next = 5 ; } } break ; case 10 : temp = ( int ) ( quotient % 16L ) ; { _1_main_next = 9 ; } break ; case 9 : ; if ( temp < 10 ) { { _1_main_next = 8 ; } } else { { _1_main_next = 7 ; } } break ; case 8 : temp += 48 ; { _1_main_next = 6 ; } break ; case 7 : temp += 55 ; { _1_main_next = 6 ; } break ; case 6 : tmp = i ; i ++ ; hexadecimalNumber [ tmp ] = ( char ) temp ; quotient /= 16L ; { _1_main_next = 12 ; } break ; case 5 : printf ( " \n " , decimalNumber ) ; j = i - 1 ; { _1_main_next = 3 ; } break ; case 3 : ; if ( j > 0 ) { { _1_main_next = 1 ; } } else { { _1_main_next = 0 ; } } break ; case 1 : printf ( " " , ( int ) hexadecimalNumber [ j ] ) ; j -- ; { _1_main_next = 3 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD findMedianSortedArrays
METHOD_RETURN double
PARAM int *nums1
PARAM int nums1Size
PARAM int *nums2
PARAM int nums2Size
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_findMedianSortedArrays_next = 25
LITERAL 1 while (1)
IDENTIFIER _1_findMedianSortedArrays_next switch(_1_findMedianSortedArrays_next)
LITERAL 25 <empty>
<operator>.assignment index1 = 0
<operator>.assignment index2 = 0
<operator>.assignment __lengthofv = (unsigned long )(nums1Size + nums2Size)
<operator>.assignment tmp = __builtin_alloca(sizeof(*v) * __lengthofv)
<operator>.assignment v = (int *)tmp
<operator>.assignment v_index = 0
BLOCK <empty> <empty>
LITERAL 23 <empty>
LITERAL 22 <empty>
LITERAL 19 <empty>
LITERAL 18 <empty>
<operator>.assignment tmp___0 = v_index
<operator>.postIncrement v_index ++
<operator>.assignment tmp___1 = index1
<operator>.postIncrement index1 ++
<operator>.assignment *(v + tmp___0) = *(nums1 + tmp___1)
BLOCK <empty> <empty>
LITERAL 17 <empty>
<operator>.assignment tmp___2 = v_index
<operator>.postIncrement v_index ++
<operator>.assignment tmp___3 = index2
<operator>.postIncrement index2 ++
<operator>.assignment *(v + tmp___2) = *(nums2 + tmp___3)
BLOCK <empty> <empty>
LITERAL 16 <empty>
LITERAL 14 <empty>
LITERAL 12 <empty>
<operator>.assignment tmp___4 = v_index
<operator>.postIncrement v_index ++
<operator>.assignment tmp___5 = index1
<operator>.postIncrement index1 ++
<operator>.assignment *(v + tmp___4) = *(nums1 + tmp___5)
BLOCK <empty> <empty>
LITERAL 11 <empty>
LITERAL 9 <empty>
LITERAL 7 <empty>
<operator>.assignment tmp___6 = v_index
<operator>.postIncrement v_index ++
<operator>.assignment tmp___7 = index2
<operator>.postIncrement index2 ++
<operator>.assignment *(v + tmp___6) = *(nums2 + tmp___7)
BLOCK <empty> <empty>
LITERAL 6 <empty>
LITERAL 5 <empty>
RETURN return ((double )*(v + 0)); return ((double )*(v + 0));
LITERAL 4 <empty>
LITERAL 3 <empty>
<operator>.assignment n1 = (double )*(v + v_index / 2)
<operator>.assignment n2 = (double )*(v + (v_index / 2 - 1))
BLOCK <empty> <empty>
LITERAL 2 <empty>
RETURN return ((n1 + n2) / (double )2); return ((n1 + n2) / (double )2);
LITERAL 1 <empty>
<operator>.assignment new_index = v_index / 2
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return ((double )*(v + new_index)); return ((double )*(v + new_index));
<operator>.assignment _1_findMedianSortedArrays_next = 23
<operator>.lessThan index1 < nums1Size
<operator>.lessThan index2 < nums2Size
<operator>.lessEqualsThan *(nums1 + index1) <= *(nums2 + index2)
<operator>.assignment _1_findMedianSortedArrays_next = 23
<operator>.assignment _1_findMedianSortedArrays_next = 23
<operator>.lessThan index1 < nums1Size
<operator>.lessThan index1 < nums1Size
<operator>.assignment _1_findMedianSortedArrays_next = 14
<operator>.lessThan index2 < nums2Size
<operator>.lessThan index2 < nums2Size
<operator>.assignment _1_findMedianSortedArrays_next = 9
<operator>.equals v_index == 1
<operator>.cast (double )*(v + 0)
<operator>.equals v_index % 2 == 0
<operator>.assignment _1_findMedianSortedArrays_next = 2
<operator>.division (n1 + n2) / (double )2
<operator>.assignment _1_findMedianSortedArrays_next = 0
<operator>.cast (double )*(v + new_index)
<operator>.cast (unsigned long )(nums1Size + nums2Size)
__builtin_alloca __builtin_alloca(sizeof(*v) * __lengthofv)
<operator>.cast (int *)tmp
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.cast (double )*(v + v_index / 2)
<operator>.cast (double )*(v + (v_index / 2 - 1))
<operator>.division v_index / 2
<operator>.addition nums1Size + nums2Size
<operator>.multiplication sizeof(*v) * __lengthofv
<operator>.assignment _1_findMedianSortedArrays_next = 22
BLOCK <empty> <empty>
<operator>.assignment _1_findMedianSortedArrays_next = 19
BLOCK <empty> <empty>
<operator>.assignment _1_findMedianSortedArrays_next = 18
BLOCK <empty> <empty>
<operator>.addition v + tmp___0
<operator>.addition nums1 + tmp___1
<operator>.addition v + tmp___2
<operator>.addition nums2 + tmp___3
<operator>.assignment _1_findMedianSortedArrays_next = 14
BLOCK <empty> <empty>
<operator>.assignment _1_findMedianSortedArrays_next = 12
BLOCK <empty> <empty>
<operator>.addition v + tmp___4
<operator>.addition nums1 + tmp___5
<operator>.assignment _1_findMedianSortedArrays_next = 9
BLOCK <empty> <empty>
<operator>.assignment _1_findMedianSortedArrays_next = 7
BLOCK <empty> <empty>
<operator>.addition v + tmp___6
<operator>.addition nums2 + tmp___7
<operator>.assignment _1_findMedianSortedArrays_next = 5
BLOCK <empty> <empty>
<operator>.modulo v_index % 2
<operator>.assignment _1_findMedianSortedArrays_next = 3
BLOCK <empty> <empty>
<operator>.addition n1 + n2
<operator>.cast (double )2
<operator>.sizeOf sizeof(*v)
<operator>.assignment _1_findMedianSortedArrays_next = 16
<operator>.assignment _1_findMedianSortedArrays_next = 16
<operator>.addition nums1 + index1
<operator>.addition nums2 + index2
<operator>.assignment _1_findMedianSortedArrays_next = 17
<operator>.assignment _1_findMedianSortedArrays_next = 11
<operator>.assignment _1_findMedianSortedArrays_next = 11
<operator>.assignment _1_findMedianSortedArrays_next = 6
<operator>.assignment _1_findMedianSortedArrays_next = 6
<operator>.assignment _1_findMedianSortedArrays_next = 4
<operator>.addition v + 0
<operator>.assignment _1_findMedianSortedArrays_next = 1
<operator>.addition v + v_index / 2
<operator>.addition v + (v_index / 2 - 1)
<operator>.addition v + new_index
<operator>.division v_index / 2
<operator>.subtraction v_index / 2 - 1
<operator>.division v_index / 2
>>>PDG&154 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->28 0->29 0->30 0->31 0->32 0->33 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->53 0->54 0->55 0->57 0->58 0->61 0->62 0->64 0->66 0->67 0->68 0->70 0->71 0->72 0->74 0->75 0->76 0->77 0->78 0->79 0->80 0->81 0->82 0->84 0->85 0->86 0->87 0->89 0->91 0->92 0->93 0->94 0->95 0->96 0->97 0->98 0->99 0->100 0->103 0->104 0->105 0->106 0->107 0->108 0->109 0->110 0->111 0->112 0->113 0->114 0->115 0->116 0->117 0->118 0->119 0->120 0->121 0->122 0->123 0->124 0->125 0->126 0->127 0->128 0->129 0->130 0->131 0->132 0->133 0->134 0->136 0->137 0->138 0->139 0->140 0->141 0->142 0->143 0->144 0->145 0->146 0->147 0->148 0->149 0->150 0->151 0->152 0->153 2->1 2->113 2->121 2->138 3->1 3->14 3->71 3->76 3->77 3->89 3->104 4->1 4->115 4->127 4->139 5->1 5->14 5->72 5->79 5->80 5->89 5->104 8->1 8->1 12->1 12->1 12->25 12->26 12->41 12->42 12->71 12->76 12->77 12->138 13->1 13->1 13->32 13->33 13->50 13->51 13->72 13->79 13->80 13->139 14->1 14->1 14->105 15->1 15->1 15->16 15->91 16->1 16->1 16->112 16->114 16->120 16->126 16->146 16->148 16->149 16->150 17->1 17->1 17->23 17->24 17->30 17->31 17->39 17->40 17->48 17->49 17->82 17->103 17->130 17->151 23->1 23->112 24->1 24->1 24->23 24->30 24->31 24->39 24->40 24->48 24->49 24->82 24->103 24->130 24->151 25->1 25->113 26->1 26->1 26->25 26->41 26->42 26->71 26->76 26->77 26->138 27->1 27->1 27->1 30->1 30->114 31->1 31->1 31->23 31->24 31->30 31->39 31->40 31->48 31->49 31->82 31->103 31->130 31->151 32->1 32->115 33->1 33->1 33->32 33->50 33->51 33->72 33->79 33->80 33->139 34->1 34->1 34->1 39->1 39->120 40->1 40->1 40->23 40->24 40->30 40->31 40->39 40->48 40->49 40->82 40->103 40->130 40->151 41->1 41->121 42->1 42->1 42->25 42->26 42->41 42->71 42->76 42->77 42->138 43->1 43->1 43->1 48->1 48->126 49->1 49->1 49->23 49->24 49->30 49->31 49->39 49->40 49->48 49->82 49->103 49->130 49->151 50->1 50->127 51->1 51->1 51->32 51->33 51->50 51->72 51->79 51->80 51->139 52->1 52->1 52->1 56->1 59->1 59->1 59->1 59->86 59->133 60->1 60->1 60->1 60->86 60->133 63->1 65->1 65->1 65->1 65->150 66->1 66->1 69->1 70->1 70->1 71->1 71->1 71->1 71->14 71->25 71->26 71->41 71->42 71->76 71->76 71->77 71->77 71->89 71->104 71->106 71->136 71->138 72->1 72->1 72->1 72->14 72->32 72->33 72->50 72->51 72->79 72->79 72->80 72->80 72->89 72->104 72->108 72->137 72->139 73->1 73->1 73->1 73->110 73->140 74->1 74->1 75->1 75->1 76->1 76->1 76->1 76->14 76->25 76->26 76->41 76->42 76->71 76->71 76->77 76->77 76->89 76->104 76->116 76->138 76->141 77->1 77->1 77->1 77->14 77->25 77->26 77->41 77->42 77->71 77->71 77->76 77->76 77->89 77->104 77->118 77->138 77->142 78->1 78->1 79->1 79->1 79->1 79->14 79->32 79->33 79->50 79->51 79->72 79->72 79->80 79->80 79->89 79->104 79->122 79->139 79->143 80->1 80->1 80->1 80->14 80->32 80->33 80->50 80->51 80->72 80->72 80->79 80->79 80->89 80->104 80->124 80->139 80->144 81->1 81->1 82->1 82->1 82->23 82->24 82->30 82->31 82->39 82->40 82->48 82->49 82->103 82->128 82->130 82->145 82->151 83->1 83->1 83->56 84->1 84->1 84->131 84->147 85->1 85->1 86->63 87->1 87->1 88->69 89->1 90->1 90->15 91->1 101->1 102->1 103->1 103->23 103->24 103->30 103->31 103->39 103->40 103->48 103->49 103->65 103->65 103->82 103->130 103->151 104->1 104->1 105->1 105->90 106->1 106->1 108->1 108->1 110->1 110->1 112->1 113->1 113->1 114->1 115->1 115->1 116->1 116->1 118->1 118->1 120->1 121->1 121->1 122->1 122->1 124->1 124->1 126->1 127->1 127->1 128->1 128->1 130->1 130->23 130->24 130->30 130->31 130->39 130->40 130->48 130->49 130->82 130->84 130->84 130->103 130->151 131->1 131->1 135->1 136->1 136->1 137->1 137->1 138->1 138->1 139->1 139->1 140->1 140->1 141->1 141->1 142->1 142->1 143->1 143->1 144->1 144->1 145->1 145->1 146->1 147->1 147->1 149->1 151->148 151->148 151->153 152->1 152->149 152->149 153->1 153->23 153->24 153->30 153->31 153->39 153->40 153->48 153->49 153->82 153->103 153->130 153->151 153->152 153->152
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; double findMedianSortedArrays ( int * nums1 , int nums1Size , int * nums2 , int nums2Size ) ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; double findMedianSortedArrays ( int * nums1 , int nums1Size , int * nums2 , int nums2Size ) { int index1 ; int index2 ; int * v ; unsigned long __lengthofv ; void * tmp ; int v_index ; int tmp___0 ; int tmp___1 ; int tmp___2 ; int tmp___3 ; int tmp___4 ; int tmp___5 ; int tmp___6 ; int tmp___7 ; double n1 ; double n2 ; int new_index ; int i ; unsigned long _1_findMedianSortedArrays_next ; { { _1_findMedianSortedArrays_next = 25 ; } while ( 1 ) { switch ( _1_findMedianSortedArrays_next ) { case 25 : index1 = 0 ; index2 = 0 ; __lengthofv = ( unsigned long ) ( nums1Size + nums2Size ) ; tmp = __builtin_alloca ( sizeof ( * v ) * __lengthofv ) ; v = ( int * ) tmp ; v_index = 0 ; { _1_findMedianSortedArrays_next = 23 ; } break ; case 23 : ; if ( index1 < nums1Size ) { { _1_findMedianSortedArrays_next = 22 ; } } else { { _1_findMedianSortedArrays_next = 16 ; } } break ; case 22 : ; if ( index2 < nums2Size ) { { _1_findMedianSortedArrays_next = 19 ; } } else { { _1_findMedianSortedArrays_next = 16 ; } } break ; case 19 : ; if ( * ( nums1 + index1 ) <= * ( nums2 + index2 ) ) { { _1_findMedianSortedArrays_next = 18 ; } } else { { _1_findMedianSortedArrays_next = 17 ; } } break ; case 18 : tmp___0 = v_index ; v_index ++ ; tmp___1 = index1 ; index1 ++ ; * ( v + tmp___0 ) = * ( nums1 + tmp___1 ) ; { _1_findMedianSortedArrays_next = 23 ; } break ; case 17 : tmp___2 = v_index ; v_index ++ ; tmp___3 = index2 ; index2 ++ ; * ( v + tmp___2 ) = * ( nums2 + tmp___3 ) ; { _1_findMedianSortedArrays_next = 23 ; } break ; case 16 : ; if ( index1 < nums1Size ) { { _1_findMedianSortedArrays_next = 14 ; } } else { { _1_findMedianSortedArrays_next = 11 ; } } break ; case 14 : ; if ( index1 < nums1Size ) { { _1_findMedianSortedArrays_next = 12 ; } } else { { _1_findMedianSortedArrays_next = 11 ; } } break ; case 12 : tmp___4 = v_index ; v_index ++ ; tmp___5 = index1 ; index1 ++ ; * ( v + tmp___4 ) = * ( nums1 + tmp___5 ) ; { _1_findMedianSortedArrays_next = 14 ; } break ; case 11 : ; if ( index2 < nums2Size ) { { _1_findMedianSortedArrays_next = 9 ; } } else { { _1_findMedianSortedArrays_next = 6 ; } } break ; case 9 : ; if ( index2 < nums2Size ) { { _1_findMedianSortedArrays_next = 7 ; } } else { { _1_findMedianSortedArrays_next = 6 ; } } break ; case 7 : tmp___6 = v_index ; v_index ++ ; tmp___7 = index2 ; index2 ++ ; * ( v + tmp___6 ) = * ( nums2 + tmp___7 ) ; { _1_findMedianSortedArrays_next = 9 ; } break ; case 6 : ; if ( v_index == 1 ) { { _1_findMedianSortedArrays_next = 5 ; } } else { { _1_findMedianSortedArrays_next = 4 ; } } break ; case 5 : ; return ( ( double ) * ( v + 0 ) ) ; break ; case 4 : ; if ( v_index % 2 == 0 ) { { _1_findMedianSortedArrays_next = 3 ; } } else { { _1_findMedianSortedArrays_next = 1 ; } } break ; case 3 : n1 = ( double ) * ( v + v_index / 2 ) ; n2 = ( double ) * ( v + ( v_index / 2 - 1 ) ) ; { _1_findMedianSortedArrays_next = 2 ; } break ; case 2 : ; return ( ( n1 + n2 ) / ( double ) 2 ) ; break ; case 1 : new_index = v_index / 2 ; i = 0 ; { _1_findMedianSortedArrays_next = 0 ; } break ; case 0 : ; return ( ( double ) * ( v + new_index ) ) ; break ; } } } } void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } }
>>>Func
METHOD compare
METHOD_RETURN int
PARAM void const   *a
PARAM void const   *b
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_compare_next = 0
LITERAL 1 while (1)
IDENTIFIER _1_compare_next switch(_1_compare_next)
LITERAL 0 <empty>
RETURN return (*((int *)b) - *((int *)a)); return (*((int *)b) - *((int *)a));
<operator>.subtraction *((int *)b) - *((int *)a)
<operator>.cast (int *)b
<operator>.cast (int *)a
>>>PDG&14 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->12 0->13 2->13 3->12 6->1 6->1 10->1 11->1 11->1 11->1 11->10 12->1 13->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; int compare ( void const * a , void const * b ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int compare ( void const * a , void const * b ) { unsigned long _1_compare_next ; { { _1_compare_next = 0 ; } while ( 1 ) { switch ( _1_compare_next ) { case 0 : ; return ( * ( ( int * ) b ) - * ( ( int * ) a ) ) ; break ; } } } } void megaInit ( void ) { { } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 6
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 6 <empty>
printf printf("Enter the number of vertices\n")
scanf scanf("%d", & vertices)
<operator>.assignment tmp = createGraph(vertices)
<operator>.assignment graph = (struct Graph *)tmp
printf printf("Enter the number of edges\n")
scanf scanf("%d", & edges)
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
printf printf("Edge %d \nEnter source: ", i + 1)
scanf scanf("%d", & src)
printf printf("Enter destination: ")
scanf scanf("%d", & dst)
addEdge addEdge(graph, src, dst)
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("Enter source of DFS\n")
scanf scanf("%d", & source)
printf printf("DFS from %d is:\n", source)
dfs dfs(graph, source)
printf printf("\n")
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 4
<operator>.lessThan i < edges
<operator>.assignment _1_main_next = 4
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
createGraph createGraph(vertices)
<operator>.cast (struct Graph *)tmp
BLOCK <empty> <empty>
<operator>.addition i + 1
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
>>>PDG&54 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 17->1 17->47 18->1 18->1 18->19 18->48 19->1 19->1 19->1 19->30 19->37 20->1 21->1 21->43 22->1 22->1 22->26 22->31 22->43 22->50 26->1 26->1 27->1 27->30 28->1 29->1 29->30 30->1 30->1 30->1 30->1 30->27 30->29 30->37 31->1 31->1 31->26 31->43 31->50 34->1 35->1 35->36 35->37 36->1 36->37 37->1 37->1 37->1 37->30 37->35 37->36 38->1 41->1 42->1 42->1 43->1 43->1 43->1 43->21 43->26 43->31 43->50 43->51 43->53 44->1 44->1 45->1 45->1 46->41 47->1 47->17 47->18 48->1 51->1 51->1 53->1 53->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct Graph ; struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int ( /* missing proto */ addEdge ) ( ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern int ( /* missing proto */ dfs ) ( ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int ( /* missing proto */ scanf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int ( /* missing proto */ createGraph ) ( ) ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { int vertices ; int edges ; int source ; int i ; int src ; int dst ; struct Graph * graph ; int tmp ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 6 ; } while ( 1 ) { switch ( _1_main_next ) { case 6 : printf ( " \n " ) ; scanf ( " " , & vertices ) ; tmp = createGraph ( vertices ) ; graph = ( struct Graph * ) tmp ; printf ( " \n " ) ; scanf ( " " , & edges ) ; i = 0 ; { _1_main_next = 4 ; } break ; case 4 : ; if ( i < edges ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : printf ( " \n " , i + 1 ) ; scanf ( " " , & src ) ; printf ( " " ) ; scanf ( " " , & dst ) ; addEdge ( graph , src , dst ) ; i ++ ; { _1_main_next = 4 ; } break ; case 1 : printf ( " \n " ) ; scanf ( " " , & source ) ; printf ( " \n " , source ) ; dfs ( graph , source ) ; printf ( " \n " ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD cmpval
METHOD_RETURN int*
PARAM void const   *a
PARAM void const   *b
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_cmpval_next = 0
LITERAL 1 while (1)
IDENTIFIER _1_cmpval_next switch(_1_cmpval_next)
LITERAL 0 <empty>
RETURN return ((int *)(*((int *)b) - *((int *)a))); return ((int *)(*((int *)b) - *((int *)a)));
<operator>.cast (int *)(*((int *)b) - *((int *)a))
<operator>.subtraction *((int *)b) - *((int *)a)
<operator>.cast (int *)b
<operator>.cast (int *)a
>>>PDG&15 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->13 0->14 2->14 3->13 6->1 6->1 10->1 11->1 11->1 11->10 12->1 12->1 12->11 12->11 13->1 14->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; int * cmpval ( void const * a , void const * b ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int * cmpval ( void const * a , void const * b ) { unsigned long _1_cmpval_next ; { { _1_cmpval_next = 0 ; } while ( 1 ) { switch ( _1_cmpval_next ) { case 0 : ; return ( ( int * ) ( * ( ( int * ) b ) - * ( ( int * ) a ) ) ) ; break ; } } } } void megaInit ( void ) { { } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 9
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 9 <empty>
<operator>.assignment sum = 0
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 7 <empty>
LITERAL 5 <empty>
LITERAL 4 <empty>
<operator>.assignmentPlus sum += i
BLOCK <empty> <empty>
LITERAL 3 <empty>
<operator>.assignmentMultiplication sum *= i
BLOCK <empty> <empty>
LITERAL 2 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("Sum is: %d\n", sum)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 7
<operator>.lessThan i < (int )*(*(argv + 1) + 0)
<operator>.greaterThan (int )*(*(argv + 1) + 0) > 127
<operator>.assignment _1_main_next = 2
<operator>.assignment _1_main_next = 2
<operator>.assignment _1_main_next = 7
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.cast (int )*(*(argv + 1) + 0)
<operator>.assignment _1_main_next = 5
BLOCK <empty> <empty>
<operator>.cast (int )*(*(argv + 1) + 0)
<operator>.assignment _1_main_next = 4
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
<operator>.assignment _1_main_next = 3
<operator>.addition *(argv + 1) + 0
<operator>.addition *(argv + 1) + 0
<operator>.addition argv + 1
<operator>.addition argv + 1
>>>PDG&57 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->46 0->47 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 2->7 3->8 3->55 3->56 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->22 16->25 16->31 17->1 17->1 17->22 17->25 17->28 17->36 22->1 22->1 22->1 22->25 22->31 25->1 25->1 25->1 25->22 25->31 28->1 28->1 28->22 28->25 28->36 31->1 31->1 31->22 31->25 34->1 35->1 35->1 36->1 36->1 36->1 36->22 36->25 36->28 36->46 36->51 37->1 37->1 37->49 37->52 38->1 38->1 39->1 39->1 40->1 40->1 41->1 41->1 42->34 45->1 46->1 46->1 48->1 49->1 49->1 51->1 51->1 52->1 52->1 53->1 54->1 55->1 56->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int argc , char * * argv , char * * _formal_envp ) { int i ; int sum ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 9 ; } while ( 1 ) { switch ( _1_main_next ) { case 9 : sum = 0 ; i = 0 ; { _1_main_next = 7 ; } break ; case 7 : ; if ( i < ( int ) * ( * ( argv + 1 ) + 0 ) ) { { _1_main_next = 5 ; } } else { { _1_main_next = 1 ; } } break ; case 5 : ; if ( ( int ) * ( * ( argv + 1 ) + 0 ) > 127 ) { { _1_main_next = 4 ; } } else { { _1_main_next = 3 ; } } break ; case 4 : sum += i ; { _1_main_next = 2 ; } break ; case 3 : sum *= i ; { _1_main_next = 2 ; } break ; case 2 : i ++ ; { _1_main_next = 7 ; } break ; case 1 : printf ( " \n " , sum ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD retrive_copy_of_value
METHOD_RETURN void*
PARAM void const   *value
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_retrive_copy_of_value_next = 1
LITERAL 1 while (1)
IDENTIFIER _1_retrive_copy_of_value_next switch(_1_retrive_copy_of_value_next)
LITERAL 1 <empty>
<operator>.assignment tmp = malloc(sizeof(void *))
<operator>.assignment value_copy = (void *)tmp
memcpy memcpy(value_copy  value  sizeof(void *))
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (value_copy); return (value_copy);
<operator>.assignment _1_retrive_copy_of_value_next = 0
IDENTIFIER value_copy return (value_copy);
<operator>.cast (void *)tmp
<operator>.sizeOf sizeof(void *)
>>>PDG&19 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->10 0->11 0->12 0->13 0->15 0->16 0->17 2->1 2->11 5->1 5->1 9->1 9->1 9->10 9->17 10->1 10->1 10->11 11->1 11->1 11->1 11->16 14->1 15->1 15->1 16->14 17->1 18->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern int ( /* missing proto */ malloc ) ( ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; void * retrive_copy_of_value ( void const * value ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern int ( /* missing proto */ memcpy ) ( ) ; void * retrive_copy_of_value ( void const * value ) { void * value_copy ; int tmp ; unsigned long _1_retrive_copy_of_value_next ; { { _1_retrive_copy_of_value_next = 1 ; } while ( 1 ) { switch ( _1_retrive_copy_of_value_next ) { case 1 : tmp = malloc ( sizeof ( void * ) ) ; value_copy = ( void * ) tmp ; memcpy ( value_copy , value , sizeof ( void * ) ) ; { _1_retrive_copy_of_value_next = 0 ; } break ; case 0 : ; return ( value_copy ) ; break ; } } } } void megaInit ( void ) { { } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 11
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 11 <empty>
printf printf("Enter 6 numbers unsorted \n\n")
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 9 <empty>
LITERAL 7 <empty>
scanf scanf("%d", & numbers[i])
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 6 <empty>
sort sort(numbers, 6)
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
printf printf("%d ", numbers[i])
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("\n")
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 9
<operator>.lessThan i < 6
<operator>.assignment _1_main_next = 9
<operator>.assignment _1_main_next = 4
<operator>.lessThan i < 6
<operator>.assignment _1_main_next = 4
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 7
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 6
<operator>.assignment _1_main_next = 1
>>>PDG&54 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 17->1 17->1 17->22 17->31 17->39 17->42 21->1 21->25 21->30 22->1 22->1 22->31 22->39 22->42 25->1 25->1 25->21 25->30 26->1 26->1 26->22 26->31 26->39 26->42 30->1 30->1 30->21 30->25 31->1 31->1 31->22 31->39 31->42 34->1 37->1 38->1 38->1 39->1 39->1 39->22 39->31 39->42 39->48 39->52 40->1 40->1 41->1 41->1 42->1 42->1 42->22 42->31 42->39 42->50 42->53 43->1 43->1 44->1 44->1 45->37 48->1 48->1 50->1 50->1 52->1 52->1 53->1 53->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int ( /* missing proto */ sort ) ( ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern int getpagesize ( ) ; extern double ceil ( double x ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int ( /* missing proto */ scanf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { int numbers [ 6 ] ; int i ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 11 ; } while ( 1 ) { switch ( _1_main_next ) { case 11 : printf ( " \n \n " ) ; i = 0 ; { _1_main_next = 9 ; } break ; case 9 : ; if ( i < 6 ) { { _1_main_next = 7 ; } } else { { _1_main_next = 6 ; } } break ; case 7 : scanf ( " " , & numbers [ i ] ) ; i ++ ; { _1_main_next = 9 ; } break ; case 6 : sort ( numbers , 6 ) ; i = 0 ; { _1_main_next = 4 ; } break ; case 4 : ; if ( i < 6 ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : printf ( " " , numbers [ i ] ) ; i ++ ; { _1_main_next = 4 ; } break ; case 1 : printf ( " \n " ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 1 <empty>
test test()
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
>>>PDG&22 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 19->1 20->1 20->1 21->19
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int ( /* missing proto */ test ) ( ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern double log ( double x ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 1 ; } while ( 1 ) { switch ( _1_main_next ) { case 1 : test ( ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD SDBMHash
METHOD_RETURN unsigned int
PARAM char *str
PARAM unsigned int len
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_SDBMHash_next = 5
LITERAL 1 while (1)
IDENTIFIER _1_SDBMHash_next switch(_1_SDBMHash_next)
LITERAL 5 <empty>
<operator>.assignment hash = 0U
<operator>.assignment i = 0U
<operator>.assignment i = 0U
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 1 <empty>
<operator>.assignment hash = (((unsigned int )*str + (hash << 6)) + (hash << 16)) - hash
<operator>.postIncrement str ++
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (hash); return (hash);
<operator>.assignment _1_SDBMHash_next = 3
<operator>.lessThan i < len
<operator>.assignment _1_SDBMHash_next = 3
IDENTIFIER hash return (hash);
BLOCK <empty> <empty>
<operator>.subtraction (((unsigned int )*str + (hash << 6)) + (hash << 16)) - hash
<operator>.assignment _1_SDBMHash_next = 1
BLOCK <empty> <empty>
<operator>.addition ((unsigned int )*str + (hash << 6)) + (hash << 16)
<operator>.assignment _1_SDBMHash_next = 0
<operator>.addition (unsigned int )*str + (hash << 6)
<operator>.shiftLeft hash << 16
<operator>.cast (unsigned int )*str
<operator>.shiftLeft hash << 6
>>>PDG&36 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->17 0->18 0->19 0->20 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->31 0->33 0->35 2->1 2->17 3->1 3->23 6->1 6->1 10->1 10->1 10->25 10->35 12->1 12->1 12->18 12->23 16->1 16->1 16->1 16->25 16->35 17->1 17->1 18->1 18->1 18->23 21->1 22->1 22->1 23->1 23->1 23->1 23->18 23->28 23->31 24->1 24->1 25->21 27->1 27->16 27->16 28->1 28->1 30->1 30->1 31->1 31->1 32->1 32->1 33->27 33->27 33->30 33->30 34->1 35->27 35->27 35->30 35->30 35->32 35->32 35->33
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; unsigned int SDBMHash ( char * str , unsigned int len ) ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } unsigned int SDBMHash ( char * str , unsigned int len ) { unsigned int hash ; unsigned int i ; unsigned long _1_SDBMHash_next ; { { _1_SDBMHash_next = 5 ; } while ( 1 ) { switch ( _1_SDBMHash_next ) { case 5 : hash = 0U ; i = 0U ; i = 0U ; { _1_SDBMHash_next = 3 ; } break ; case 3 : ; if ( i < len ) { { _1_SDBMHash_next = 1 ; } } else { { _1_SDBMHash_next = 0 ; } } break ; case 1 : hash = ( ( ( unsigned int ) * str + ( hash << 6 ) ) + ( hash << 16 ) ) - hash ; str ++ ; i ++ ; { _1_SDBMHash_next = 3 ; } break ; case 0 : ; return ( hash ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD maxProfit
METHOD_RETURN int
PARAM int *prices
PARAM int pricesSize
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_maxProfit_next = 5
LITERAL 1 while (1)
IDENTIFIER _1_maxProfit_next switch(_1_maxProfit_next)
LITERAL 5 <empty>
<operator>.assignment maxCur = 0
<operator>.assignment maxSoFar = 0
<operator>.assignment i = 1
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 1 <empty>
<operator>.assignment maxCur = maxcmp(0  (maxCur + *(prices + i)) - *(prices + (i - 1)))
<operator>.assignment maxSoFar = maxcmp(maxSoFar, maxCur)
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (maxSoFar); return (maxSoFar);
<operator>.assignment _1_maxProfit_next = 3
<operator>.lessThan i < pricesSize
<operator>.assignment _1_maxProfit_next = 3
IDENTIFIER maxSoFar return (maxSoFar);
BLOCK <empty> <empty>
maxcmp maxcmp(0  (maxCur + *(prices + i)) - *(prices + (i - 1)))
maxcmp maxcmp(maxSoFar, maxCur)
<operator>.assignment _1_maxProfit_next = 1
BLOCK <empty> <empty>
<operator>.subtraction (maxCur + *(prices + i)) - *(prices + (i - 1))
<operator>.assignment _1_maxProfit_next = 0
<operator>.addition maxCur + *(prices + i)
<operator>.addition prices + (i - 1)
<operator>.addition prices + i
<operator>.subtraction i - 1
>>>PDG&37 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->18 0->19 0->20 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 2->1 2->34 2->35 3->1 3->23 6->1 6->1 10->1 10->1 10->31 10->33 11->1 11->1 11->25 11->28 12->1 12->1 12->23 12->35 12->36 16->1 16->1 16->28 17->1 17->1 17->1 17->25 17->28 18->1 18->1 18->23 18->35 18->36 21->1 22->1 22->1 23->1 23->1 23->1 23->29 23->32 23->35 23->36 24->1 24->1 25->21 27->1 27->16 27->16 28->1 28->17 28->17 28->31 28->33 29->1 29->1 31->1 31->1 31->27 31->27 32->1 32->1 33->1 34->1 34->1 36->18 36->34 36->34
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern int ( /* missing proto */ maxcmp ) ( ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; int maxProfit ( int * prices , int pricesSize ) ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int maxProfit ( int * prices , int pricesSize ) { int maxCur ; int maxSoFar ; int i ; unsigned long _1_maxProfit_next ; { { _1_maxProfit_next = 5 ; } while ( 1 ) { switch ( _1_maxProfit_next ) { case 5 : maxCur = 0 ; maxSoFar = 0 ; i = 1 ; { _1_maxProfit_next = 3 ; } break ; case 3 : ; if ( i < pricesSize ) { { _1_maxProfit_next = 1 ; } } else { { _1_maxProfit_next = 0 ; } } break ; case 1 : maxCur = maxcmp ( 0 , ( maxCur + * ( prices + i ) ) - * ( prices + ( i - 1 ) ) ) ; maxSoFar = maxcmp ( maxSoFar , maxCur ) ; i ++ ; { _1_maxProfit_next = 3 ; } break ; case 0 : ; return ( maxSoFar ) ; break ; } } } } void megaInit ( void ) { { } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD fill_overlap
METHOD_RETURN void
PARAM char *needle
PARAM int len_needle
PARAM int *overlap
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_fill_overlap_next = 9
LITERAL 1 while (1)
IDENTIFIER _1_fill_overlap_next switch(_1_fill_overlap_next)
LITERAL 9 <empty>
<operator>.assignment len = 0
<operator>.assignment i = 0
<operator>.assignment *(overlap + 0) = 0
<operator>.assignment i = 1
BLOCK <empty> <empty>
LITERAL 7 <empty>
LITERAL 5 <empty>
LITERAL 4 <empty>
<operator>.postIncrement len ++
<operator>.assignment tmp = i
<operator>.postIncrement i ++
<operator>.assignment *(overlap + tmp) = len
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 2 <empty>
<operator>.assignment len = *(overlap + (len - 1))
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operator>.assignment tmp___0 = i
<operator>.postIncrement i ++
<operator>.assignment *(overlap + tmp___0) = 0
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return; return;
<operator>.assignment _1_fill_overlap_next = 7
<operator>.lessThan i < len_needle
<operator>.equals (int )*(needle + i) == (int )*(needle + len)
<operator>.assignment _1_fill_overlap_next = 7
IDENTIFIER len if (len)
<operator>.assignment _1_fill_overlap_next = 7
<operator>.assignment _1_fill_overlap_next = 7
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.addition overlap + 0
<operator>.assignment _1_fill_overlap_next = 5
BLOCK <empty> <empty>
<operator>.cast (int )*(needle + i)
<operator>.cast (int )*(needle + len)
<operator>.assignment _1_fill_overlap_next = 4
BLOCK <empty> <empty>
<operator>.addition overlap + tmp
<operator>.assignment _1_fill_overlap_next = 2
BLOCK <empty> <empty>
<operator>.addition overlap + (len - 1)
<operator>.addition overlap + tmp___0
<operator>.assignment _1_fill_overlap_next = 0
<operator>.assignment _1_fill_overlap_next = 3
<operator>.assignment _1_fill_overlap_next = 1
<operator>.subtraction len - 1
<operator>.addition needle + i
<operator>.addition needle + len
>>>PDG&63 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 0->59 0->60 0->61 0->62 2->1 2->61 3->1 3->36 4->1 4->45 4->52 4->55 4->56 7->1 7->1 11->1 11->1 11->19 11->60 11->62 12->1 13->1 13->1 14->1 14->1 14->20 14->21 14->29 14->30 14->36 14->61 19->1 19->22 19->60 19->62 20->1 20->52 21->1 21->1 21->20 21->29 21->30 21->36 21->61 22->1 22->1 22->1 26->1 26->1 26->1 26->19 26->60 26->62 29->1 29->56 30->1 30->1 30->20 30->21 30->29 30->36 30->61 31->1 31->1 34->1 35->1 35->1 36->1 36->1 36->1 36->20 36->21 36->29 36->30 36->46 36->57 36->61 37->1 37->1 37->1 37->50 37->58 38->1 38->1 40->1 40->1 41->1 41->1 45->1 46->1 46->1 48->1 49->1 50->1 50->1 52->1 52->1 53->1 53->1 55->1 55->1 56->1 56->1 57->1 57->1 58->1 58->1 59->1 59->1 60->55 60->55 61->1 62->1 62->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; void fill_overlap ( char * needle , int len_needle , int * overlap ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } void fill_overlap ( char * needle , int len_needle , int * overlap ) { int len ; int i ; int tmp ; int tmp___0 ; unsigned long _1_fill_overlap_next ; { { _1_fill_overlap_next = 9 ; } while ( 1 ) { switch ( _1_fill_overlap_next ) { case 9 : len = 0 ; i = 0 ; * ( overlap + 0 ) = 0 ; i = 1 ; { _1_fill_overlap_next = 7 ; } break ; case 7 : ; if ( i < len_needle ) { { _1_fill_overlap_next = 5 ; } } else { { _1_fill_overlap_next = 0 ; } } break ; case 5 : ; if ( ( int ) * ( needle + i ) == ( int ) * ( needle + len ) ) { { _1_fill_overlap_next = 4 ; } } else { { _1_fill_overlap_next = 3 ; } } break ; case 4 : len ++ ; tmp = i ; i ++ ; * ( overlap + tmp ) = len ; { _1_fill_overlap_next = 7 ; } break ; case 3 : ; if ( len ) { { _1_fill_overlap_next = 2 ; } } else { { _1_fill_overlap_next = 1 ; } } break ; case 2 : len = * ( overlap + ( len - 1 ) ) ; { _1_fill_overlap_next = 7 ; } break ; case 1 : tmp___0 = i ; i ++ ; * ( overlap + tmp___0 ) = 0 ; { _1_fill_overlap_next = 7 ; } break ; case 0 : ; return ; break ; } } } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD string_nocase_equal
METHOD_RETURN int
PARAM void *string1
PARAM void *string2
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_string_nocase_equal_next = 1
LITERAL 1 while (1)
IDENTIFIER _1_string_nocase_equal_next switch(_1_string_nocase_equal_next)
LITERAL 1 <empty>
<operator>.assignment tmp = string_nocase_compare((char *)string1  (char *)string2)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (tmp == 0); return (tmp == 0);
<operator>.assignment _1_string_nocase_equal_next = 0
<operator>.equals tmp == 0
string_nocase_compare string_nocase_compare((char *)string1  (char *)string2)
<operator>.cast (char *)string1
<operator>.cast (char *)string2
>>>PDG&19 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->11 0->12 0->14 0->15 0->16 0->17 0->18 2->1 2->16 2->17 3->1 3->16 3->18 6->1 6->1 10->1 10->1 10->15 13->1 14->1 14->1 15->1 15->1 15->13 16->1 16->1 16->10 16->10 17->1 18->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern int ( /* missing proto */ string_nocase_compare ) ( ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; int string_nocase_equal ( void * string1 , void * string2 ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } void main ( void ) { { megaInit ( ) ; } } int string_nocase_equal ( void * string1 , void * string2 ) { int tmp ; unsigned long _1_string_nocase_equal_next ; { { _1_string_nocase_equal_next = 1 ; } while ( 1 ) { switch ( _1_string_nocase_equal_next ) { case 1 : tmp = string_nocase_compare ( ( char * ) string1 , ( char * ) string2 ) ; { _1_string_nocase_equal_next = 0 ; } break ; case 0 : ; return ( tmp == 0 ) ; break ; } } } }
>>>Func
METHOD lengthOfLongestSubstring
METHOD_RETURN int
PARAM char *s
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_lengthOfLongestSubstring_next = 17
LITERAL 1 while (1)
IDENTIFIER _1_lengthOfLongestSubstring_next switch(_1_lengthOfLongestSubstring_next)
LITERAL 17 <empty>
<operator>.assignment cur_max = 0
<operator>.assignment max = 0
<operator>.assignment end = 0
memset memset(counter  0  sizeof(int ) * 255UL)
BLOCK <empty> <empty>
LITERAL 15 <empty>
<operator>.assignment tmp = strlen(s)
BLOCK <empty> <empty>
LITERAL 14 <empty>
LITERAL 12 <empty>
LITERAL 11 <empty>
<operator>.postIncrement (counter[*(s + end)]) ++
<operator>.postIncrement end ++
<operator>.postIncrement cur_max ++
BLOCK <empty> <empty>
LITERAL 10 <empty>
<operator>.assignment c = *(s + end)
memset memset(counter  0  255UL * sizeof(int ))
BLOCK <empty> <empty>
LITERAL 9 <empty>
LITERAL 8 <empty>
<operator>.assignment max = cur_max
BLOCK <empty> <empty>
LITERAL 7 <empty>
<operator>.assignment cur_max = 0
BLOCK <empty> <empty>
LITERAL 5 <empty>
LITERAL 3 <empty>
<operator>.postDecrement end --
BLOCK <empty> <empty>
LITERAL 2 <empty>
LITERAL 1 <empty>
<operator>.assignment max = cur_max
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (max); return (max);
<operator>.assignment _1_lengthOfLongestSubstring_next = 15
<operator>.assignment _1_lengthOfLongestSubstring_next = 14
<operator>.lessThan end < tmp
<operator>.equals counter[*(s + end)] == 0
<operator>.assignment _1_lengthOfLongestSubstring_next = 15
<operator>.assignment _1_lengthOfLongestSubstring_next = 9
<operator>.greaterEqualsThan cur_max >= max
<operator>.assignment _1_lengthOfLongestSubstring_next = 7
<operator>.assignment _1_lengthOfLongestSubstring_next = 5
<operator>.notEquals (int )*(s + (end - 1)) != (int )c
<operator>.assignment _1_lengthOfLongestSubstring_next = 5
<operator>.greaterEqualsThan cur_max >= max
<operator>.assignment _1_lengthOfLongestSubstring_next = 0
IDENTIFIER max return (max);
<operator>.multiplication sizeof(int ) * 255UL
strlen strlen(s)
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.multiplication 255UL * sizeof(int )
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.sizeOf sizeof(int )
<operator>.assignment _1_lengthOfLongestSubstring_next = 12
BLOCK <empty> <empty>
<operator>.assignment _1_lengthOfLongestSubstring_next = 11
BLOCK <empty> <empty>
<operator>.addition s + end
<operator>.sizeOf sizeof(int )
<operator>.assignment _1_lengthOfLongestSubstring_next = 8
BLOCK <empty> <empty>
<operator>.cast (int )*(s + (end - 1))
<operator>.cast (int )c
<operator>.assignment _1_lengthOfLongestSubstring_next = 3
BLOCK <empty> <empty>
<operator>.assignment _1_lengthOfLongestSubstring_next = 1
BLOCK <empty> <empty>
<operator>.assignment _1_lengthOfLongestSubstring_next = 2
<operator>.assignment _1_lengthOfLongestSubstring_next = 10
<operator>.addition s + end
<operator>.assignment _1_lengthOfLongestSubstring_next = 7
<operator>.assignment _1_lengthOfLongestSubstring_next = 15
<operator>.assignment _1_lengthOfLongestSubstring_next = 0
<operator>.addition s + end
<operator>.addition s + (end - 1)
<operator>.subtraction end - 1
>>>PDG&91 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->16 0->17 0->18 0->19 0->21 0->22 0->23 0->24 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 0->59 0->60 0->61 0->62 0->63 0->64 0->65 0->66 0->68 0->69 0->70 0->71 0->72 0->74 0->75 0->77 0->78 0->79 0->80 0->81 0->82 0->83 0->84 0->85 0->86 0->87 0->88 0->89 0->90 2->1 2->60 2->72 2->84 2->88 2->89 5->1 5->1 9->1 9->1 9->22 9->30 9->41 9->51 9->56 10->1 10->1 10->51 10->56 10->58 11->1 11->1 11->21 11->37 11->47 11->72 11->84 11->88 11->90 12->1 12->1 12->1 12->20 12->26 12->48 15->1 15->1 15->1 15->47 20->1 20->1 20->12 20->26 20->48 21->1 21->1 21->37 21->47 21->72 21->84 21->88 21->90 22->1 22->1 22->30 22->41 22->51 22->56 25->1 25->1 25->1 25->54 25->77 26->1 26->1 26->1 26->12 26->20 26->48 30->1 30->1 30->1 30->51 30->56 30->58 33->1 33->1 33->22 33->30 33->41 33->51 33->56 37->1 37->1 37->21 37->47 37->72 37->84 37->88 37->90 41->1 41->1 41->1 41->51 41->56 41->58 44->1 45->1 45->1 46->1 46->1 47->1 47->1 47->1 47->21 47->37 47->68 47->72 47->82 47->84 47->88 47->90 48->1 48->1 48->12 48->20 48->26 48->70 48->83 49->1 49->1 50->1 50->1 51->1 51->1 51->1 51->22 51->30 51->41 51->56 51->56 51->58 51->74 51->85 52->1 52->1 53->1 53->1 54->1 54->1 54->1 54->78 54->86 55->1 55->1 56->1 56->1 56->1 56->22 56->30 56->41 56->51 56->51 56->58 56->80 56->87 57->1 57->1 58->44 59->12 60->1 60->15 60->72 60->84 60->88 60->89 63->26 67->1 68->1 68->1 70->1 70->1 72->1 72->1 73->1 74->1 74->1 76->1 77->1 78->1 78->1 80->1 80->1 82->1 82->1 83->1 83->1 84->1 85->1 85->1 86->1 86->1 87->1 87->1 88->1 88->1 89->1 89->1 90->1 90->21 90->37 90->47 90->72 90->84 90->88 90->89 90->89
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern int ( /* missing proto */ strlen ) ( ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; int lengthOfLongestSubstring ( char * s ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ memset ) ( ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int lengthOfLongestSubstring ( char * s ) { int cur_max ; int max ; int counter [ 255 ] ; int end ; char c ; int tmp ; unsigned long _1_lengthOfLongestSubstring_next ; { { _1_lengthOfLongestSubstring_next = 17 ; } while ( 1 ) { switch ( _1_lengthOfLongestSubstring_next ) { case 17 : cur_max = 0 ; max = 0 ; end = 0 ; memset ( counter , 0 , sizeof ( int ) * 255UL ) ; { _1_lengthOfLongestSubstring_next = 15 ; } break ; case 15 : tmp = strlen ( s ) ; { _1_lengthOfLongestSubstring_next = 14 ; } break ; case 14 : ; if ( end < tmp ) { { _1_lengthOfLongestSubstring_next = 12 ; } } else { { _1_lengthOfLongestSubstring_next = 2 ; } } break ; case 12 : ; if ( counter [ * ( s + end ) ] == 0 ) { { _1_lengthOfLongestSubstring_next = 11 ; } } else { { _1_lengthOfLongestSubstring_next = 10 ; } } break ; case 11 : ( counter [ * ( s + end ) ] ) ++ ; end ++ ; cur_max ++ ; { _1_lengthOfLongestSubstring_next = 15 ; } break ; case 10 : c = * ( s + end ) ; memset ( counter , 0 , 255UL * sizeof ( int ) ) ; { _1_lengthOfLongestSubstring_next = 9 ; } break ; case 9 : ; if ( cur_max >= max ) { { _1_lengthOfLongestSubstring_next = 8 ; } } else { { _1_lengthOfLongestSubstring_next = 7 ; } } break ; case 8 : max = cur_max ; { _1_lengthOfLongestSubstring_next = 7 ; } break ; case 7 : cur_max = 0 ; { _1_lengthOfLongestSubstring_next = 5 ; } break ; case 5 : ; if ( ( int ) * ( s + ( end - 1 ) ) != ( int ) c ) { { _1_lengthOfLongestSubstring_next = 3 ; } } else { { _1_lengthOfLongestSubstring_next = 15 ; } } break ; case 3 : end -- ; { _1_lengthOfLongestSubstring_next = 5 ; } break ; case 2 : ; if ( cur_max >= max ) { { _1_lengthOfLongestSubstring_next = 1 ; } } else { { _1_lengthOfLongestSubstring_next = 0 ; } } break ; case 1 : max = cur_max ; { _1_lengthOfLongestSubstring_next = 0 ; } break ; case 0 : ; return ( max ) ; break ; } } } } void megaInit ( void ) { { } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD peakIndexInMountainArray
METHOD_RETURN int
PARAM int *A
PARAM int ASize
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_peakIndexInMountainArray_next = 14
LITERAL 1 while (1)
IDENTIFIER _1_peakIndexInMountainArray_next switch(_1_peakIndexInMountainArray_next)
LITERAL 14 <empty>
<operator>.assignment low = 1
<operator>.assignment high = ASize
BLOCK <empty> <empty>
LITERAL 12 <empty>
LITERAL 10 <empty>
<operator>.assignment mid = low + (high - low) / 2
BLOCK <empty> <empty>
LITERAL 9 <empty>
LITERAL 8 <empty>
LITERAL 7 <empty>
RETURN return (mid); return (mid);
LITERAL 5 <empty>
LITERAL 4 <empty>
LITERAL 3 <empty>
<operator>.assignment low = mid + 1
BLOCK <empty> <empty>
LITERAL 2 <empty>
<operator>.assignment high = mid - 1
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operator>.assignment high = mid - 1
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (-1); return (-1);
<operator>.assignment _1_peakIndexInMountainArray_next = 12
<operator>.lessEqualsThan low <= high
<operator>.assignment _1_peakIndexInMountainArray_next = 9
<operator>.lessThan *(A + (mid - 1)) < *(A + mid)
<operator>.greaterThan *(A + mid) > *(A + (mid + 1))
IDENTIFIER mid return (mid);
<operator>.lessThan *(A + (mid - 1)) < *(A + mid)
<operator>.lessThan *(A + mid) < *(A + (mid + 1))
<operator>.assignment _1_peakIndexInMountainArray_next = 12
<operator>.assignment _1_peakIndexInMountainArray_next = 12
<operator>.assignment _1_peakIndexInMountainArray_next = 12
<operator>.minus -1
BLOCK <empty> <empty>
<operator>.addition low + (high - low) / 2
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.addition mid + 1
<operator>.subtraction mid - 1
<operator>.subtraction mid - 1
<operator>.assignment _1_peakIndexInMountainArray_next = 10
BLOCK <empty> <empty>
<operator>.division (high - low) / 2
<operator>.assignment _1_peakIndexInMountainArray_next = 8
BLOCK <empty> <empty>
<operator>.assignment _1_peakIndexInMountainArray_next = 7
BLOCK <empty> <empty>
<operator>.assignment _1_peakIndexInMountainArray_next = 4
BLOCK <empty> <empty>
<operator>.assignment _1_peakIndexInMountainArray_next = 3
BLOCK <empty> <empty>
<operator>.assignment _1_peakIndexInMountainArray_next = 0
<operator>.subtraction high - low
<operator>.addition A + (mid - 1)
<operator>.addition A + mid
<operator>.assignment _1_peakIndexInMountainArray_next = 5
<operator>.addition A + mid
<operator>.addition A + (mid + 1)
<operator>.assignment _1_peakIndexInMountainArray_next = 5
<operator>.addition A + (mid - 1)
<operator>.addition A + mid
<operator>.assignment _1_peakIndexInMountainArray_next = 1
<operator>.addition A + mid
<operator>.addition A + (mid + 1)
<operator>.assignment _1_peakIndexInMountainArray_next = 2
<operator>.subtraction mid - 1
<operator>.addition mid + 1
<operator>.subtraction mid - 1
<operator>.addition mid + 1
>>>PDG&84 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->21 0->22 0->23 0->24 0->25 0->26 0->28 0->29 0->31 0->32 0->34 0->35 0->36 0->39 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 0->59 0->60 0->61 0->62 0->63 0->64 0->65 0->66 0->67 0->68 0->69 0->70 0->71 0->72 0->73 0->74 0->75 0->76 0->77 0->78 0->79 0->80 0->81 0->82 0->83 2->1 2->68 2->71 2->72 2->74 2->75 2->77 2->78 3->1 3->11 6->1 6->1 10->1 10->1 10->35 10->67 11->1 11->1 11->1 11->35 11->67 15->1 15->1 15->1 15->24 15->39 15->52 15->53 15->54 15->71 15->72 15->77 15->78 15->80 15->81 15->82 15->83 20->1 24->1 24->1 24->1 24->35 24->67 27->1 27->1 27->1 27->35 27->67 30->1 30->1 30->1 30->35 30->67 33->1 34->1 34->1 35->1 35->1 35->1 35->55 35->66 35->67 35->67 36->1 36->1 37->1 37->1 37->1 37->58 37->70 38->1 38->1 38->1 38->60 38->73 39->20 40->1 40->1 40->1 40->62 40->76 41->1 41->1 41->1 41->64 41->79 42->1 42->1 43->1 43->1 44->1 44->1 45->33 47->1 47->1 52->1 53->1 53->24 53->27 53->27 53->39 53->52 53->54 53->71 53->72 53->77 53->78 53->80 53->81 53->82 53->83 54->1 54->24 54->30 54->30 54->39 54->52 54->53 54->71 54->72 54->77 54->78 54->80 54->81 54->82 54->83 55->1 55->1 57->1 57->15 57->15 57->47 57->47 58->1 58->1 60->1 60->1 62->1 62->1 64->1 64->1 66->1 66->1 67->1 67->15 67->35 67->35 67->47 67->57 67->57 68->1 69->1 69->1 70->1 70->1 72->1 72->1 73->1 73->1 74->1 75->1 75->1 76->1 76->1 78->1 78->1 79->1 79->1 80->24 80->39 80->52 80->53 80->54 80->68 80->68 80->69 80->71 80->72 80->77 80->78 80->81 80->82 80->83 81->1 82->24 82->39 82->52 82->53 82->54 82->71 82->72 82->74 82->74 82->75 82->77 82->78 82->80 82->81 82->83 83->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; int peakIndexInMountainArray ( int * A , int ASize ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } void main ( void ) { { megaInit ( ) ; } } int peakIndexInMountainArray ( int * A , int ASize ) { int low ; int high ; int mid ; unsigned long _1_peakIndexInMountainArray_next ; { { _1_peakIndexInMountainArray_next = 14 ; } while ( 1 ) { switch ( _1_peakIndexInMountainArray_next ) { case 14 : low = 1 ; high = ASize ; { _1_peakIndexInMountainArray_next = 12 ; } break ; case 12 : ; if ( low <= high ) { { _1_peakIndexInMountainArray_next = 10 ; } } else { { _1_peakIndexInMountainArray_next = 0 ; } } break ; case 10 : mid = low + ( high - low ) / 2 ; { _1_peakIndexInMountainArray_next = 9 ; } break ; case 9 : ; if ( * ( A + ( mid - 1 ) ) < * ( A + mid ) ) { { _1_peakIndexInMountainArray_next = 8 ; } } else { { _1_peakIndexInMountainArray_next = 5 ; } } break ; case 8 : ; if ( * ( A + mid ) > * ( A + ( mid + 1 ) ) ) { { _1_peakIndexInMountainArray_next = 7 ; } } else { { _1_peakIndexInMountainArray_next = 5 ; } } break ; case 7 : ; return ( mid ) ; break ; case 5 : _L : /* CIL Label */ ; if ( * ( A + ( mid - 1 ) ) < * ( A + mid ) ) { { _1_peakIndexInMountainArray_next = 4 ; } } else { { _1_peakIndexInMountainArray_next = 1 ; } } break ; case 4 : ; if ( * ( A + mid ) < * ( A + ( mid + 1 ) ) ) { { _1_peakIndexInMountainArray_next = 3 ; } } else { { _1_peakIndexInMountainArray_next = 2 ; } } break ; case 3 : low = mid + 1 ; { _1_peakIndexInMountainArray_next = 12 ; } break ; case 2 : high = mid - 1 ; { _1_peakIndexInMountainArray_next = 12 ; } break ; case 1 : high = mid - 1 ; { _1_peakIndexInMountainArray_next = 12 ; } break ; case 0 : ; return ( -1 ) ; break ; } } } }
>>>Func
METHOD sort0
METHOD_RETURN int
PARAM void const   *data1
PARAM void const   *data2
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_sort0_next = 5
LITERAL 1 while (1)
IDENTIFIER _1_sort0_next switch(_1_sort0_next)
LITERAL 5 <empty>
<operator>.assignment I1 = (double *)data1
<operator>.assignment I2 = (double *)data2
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 3 <empty>
RETURN return (1); return (1);
LITERAL 2 <empty>
LITERAL 1 <empty>
RETURN return (-1); return (-1);
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_sort0_next = 4
<operator>.greaterThan *(I1 + 0) > *(I2 + 0)
LITERAL 1 return (1);
<operator>.lessThan *(I1 + 0) < *(I2 + 0)
<operator>.minus -1
LITERAL 0 return (0);
<operator>.cast (double *)data1
<operator>.cast (double *)data2
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_sort0_next = 3
BLOCK <empty> <empty>
<operator>.assignment _1_sort0_next = 1
BLOCK <empty> <empty>
<operator>.addition I1 + 0
<operator>.addition I2 + 0
<operator>.assignment _1_sort0_next = 2
<operator>.addition I1 + 0
<operator>.addition I2 + 0
<operator>.assignment _1_sort0_next = 0
>>>PDG&41 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->19 0->20 0->21 0->23 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 2->1 2->10 2->27 3->1 3->11 3->28 6->1 6->1 10->1 10->1 10->1 10->35 10->38 11->1 11->1 11->1 11->36 11->39 15->1 18->1 20->1 21->1 21->1 22->1 22->1 22->1 22->31 22->37 23->15 24->1 24->1 24->1 24->33 24->40 25->18 26->20 27->1 28->1 31->1 31->1 33->1 33->1 35->1 36->1 37->1 37->1 38->1 39->1 40->1 40->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; int sort0 ( void const * data1 , void const * data2 ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int sort0 ( void const * data1 , void const * data2 ) { double * I1 ; double * I2 ; unsigned long _1_sort0_next ; { { _1_sort0_next = 5 ; } while ( 1 ) { switch ( _1_sort0_next ) { case 5 : I1 = ( double * ) data1 ; I2 = ( double * ) data2 ; { _1_sort0_next = 4 ; } break ; case 4 : ; if ( * ( I1 + 0 ) > * ( I2 + 0 ) ) { { _1_sort0_next = 3 ; } } else { { _1_sort0_next = 2 ; } } break ; case 3 : ; return ( 1 ) ; break ; case 2 : ; if ( * ( I1 + 0 ) < * ( I2 + 0 ) ) { { _1_sort0_next = 1 ; } } else { { _1_sort0_next = 0 ; } } break ; case 1 : ; return ( -1 ) ; break ; case 0 : ; return ( 0 ) ; break ; } } } } void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } }
>>>Func
METHOD distanceBetweenBusStops
METHOD_RETURN int
PARAM int *distance
PARAM int distanceSize
PARAM int start
PARAM int destination
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_distanceBetweenBusStops_next = 3
LITERAL 1 while (1)
IDENTIFIER _1_distanceBetweenBusStops_next switch(_1_distanceBetweenBusStops_next)
LITERAL 15 <empty>
LITERAL 13 <empty>
LITERAL 12 <empty>
LITERAL 11 <empty>
<operator>.assignmentPlus sum1 += *(distance + i)
BLOCK <empty> <empty>
LITERAL 10 <empty>
<operator>.assignmentPlus sum2 += *(distance + i)
BLOCK <empty> <empty>
LITERAL 9 <empty>
<operator>.assignmentPlus sum2 += *(distance + i)
BLOCK <empty> <empty>
LITERAL 8 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 7 <empty>
LITERAL 6 <empty>
<operator>.assignment tmp___0 = sum1
BLOCK <empty> <empty>
LITERAL 5 <empty>
<operator>.assignment tmp___0 = sum2
BLOCK <empty> <empty>
LITERAL 4 <empty>
RETURN return (tmp___0); return (tmp___0);
LITERAL 3 <empty>
<operator>.assignment sum1 = 0
<operator>.assignment sum2 = 0
BLOCK <empty> <empty>
LITERAL 2 <empty>
LITERAL 1 <empty>
<operator>.assignment tmp = start
<operator>.assignment start = destination
<operator>.assignment destination = tmp
BLOCK <empty> <empty>
LITERAL 0 <empty>
<operator>.assignment i = 0
BLOCK <empty> <empty>
<operator>.lessThan i < distanceSize
<operator>.greaterEqualsThan i >= start
<operator>.lessThan i < destination
<operator>.assignment _1_distanceBetweenBusStops_next = 8
<operator>.assignment _1_distanceBetweenBusStops_next = 8
<operator>.assignment _1_distanceBetweenBusStops_next = 8
<operator>.assignment _1_distanceBetweenBusStops_next = 15
<operator>.lessThan sum1 < sum2
<operator>.assignment _1_distanceBetweenBusStops_next = 4
<operator>.assignment _1_distanceBetweenBusStops_next = 4
IDENTIFIER tmp___0 return (tmp___0);
<operator>.assignment _1_distanceBetweenBusStops_next = 2
<operator>.greaterThan start > destination
<operator>.assignment _1_distanceBetweenBusStops_next = 0
<operator>.assignment _1_distanceBetweenBusStops_next = 15
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_distanceBetweenBusStops_next = 13
BLOCK <empty> <empty>
<operator>.assignment _1_distanceBetweenBusStops_next = 12
BLOCK <empty> <empty>
<operator>.assignment _1_distanceBetweenBusStops_next = 11
BLOCK <empty> <empty>
<operator>.addition distance + i
<operator>.addition distance + i
<operator>.addition distance + i
<operator>.assignment _1_distanceBetweenBusStops_next = 6
BLOCK <empty> <empty>
<operator>.assignment _1_distanceBetweenBusStops_next = 1
BLOCK <empty> <empty>
<operator>.assignment _1_distanceBetweenBusStops_next = 7
<operator>.assignment _1_distanceBetweenBusStops_next = 9
<operator>.assignment _1_distanceBetweenBusStops_next = 10
<operator>.assignment _1_distanceBetweenBusStops_next = 5
<operator>.assignment _1_distanceBetweenBusStops_next = 0
>>>PDG&86 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 0->59 0->60 0->61 0->62 0->63 0->64 0->65 0->66 0->67 0->68 0->69 0->70 0->71 0->72 0->73 0->74 0->75 0->76 0->77 0->78 0->79 0->80 0->81 0->82 0->83 0->84 0->85 2->1 2->74 2->75 2->76 3->1 3->48 4->1 4->41 4->49 4->60 5->1 5->42 5->50 5->60 8->1 8->1 15->1 15->1 15->1 15->28 15->55 18->1 18->1 18->1 18->21 18->31 18->55 21->1 21->1 21->1 21->18 21->31 21->55 24->1 24->1 24->48 24->49 24->50 24->74 24->75 24->76 28->1 28->1 28->1 28->58 31->1 31->1 31->1 31->58 34->1 36->1 36->1 36->15 36->28 36->55 37->1 37->1 37->18 37->21 37->31 37->55 41->1 41->43 42->1 42->1 42->41 42->49 42->60 43->1 43->1 43->1 43->42 43->50 43->60 46->1 46->1 46->24 46->48 46->49 46->50 46->74 46->75 46->76 48->1 48->1 48->1 48->24 48->49 48->50 48->68 48->74 48->75 48->76 48->81 49->1 49->1 49->1 49->24 49->41 49->48 49->50 49->60 49->70 49->74 49->75 49->76 49->82 50->1 50->1 50->1 50->24 50->42 50->48 50->49 50->60 50->72 50->74 50->75 50->76 50->83 51->1 51->1 52->1 52->1 53->1 53->1 54->1 54->1 55->1 55->1 55->1 55->15 55->18 55->21 55->28 55->31 55->77 55->84 56->1 56->1 57->1 57->1 58->34 59->1 59->1 60->1 60->1 60->1 60->41 60->42 60->49 60->50 60->79 60->85 61->1 61->1 62->1 62->1 68->1 68->1 70->1 70->1 72->1 72->1 74->1 74->1 75->1 75->1 76->1 76->1 77->1 77->1 79->1 79->1 81->1 81->1 82->1 82->1 83->1 83->1 84->1 84->1 85->1 85->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; int distanceBetweenBusStops ( int * distance , int distanceSize , int start , int destination ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } void main ( void ) { { megaInit ( ) ; } } int distanceBetweenBusStops ( int * distance , int distanceSize , int start , int destination ) { int sum1 ; int sum2 ; int tmp ; int i ; int tmp___0 ; unsigned long _1_distanceBetweenBusStops_next ; { { _1_distanceBetweenBusStops_next = 3 ; } while ( 1 ) { switch ( _1_distanceBetweenBusStops_next ) { case 15 : ; if ( i < distanceSize ) { { _1_distanceBetweenBusStops_next = 13 ; } } else { { _1_distanceBetweenBusStops_next = 7 ; } } break ; case 13 : ; if ( i >= start ) { { _1_distanceBetweenBusStops_next = 12 ; } } else { { _1_distanceBetweenBusStops_next = 9 ; } } break ; case 12 : ; if ( i < destination ) { { _1_distanceBetweenBusStops_next = 11 ; } } else { { _1_distanceBetweenBusStops_next = 10 ; } } break ; case 11 : sum1 += * ( distance + i ) ; { _1_distanceBetweenBusStops_next = 8 ; } break ; case 10 : sum2 += * ( distance + i ) ; { _1_distanceBetweenBusStops_next = 8 ; } break ; case 9 : sum2 += * ( distance + i ) ; { _1_distanceBetweenBusStops_next = 8 ; } break ; case 8 : i ++ ; { _1_distanceBetweenBusStops_next = 15 ; } break ; case 7 : ; if ( sum1 < sum2 ) { { _1_distanceBetweenBusStops_next = 6 ; } } else { { _1_distanceBetweenBusStops_next = 5 ; } } break ; case 6 : tmp___0 = sum1 ; { _1_distanceBetweenBusStops_next = 4 ; } break ; case 5 : tmp___0 = sum2 ; { _1_distanceBetweenBusStops_next = 4 ; } break ; case 4 : ; return ( tmp___0 ) ; break ; case 3 : sum1 = 0 ; sum2 = 0 ; { _1_distanceBetweenBusStops_next = 2 ; } break ; case 2 : ; if ( start > destination ) { { _1_distanceBetweenBusStops_next = 1 ; } } else { { _1_distanceBetweenBusStops_next = 0 ; } } break ; case 1 : tmp = start ; start = destination ; destination = tmp ; { _1_distanceBetweenBusStops_next = 0 ; } break ; case 0 : i = 0 ; { _1_distanceBetweenBusStops_next = 15 ; } break ; } } } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 9
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 9 <empty>
<operator>.assignment sum = 0
<operator>.assignment str = (char const   *)*(argv + 1)
<operator>.assignment t = str
BLOCK <empty> <empty>
LITERAL 7 <empty>
LITERAL 5 <empty>
<operator>.assignmentPlus sum += (int )*t
<operator>.postIncrement t ++
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 3 <empty>
<operator>.assignmentPlus sum += (int )*t
BLOCK <empty> <empty>
LITERAL 2 <empty>
<operator>.assignmentMultiplication sum *= (int )*t
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("Sum is: %d\n", sum)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 7
<operator>.assignment _1_main_next = 7
<operator>.greaterThan sum > 127
<operator>.assignment _1_main_next = 1
<operator>.assignment _1_main_next = 1
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
<operator>.cast (char const   *)*(argv + 1)
BLOCK <empty> <empty>
<operator>.cast (int )*t
BLOCK <empty> <empty>
<operator>.cast (int )*t
<operator>.cast (int )*t
<operator>.assignment _1_main_next = 5
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 3
BLOCK <empty> <empty>
<operator>.addition argv + 1
<operator>.assignment _1_main_next = 4
<operator>.assignment _1_main_next = 2
<operator>.indirection *t
>>>PDG&58 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->45 0->47 0->50 0->51 0->52 0->53 0->54 0->55 0->56 2->7 3->8 3->54 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->22 16->27 16->30 16->33 16->39 17->1 17->1 17->18 18->1 18->1 18->1 18->23 22->1 22->1 22->1 22->27 22->30 22->33 22->39 23->1 23->1 27->1 27->1 27->1 27->22 27->30 27->33 27->39 30->1 30->1 30->1 30->22 30->27 30->33 30->39 33->1 33->1 33->22 33->27 33->30 33->39 36->1 37->1 37->1 38->1 38->1 39->1 39->1 39->22 39->27 39->30 39->33 39->52 39->56 40->1 40->1 41->1 41->1 42->1 42->1 43->36 44->1 46->1 48->1 49->1 50->1 50->1 52->1 52->1 54->1 55->1 55->1 56->1 56->1 57->50 57->55
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int argc , char * * argv , char * * _formal_envp ) { int sum ; char const * str ; register char const * t ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 9 ; } while ( 1 ) { switch ( _1_main_next ) { case 9 : sum = 0 ; str = ( char const * ) * ( argv + 1 ) ; t = str ; { _1_main_next = 7 ; } break ; case 7 : ; if ( * t ) { { _1_main_next = 5 ; } } else { { _1_main_next = 4 ; } } break ; case 5 : sum += ( int ) * t ; t ++ ; { _1_main_next = 7 ; } break ; case 4 : ; if ( sum > 127 ) { { _1_main_next = 3 ; } } else { { _1_main_next = 2 ; } } break ; case 3 : sum += ( int ) * t ; { _1_main_next = 1 ; } break ; case 2 : sum *= ( int ) * t ; { _1_main_next = 1 ; } break ; case 1 : printf ( " \n " , sum ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD max
METHOD_RETURN int
PARAM int *freq
PARAM int L
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_max_next = 15
LITERAL 1 while (1)
IDENTIFIER _1_max_next switch(_1_max_next)
LITERAL 15 <empty>
<operator>.assignment m = *(freq + 0)
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 13 <empty>
LITERAL 11 <empty>
LITERAL 10 <empty>
<operator>.assignment m = *(freq + i)
BLOCK <empty> <empty>
LITERAL 9 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 8 <empty>
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 6 <empty>
LITERAL 4 <empty>
LITERAL 3 <empty>
<operator>.assignment *(freq + i) = 0
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (m); return (m);
<operator>.assignment _1_max_next = 13
<operator>.lessThan i < L
<operator>.lessThan m < *(freq + i)
<operator>.assignment _1_max_next = 9
<operator>.assignment _1_max_next = 13
<operator>.assignment _1_max_next = 6
<operator>.lessThan i < L
<operator>.equals m - *(freq + i) == 0
<operator>.assignment _1_max_next = 0
<operator>.assignment _1_max_next = 6
IDENTIFIER m return (m);
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.addition freq + 0
<operator>.assignment _1_max_next = 11
BLOCK <empty> <empty>
<operator>.assignment _1_max_next = 10
BLOCK <empty> <empty>
<operator>.addition freq + i
<operator>.assignment _1_max_next = 4
BLOCK <empty> <empty>
<operator>.subtraction m - *(freq + i)
<operator>.assignment _1_max_next = 3
BLOCK <empty> <empty>
<operator>.addition freq + i
<operator>.assignment _1_max_next = 8
<operator>.addition freq + i
<operator>.assignment _1_max_next = 9
<operator>.assignment _1_max_next = 0
<operator>.assignment _1_max_next = 1
<operator>.addition freq + i
>>>PDG&67 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->11 0->12 0->13 0->14 0->15 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 0->59 0->60 0->61 0->62 0->63 0->64 0->65 0->66 2->1 2->49 2->54 2->60 2->62 2->66 3->1 3->35 3->40 6->1 6->1 10->1 10->1 10->1 10->36 10->44 10->57 11->1 11->1 11->19 11->30 11->35 11->40 11->54 11->60 11->62 11->66 16->1 16->1 16->1 16->36 16->44 16->57 19->1 19->1 19->30 19->35 19->40 19->54 19->60 19->62 19->66 22->1 22->1 22->19 22->30 22->35 22->40 22->54 22->60 22->62 22->66 27->1 27->1 30->1 30->1 30->19 30->35 30->40 30->54 30->60 30->62 30->66 33->1 34->1 34->1 35->1 35->1 35->1 35->19 35->30 35->40 35->40 35->50 35->54 35->60 35->61 35->62 35->66 36->1 36->1 36->1 36->44 36->52 36->57 36->63 37->1 37->1 38->1 38->1 39->1 39->1 40->1 40->1 40->1 40->19 40->30 40->35 40->35 40->54 40->55 40->60 40->62 40->64 40->66 41->1 41->1 41->58 41->65 42->1 42->1 43->1 43->1 44->33 49->1 50->1 50->1 52->1 52->1 54->1 54->1 55->1 55->1 57->1 57->1 57->36 57->41 57->41 57->44 58->1 58->1 60->1 60->1 61->1 61->1 62->1 62->1 63->1 63->1 64->1 64->1 65->1 65->1 66->1 66->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; int max ( int * freq , int L ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } int max ( int * freq , int L ) { int i ; int m ; unsigned long _1_max_next ; { { _1_max_next = 15 ; } while ( 1 ) { switch ( _1_max_next ) { case 15 : m = * ( freq + 0 ) ; i = 0 ; { _1_max_next = 13 ; } break ; case 13 : ; if ( i < L ) { { _1_max_next = 11 ; } } else { { _1_max_next = 8 ; } } break ; case 11 : ; if ( m < * ( freq + i ) ) { { _1_max_next = 10 ; } } else { { _1_max_next = 9 ; } } break ; case 10 : m = * ( freq + i ) ; { _1_max_next = 9 ; } break ; case 9 : i ++ ; { _1_max_next = 13 ; } break ; case 8 : i = 0 ; { _1_max_next = 6 ; } break ; case 6 : ; if ( i < L ) { { _1_max_next = 4 ; } } else { { _1_max_next = 0 ; } } break ; case 4 : ; if ( m - * ( freq + i ) == 0 ) { { _1_max_next = 3 ; } } else { { _1_max_next = 1 ; } } break ; case 3 : * ( freq + i ) = 0 ; { _1_max_next = 0 ; } break ; case 1 : i ++ ; { _1_max_next = 6 ; } break ; case 0 : ; return ( m ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 1 <empty>
printf printf("\nEnter your decimal number : ")
scanf scanf("%d", & decimalNumber)
<operator>.assignment octalNumber = decimal_to_octal(decimalNumber)
printf printf("\nThe octal of %d is : %d", decimalNumber, octalNumber)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
decimal_to_octal decimal_to_octal(decimalNumber)
>>>PDG&26 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->19 0->20 0->21 0->22 0->23 0->24 0->25 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 17->1 17->19 17->25 18->1 18->1 18->19 19->1 19->1 19->1 19->17 19->25 22->1 23->1 23->1 24->22 25->18 25->19
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int ( /* missing proto */ scanf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern int ( /* missing proto */ decimal_to_octal ) ( ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern double log ( double x ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { int octalNumber ; int decimalNumber ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 1 ; } while ( 1 ) { switch ( _1_main_next ) { case 1 : printf ( " \n " ) ; scanf ( " " , & decimalNumber ) ; octalNumber = decimal_to_octal ( decimalNumber ) ; printf ( " \n " , decimalNumber , octalNumber ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 22
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 22 <empty>
<operator>.assignment i = 1
BLOCK <empty> <empty>
LITERAL 20 <empty>
LITERAL 18 <empty>
<operator>.assignment a[i - 1] = (int )*(*(argv + i) + 0)
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 17 <empty>
<operator>.assignment i = argc - 3
BLOCK <empty> <empty>
LITERAL 15 <empty>
LITERAL 13 <empty>
<operator>.assignment j = 0
BLOCK <empty> <empty>
LITERAL 11 <empty>
LITERAL 9 <empty>
LITERAL 8 <empty>
<operator>.assignment temp = a[j]
<operator>.assignment a[j] = a[j + 1]
<operator>.assignment a[j + 1] = temp
BLOCK <empty> <empty>
LITERAL 7 <empty>
<operator>.postIncrement j ++
BLOCK <empty> <empty>
LITERAL 6 <empty>
<operator>.postDecrement i --
BLOCK <empty> <empty>
LITERAL 5 <empty>
printf printf("After sorting: ")
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 1 <empty>
printf printf(" %d", a[i])
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 20
<operator>.lessThan i < argc
<operator>.assignment _1_main_next = 20
<operator>.assignment _1_main_next = 15
<operator>.greaterEqualsThan i >= 0
<operator>.assignment _1_main_next = 11
<operator>.lessEqualsThan j <= i
<operator>.greaterThan a[j] > a[j + 1]
<operator>.assignment _1_main_next = 7
<operator>.assignment _1_main_next = 11
<operator>.assignment _1_main_next = 15
<operator>.assignment _1_main_next = 3
<operator>.lessThan i < argc - 1
<operator>.assignment _1_main_next = 3
LITERAL 0 return (0);
BLOCK <empty> <empty>
<operator>.cast (int )*(*(argv + i) + 0)
<operator>.subtraction argc - 3
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 18
BLOCK <empty> <empty>
<operator>.subtraction i - 1
<operator>.assignment _1_main_next = 13
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 9
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 8
BLOCK <empty> <empty>
<operator>.addition j + 1
<operator>.addition j + 1
<operator>.subtraction argc - 1
<operator>.assignment _1_main_next = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 17
<operator>.addition *(argv + i) + 0
<operator>.assignment _1_main_next = 5
<operator>.assignment _1_main_next = 6
<operator>.addition j + 1
<operator>.assignment _1_main_next = 7
<operator>.assignment _1_main_next = 0
<operator>.addition argv + i
>>>PDG&98 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->21 0->22 0->23 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 0->59 0->60 0->62 0->63 0->64 0->65 0->66 0->67 0->68 0->69 0->71 0->72 0->73 0->74 0->75 0->76 0->77 0->78 0->79 0->80 0->81 0->82 0->83 0->84 0->85 0->86 0->87 0->88 0->89 0->90 0->91 0->92 0->93 0->94 0->95 0->96 0->97 2->7 2->55 2->71 2->87 3->8 3->97 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->41 16->50 16->55 16->58 16->60 16->66 16->78 20->1 20->1 20->1 21->1 21->1 21->41 21->50 21->55 21->58 21->60 21->66 21->78 24->1 24->1 24->1 24->41 24->50 24->55 24->58 24->60 24->66 24->78 28->1 28->1 28->38 28->60 28->85 28->86 28->94 33->1 33->35 34->1 34->1 34->33 34->61 35->1 35->1 35->1 35->34 35->61 38->1 38->1 38->60 38->85 38->86 38->94 41->1 41->1 41->50 41->55 41->58 41->60 41->66 41->78 44->1 45->1 45->1 45->41 45->50 45->55 45->58 45->60 45->66 45->78 49->1 49->1 50->1 50->1 50->41 50->55 50->58 50->60 50->66 50->78 53->1 54->1 54->1 55->1 55->1 55->1 55->41 55->50 55->58 55->60 55->66 55->71 55->76 55->78 55->87 55->90 56->1 56->1 57->1 57->1 58->1 58->1 58->41 58->50 58->55 58->60 58->66 58->78 58->79 58->92 59->1 59->1 60->1 60->1 60->1 60->38 60->41 60->50 60->55 60->58 60->66 60->78 60->81 60->85 60->86 60->93 60->94 61->1 61->1 61->1 61->33 61->34 61->83 61->95 62->1 62->1 63->1 63->1 64->1 64->1 65->1 65->1 66->1 66->1 66->1 66->41 66->50 66->55 66->58 66->60 66->78 66->88 66->96 67->1 67->1 68->53 70->1 71->1 71->24 71->24 71->55 71->87 76->1 76->1 78->21 78->97 79->1 79->1 81->1 81->1 83->1 83->1 86->1 87->1 87->55 87->66 87->66 87->71 88->1 88->1 90->1 90->1 91->1 92->1 92->1 93->1 93->1 94->1 95->1 95->1 96->1 96->1 97->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int argc , char * * argv , char * * _formal_envp ) { int temp ; int i ; int j ; int a [ 10 ] ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 22 ; } while ( 1 ) { switch ( _1_main_next ) { case 22 : i = 1 ; { _1_main_next = 20 ; } break ; case 20 : ; if ( i < argc ) { { _1_main_next = 18 ; } } else { { _1_main_next = 17 ; } } break ; case 18 : a [ i - 1 ] = ( int ) * ( * ( argv + i ) + 0 ) ; i ++ ; { _1_main_next = 20 ; } break ; case 17 : i = argc - 3 ; { _1_main_next = 15 ; } break ; case 15 : ; if ( i >= 0 ) { { _1_main_next = 13 ; } } else { { _1_main_next = 5 ; } } break ; case 13 : j = 0 ; { _1_main_next = 11 ; } break ; case 11 : ; if ( j <= i ) { { _1_main_next = 9 ; } } else { { _1_main_next = 6 ; } } break ; case 9 : ; if ( a [ j ] > a [ j + 1 ] ) { { _1_main_next = 8 ; } } else { { _1_main_next = 7 ; } } break ; case 8 : temp = a [ j ] ; a [ j ] = a [ j + 1 ] ; a [ j + 1 ] = temp ; { _1_main_next = 7 ; } break ; case 7 : j ++ ; { _1_main_next = 11 ; } break ; case 6 : i -- ; { _1_main_next = 15 ; } break ; case 5 : printf ( " " ) ; i = 0 ; { _1_main_next = 3 ; } break ; case 3 : ; if ( i < argc - 1 ) { { _1_main_next = 1 ; } } else { { _1_main_next = 0 ; } } break ; case 1 : printf ( " " , a [ i ] ) ; i ++ ; { _1_main_next = 3 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD abbreviate
METHOD_RETURN char*
PARAM char const   *phrase
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_abbreviate_next = 36
LITERAL 1 while (1)
IDENTIFIER _1_abbreviate_next switch(_1_abbreviate_next)
LITERAL 36 <empty>
strcpy strcpy(str, phrase)
<operator>.assignment p_str = str
strcpy strcpy(acr, "")
<operator>.assignment counter = 0
<operator>.assignment index = 0
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 34 <empty>
LITERAL 33 <empty>
LITERAL 30 <empty>
LITERAL 29 <empty>
<operator>.postIncrement counter ++
BLOCK <empty> <empty>
LITERAL 28 <empty>
LITERAL 27 <empty>
<operator>.postIncrement p_str ++
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 26 <empty>
<operator>.assignment i = 0
<operator>.postIncrement counter ++
<operator>.assignment tmp = malloc((unsigned long )counter * sizeof(char *))
<operator>.assignment words = (char **)tmp
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 24 <empty>
LITERAL 22 <empty>
<operator>.assignment tmp___0 = malloc(80UL * sizeof(char ))
<operator>.assignment *(words + i) = (char *)tmp___0
strcpy strcpy(*(words + i), "")
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 21 <empty>
<operator>.assignment p_str = str
<operator>.assignment p_start = p_str
BLOCK <empty> <empty>
LITERAL 19 <empty>
LITERAL 18 <empty>
LITERAL 15 <empty>
LITERAL 14 <empty>
<operator>.assignment *p_str = (char )'\000'
strncat strncat(*(words + index), p_start, 80)
<operator>.postIncrement index ++
<operator>.assignment p_start = p_str + 1
BLOCK <empty> <empty>
LITERAL 13 <empty>
LITERAL 12 <empty>
<operator>.postIncrement p_str ++
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 11 <empty>
<operator>.assignment *p_str = (char )'\000'
strncat strncat(*(words + index), p_start, 80)
<operator>.postIncrement index ++
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 9 <empty>
LITERAL 7 <empty>
<operator>.assignment tmp___1 = toupper((int )*(*(words + i) + 0))
<operator>.assignment *(*(words + i) + 0) = (char )tmp___1
<operator>.assignment *(*(words + i) + 1) = (char )'\000'
strcat strcat(acr  *(words + i))
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 6 <empty>
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
free free(*(words + i))
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
free free(words)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (acr); return (acr);
<operator>.assignment _1_abbreviate_next = 34
IDENTIFIER p_str if (p_str)
<operator>.lessThan i < 80
<operator>.equals (int )*p_str == 32
<operator>.assignment _1_abbreviate_next = 28
<operator>.lessThan i < 80
<operator>.assignment _1_abbreviate_next = 34
<operator>.assignment _1_abbreviate_next = 24
<operator>.lessThan i < counter
<operator>.assignment _1_abbreviate_next = 24
<operator>.assignment _1_abbreviate_next = 19
IDENTIFIER p_str if (p_str)
<operator>.lessEqualsThan i <= 80
<operator>.equals (int )*p_str == 32
<operator>.assignment _1_abbreviate_next = 13
<operator>.lessEqualsThan i <= 80
<operator>.assignment _1_abbreviate_next = 19
<operator>.assignment _1_abbreviate_next = 9
<operator>.lessThan i < index
<operator>.assignment _1_abbreviate_next = 9
<operator>.assignment _1_abbreviate_next = 4
<operator>.lessThan i < counter
<operator>.assignment _1_abbreviate_next = 4
<operator>.assignment _1_abbreviate_next = 0
IDENTIFIER acr return (acr);
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
malloc malloc((unsigned long )counter * sizeof(char *))
<operator>.cast (char **)tmp
BLOCK <empty> <empty>
malloc malloc(80UL * sizeof(char ))
<operator>.cast (char *)tmp___0
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.cast (char )'\000'
<operator>.addition p_str + 1
BLOCK <empty> <empty>
<operator>.cast (char )'\000'
BLOCK <empty> <empty>
toupper toupper((int )*(*(words + i) + 0))
<operator>.cast (char )tmp___1
<operator>.cast (char )'\000'
BLOCK <empty> <empty>
<operator>.assignment _1_abbreviate_next = 33
BLOCK <empty> <empty>
<operator>.assignment _1_abbreviate_next = 30
BLOCK <empty> <empty>
<operator>.cast (int )*p_str
<operator>.assignment _1_abbreviate_next = 29
BLOCK <empty> <empty>
<operator>.assignment _1_abbreviate_next = 27
BLOCK <empty> <empty>
<operator>.multiplication (unsigned long )counter * sizeof(char *)
<operator>.assignment _1_abbreviate_next = 22
BLOCK <empty> <empty>
<operator>.multiplication 80UL * sizeof(char )
<operator>.addition words + i
<operator>.addition words + i
<operator>.assignment _1_abbreviate_next = 18
BLOCK <empty> <empty>
<operator>.assignment _1_abbreviate_next = 15
BLOCK <empty> <empty>
<operator>.cast (int )*p_str
<operator>.assignment _1_abbreviate_next = 14
BLOCK <empty> <empty>
<operator>.addition words + index
<operator>.assignment _1_abbreviate_next = 12
BLOCK <empty> <empty>
<operator>.addition words + index
<operator>.assignment _1_abbreviate_next = 7
BLOCK <empty> <empty>
<operator>.addition *(words + i) + 0
<operator>.addition *(words + i) + 1
<operator>.addition words + i
<operator>.assignment _1_abbreviate_next = 2
BLOCK <empty> <empty>
<operator>.addition words + i
<operator>.assignment _1_abbreviate_next = 26
<operator>.assignment _1_abbreviate_next = 26
<operator>.assignment _1_abbreviate_next = 28
<operator>.assignment _1_abbreviate_next = 34
<operator>.cast (unsigned long )counter
<operator>.sizeOf sizeof(char *)
<operator>.assignment _1_abbreviate_next = 21
<operator>.sizeOf sizeof(char )
<operator>.assignment _1_abbreviate_next = 11
<operator>.assignment _1_abbreviate_next = 11
<operator>.assignment _1_abbreviate_next = 13
<operator>.assignment _1_abbreviate_next = 19
<operator>.assignment _1_abbreviate_next = 6
<operator>.assignment _1_abbreviate_next = 1
<operator>.addition *(words + i) + 0
<operator>.addition words + i
<operator>.addition words + i
<operator>.addition words + i
>>>PDG&184 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->31 0->32 0->33 0->34 0->35 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 0->59 0->60 0->61 0->62 0->63 0->64 0->65 0->66 0->68 0->69 0->70 0->71 0->72 0->73 0->74 0->75 0->76 0->77 0->79 0->80 0->81 0->82 0->83 0->84 0->86 0->87 0->88 0->89 0->90 0->91 0->92 0->93 0->94 0->95 0->96 0->97 0->98 0->99 0->100 0->101 0->102 0->103 0->104 0->105 0->106 0->107 0->108 0->109 0->110 0->111 0->112 0->113 0->114 0->116 0->117 0->119 0->120 0->121 0->122 0->123 0->124 0->125 0->126 0->127 0->129 0->130 0->131 0->132 0->133 0->134 0->135 0->137 0->138 0->139 0->140 0->141 0->142 0->143 0->144 0->145 0->146 0->147 0->148 0->149 0->150 0->152 0->153 0->154 0->155 0->156 0->157 0->158 0->159 0->160 0->161 0->162 0->163 0->164 0->165 0->166 0->167 0->168 0->169 0->170 0->172 0->174 0->175 0->176 0->177 0->178 0->179 0->180 0->181 0->182 0->183 2->1 2->9 5->1 5->1 9->1 9->1 9->10 9->42 10->1 10->1 10->1 10->24 10->52 10->56 10->124 11->1 11->1 11->70 11->110 12->1 12->1 12->20 12->29 12->94 12->107 13->1 13->1 13->51 13->62 13->104 13->154 13->157 14->1 14->1 14->25 14->39 14->57 14->71 14->79 14->88 14->91 14->94 14->98 14->101 14->104 14->107 14->145 14->146 14->162 14->165 14->181 14->182 14->183 20->1 20->1 20->29 20->94 20->107 24->1 24->1 24->52 24->56 24->124 25->1 25->1 25->39 25->57 25->71 25->79 25->88 25->91 25->94 25->98 25->101 25->104 25->107 25->145 25->146 25->162 25->165 25->181 25->182 25->183 29->1 29->20 29->94 29->107 29->141 29->170 30->1 30->1 30->31 30->116 31->1 31->1 31->1 31->82 31->145 31->146 31->154 31->157 31->162 31->165 31->181 31->182 31->183 32->1 32->1 32->25 32->39 32->57 32->71 32->79 32->88 32->91 32->94 32->98 32->101 32->104 32->107 32->145 32->146 32->162 32->165 32->181 32->182 32->183 36->1 36->1 36->37 36->119 37->1 37->1 38->1 38->1 39->1 39->1 39->25 39->57 39->71 39->79 39->88 39->91 39->94 39->98 39->101 39->104 39->107 39->145 39->146 39->162 39->165 39->181 39->182 39->183 42->1 42->1 42->24 42->43 42->52 42->56 42->124 43->1 43->1 43->1 43->50 43->61 49->1 49->1 49->1 49->24 49->43 49->52 49->56 49->89 49->99 49->124 49->136 49->151 50->1 50->1 51->1 51->1 51->62 51->104 51->154 51->157 52->1 52->1 52->1 52->50 52->61 56->1 56->1 56->24 56->52 56->124 57->1 57->1 57->25 57->39 57->71 57->79 57->88 57->91 57->94 57->98 57->101 57->104 57->107 57->145 57->146 57->162 57->165 57->181 57->182 57->183 60->1 60->1 60->1 60->24 60->43 60->52 60->56 60->89 60->99 60->124 60->136 60->151 61->1 61->1 61->1 61->50 62->1 62->1 62->51 62->104 62->154 62->157 63->1 63->1 63->25 63->39 63->57 63->71 63->79 63->88 63->91 63->94 63->98 63->101 63->104 63->107 63->145 63->146 63->162 63->165 63->181 63->182 63->183 67->1 67->1 67->68 67->129 68->1 68->1 68->1 69->1 69->1 69->1 70->1 70->1 70->1 70->11 70->110 71->1 71->1 71->25 71->39 71->57 71->79 71->88 71->91 71->94 71->98 71->101 71->104 71->107 71->145 71->146 71->162 71->165 71->181 71->182 71->183 74->1 74->1 74->25 74->39 74->57 74->71 74->79 74->88 74->91 74->94 74->98 74->101 74->104 74->107 74->145 74->146 74->162 74->165 74->181 74->182 74->183 78->1 79->1 79->1 79->25 79->39 79->57 79->71 79->88 79->91 79->94 79->98 79->101 79->104 79->107 79->145 79->146 79->162 79->165 79->181 79->182 79->183 82->1 82->145 82->146 82->154 82->157 82->162 82->165 82->181 82->182 82->183 85->1 86->1 86->1 88->1 88->1 88->25 88->39 88->57 88->71 88->79 88->91 88->94 88->98 88->101 88->104 88->107 88->134 88->145 88->146 88->162 88->165 88->167 88->181 88->182 88->183 89->1 89->1 89->137 89->168 90->1 90->1 91->1 91->1 91->25 91->39 91->57 91->71 91->79 91->88 91->94 91->98 91->101 91->104 91->107 91->139 91->145 91->146 91->162 91->165 91->169 91->181 91->182 91->183 92->1 92->1 93->1 93->1 94->1 94->1 94->1 94->20 94->25 94->29 94->39 94->57 94->71 94->79 94->88 94->91 94->98 94->101 94->104 94->107 94->107 94->142 94->145 94->146 94->162 94->165 94->172 94->181 94->182 94->183 95->1 95->1 96->1 96->1 98->1 98->1 98->25 98->39 98->57 98->71 98->79 98->88 98->91 98->94 98->101 98->104 98->107 98->145 98->146 98->149 98->162 98->165 98->175 98->181 98->182 98->183 99->1 99->1 99->152 99->176 100->1 100->1 101->1 101->1 101->25 101->39 101->57 101->71 101->79 101->88 101->91 101->94 101->98 101->104 101->107 101->145 101->146 101->155 101->162 101->165 101->177 101->181 101->182 101->183 102->1 102->1 103->1 103->1 104->1 104->1 104->1 104->25 104->39 104->51 104->57 104->62 104->71 104->79 104->88 104->91 104->94 104->98 104->101 104->107 104->145 104->146 104->154 104->157 104->158 104->162 104->165 104->178 104->181 104->182 104->183 105->1 105->1 106->1 106->1 107->1 107->1 107->1 107->20 107->25 107->29 107->39 107->57 107->71 107->79 107->88 107->91 107->94 107->94 107->98 107->101 107->104 107->145 107->146 107->162 107->163 107->165 107->179 107->181 107->182 107->183 108->1 108->1 109->1 109->1 110->85 115->1 115->30 116->1 118->1 118->36 119->1 124->1 128->1 128->67 129->1 132->1 132->1 134->1 134->1 136->1 137->1 137->1 139->1 139->1 141->1 141->115 142->1 142->1 144->118 146->1 147->1 147->1 149->1 149->1 151->1 152->1 152->1 154->1 155->1 155->1 157->1 158->1 158->1 162->1 163->1 163->1 165->1 166->1 166->1 167->1 167->1 168->1 168->1 169->1 169->1 170->1 171->1 172->1 172->1 173->1 174->1 174->1 175->1 175->1 176->1 176->1 177->1 177->1 178->1 178->1 179->1 179->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern int ( /* missing proto */ malloc ) ( ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern int ( /* missing proto */ free ) ( ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; extern int ( /* missing proto */ strcpy ) ( ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; char * abbreviate ( char const * phrase ) ; extern void signal ( int sig , void * func ) ; extern int ( /* missing proto */ toupper ) ( ) ; extern long time ( long * tloc ) ; extern int ( /* missing proto */ strcat ) ( ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern int ( /* missing proto */ strncat ) ( ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } } char * abbreviate ( char const * phrase ) { char str [ 80 ] ; char * p_str ; static char acr [ 80 ] ; int counter ; int index ; int i ; char * * words ; int tmp ; int tmp___0 ; char * p_start ; int tmp___1 ; unsigned long _1_abbreviate_next ; { { _1_abbreviate_next = 36 ; } while ( 1 ) { switch ( _1_abbreviate_next ) { case 36 : strcpy ( str , phrase ) ; p_str = str ; strcpy ( acr , " " ) ; counter = 0 ; index = 0 ; i = 0 ; { _1_abbreviate_next = 34 ; } break ; case 34 : ; if ( p_str ) { { _1_abbreviate_next = 33 ; } } else { { _1_abbreviate_next = 26 ; } } break ; case 33 : ; if ( i < 80 ) { { _1_abbreviate_next = 30 ; } } else { { _1_abbreviate_next = 26 ; } } break ; case 30 : ; if ( ( int ) * p_str == 32 ) { { _1_abbreviate_next = 29 ; } } else { { _1_abbreviate_next = 28 ; } } break ; case 29 : counter ++ ; { _1_abbreviate_next = 28 ; } break ; case 28 : ; if ( i < 80 ) { { _1_abbreviate_next = 27 ; } } else { { _1_abbreviate_next = 34 ; } } break ; case 27 : p_str ++ ; i ++ ; { _1_abbreviate_next = 34 ; } break ; case 26 : i = 0 ; counter ++ ; tmp = malloc ( ( unsigned long ) counter * sizeof ( char * ) ) ; words = ( char * * ) tmp ; i = 0 ; { _1_abbreviate_next = 24 ; } break ; case 24 : ; if ( i < counter ) { { _1_abbreviate_next = 22 ; } } else { { _1_abbreviate_next = 21 ; } } break ; case 22 : tmp___0 = malloc ( 80UL * sizeof ( char ) ) ; * ( words + i ) = ( char * ) tmp___0 ; strcpy ( * ( words + i ) , " " ) ; i ++ ; { _1_abbreviate_next = 24 ; } break ; case 21 : p_str = str ; p_start = p_str ; { _1_abbreviate_next = 19 ; } break ; case 19 : ; if ( p_str ) { { _1_abbreviate_next = 18 ; } } else { { _1_abbreviate_next = 11 ; } } break ; case 18 : ; if ( i <= 80 ) { { _1_abbreviate_next = 15 ; } } else { { _1_abbreviate_next = 11 ; } } break ; case 15 : ; if ( ( int ) * p_str == 32 ) { { _1_abbreviate_next = 14 ; } } else { { _1_abbreviate_next = 13 ; } } break ; case 14 : * p_str = ( char ) ' \000 ' ; strncat ( * ( words + index ) , p_start , 80 ) ; index ++ ; p_start = p_str + 1 ; { _1_abbreviate_next = 13 ; } break ; case 13 : ; if ( i <= 80 ) { { _1_abbreviate_next = 12 ; } } else { { _1_abbreviate_next = 19 ; } } break ; case 12 : p_str ++ ; i ++ ; { _1_abbreviate_next = 19 ; } break ; case 11 : * p_str = ( char ) ' \000 ' ; strncat ( * ( words + index ) , p_start , 80 ) ; index ++ ; i = 0 ; { _1_abbreviate_next = 9 ; } break ; case 9 : ; if ( i < index ) { { _1_abbreviate_next = 7 ; } } else { { _1_abbreviate_next = 6 ; } } break ; case 7 : tmp___1 = toupper ( ( int ) * ( * ( words + i ) + 0 ) ) ; * ( * ( words + i ) + 0 ) = ( char ) tmp___1 ; * ( * ( words + i ) + 1 ) = ( char ) ' \000 ' ; strcat ( acr , * ( words + i ) ) ; i ++ ; { _1_abbreviate_next = 9 ; } break ; case 6 : i = 0 ; { _1_abbreviate_next = 4 ; } break ; case 4 : ; if ( i < counter ) { { _1_abbreviate_next = 2 ; } } else { { _1_abbreviate_next = 1 ; } } break ; case 2 : free ( * ( words + i ) ) ; i ++ ; { _1_abbreviate_next = 4 ; } break ; case 1 : free ( words ) ; { _1_abbreviate_next = 0 ; } break ; case 0 : ; return ( acr ) ; break ; } } } }
>>>Func
METHOD btrace
METHOD_RETURN void
PARAM void
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_btrace_next = 1
LITERAL 1 while (1)
IDENTIFIER _1_btrace_next switch(_1_btrace_next)
LITERAL 1 <empty>
<operator>.assignment n = backtrace(buf, 4096)
backtrace_symbols_fd backtrace_symbols_fd(buf, n, 1)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return; return;
<operator>.assignment _1_btrace_next = 0
backtrace backtrace(buf, 4096)
>>>PDG&16 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->10 0->11 0->12 0->13 0->14 0->15 2->1 5->1 5->1 9->1 9->1 9->10 10->1 10->1 10->1 10->15 13->1 14->1 14->1 15->9 15->9 15->10
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int ( /* missing proto */ backtrace_symbols_fd ) ( ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int ( /* missing proto */ backtrace ) ( ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; void btrace ( void ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void btrace ( void ) { int n ; void * buf [ 4096 ] ; unsigned long _1_btrace_next ; { { _1_btrace_next = 1 ; } while ( 1 ) { switch ( _1_btrace_next ) { case 1 : n = backtrace ( buf , 4096 ) ; backtrace_symbols_fd ( buf , n , 1 ) ; { _1_btrace_next = 0 ; } break ; case 0 : ; return ; break ; } } } } void megaInit ( void ) { { } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD cf
METHOD_RETURN int
PARAM void *a
PARAM void *b
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_cf_next = 1
LITERAL 1 while (1)
IDENTIFIER _1_cf_next switch(_1_cf_next)
LITERAL 1 <empty>
<operator>.assignment x = (int *)a
<operator>.assignment y = (int *)b
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (*y - *x); return (*y - *x);
<operator>.assignment _1_cf_next = 0
<operator>.subtraction *y - *x
<operator>.cast (int *)a
<operator>.cast (int *)b
>>>PDG&19 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->15 0->17 0->18 2->1 2->10 2->17 3->1 3->11 3->18 6->1 6->1 10->1 10->1 10->1 11->1 11->1 11->1 14->1 15->1 15->1 16->1 16->1 16->1 16->14 17->1 18->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int cf ( void * a , void * b ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int cf ( void * a , void * b ) { int * x ; int * y ; unsigned long _1_cf_next ; { { _1_cf_next = 1 ; } while ( 1 ) { switch ( _1_cf_next ) { case 1 : x = ( int * ) a ; y = ( int * ) b ; { _1_cf_next = 0 ; } break ; case 0 : ; return ( * y - * x ) ; break ; } } } } void megaInit ( void ) { { } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD decimal_to_binary
METHOD_RETURN int
PARAM unsigned int number
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_decimal_to_binary_next = 3
LITERAL 1 while (1)
IDENTIFIER _1_decimal_to_binary_next switch(_1_decimal_to_binary_next)
LITERAL 3 <empty>
LITERAL 2 <empty>
<operator>.assignment tmp___0 = 0U
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operator>.assignment tmp = decimal_to_binary(number / 2U)
<operator>.assignment tmp___0 = number % 2U + (unsigned int )(10 * tmp)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return ((int )tmp___0); return ((int )tmp___0);
<operator>.equals number == 0U
<operator>.assignment _1_decimal_to_binary_next = 0
<operator>.assignment _1_decimal_to_binary_next = 0
<operator>.cast (int )tmp___0
BLOCK <empty> <empty>
decimal_to_binary decimal_to_binary(number / 2U)
<operator>.addition number % 2U + (unsigned int )(10 * tmp)
<operator>.assignment _1_decimal_to_binary_next = 2
BLOCK <empty> <empty>
<operator>.division number / 2U
<operator>.modulo number % 2U
<operator>.cast (unsigned int )(10 * tmp)
<operator>.assignment _1_decimal_to_binary_next = 1
<operator>.multiplication 10 * tmp
>>>PDG&32 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->15 0->16 0->18 0->19 0->20 0->21 0->22 0->25 0->26 0->27 0->28 0->30 0->31 2->1 2->18 2->27 5->1 5->1 10->1 10->21 13->1 13->1 13->31 14->1 14->1 14->21 17->1 18->1 18->1 18->25 18->27 18->30 19->1 19->1 20->1 20->1 21->1 21->1 21->17 23->1 23->13 24->1 24->1 25->1 25->1 27->23 27->23 27->28 28->1 28->14 28->14 28->18 28->24 28->24 28->27 29->1 30->1 30->1 31->1 31->14 31->14 31->24 31->24 31->29 31->29
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; int decimal_to_binary ( unsigned int number ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } int decimal_to_binary ( unsigned int number ) { int tmp ; unsigned int tmp___0 ; unsigned long _1_decimal_to_binary_next ; { { _1_decimal_to_binary_next = 3 ; } while ( 1 ) { switch ( _1_decimal_to_binary_next ) { case 3 : ; if ( number == 0U ) { { _1_decimal_to_binary_next = 2 ; } } else { { _1_decimal_to_binary_next = 1 ; } } break ; case 2 : tmp___0 = 0U ; { _1_decimal_to_binary_next = 0 ; } break ; case 1 : tmp = decimal_to_binary ( number / 2U ) ; tmp___0 = number % 2U + ( unsigned int ) ( 10 * tmp ) ; { _1_decimal_to_binary_next = 0 ; } break ; case 0 : ; return ( ( int ) tmp___0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD strStr
METHOD_RETURN int
PARAM char *haystack
PARAM char *needle
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_strStr_next = 3
LITERAL 1 while (1)
IDENTIFIER _1_strStr_next switch(_1_strStr_next)
LITERAL 15 <empty>
LITERAL 13 <empty>
LITERAL 12 <empty>
<operator>.postIncrement i ++
<operator>.postIncrement j ++
BLOCK <empty> <empty>
LITERAL 11 <empty>
LITERAL 10 <empty>
RETURN return (i - j); return (i - j);
LITERAL 9 <empty>
LITERAL 8 <empty>
LITERAL 7 <empty>
LITERAL 6 <empty>
<operator>.assignment j = *(overlap + (j - 1))
BLOCK <empty> <empty>
LITERAL 5 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 4 <empty>
RETURN return (-1); return (-1);
LITERAL 3 <empty>
<operator>.assignment i = 0
<operator>.assignment j = 0
<operator>.assignment tmp = strlen(needle)
<operator>.assignment len_needle = tmp
<operator>.assignment tmp___0 = strlen(haystack)
<operator>.assignment len_haystack = tmp___0
BLOCK <empty> <empty>
LITERAL 2 <empty>
LITERAL 1 <empty>
RETURN return (0); return (0);
LITERAL 0 <empty>
<operator>.assignment __lengthofoverlap = (unsigned long )len_needle
<operator>.assignment tmp___1 = __builtin_alloca(sizeof(*overlap) * __lengthofoverlap)
<operator>.assignment overlap = (int *)tmp___1
fill_overlap fill_overlap(needle, len_needle, overlap)
BLOCK <empty> <empty>
<operator>.lessThan i < len_haystack
<operator>.equals (int )*(needle + j) == (int )*(haystack + i)
<operator>.assignment _1_strStr_next = 11
<operator>.equals j == len_needle
<operator>.subtraction i - j
<operator>.lessThan i < len_haystack
<operator>.notEquals (int )*(needle + j) != (int )*(haystack + i)
<operator>.notEquals j != 0
<operator>.assignment _1_strStr_next = 15
<operator>.assignment _1_strStr_next = 15
<operator>.minus -1
<operator>.assignment _1_strStr_next = 2
<operator>.logicalNot ! len_needle
LITERAL 0 return (0);
<operator>.assignment _1_strStr_next = 15
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
strlen strlen(needle)
strlen strlen(haystack)
BLOCK <empty> <empty>
<operator>.cast (unsigned long )len_needle
__builtin_alloca __builtin_alloca(sizeof(*overlap) * __lengthofoverlap)
<operator>.cast (int *)tmp___1
<operator>.assignment _1_strStr_next = 13
BLOCK <empty> <empty>
<operator>.cast (int )*(needle + j)
<operator>.cast (int )*(haystack + i)
<operator>.assignment _1_strStr_next = 12
BLOCK <empty> <empty>
<operator>.assignment _1_strStr_next = 10
BLOCK <empty> <empty>
<operator>.assignment _1_strStr_next = 8
BLOCK <empty> <empty>
<operator>.cast (int )*(needle + j)
<operator>.cast (int )*(haystack + i)
<operator>.assignment _1_strStr_next = 7
BLOCK <empty> <empty>
<operator>.assignment _1_strStr_next = 6
BLOCK <empty> <empty>
<operator>.addition overlap + (j - 1)
<operator>.assignment _1_strStr_next = 1
BLOCK <empty> <empty>
<operator>.multiplication sizeof(*overlap) * __lengthofoverlap
<operator>.assignment _1_strStr_next = 4
<operator>.assignment _1_strStr_next = 11
<operator>.assignment _1_strStr_next = 9
<operator>.assignment _1_strStr_next = 15
<operator>.assignment _1_strStr_next = 15
<operator>.assignment _1_strStr_next = 5
<operator>.subtraction j - 1
<operator>.assignment _1_strStr_next = 0
<operator>.sizeOf sizeof(*overlap)
<operator>.addition needle + j
<operator>.addition haystack + i
<operator>.addition needle + j
<operator>.addition haystack + i
>>>PDG&106 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->18 0->19 0->20 0->21 0->23 0->24 0->25 0->26 0->27 0->29 0->30 0->31 0->33 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->43 0->44 0->45 0->46 0->48 0->49 0->50 0->51 0->53 0->54 0->55 0->56 0->57 0->58 0->59 0->60 0->61 0->62 0->63 0->64 0->65 0->66 0->67 0->68 0->69 0->70 0->72 0->73 0->74 0->77 0->78 0->79 0->80 0->81 0->82 0->85 0->86 0->87 0->88 0->89 0->90 0->91 0->92 0->93 0->94 0->95 0->96 0->97 0->98 0->99 0->100 0->102 0->103 0->104 0->105 2->1 2->68 2->103 2->105 3->1 3->44 3->67 3->102 3->104 6->1 6->1 12->1 12->25 12->46 12->50 12->51 12->103 12->105 13->1 13->49 13->50 13->53 13->99 13->102 13->104 17->1 22->1 22->1 22->13 22->49 22->50 22->53 22->99 22->102 22->104 25->1 25->12 25->46 25->50 25->51 25->103 25->105 28->1 30->1 30->12 30->25 30->46 30->50 30->51 30->103 30->105 31->1 31->13 31->49 31->50 31->53 31->99 31->102 31->104 32->1 32->1 32->33 33->1 33->1 33->1 33->41 33->44 33->49 33->58 33->70 34->1 34->1 34->35 35->1 35->1 35->1 35->46 35->51 39->1 41->1 41->1 41->92 42->1 42->1 42->43 42->72 43->1 43->1 43->44 44->1 44->1 44->1 44->1 44->41 44->49 44->58 44->67 44->70 44->89 44->102 44->104 46->1 46->1 46->12 46->25 46->50 46->51 46->51 46->73 46->93 46->103 46->105 47->1 47->1 47->1 47->77 47->94 48->1 48->1 49->1 49->1 49->13 49->41 49->44 49->50 49->53 49->58 49->70 49->79 49->95 49->99 49->102 49->104 50->1 50->1 50->1 50->17 51->1 51->1 51->12 51->25 51->46 51->46 51->50 51->81 51->96 51->103 51->105 52->1 52->1 52->1 52->85 52->97 53->1 53->13 53->49 53->50 53->87 53->98 53->99 53->102 53->104 54->1 54->1 55->1 55->1 56->28 57->1 57->1 58->1 58->1 58->41 58->44 58->49 58->70 58->90 58->100 59->39 60->1 60->1 67->1 67->32 67->44 67->102 67->104 68->1 68->34 68->103 68->105 71->1 71->42 72->1 73->1 73->1 75->1 76->1 77->1 77->1 79->1 79->1 81->1 81->1 83->1 84->1 85->1 85->1 87->1 87->1 89->1 89->1 90->1 90->1 92->1 92->71 93->1 93->1 94->1 94->1 95->1 95->1 96->1 96->1 97->1 97->1 98->1 98->1 99->89 99->89 100->1 100->1 101->1 102->1 103->1 104->1 105->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; int strStr ( char * haystack , char * needle ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern int ( /* missing proto */ strlen ) ( ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern double strtod ( char const * str , char const * endptr ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern int ( /* missing proto */ fill_overlap ) ( ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } void main ( void ) { { megaInit ( ) ; } } int strStr ( char * haystack , char * needle ) { int i ; int j ; int len_needle ; int tmp ; int len_haystack ; int tmp___0 ; int * overlap ; unsigned long __lengthofoverlap ; void * tmp___1 ; unsigned long _1_strStr_next ; { { _1_strStr_next = 3 ; } while ( 1 ) { switch ( _1_strStr_next ) { case 15 : ; if ( i < len_haystack ) { { _1_strStr_next = 13 ; } } else { { _1_strStr_next = 4 ; } } break ; case 13 : ; if ( ( int ) * ( needle + j ) == ( int ) * ( haystack + i ) ) { { _1_strStr_next = 12 ; } } else { { _1_strStr_next = 11 ; } } break ; case 12 : i ++ ; j ++ ; { _1_strStr_next = 11 ; } break ; case 11 : ; if ( j == len_needle ) { { _1_strStr_next = 10 ; } } else { { _1_strStr_next = 9 ; } } break ; case 10 : ; return ( i - j ) ; break ; case 9 : ; if ( i < len_haystack ) { { _1_strStr_next = 8 ; } } else { { _1_strStr_next = 15 ; } } break ; case 8 : ; if ( ( int ) * ( needle + j ) != ( int ) * ( haystack + i ) ) { { _1_strStr_next = 7 ; } } else { { _1_strStr_next = 15 ; } } break ; case 7 : ; if ( j != 0 ) { { _1_strStr_next = 6 ; } } else { { _1_strStr_next = 5 ; } } break ; case 6 : j = * ( overlap + ( j - 1 ) ) ; { _1_strStr_next = 15 ; } break ; case 5 : i ++ ; { _1_strStr_next = 15 ; } break ; case 4 : ; return ( -1 ) ; break ; case 3 : i = 0 ; j = 0 ; tmp = strlen ( needle ) ; len_needle = tmp ; tmp___0 = strlen ( haystack ) ; len_haystack = tmp___0 ; { _1_strStr_next = 2 ; } break ; case 2 : ; if ( ! len_needle ) { { _1_strStr_next = 1 ; } } else { { _1_strStr_next = 0 ; } } break ; case 1 : ; return ( 0 ) ; break ; case 0 : __lengthofoverlap = ( unsigned long ) len_needle ; tmp___1 = __builtin_alloca ( sizeof ( * overlap ) * __lengthofoverlap ) ; overlap = ( int * ) tmp___1 ; fill_overlap ( needle , len_needle , overlap ) ; { _1_strStr_next = 15 ; } break ; } } } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 35
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 38 <empty>
printf printf("Case #%d: %d\n", i + 1, tmp)
BLOCK <empty> <empty>
LITERAL 37 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 36 <empty>
RETURN return (0); return (0);
LITERAL 35 <empty>
scanf scanf("%d", & n)
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 33 <empty>
LITERAL 31 <empty>
<operator>.assignment j = 0
BLOCK <empty> <empty>
LITERAL 29 <empty>
LITERAL 27 <empty>
<operator>.assignment pos[j] = 0
<operator>.postIncrement j ++
BLOCK <empty> <empty>
LITERAL 26 <empty>
<operator>.assignment k = 0
BLOCK <empty> <empty>
LITERAL 24 <empty>
LITERAL 22 <empty>
scanf scanf("%d", & row)
<operator>.assignment j = 0
BLOCK <empty> <empty>
LITERAL 20 <empty>
LITERAL 18 <empty>
scanf scanf("%d", & tmp)
BLOCK <empty> <empty>
LITERAL 17 <empty>
LITERAL 16 <empty>
<operator>.postIncrement (pos[tmp]) ++
BLOCK <empty> <empty>
LITERAL 15 <empty>
<operator>.postIncrement j ++
BLOCK <empty> <empty>
LITERAL 14 <empty>
<operator>.postIncrement k ++
BLOCK <empty> <empty>
LITERAL 13 <empty>
<operator>.assignment tmp = 0
<operator>.assignment j = 1
BLOCK <empty> <empty>
LITERAL 11 <empty>
LITERAL 9 <empty>
LITERAL 8 <empty>
LITERAL 7 <empty>
<operator>.assignment tmp = 17
BLOCK <empty> <empty>
LITERAL 6 <empty>
<operator>.assignment tmp = j
BLOCK <empty> <empty>
LITERAL 5 <empty>
<operator>.postIncrement j ++
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 3 <empty>
printf printf("Case #%d: Volunteer cheated!\n", i + 1)
BLOCK <empty> <empty>
LITERAL 1 <empty>
LITERAL 0 <empty>
printf printf("Case #%d: Bad magician!\n", i + 1)
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 37
<operator>.assignment _1_main_next = 33
LITERAL 0 return (0);
<operator>.assignment _1_main_next = 33
<operator>.lessThan i < n
<operator>.assignment _1_main_next = 29
<operator>.lessThan j < 32
<operator>.assignment _1_main_next = 29
<operator>.assignment _1_main_next = 24
<operator>.lessThan k < 2
<operator>.assignment _1_main_next = 20
<operator>.lessThan j < 16
<operator>.assignment _1_main_next = 17
<operator>.equals row - 1 == j / 4
<operator>.assignment _1_main_next = 15
<operator>.assignment _1_main_next = 20
<operator>.assignment _1_main_next = 24
<operator>.assignment _1_main_next = 11
<operator>.lessEqualsThan j <= 16
<operator>.equals pos[j] == 2
IDENTIFIER tmp if (tmp)
<operator>.assignment _1_main_next = 5
<operator>.assignment _1_main_next = 5
<operator>.assignment _1_main_next = 11
<operator>.equals tmp == 0
<operator>.assignment _1_main_next = 37
<operator>.equals tmp == 17
<operator>.assignment _1_main_next = 37
<operator>.addition i + 1
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.addition i + 1
BLOCK <empty> <empty>
<operator>.addition i + 1
<operator>.assignment _1_main_next = 31
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 27
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 22
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 18
BLOCK <empty> <empty>
<operator>.subtraction row - 1
<operator>.division j / 4
<operator>.assignment _1_main_next = 16
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 9
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 8
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 7
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 3
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 0
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 36
<operator>.assignment _1_main_next = 26
<operator>.assignment _1_main_next = 13
<operator>.assignment _1_main_next = 14
<operator>.assignment _1_main_next = 15
<operator>.assignment _1_main_next = 4
<operator>.assignment _1_main_next = 5
<operator>.assignment _1_main_next = 6
<operator>.assignment _1_main_next = 1
<operator>.assignment _1_main_next = 38
>>>PDG&155 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 0->59 0->60 0->61 0->62 0->63 0->64 0->65 0->66 0->67 0->68 0->69 0->70 0->71 0->72 0->73 0->74 0->75 0->76 0->77 0->78 0->79 0->80 0->81 0->82 0->83 0->84 0->85 0->86 0->87 0->88 0->89 0->90 0->91 0->92 0->93 0->94 0->96 0->97 0->98 0->99 0->100 0->101 0->102 0->103 0->104 0->105 0->106 0->107 0->108 0->109 0->110 0->111 0->112 0->113 0->114 0->115 0->116 0->117 0->118 0->119 0->120 0->121 0->122 0->123 0->124 0->125 0->126 0->127 0->128 0->129 0->130 0->131 0->132 0->133 0->134 0->135 0->136 0->137 0->138 0->139 0->140 0->141 0->142 0->143 0->144 0->145 0->146 0->147 0->148 0->149 0->150 0->151 0->152 0->153 0->154 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->1 16->46 16->106 16->108 19->1 19->1 19->16 19->76 19->80 19->86 19->110 19->120 19->122 22->1 24->1 24->86 25->1 25->1 25->16 25->19 25->76 25->80 25->86 25->110 25->120 25->122 29->1 29->1 29->34 29->53 29->69 29->72 29->88 29->93 29->100 29->132 33->1 33->1 33->101 34->1 34->1 34->53 34->69 34->72 34->88 34->93 34->100 34->132 37->1 37->1 37->56 37->91 41->1 41->131 42->1 42->1 42->34 42->53 42->69 42->72 42->88 42->93 42->100 42->132 46->1 46->16 46->106 46->108 50->1 50->1 53->1 53->1 53->34 53->69 53->72 53->88 53->93 53->100 53->132 56->1 56->1 56->91 59->1 59->1 59->16 59->46 59->106 59->108 60->1 60->1 60->34 60->53 60->69 60->72 60->88 60->93 60->100 60->132 66->1 66->1 66->16 66->46 66->106 66->108 69->1 69->1 69->1 69->16 69->46 69->106 69->108 72->1 72->1 72->34 72->53 72->69 72->88 72->93 72->100 72->132 76->1 76->1 80->1 80->1 82->1 82->1 83->1 83->1 84->22 85->1 85->1 86->1 86->1 86->1 86->16 86->19 86->24 86->76 86->80 86->110 86->120 86->122 86->123 86->145 87->1 87->1 88->1 88->1 88->34 88->53 88->69 88->72 88->93 88->100 88->125 88->132 88->146 89->1 89->1 90->1 90->1 91->1 91->1 91->56 91->127 91->147 92->1 92->1 93->1 93->1 93->34 93->53 93->69 93->72 93->88 93->100 93->129 93->132 93->148 94->1 94->1 95->1 95->1 95->1 95->133 95->149 96->1 96->1 97->1 97->1 98->1 98->1 99->1 99->1 100->1 100->1 100->34 100->53 100->69 100->72 100->88 100->93 100->132 100->135 100->150 101->1 101->1 101->137 101->151 103->1 103->1 104->1 104->1 105->1 105->1 106->1 106->1 106->16 106->46 106->108 106->141 106->153 107->1 107->1 108->1 108->1 108->16 108->46 108->106 108->143 108->154 109->1 109->1 110->1 120->1 122->1 123->1 123->1 125->1 125->1 127->1 127->1 129->1 129->1 131->1 131->41 131->95 131->95 132->1 132->34 132->53 132->69 132->72 132->88 132->93 132->95 132->95 132->100 133->1 133->1 135->1 135->1 137->1 137->1 139->1 139->1 141->1 141->1 143->1 143->1 145->1 145->1 146->1 146->1 147->1 147->1 148->1 148->1 149->1 149->1 150->1 150->1 151->1 151->1 152->1 152->1 153->1 153->1 154->1 154->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern double ceil ( double x ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; char * * _global_envp = ( char * * ) 0 ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int ( /* missing proto */ scanf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { int i ; int j ; int k ; int n ; int row ; int pos [ 32 ] ; int tmp ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 35 ; } while ( 1 ) { switch ( _1_main_next ) { case 38 : printf ( " \n " , i + 1 , tmp ) ; { _1_main_next = 37 ; } break ; case 37 : __Cont : /* CIL Label */ i ++ ; { _1_main_next = 33 ; } break ; case 36 : ; return ( 0 ) ; break ; case 35 : scanf ( " " , & n ) ; i = 0 ; { _1_main_next = 33 ; } break ; case 33 : ; if ( i < n ) { { _1_main_next = 31 ; } } else { { _1_main_next = 36 ; } } break ; case 31 : j = 0 ; { _1_main_next = 29 ; } break ; case 29 : ; if ( j < 32 ) { { _1_main_next = 27 ; } } else { { _1_main_next = 26 ; } } break ; case 27 : pos [ j ] = 0 ; j ++ ; { _1_main_next = 29 ; } break ; case 26 : k = 0 ; { _1_main_next = 24 ; } break ; case 24 : ; if ( k < 2 ) { { _1_main_next = 22 ; } } else { { _1_main_next = 13 ; } } break ; case 22 : scanf ( " " , & row ) ; j = 0 ; { _1_main_next = 20 ; } break ; case 20 : ; if ( j < 16 ) { { _1_main_next = 18 ; } } else { { _1_main_next = 14 ; } } break ; case 18 : scanf ( " " , & tmp ) ; { _1_main_next = 17 ; } break ; case 17 : ; if ( row - 1 == j / 4 ) { { _1_main_next = 16 ; } } else { { _1_main_next = 15 ; } } break ; case 16 : ( pos [ tmp ] ) ++ ; { _1_main_next = 15 ; } break ; case 15 : j ++ ; { _1_main_next = 20 ; } break ; case 14 : k ++ ; { _1_main_next = 24 ; } break ; case 13 : tmp = 0 ; j = 1 ; { _1_main_next = 11 ; } break ; case 11 : ; if ( j <= 16 ) { { _1_main_next = 9 ; } } else { { _1_main_next = 4 ; } } break ; case 9 : ; if ( pos [ j ] == 2 ) { { _1_main_next = 8 ; } } else { { _1_main_next = 5 ; } } break ; case 8 : ; if ( tmp ) { { _1_main_next = 7 ; } } else { { _1_main_next = 6 ; } } break ; case 7 : tmp = 17 ; { _1_main_next = 5 ; } break ; case 6 : tmp = j ; { _1_main_next = 5 ; } break ; case 5 : j ++ ; { _1_main_next = 11 ; } break ; case 4 : ; if ( tmp == 0 ) { { _1_main_next = 3 ; } } else { { _1_main_next = 1 ; } } break ; case 3 : printf ( " \n " , i + 1 ) ; { _1_main_next = 37 ; } break ; case 1 : ; if ( tmp == 17 ) { { _1_main_next = 0 ; } } else { { _1_main_next = 38 ; } } break ; case 0 : printf ( " \n " , i + 1 ) ; { _1_main_next = 37 ; } break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD init_marked
METHOD_RETURN void
PARAM char *got
PARAM int s
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_init_marked_next = 5
LITERAL 1 while (1)
IDENTIFIER _1_init_marked_next switch(_1_init_marked_next)
LITERAL 5 <empty>
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 1 <empty>
<operator>.assignment *(got + i) = (char )'\000'
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return; return;
<operator>.assignment _1_init_marked_next = 3
<operator>.lessThan i < s
<operator>.assignment _1_init_marked_next = 3
BLOCK <empty> <empty>
<operator>.cast (char )'\000'
<operator>.assignment _1_init_marked_next = 1
BLOCK <empty> <empty>
<operator>.addition got + i
<operator>.assignment _1_init_marked_next = 0
>>>PDG&28 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 2->1 2->26 3->1 3->20 6->1 6->1 10->1 10->1 10->15 10->20 10->26 14->1 14->1 14->1 15->1 15->1 15->20 15->26 18->1 19->1 19->1 20->1 20->1 20->1 20->15 20->24 20->26 20->27 21->1 21->1 24->1 24->1 26->1 27->1 27->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; void init_marked ( char * got , int s ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } void init_marked ( char * got , int s ) { int i ; unsigned long _1_init_marked_next ; { { _1_init_marked_next = 5 ; } while ( 1 ) { switch ( _1_init_marked_next ) { case 5 : i = 0 ; { _1_init_marked_next = 3 ; } break ; case 3 : ; if ( i < s ) { { _1_init_marked_next = 1 ; } } else { { _1_init_marked_next = 0 ; } } break ; case 1 : * ( got + i ) = ( char ) ' \000 ' ; i ++ ; { _1_init_marked_next = 3 ; } break ; case 0 : ; return ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 6
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 6 <empty>
<operator>.assignment number = 0
<operator>.assignment decimal_number = 0
<operator>.assignment temp = 1
printf printf("\n Enter any binary number= ")
scanf scanf("%d", & number)
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
<operator>.assignment remainder = number % 10
<operator>.assignmentDivision number /= 10
<operator>.assignmentPlus decimal_number += remainder * temp
<operator>.assignmentMultiplication temp *= 2
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("%d\n", decimal_number)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 4
<operator>.greaterThan number > 0
<operator>.assignment _1_main_next = 4
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
BLOCK <empty> <empty>
<operator>.modulo number % 10
<operator>.multiplication remainder * temp
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
>>>PDG&45 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->20 16->35 16->40 17->1 17->1 17->26 17->30 18->1 18->1 18->41 19->1 20->1 20->25 20->35 20->40 24->1 24->1 24->41 25->1 25->1 25->35 25->40 26->1 26->1 26->1 26->30 27->1 27->1 27->41 30->1 30->1 30->26 33->1 34->1 34->1 35->1 35->1 35->40 35->42 35->44 36->1 36->1 37->1 37->1 38->33 40->24 40->24 40->25 41->1 41->26 41->26 41->27 42->1 42->1 44->1 44->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int ( /* missing proto */ scanf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern double log ( double x ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { int remainder ; int number ; int decimal_number ; int temp ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 6 ; } while ( 1 ) { switch ( _1_main_next ) { case 6 : number = 0 ; decimal_number = 0 ; temp = 1 ; printf ( " \n " ) ; scanf ( " " , & number ) ; { _1_main_next = 4 ; } break ; case 4 : ; if ( number > 0 ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : remainder = number % 10 ; number /= 10 ; decimal_number += remainder * temp ; temp *= 2 ; { _1_main_next = 4 ; } break ; case 1 : printf ( " \n " , decimal_number ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD isPalindrome
METHOD_RETURN int
PARAM char *str
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_isPalindrome_next = 7
LITERAL 1 while (1)
IDENTIFIER _1_isPalindrome_next switch(_1_isPalindrome_next)
LITERAL 7 <empty>
<operator>.assignment i = 0
<operator>.assignment tmp = strlen(str)
<operator>.assignment j = tmp - 1
BLOCK <empty> <empty>
LITERAL 5 <empty>
LITERAL 3 <empty>
LITERAL 2 <empty>
RETURN return (0); return (0);
LITERAL 1 <empty>
<operator>.postIncrement i ++
<operator>.postDecrement j --
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (1); return (1);
<operator>.assignment _1_isPalindrome_next = 5
<operator>.lessThan i < j
<operator>.notEquals (int )*(str + i) != (int )*(str + j)
LITERAL 0 return (0);
<operator>.assignment _1_isPalindrome_next = 5
LITERAL 1 return (1);
strlen strlen(str)
<operator>.subtraction tmp - 1
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_isPalindrome_next = 3
BLOCK <empty> <empty>
<operator>.cast (int )*(str + i)
<operator>.cast (int )*(str + j)
<operator>.assignment _1_isPalindrome_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_isPalindrome_next = 0
<operator>.assignment _1_isPalindrome_next = 1
<operator>.addition str + i
<operator>.addition str + j
>>>PDG&43 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->37 0->38 0->39 0->40 0->41 0->42 2->1 2->29 2->41 2->42 5->1 5->1 9->1 9->1 9->18 9->24 9->41 10->1 10->1 10->30 11->1 11->1 11->1 11->19 11->24 11->42 16->1 18->1 18->1 18->24 18->41 19->1 19->1 19->24 19->42 22->1 23->1 23->1 24->1 24->1 24->1 24->18 24->19 24->33 24->39 24->41 24->42 25->1 25->1 25->1 25->37 25->40 26->16 27->1 27->1 28->22 29->1 29->10 29->41 29->42 30->1 30->11 30->11 33->1 33->1 35->1 36->1 37->1 37->1 39->1 39->1 40->1 40->1 41->1 42->1 42->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern int ( /* missing proto */ strlen ) ( ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; int isPalindrome ( char * str ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int isPalindrome ( char * str ) { int i ; int j ; int tmp ; unsigned long _1_isPalindrome_next ; { { _1_isPalindrome_next = 7 ; } while ( 1 ) { switch ( _1_isPalindrome_next ) { case 7 : i = 0 ; tmp = strlen ( str ) ; j = tmp - 1 ; { _1_isPalindrome_next = 5 ; } break ; case 5 : ; if ( i < j ) { { _1_isPalindrome_next = 3 ; } } else { { _1_isPalindrome_next = 0 ; } } break ; case 3 : ; if ( ( int ) * ( str + i ) != ( int ) * ( str + j ) ) { { _1_isPalindrome_next = 2 ; } } else { { _1_isPalindrome_next = 1 ; } } break ; case 2 : ; return ( 0 ) ; break ; case 1 : i ++ ; j -- ; { _1_isPalindrome_next = 5 ; } break ; case 0 : ; return ( 1 ) ; break ; } } } } void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 11
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 11 <empty>
<operator>.assignment sum = 0
<operator>.assignment str = (char const   *)*(argv + 1)
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 9 <empty>
LITERAL 7 <empty>
<operator>.assignmentPlus sum += i
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 6 <empty>
<operator>.assignment t = str
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
<operator>.assignmentPlus sum += (int )*t
<operator>.postIncrement t ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("Sum is: %d\n", sum)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 9
<operator>.lessThan i < 16
<operator>.assignment _1_main_next = 9
<operator>.assignment _1_main_next = 4
<operator>.assignment _1_main_next = 4
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
<operator>.cast (char const   *)*(argv + 1)
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.cast (int )*t
<operator>.assignment _1_main_next = 7
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.addition argv + 1
<operator>.assignment _1_main_next = 6
<operator>.assignment _1_main_next = 1
<operator>.indirection *t
>>>PDG&57 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->46 0->47 0->49 0->50 0->51 0->52 0->53 0->54 0->55 2->7 3->8 3->53 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->22 16->30 16->34 17->1 17->1 17->1 17->26 18->1 18->1 18->22 18->23 18->39 22->1 22->1 22->30 22->34 23->1 23->1 23->22 23->39 26->1 26->1 26->1 26->31 30->1 30->1 30->1 30->22 30->34 31->1 31->1 34->1 34->1 34->22 34->30 37->1 38->1 38->1 39->1 39->1 39->22 39->23 39->49 39->54 40->1 40->1 41->1 41->1 42->1 42->1 43->1 43->1 44->37 45->1 48->1 49->1 49->1 51->1 51->1 53->1 54->1 54->1 55->1 55->1 56->51 56->55
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int argc , char * * argv , char * * _formal_envp ) { int i ; int sum ; char const * str ; register char const * t ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 11 ; } while ( 1 ) { switch ( _1_main_next ) { case 11 : sum = 0 ; str = ( char const * ) * ( argv + 1 ) ; i = 0 ; { _1_main_next = 9 ; } break ; case 9 : ; if ( i < 16 ) { { _1_main_next = 7 ; } } else { { _1_main_next = 6 ; } } break ; case 7 : sum += i ; i ++ ; { _1_main_next = 9 ; } break ; case 6 : t = str ; { _1_main_next = 4 ; } break ; case 4 : ; if ( * t ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : sum += ( int ) * t ; t ++ ; { _1_main_next = 4 ; } break ; case 1 : printf ( " \n " , sum ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD maxval
METHOD_RETURN int
PARAM int a
PARAM int b
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_maxval_next = 3
LITERAL 1 while (1)
IDENTIFIER _1_maxval_next switch(_1_maxval_next)
LITERAL 3 <empty>
LITERAL 2 <empty>
RETURN return (a); return (a);
LITERAL 1 <empty>
RETURN return (b); return (b);
<operator>.greaterThan a > b
IDENTIFIER a return (a);
IDENTIFIER b return (b);
BLOCK <empty> <empty>
<operator>.assignment _1_maxval_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_maxval_next = 1
>>>PDG&21 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->12 0->14 0->15 0->16 0->17 0->18 0->19 0->20 2->1 2->14 2->15 3->1 3->14 3->16 6->1 6->1 11->1 13->1 14->1 14->1 14->1 14->15 14->16 14->18 14->20 15->11 16->13 18->1 18->1 20->1 20->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; int maxval ( int a , int b ) ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } int maxval ( int a , int b ) { unsigned long _1_maxval_next ; { { _1_maxval_next = 3 ; } while ( 1 ) { switch ( _1_maxval_next ) { case 3 : ; if ( a > b ) { { _1_maxval_next = 2 ; } } else { { _1_maxval_next = 1 ; } } break ; case 2 : ; return ( a ) ; break ; case 1 : ; return ( b ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD fib
METHOD_RETURN int
PARAM int N
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_fib_next = 5
LITERAL 1 while (1)
IDENTIFIER _1_fib_next switch(_1_fib_next)
LITERAL 5 <empty>
LITERAL 4 <empty>
RETURN return (0); return (0);
LITERAL 3 <empty>
LITERAL 2 <empty>
RETURN return (1); return (1);
LITERAL 1 <empty>
<operator>.assignment tmp = fib(N - 1)
<operator>.assignment tmp___0 = fib(N - 2)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (tmp + tmp___0); return (tmp + tmp___0);
<operator>.equals N == 0
LITERAL 0 return (0);
<operator>.equals N == 1
LITERAL 1 return (1);
<operator>.assignment _1_fib_next = 0
<operator>.addition tmp + tmp___0
BLOCK <empty> <empty>
BLOCK <empty> <empty>
fib fib(N - 1)
fib fib(N - 2)
<operator>.assignment _1_fib_next = 4
BLOCK <empty> <empty>
<operator>.assignment _1_fib_next = 2
BLOCK <empty> <empty>
<operator>.subtraction N - 1
<operator>.subtraction N - 2
<operator>.assignment _1_fib_next = 3
<operator>.assignment _1_fib_next = 1
>>>PDG&38 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->17 0->18 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 2->1 2->20 2->22 2->34 5->1 5->1 10->1 13->1 15->1 15->1 15->1 15->25 16->1 16->1 16->1 16->25 19->1 20->1 20->1 20->22 20->30 20->34 20->36 21->10 22->1 22->1 22->20 22->32 22->34 22->37 23->13 24->1 24->1 25->19 28->1 28->15 29->1 29->16 30->1 30->1 32->1 32->1 34->28 34->28 34->35 35->1 35->20 35->22 35->29 35->29 35->34 36->1 36->1 37->1 37->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; int fib ( int N ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int fib ( int N ) { int tmp ; int tmp___0 ; unsigned long _1_fib_next ; { { _1_fib_next = 5 ; } while ( 1 ) { switch ( _1_fib_next ) { case 5 : ; if ( N == 0 ) { { _1_fib_next = 4 ; } } else { { _1_fib_next = 3 ; } } break ; case 4 : ; return ( 0 ) ; break ; case 3 : ; if ( N == 1 ) { { _1_fib_next = 2 ; } } else { { _1_fib_next = 1 ; } } break ; case 2 : ; return ( 1 ) ; break ; case 1 : tmp = fib ( N - 1 ) ; tmp___0 = fib ( N - 2 ) ; { _1_fib_next = 0 ; } break ; case 0 : ; return ( tmp + tmp___0 ) ; break ; } } } } void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } }
>>>Func
METHOD twoSum
METHOD_RETURN int*
PARAM int *nums
PARAM int numsSize
PARAM int target
PARAM int *returnSize
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_twoSum_next = 13
LITERAL 1 while (1)
IDENTIFIER _1_twoSum_next switch(_1_twoSum_next)
LITERAL 13 <empty>
<operator>.assignment tmp = calloc(2  sizeof(int ))
<operator>.assignment ret = (int *)tmp
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 11 <empty>
LITERAL 9 <empty>
<operator>.assignment key = target - *(nums + i)
<operator>.assignment j = i + 1
BLOCK <empty> <empty>
LITERAL 7 <empty>
LITERAL 5 <empty>
LITERAL 4 <empty>
<operator>.assignment *(ret + 0) = i
<operator>.assignment *(ret + 1) = j
BLOCK <empty> <empty>
LITERAL 3 <empty>
<operator>.postIncrement j ++
BLOCK <empty> <empty>
LITERAL 2 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operator>.assignment *returnSize = 2
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (ret); return (ret);
<operator>.assignment _1_twoSum_next = 11
<operator>.lessThan i < numsSize
<operator>.assignment _1_twoSum_next = 7
<operator>.lessThan j < numsSize
<operator>.equals *(nums + j) == key
<operator>.assignment _1_twoSum_next = 3
<operator>.assignment _1_twoSum_next = 7
<operator>.assignment _1_twoSum_next = 11
<operator>.assignment _1_twoSum_next = 0
IDENTIFIER ret return (ret);
calloc calloc(2  sizeof(int ))
<operator>.cast (int *)tmp
BLOCK <empty> <empty>
<operator>.subtraction target - *(nums + i)
<operator>.addition i + 1
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.sizeOf sizeof(int )
<operator>.assignment _1_twoSum_next = 9
BLOCK <empty> <empty>
<operator>.assignment _1_twoSum_next = 5
BLOCK <empty> <empty>
<operator>.assignment _1_twoSum_next = 4
BLOCK <empty> <empty>
<operator>.addition ret + 0
<operator>.addition ret + 1
<operator>.assignment _1_twoSum_next = 1
<operator>.addition nums + i
<operator>.assignment _1_twoSum_next = 2
<operator>.addition nums + j
<operator>.assignment _1_twoSum_next = 3
>>>PDG&69 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->56 0->57 0->58 0->59 0->60 0->61 0->62 0->63 0->64 0->65 0->66 0->67 0->68 2->1 2->65 2->67 3->1 3->39 3->41 4->1 4->51 5->1 8->1 8->1 12->1 12->1 12->13 12->49 13->1 13->1 13->1 13->47 13->62 13->63 14->1 14->1 14->19 14->24 14->31 14->39 14->52 14->65 18->1 18->1 18->1 18->42 19->1 19->1 19->1 19->25 19->28 19->41 19->67 24->1 24->1 24->1 25->1 25->1 25->1 28->1 28->1 28->25 28->41 28->67 31->1 31->1 31->19 31->24 31->39 31->52 31->65 34->1 34->1 37->1 38->1 38->1 39->1 39->1 39->1 39->19 39->24 39->31 39->41 39->52 39->56 39->64 39->65 40->1 40->1 41->1 41->1 41->1 41->25 41->28 41->39 41->58 41->66 41->67 42->1 42->1 42->1 42->60 42->68 43->1 43->1 44->1 44->1 45->1 45->1 46->1 46->1 47->37 49->1 51->1 51->1 51->18 51->18 52->1 55->1 56->1 56->1 58->1 58->1 60->1 60->1 63->1 64->1 64->1 65->1 66->1 66->1 67->1 67->1 68->1 68->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int ( /* missing proto */ calloc ) ( ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern double ceil ( double x ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; int * twoSum ( int * nums , int numsSize , int target , int * returnSize ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } } int * twoSum ( int * nums , int numsSize , int target , int * returnSize ) { int i ; int j ; int * ret ; int tmp ; int key ; unsigned long _1_twoSum_next ; { { _1_twoSum_next = 13 ; } while ( 1 ) { switch ( _1_twoSum_next ) { case 13 : tmp = calloc ( 2 , sizeof ( int ) ) ; ret = ( int * ) tmp ; i = 0 ; { _1_twoSum_next = 11 ; } break ; case 11 : ; if ( i < numsSize ) { { _1_twoSum_next = 9 ; } } else { { _1_twoSum_next = 1 ; } } break ; case 9 : key = target - * ( nums + i ) ; j = i + 1 ; { _1_twoSum_next = 7 ; } break ; case 7 : ; if ( j < numsSize ) { { _1_twoSum_next = 5 ; } } else { { _1_twoSum_next = 2 ; } } break ; case 5 : ; if ( * ( nums + j ) == key ) { { _1_twoSum_next = 4 ; } } else { { _1_twoSum_next = 3 ; } } break ; case 4 : * ( ret + 0 ) = i ; * ( ret + 1 ) = j ; { _1_twoSum_next = 3 ; } break ; case 3 : j ++ ; { _1_twoSum_next = 7 ; } break ; case 2 : i ++ ; { _1_twoSum_next = 11 ; } break ; case 1 : * returnSize = 2 ; { _1_twoSum_next = 0 ; } break ; case 0 : ; return ( ret ) ; break ; } } } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 8
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 8 <empty>
<operator>.assignment sum = 0
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 6 <empty>
LITERAL 4 <empty>
LITERAL 3 <empty>
<operator>.assignmentPlus sum += 64
BLOCK <empty> <empty>
LITERAL 2 <empty>
<operator>.assignmentPlus sum += i
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("Sum is: %d\n", sum)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 6
<operator>.lessThan i < argc
<operator>.lessThan sum < 127
<operator>.assignment _1_main_next = 2
<operator>.assignment _1_main_next = 6
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 4
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 3
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
<operator>.assignment _1_main_next = 2
>>>PDG&48 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 2->7 2->34 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->22 16->25 16->29 16->35 17->1 17->1 17->25 17->26 17->34 22->1 22->1 22->25 22->29 22->35 25->1 25->1 25->22 25->29 25->35 26->1 26->1 26->25 26->34 29->1 29->1 29->22 29->25 29->35 32->1 33->1 33->1 34->1 34->1 34->1 34->25 34->26 34->42 34->46 35->1 35->1 35->22 35->25 35->29 35->44 35->47 36->1 36->1 37->1 37->1 38->1 38->1 39->32 42->1 42->1 44->1 44->1 46->1 46->1 47->1 47->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int argc , char * * argv , char * * _formal_envp ) { int i ; int sum ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 8 ; } while ( 1 ) { switch ( _1_main_next ) { case 8 : sum = 0 ; i = 0 ; { _1_main_next = 6 ; } break ; case 6 : ; if ( i < argc ) { { _1_main_next = 4 ; } } else { { _1_main_next = 1 ; } } break ; case 4 : ; if ( sum < 127 ) { { _1_main_next = 3 ; } } else { { _1_main_next = 2 ; } } break ; case 3 : sum += 64 ; { _1_main_next = 2 ; } break ; case 2 : sum += i ; i ++ ; { _1_main_next = 6 ; } break ; case 1 : printf ( " \n " , sum ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 8
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 8 <empty>
<operator>.assignment sum = 0
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 6 <empty>
LITERAL 4 <empty>
<operator>.assignmentPlus sum += i
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 2 <empty>
printf printf("Sum is: %d\n", sum)
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("Sum is: %d\n", sum)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 6
<operator>.lessThan i < (int )*(*(argv + 1) + 0)
<operator>.assignment _1_main_next = 6
<operator>.greaterThan sum > 8128
<operator>.assignment _1_main_next = 0
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.cast (int )*(*(argv + 1) + 0)
<operator>.assignment _1_main_next = 4
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 3
<operator>.assignment _1_main_next = 1
<operator>.addition *(argv + 1) + 0
<operator>.addition argv + 1
>>>PDG&51 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 2->7 3->8 3->50 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->21 16->26 16->29 16->36 17->1 17->1 17->21 17->22 17->34 21->1 21->1 21->26 21->29 21->36 22->1 22->1 22->21 22->34 26->1 26->1 26->21 26->29 26->36 29->1 29->1 29->21 29->26 29->36 32->1 33->1 33->1 34->1 34->1 34->1 34->21 34->22 34->43 34->47 35->1 35->1 36->1 36->1 36->21 36->26 36->29 36->45 36->48 37->1 37->1 38->1 38->1 39->32 42->1 43->1 43->1 45->1 45->1 47->1 47->1 48->1 48->1 49->1 50->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int argc , char * * argv , char * * _formal_envp ) { int i ; int sum ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 8 ; } while ( 1 ) { switch ( _1_main_next ) { case 8 : sum = 0 ; i = 0 ; { _1_main_next = 6 ; } break ; case 6 : ; if ( i < ( int ) * ( * ( argv + 1 ) + 0 ) ) { { _1_main_next = 4 ; } } else { { _1_main_next = 3 ; } } break ; case 4 : sum += i ; i ++ ; { _1_main_next = 6 ; } break ; case 3 : ; if ( sum > 8128 ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : printf ( " \n " , sum ) ; { _1_main_next = 0 ; } break ; case 1 : printf ( " \n " , sum ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD swap
METHOD_RETURN void
PARAM int *first
PARAM int *second
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_swap_next = 1
LITERAL 1 while (1)
IDENTIFIER _1_swap_next switch(_1_swap_next)
LITERAL 1 <empty>
<operator>.assignment temp = *first
<operator>.assignment *first = *second
<operator>.assignment *second = temp
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return; return;
<operator>.assignment _1_swap_next = 0
>>>PDG&17 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->12 0->13 0->14 0->15 0->16 2->1 3->1 6->1 6->1 10->1 10->12 11->1 11->1 11->10 12->1 12->1 12->1 12->11 15->1 16->1 16->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void swap ( int * first , int * second ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void swap ( int * first , int * second ) { int temp ; unsigned long _1_swap_next ; { { _1_swap_next = 1 ; } while ( 1 ) { switch ( _1_swap_next ) { case 1 : temp = * first ; * first = * second ; * second = temp ; { _1_swap_next = 0 ; } break ; case 0 : ; return ; break ; } } } } void megaInit ( void ) { { } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 8
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 8 <empty>
<operator>.assignment sum = 0
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 6 <empty>
LITERAL 4 <empty>
<operator>.assignmentPlus sum += i
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 2 <empty>
printf printf("Sum is: %d\n", sum)
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("Sum is: %d\n", sum)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 6
<operator>.lessThan i < (int )*(*(argv + 1) + 0)
<operator>.assignment _1_main_next = 6
<operator>.equals sum == 8128
<operator>.assignment _1_main_next = 0
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.cast (int )*(*(argv + 1) + 0)
<operator>.assignment _1_main_next = 4
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 3
<operator>.assignment _1_main_next = 1
<operator>.addition *(argv + 1) + 0
<operator>.addition argv + 1
>>>PDG&51 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 2->7 3->8 3->50 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->21 16->26 16->29 16->36 17->1 17->1 17->21 17->22 17->34 21->1 21->1 21->26 21->29 21->36 22->1 22->1 22->21 22->34 26->1 26->1 26->21 26->29 26->36 29->1 29->1 29->21 29->26 29->36 32->1 33->1 33->1 34->1 34->1 34->1 34->21 34->22 34->43 34->47 35->1 35->1 36->1 36->1 36->21 36->26 36->29 36->45 36->48 37->1 37->1 38->1 38->1 39->32 42->1 43->1 43->1 45->1 45->1 47->1 47->1 48->1 48->1 49->1 50->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int argc , char * * argv , char * * _formal_envp ) { int i ; int sum ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 8 ; } while ( 1 ) { switch ( _1_main_next ) { case 8 : sum = 0 ; i = 0 ; { _1_main_next = 6 ; } break ; case 6 : ; if ( i < ( int ) * ( * ( argv + 1 ) + 0 ) ) { { _1_main_next = 4 ; } } else { { _1_main_next = 3 ; } } break ; case 4 : sum += i ; i ++ ; { _1_main_next = 6 ; } break ; case 3 : ; if ( sum == 8128 ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : printf ( " \n " , sum ) ; { _1_main_next = 0 ; } break ; case 1 : printf ( " \n " , sum ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 7
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 7 <empty>
<operator>.assignment c = (unsigned char )*(*(argv + 1) + 0)
BLOCK <empty> <empty>
LITERAL 6 <empty>
LITERAL 5 <empty>
printf printf("if-1-win ")
BLOCK <empty> <empty>
LITERAL 4 <empty>
printf printf("if-1-lose ")
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 2 <empty>
printf printf("if-2-win\n")
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("if-2-lose\n")
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 6
<operator>.greaterThan (int )c > 127
<operator>.assignment _1_main_next = 3
<operator>.assignment _1_main_next = 3
<operator>.equals (int )c == 63
<operator>.assignment _1_main_next = 0
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
<operator>.cast (unsigned char )*(*(argv + 1) + 0)
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.cast (int )c
<operator>.assignment _1_main_next = 5
BLOCK <empty> <empty>
<operator>.cast (int )c
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.addition *(argv + 1) + 0
<operator>.assignment _1_main_next = 4
<operator>.assignment _1_main_next = 1
<operator>.addition argv + 1
>>>PDG&55 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 2->7 3->8 3->54 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->1 16->35 16->38 16->45 16->48 20->1 23->1 27->1 30->1 33->1 34->1 34->1 35->1 35->1 35->46 35->52 36->1 36->1 37->1 37->1 38->1 38->1 38->49 38->53 39->1 39->1 40->1 40->1 41->33 42->1 45->1 46->1 46->1 48->1 49->1 49->1 51->1 52->1 52->1 53->1 53->1 54->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int argc , char * * argv , char * * _formal_envp ) { unsigned char c ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 7 ; } while ( 1 ) { switch ( _1_main_next ) { case 7 : c = ( unsigned char ) * ( * ( argv + 1 ) + 0 ) ; { _1_main_next = 6 ; } break ; case 6 : ; if ( ( int ) c > 127 ) { { _1_main_next = 5 ; } } else { { _1_main_next = 4 ; } } break ; case 5 : printf ( " " ) ; { _1_main_next = 3 ; } break ; case 4 : printf ( " " ) ; { _1_main_next = 3 ; } break ; case 3 : ; if ( ( int ) c == 63 ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : printf ( " \n " ) ; { _1_main_next = 0 ; } break ; case 1 : printf ( " \n " ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD display
METHOD_RETURN void
PARAM int *arr
PARAM int n
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_display_next = 6
LITERAL 1 while (1)
IDENTIFIER _1_display_next switch(_1_display_next)
LITERAL 6 <empty>
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
printf printf("%d "  *(arr + i))
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("\n")
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return; return;
<operator>.assignment _1_display_next = 4
<operator>.lessThan i < n
<operator>.assignment _1_display_next = 4
<operator>.assignment _1_display_next = 0
BLOCK <empty> <empty>
<operator>.assignment _1_display_next = 2
BLOCK <empty> <empty>
<operator>.addition arr + i
<operator>.assignment _1_display_next = 1
>>>PDG&31 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 2->1 2->29 3->1 3->23 6->1 6->1 10->1 10->1 10->15 10->23 10->29 14->1 14->1 15->1 15->1 15->23 15->29 18->1 21->1 22->1 22->1 23->1 23->1 23->1 23->15 23->27 23->29 23->30 24->1 24->1 25->1 25->1 27->1 27->1 29->1 30->1 30->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; void display ( int * arr , int n ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } void display ( int * arr , int n ) { int i ; unsigned long _1_display_next ; { { _1_display_next = 6 ; } while ( 1 ) { switch ( _1_display_next ) { case 6 : i = 0 ; { _1_display_next = 4 ; } break ; case 4 : ; if ( i < n ) { { _1_display_next = 2 ; } } else { { _1_display_next = 1 ; } } break ; case 2 : printf ( " " , * ( arr + i ) ) ; i ++ ; { _1_display_next = 4 ; } break ; case 1 : printf ( " \n " ) ; { _1_display_next = 0 ; } break ; case 0 : ; return ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD FNVHash
METHOD_RETURN unsigned int
PARAM char *str
PARAM unsigned int len
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_FNVHash_next = 5
LITERAL 1 while (1)
IDENTIFIER _1_FNVHash_next switch(_1_FNVHash_next)
LITERAL 5 <empty>
<operator>.assignment fnv_prime = 2166136261U
<operator>.assignment hash = 0U
<operator>.assignment i = 0U
<operator>.assignment i = 0U
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 1 <empty>
<operator>.assignmentMultiplication hash *= fnv_prime
<operators>.assignmentXor hash ^= (unsigned int )*str
<operator>.postIncrement str ++
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (hash); return (hash);
<operator>.assignment _1_FNVHash_next = 3
<operator>.lessThan i < len
<operator>.assignment _1_FNVHash_next = 3
IDENTIFIER hash return (hash);
BLOCK <empty> <empty>
<operator>.cast (unsigned int )*str
<operator>.assignment _1_FNVHash_next = 1
BLOCK <empty> <empty>
<operator>.assignment _1_FNVHash_next = 0
>>>PDG&33 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->24 0->25 0->26 0->27 0->28 0->30 0->31 0->32 2->1 2->19 3->1 3->25 6->1 6->1 10->1 10->1 10->17 11->1 11->1 11->17 11->27 13->1 13->1 13->20 13->25 17->1 17->1 17->18 18->1 18->1 18->17 18->27 19->1 19->1 20->1 20->1 20->25 23->1 24->1 24->1 25->1 25->1 25->1 25->20 25->30 25->32 26->1 26->1 27->23 29->1 30->1 30->1 32->1 32->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; unsigned int FNVHash ( char * str , unsigned int len ) ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } unsigned int FNVHash ( char * str , unsigned int len ) { unsigned int fnv_prime ; unsigned int hash ; unsigned int i ; unsigned long _1_FNVHash_next ; { { _1_FNVHash_next = 5 ; } while ( 1 ) { switch ( _1_FNVHash_next ) { case 5 : fnv_prime = 2166136261U ; hash = 0U ; i = 0U ; i = 0U ; { _1_FNVHash_next = 3 ; } break ; case 3 : ; if ( i < len ) { { _1_FNVHash_next = 1 ; } } else { { _1_FNVHash_next = 0 ; } } break ; case 1 : hash *= fnv_prime ; hash ^= ( unsigned int ) * str ; str ++ ; i ++ ; { _1_FNVHash_next = 3 ; } break ; case 0 : ; return ( hash ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD retrieve_index_from_hash
METHOD_RETURN unsigned int
PARAM long long const   hash
PARAM unsigned int const   capacity
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_retrieve_index_from_hash_next = 0
LITERAL 1 while (1)
IDENTIFIER _1_retrieve_index_from_hash_next switch(_1_retrieve_index_from_hash_next)
LITERAL 0 <empty>
RETURN return ((unsigned int )((long long const   )(capacity - 1U) & (hash ^ (hash >> 12)))); return ((unsigned int )((long long const   )(capacity - 1U) & (hash ^ (hash >> 12))));
<operator>.cast (unsigned int )((long long const   )(capacity - 1U) & (hash ^ (hash >> 12)))
<operator>.and (long long const   )(capacity - 1U) & (hash ^ (hash >> 12))
<operator>.cast (long long const   )(capacity - 1U)
<operator>.xor hash ^ (hash >> 12)
<operator>.subtraction capacity - 1U
<operator>.arithmeticShiftRight hash >> 12
>>>PDG&17 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->14 0->15 0->16 2->16 3->15 6->1 6->1 10->1 11->1 11->1 11->10 12->1 12->1 12->11 12->11 13->1 14->1 14->1 14->12 14->12 15->1 15->12 15->12 15->13 15->13 16->14 16->14
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; unsigned int retrieve_index_from_hash ( long long const hash , unsigned int const capacity ) ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; unsigned int retrieve_index_from_hash ( long long const hash , unsigned int const capacity ) { unsigned long _1_retrieve_index_from_hash_next ; { { _1_retrieve_index_from_hash_next = 0 ; } while ( 1 ) { switch ( _1_retrieve_index_from_hash_next ) { case 0 : ; return ( ( unsigned int ) ( ( long long const ) ( capacity - 1U ) & ( hash ^ ( hash >> 12 ) ) ) ) ; break ; } } } } void megaInit ( void ) { { } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 9
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 9 <empty>
<operator>.assignment sum = 0
<operator>.assignment str = (char const   *)*(argv + 1)
<operator>.assignment t = str
BLOCK <empty> <empty>
LITERAL 7 <empty>
LITERAL 5 <empty>
LITERAL 4 <empty>
<operator>.assignmentPlus sum += (int )*t
BLOCK <empty> <empty>
LITERAL 3 <empty>
<operator>.assignmentPlus sum += (int )*t
BLOCK <empty> <empty>
LITERAL 2 <empty>
<operator>.postIncrement t ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("Sum is: %d\n", sum)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 7
<operator>.greaterThan (int const   )*t > 127
<operator>.assignment _1_main_next = 2
<operator>.assignment _1_main_next = 2
<operator>.assignment _1_main_next = 7
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
<operator>.cast (char const   *)*(argv + 1)
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.cast (int )*t
<operator>.cast (int )*t
<operator>.assignment _1_main_next = 5
BLOCK <empty> <empty>
<operator>.cast (int const   )*t
<operator>.assignment _1_main_next = 4
BLOCK <empty> <empty>
<operator>.addition argv + 1
<operator>.assignment _1_main_next = 1
<operator>.assignment _1_main_next = 3
<operator>.indirection *t
>>>PDG&57 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->44 0->45 0->48 0->49 0->51 0->52 0->53 0->54 0->55 2->7 3->8 3->53 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->23 16->26 16->32 17->1 17->1 17->18 18->1 18->1 18->1 18->29 23->1 23->1 23->1 23->26 23->32 26->1 26->1 26->1 26->23 26->32 29->1 29->1 32->1 32->1 32->23 32->26 35->1 36->1 36->1 37->1 37->1 37->51 37->55 38->1 38->1 39->1 39->1 40->1 40->1 41->1 41->1 42->35 43->1 46->1 47->1 48->1 48->1 50->1 51->1 51->1 53->1 54->1 54->1 55->1 55->1 56->48 56->54
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int argc , char * * argv , char * * _formal_envp ) { int sum ; char const * str ; register char const * t ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 9 ; } while ( 1 ) { switch ( _1_main_next ) { case 9 : sum = 0 ; str = ( char const * ) * ( argv + 1 ) ; t = str ; { _1_main_next = 7 ; } break ; case 7 : ; if ( * t ) { { _1_main_next = 5 ; } } else { { _1_main_next = 1 ; } } break ; case 5 : ; if ( ( int const ) * t > 127 ) { { _1_main_next = 4 ; } } else { { _1_main_next = 3 ; } } break ; case 4 : sum += ( int ) * t ; { _1_main_next = 2 ; } break ; case 3 : sum += ( int ) * t ; { _1_main_next = 2 ; } break ; case 2 : t ++ ; { _1_main_next = 7 ; } break ; case 1 : printf ( " \n " , sum ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 1 <empty>
test test()
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
>>>PDG&22 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 19->1 20->1 20->1 21->19
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int ( /* missing proto */ test ) ( ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern double log ( double x ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 1 ; } while ( 1 ) { switch ( _1_main_next ) { case 1 : test ( ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 9
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 9 <empty>
<operator>.assignment sum = 0
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 7 <empty>
LITERAL 5 <empty>
LITERAL 4 <empty>
<operator>.assignmentPlus sum += i
BLOCK <empty> <empty>
LITERAL 3 <empty>
<operator>.assignmentMultiplication sum *= i
BLOCK <empty> <empty>
LITERAL 2 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("Sum is: %d\n", sum)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 7
<operator>.lessThan i < (int )*(*(argv + 1) + 0)
<operator>.equals (int )*(*(argv + 1) + 0) == 127
<operator>.assignment _1_main_next = 2
<operator>.assignment _1_main_next = 2
<operator>.assignment _1_main_next = 7
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.cast (int )*(*(argv + 1) + 0)
<operator>.assignment _1_main_next = 5
BLOCK <empty> <empty>
<operator>.cast (int )*(*(argv + 1) + 0)
<operator>.assignment _1_main_next = 4
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
<operator>.assignment _1_main_next = 3
<operator>.addition *(argv + 1) + 0
<operator>.addition *(argv + 1) + 0
<operator>.addition argv + 1
<operator>.addition argv + 1
>>>PDG&57 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->46 0->47 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 2->7 3->8 3->55 3->56 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->22 16->25 16->31 17->1 17->1 17->22 17->25 17->28 17->36 22->1 22->1 22->1 22->25 22->31 25->1 25->1 25->1 25->22 25->31 28->1 28->1 28->22 28->25 28->36 31->1 31->1 31->22 31->25 34->1 35->1 35->1 36->1 36->1 36->1 36->22 36->25 36->28 36->46 36->51 37->1 37->1 37->49 37->52 38->1 38->1 39->1 39->1 40->1 40->1 41->1 41->1 42->34 45->1 46->1 46->1 48->1 49->1 49->1 51->1 51->1 52->1 52->1 53->1 54->1 55->1 56->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int argc , char * * argv , char * * _formal_envp ) { int i ; int sum ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 9 ; } while ( 1 ) { switch ( _1_main_next ) { case 9 : sum = 0 ; i = 0 ; { _1_main_next = 7 ; } break ; case 7 : ; if ( i < ( int ) * ( * ( argv + 1 ) + 0 ) ) { { _1_main_next = 5 ; } } else { { _1_main_next = 1 ; } } break ; case 5 : ; if ( ( int ) * ( * ( argv + 1 ) + 0 ) == 127 ) { { _1_main_next = 4 ; } } else { { _1_main_next = 3 ; } } break ; case 4 : sum += i ; { _1_main_next = 2 ; } break ; case 3 : sum *= i ; { _1_main_next = 2 ; } break ; case 2 : i ++ ; { _1_main_next = 7 ; } break ; case 1 : printf ( " \n " , sum ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 5
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 5 <empty>
test test()
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 1 <empty>
<operator>.assignment tmp = fib(i)
printf printf("%d. fibonacci number is: %d\n", i, tmp)
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 3
<operator>.lessEqualsThan i <= 10
<operator>.assignment _1_main_next = 3
LITERAL 0 return (0);
BLOCK <empty> <empty>
fib fib(i)
<operator>.assignment _1_main_next = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 0
>>>PDG&36 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 17->1 17->1 17->28 17->32 21->1 21->1 21->22 22->1 22->1 22->23 23->1 23->1 23->28 23->32 26->1 27->1 27->1 28->1 28->1 28->32 28->33 28->35 29->1 29->1 30->26 32->21 32->22 33->1 33->1 35->1 35->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern double ceil ( double x ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int ( /* missing proto */ fib ) ( ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int ( /* missing proto */ test ) ( ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { int i ; int tmp ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 5 ; } while ( 1 ) { switch ( _1_main_next ) { case 5 : test ( ) ; i = 0 ; { _1_main_next = 3 ; } break ; case 3 : ; if ( i <= 10 ) { { _1_main_next = 1 ; } } else { { _1_main_next = 0 ; } } break ; case 1 : tmp = fib ( i ) ; printf ( " \n " , i , tmp ) ; i ++ ; { _1_main_next = 3 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD reverseString
METHOD_RETURN void
PARAM char *s
PARAM int sSize
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_reverseString_next = 5
LITERAL 1 while (1)
IDENTIFIER _1_reverseString_next switch(_1_reverseString_next)
LITERAL 5 <empty>
<operator>.assignment last = sSize - 1
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 1 <empty>
<operator>.assignment tmp = *(s + i)
<operator>.assignment *(s + i) = *(s + last)
<operator>.assignment *(s + last) = tmp
<operator>.postDecrement last --
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return; return;
<operator>.assignment _1_reverseString_next = 3
<operator>.lessThan i < last
<operator>.assignment _1_reverseString_next = 3
<operator>.subtraction sSize - 1
BLOCK <empty> <empty>
<operator>.assignment _1_reverseString_next = 1
BLOCK <empty> <empty>
<operator>.addition s + i
<operator>.addition s + i
<operator>.addition s + last
<operator>.addition s + last
<operator>.assignment _1_reverseString_next = 0
>>>PDG&35 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->11 0->12 0->13 0->14 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 2->1 2->30 3->1 3->26 6->1 6->1 10->1 10->1 10->1 10->18 10->24 10->32 10->33 11->1 11->1 11->19 11->24 11->30 11->31 15->1 15->17 16->1 16->1 17->1 17->1 17->1 18->1 18->1 18->24 18->32 18->33 19->1 19->1 19->24 19->30 19->31 22->1 23->1 23->1 24->1 24->1 24->1 24->18 24->19 24->28 24->30 24->31 24->32 24->33 24->34 25->1 25->1 26->1 26->10 26->10 28->1 28->1 33->1 34->1 34->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; void reverseString ( char * s , int sSize ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } void reverseString ( char * s , int sSize ) { int last ; int i ; char tmp ; unsigned long _1_reverseString_next ; { { _1_reverseString_next = 5 ; } while ( 1 ) { switch ( _1_reverseString_next ) { case 5 : last = sSize - 1 ; i = 0 ; { _1_reverseString_next = 3 ; } break ; case 3 : ; if ( i < last ) { { _1_reverseString_next = 1 ; } } else { { _1_reverseString_next = 0 ; } } break ; case 1 : tmp = * ( s + i ) ; * ( s + i ) = * ( s + last ) ; * ( s + last ) = tmp ; last -- ; i ++ ; { _1_reverseString_next = 3 ; } break ; case 0 : ; return ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD fib
METHOD_RETURN int
PARAM int number
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_fib_next = 6
LITERAL 1 while (1)
IDENTIFIER _1_fib_next switch(_1_fib_next)
LITERAL 6 <empty>
LITERAL 5 <empty>
RETURN return (1); return (1);
LITERAL 4 <empty>
LITERAL 3 <empty>
RETURN return (1); return (1);
LITERAL 2 <empty>
<operator>.assignment tmp = fib(number - 1)
<operator>.assignment tmp___0 = fib(number - 2)
BLOCK <empty> <empty>
LITERAL 1 <empty>
RETURN return (tmp + tmp___0); return (tmp + tmp___0);
<operator>.equals number == 1
LITERAL 1 return (1);
<operator>.equals number == 2
LITERAL 1 return (1);
<operator>.assignment _1_fib_next = 1
<operator>.addition tmp + tmp___0
BLOCK <empty> <empty>
BLOCK <empty> <empty>
fib fib(number - 1)
fib fib(number - 2)
<operator>.assignment _1_fib_next = 5
BLOCK <empty> <empty>
<operator>.assignment _1_fib_next = 3
BLOCK <empty> <empty>
<operator>.subtraction number - 1
<operator>.subtraction number - 2
<operator>.assignment _1_fib_next = 4
<operator>.assignment _1_fib_next = 2
>>>PDG&38 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->17 0->18 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 2->1 2->20 2->22 2->34 5->1 5->1 10->1 13->1 15->1 15->1 15->1 15->25 16->1 16->1 16->1 16->25 19->1 20->1 20->1 20->22 20->30 20->34 20->36 21->10 22->1 22->1 22->20 22->32 22->34 22->37 23->13 24->1 24->1 25->19 28->1 28->15 29->1 29->16 30->1 30->1 32->1 32->1 34->28 34->28 34->35 35->1 35->20 35->22 35->29 35->29 35->34 36->1 36->1 37->1 37->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; int fib ( int number ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int fib ( int number ) { int tmp ; int tmp___0 ; unsigned long _1_fib_next ; { { _1_fib_next = 6 ; } while ( 1 ) { switch ( _1_fib_next ) { case 6 : ; if ( number == 1 ) { { _1_fib_next = 5 ; } } else { { _1_fib_next = 4 ; } } break ; case 5 : ; return ( 1 ) ; break ; case 4 : ; if ( number == 2 ) { { _1_fib_next = 3 ; } } else { { _1_fib_next = 2 ; } } break ; case 3 : ; return ( 1 ) ; break ; case 2 : tmp = fib ( number - 1 ) ; tmp___0 = fib ( number - 2 ) ; { _1_fib_next = 1 ; } break ; case 1 : ; return ( tmp + tmp___0 ) ; break ; } } } } void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } }
>>>Func
METHOD shuffle
METHOD_RETURN void
PARAM int *a
PARAM int n
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_shuffle_next = 5
LITERAL 1 while (1)
IDENTIFIER _1_shuffle_next switch(_1_shuffle_next)
LITERAL 5 <empty>
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 1 <empty>
<operator>.assignment t = *(a + i)
<operator>.assignment tmp = rand()
<operator>.assignment r = tmp % n
<operator>.assignment *(a + i) = *(a + r)
<operator>.assignment *(a + r) = t
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return; return;
<operator>.assignment _1_shuffle_next = 3
<operator>.lessThan i < n
<operator>.assignment _1_shuffle_next = 3
BLOCK <empty> <empty>
<operator>.modulo tmp % n
<operator>.assignment _1_shuffle_next = 1
BLOCK <empty> <empty>
<operator>.addition a + i
<operator>.addition a + i
<operator>.addition a + r
<operator>.addition a + r
<operator>.assignment _1_shuffle_next = 0
>>>PDG&35 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->15 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 2->1 2->30 3->1 3->24 3->27 6->1 6->1 10->1 10->1 10->19 10->24 10->30 10->31 14->1 14->18 15->1 15->1 15->27 16->1 16->1 16->32 16->33 17->1 17->1 18->1 18->1 18->1 19->1 19->1 19->24 19->30 19->31 22->1 23->1 23->1 24->1 24->1 24->1 24->19 24->27 24->28 24->30 24->31 24->34 25->1 25->1 27->1 27->1 27->16 27->16 27->24 28->1 28->1 33->1 33->1 34->1 34->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int ( /* missing proto */ rand ) ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; void shuffle ( int * a , int n ) ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } void shuffle ( int * a , int n ) { int i ; int t ; int r ; int tmp ; unsigned long _1_shuffle_next ; { { _1_shuffle_next = 5 ; } while ( 1 ) { switch ( _1_shuffle_next ) { case 5 : i = 0 ; { _1_shuffle_next = 3 ; } break ; case 3 : ; if ( i < n ) { { _1_shuffle_next = 1 ; } } else { { _1_shuffle_next = 0 ; } } break ; case 1 : t = * ( a + i ) ; tmp = rand ( ) ; r = tmp % n ; * ( a + i ) = * ( a + r ) ; * ( a + r ) = t ; i ++ ; { _1_shuffle_next = 3 ; } break ; case 0 : ; return ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 12
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 12 <empty>
printf printf("Number of coins? ")
scanf scanf("%d", & m)
<operator>.assignment tmp = malloc((unsigned long )m * sizeof(int ))
<operator>.assignment coin = (int *)tmp
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 10 <empty>
LITERAL 8 <empty>
printf printf("coin? ")
scanf scanf("%d", coin + i)
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 7 <empty>
printf printf("---- your requests --- \n")
BLOCK <empty> <empty>
LITERAL 5 <empty>
printf printf("amount? exit(0) ")
scanf scanf("%d", & n)
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
<operator>.assignment tmp___0 = ways(n, coin, m)
printf printf("%d\n", tmp___0)
BLOCK <empty> <empty>
LITERAL 1 <empty>
free free(coin)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 10
<operator>.lessThan i < m
<operator>.assignment _1_main_next = 10
<operator>.assignment _1_main_next = 5
<operator>.assignment _1_main_next = 4
<operator>.logicalNot ! n
<operator>.assignment _1_main_next = 5
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
malloc malloc((unsigned long )m * sizeof(int ))
<operator>.cast (int *)tmp
BLOCK <empty> <empty>
<operator>.addition coin + i
BLOCK <empty> <empty>
ways ways(n, coin, m)
<operator>.multiplication (unsigned long )m * sizeof(int )
<operator>.assignment _1_main_next = 8
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
BLOCK <empty> <empty>
<operator>.cast (unsigned long )m
<operator>.sizeOf sizeof(int )
<operator>.assignment _1_main_next = 7
<operator>.assignment _1_main_next = 2
>>>PDG&69 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->55 0->56 0->57 0->58 0->59 0->60 0->61 0->62 0->63 0->64 0->65 0->67 0->68 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 17->1 17->46 17->59 17->60 17->65 18->1 18->1 18->19 18->55 19->1 19->1 19->1 19->25 19->41 19->57 19->59 20->1 20->1 20->25 20->26 20->46 20->57 24->1 25->1 26->1 26->1 26->25 26->46 26->57 29->1 32->1 33->1 33->50 33->59 37->1 37->1 37->38 38->1 38->1 41->1 41->25 41->57 41->59 44->1 45->1 45->1 46->1 46->1 46->1 46->17 46->25 46->26 46->57 46->59 46->60 46->61 46->65 46->67 47->1 47->1 48->1 48->1 49->1 49->1 50->1 50->1 50->33 50->59 50->63 50->68 51->1 51->1 52->1 52->1 53->44 54->1 54->18 55->1 57->1 59->1 59->1 59->1 59->17 59->25 59->33 59->37 59->37 59->37 59->41 59->46 59->50 59->57 59->60 59->65 60->1 60->54 61->1 61->1 63->1 63->1 65->1 66->1 67->1 67->1 68->1 68->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern int ( /* missing proto */ malloc ) ( ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern double ceil ( double x ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern int ( /* missing proto */ free ) ( ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int ( /* missing proto */ scanf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern int ( /* missing proto */ ways ) ( ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { int m ; int n ; int * coin ; int tmp ; int i ; int tmp___0 ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 12 ; } while ( 1 ) { switch ( _1_main_next ) { case 12 : printf ( " " ) ; scanf ( " " , & m ) ; tmp = malloc ( ( unsigned long ) m * sizeof ( int ) ) ; coin = ( int * ) tmp ; i = 0 ; { _1_main_next = 10 ; } break ; case 10 : ; if ( i < m ) { { _1_main_next = 8 ; } } else { { _1_main_next = 7 ; } } break ; case 8 : printf ( " " ) ; scanf ( " " , coin + i ) ; i ++ ; { _1_main_next = 10 ; } break ; case 7 : printf ( " \n " ) ; { _1_main_next = 5 ; } break ; case 5 : printf ( " " ) ; scanf ( " " , & n ) ; { _1_main_next = 4 ; } break ; case 4 : ; if ( ! n ) { { _1_main_next = 1 ; } } else { { _1_main_next = 2 ; } } break ; case 2 : tmp___0 = ways ( n , coin , m ) ; printf ( " \n " , tmp___0 ) ; { _1_main_next = 5 ; } break ; case 1 : free ( coin ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD binarySearch
METHOD_RETURN int
PARAM int *arr
PARAM int key
PARAM int low
PARAM int high
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_binarySearch_next = 13
LITERAL 1 while (1)
IDENTIFIER _1_binarySearch_next switch(_1_binarySearch_next)
LITERAL 13 <empty>
LITERAL 12 <empty>
LITERAL 11 <empty>
<operator>.assignment tmp = low + 1
BLOCK <empty> <empty>
LITERAL 10 <empty>
<operator>.assignment tmp = low
BLOCK <empty> <empty>
LITERAL 9 <empty>
RETURN return (tmp); return (tmp);
LITERAL 8 <empty>
<operator>.assignment mid = low + (high - 1) / 2
BLOCK <empty> <empty>
LITERAL 7 <empty>
LITERAL 6 <empty>
RETURN return (mid + 1); return (mid + 1);
LITERAL 5 <empty>
LITERAL 4 <empty>
<operator>.assignment tmp___0 = binarySearch(arr, key, low, mid - 1)
BLOCK <empty> <empty>
LITERAL 3 <empty>
RETURN return (tmp___0); return (tmp___0);
LITERAL 2 <empty>
<operator>.assignment tmp___1 = binarySearch(arr, key, mid + 1, high)
BLOCK <empty> <empty>
LITERAL 1 <empty>
RETURN return (tmp___1); return (tmp___1);
<operator>.greaterEqualsThan low >= high
<operator>.greaterThan key > *(arr + low)
<operator>.assignment _1_binarySearch_next = 9
<operator>.assignment _1_binarySearch_next = 9
IDENTIFIER tmp return (tmp);
<operator>.assignment _1_binarySearch_next = 7
<operator>.equals *(arr + mid) == key
<operator>.addition mid + 1
<operator>.greaterThan *(arr + mid) > key
<operator>.assignment _1_binarySearch_next = 3
IDENTIFIER tmp___0 return (tmp___0);
<operator>.assignment _1_binarySearch_next = 1
IDENTIFIER tmp___1 return (tmp___1);
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.addition low + 1
<operator>.addition low + (high - 1) / 2
BLOCK <empty> <empty>
BLOCK <empty> <empty>
binarySearch binarySearch(arr, key, low, mid - 1)
binarySearch binarySearch(arr, key, mid + 1, high)
<operator>.assignment _1_binarySearch_next = 12
BLOCK <empty> <empty>
<operator>.assignment _1_binarySearch_next = 11
BLOCK <empty> <empty>
<operator>.division (high - 1) / 2
<operator>.assignment _1_binarySearch_next = 6
BLOCK <empty> <empty>
<operator>.assignment _1_binarySearch_next = 4
BLOCK <empty> <empty>
<operator>.subtraction mid - 1
<operator>.addition mid + 1
<operator>.assignment _1_binarySearch_next = 8
<operator>.addition arr + low
<operator>.assignment _1_binarySearch_next = 10
<operator>.subtraction high - 1
<operator>.addition arr + mid
<operator>.assignment _1_binarySearch_next = 5
<operator>.addition arr + mid
<operator>.assignment _1_binarySearch_next = 2
>>>PDG&78 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->21 0->22 0->23 0->24 0->25 0->27 0->28 0->30 0->31 0->33 0->35 0->36 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 0->59 0->60 0->61 0->62 0->63 0->64 0->65 0->66 0->67 0->68 0->69 0->70 0->71 0->72 0->73 0->74 0->75 0->76 0->77 2->1 2->57 2->58 2->71 2->74 2->76 3->1 3->39 3->44 3->46 3->57 3->58 4->1 4->14 4->17 4->22 4->38 4->53 4->54 4->57 4->71 5->1 5->38 5->58 5->73 8->1 8->1 14->1 14->1 14->1 14->42 17->1 17->1 17->1 17->42 20->1 22->1 22->1 22->1 22->45 22->58 22->68 22->69 22->74 22->76 26->1 29->1 29->1 29->1 29->48 32->1 34->1 34->1 34->1 34->50 37->1 38->1 38->1 38->1 38->14 38->17 38->22 38->53 38->54 38->57 38->58 38->59 38->70 38->71 38->73 39->1 39->1 39->1 39->44 39->46 39->57 39->58 39->61 39->72 40->1 40->1 41->1 41->1 42->20 43->1 43->1 44->1 44->1 44->1 44->39 44->46 44->57 44->58 44->64 44->75 45->26 46->1 46->1 46->1 46->39 46->44 46->57 46->58 46->66 46->77 47->1 47->1 48->32 49->1 49->1 50->37 53->1 54->1 54->1 57->1 57->1 57->1 57->1 57->14 57->17 57->22 57->29 57->29 57->29 57->29 57->38 57->39 57->44 57->46 57->53 57->54 57->58 57->58 57->71 57->71 57->74 57->76 58->1 58->1 58->1 58->1 58->34 58->34 58->34 58->34 58->38 58->39 58->44 58->46 58->57 58->57 58->71 58->73 58->74 58->76 59->1 59->1 61->1 61->1 63->1 63->22 63->22 63->54 63->54 64->1 64->1 66->1 66->1 68->1 68->45 68->57 68->57 68->58 68->69 68->74 68->76 69->1 70->1 70->1 71->1 71->1 72->1 72->1 73->1 73->38 73->58 73->63 73->63 74->1 74->1 75->1 75->1 76->1 76->1 77->1 77->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; int binarySearch ( int * arr , int key , int low , int high ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } int binarySearch ( int * arr , int key , int low , int high ) { int tmp ; int mid ; int tmp___0 ; int tmp___1 ; unsigned long _1_binarySearch_next ; { { _1_binarySearch_next = 13 ; } while ( 1 ) { switch ( _1_binarySearch_next ) { case 13 : ; if ( low >= high ) { { _1_binarySearch_next = 12 ; } } else { { _1_binarySearch_next = 8 ; } } break ; case 12 : ; if ( key > * ( arr + low ) ) { { _1_binarySearch_next = 11 ; } } else { { _1_binarySearch_next = 10 ; } } break ; case 11 : tmp = low + 1 ; { _1_binarySearch_next = 9 ; } break ; case 10 : tmp = low ; { _1_binarySearch_next = 9 ; } break ; case 9 : ; return ( tmp ) ; break ; case 8 : mid = low + ( high - 1 ) / 2 ; { _1_binarySearch_next = 7 ; } break ; case 7 : ; if ( * ( arr + mid ) == key ) { { _1_binarySearch_next = 6 ; } } else { { _1_binarySearch_next = 5 ; } } break ; case 6 : ; return ( mid + 1 ) ; break ; case 5 : ; if ( * ( arr + mid ) > key ) { { _1_binarySearch_next = 4 ; } } else { { _1_binarySearch_next = 2 ; } } break ; case 4 : tmp___0 = binarySearch ( arr , key , low , mid - 1 ) ; { _1_binarySearch_next = 3 ; } break ; case 3 : ; return ( tmp___0 ) ; break ; case 2 : tmp___1 = binarySearch ( arr , key , mid + 1 , high ) ; { _1_binarySearch_next = 1 ; } break ; case 1 : ; return ( tmp___1 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD insertionSort
METHOD_RETURN void
PARAM int *arr
PARAM int size
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_insertionSort_next = 10
LITERAL 1 while (1)
IDENTIFIER _1_insertionSort_next switch(_1_insertionSort_next)
LITERAL 10 <empty>
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 8 <empty>
LITERAL 6 <empty>
<operator>.assignment j = i - 1
<operator>.assignment key = *(arr + i)
<operator>.assignment index = binarySearch(arr, key, 0, j)
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
<operator>.assignment *(arr + (j + 1)) = *(arr + j)
<operator>.postDecrement j --
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operator>.assignment *(arr + (j + 1)) = key
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return; return;
<operator>.assignment _1_insertionSort_next = 8
<operator>.lessThan i < size
<operator>.assignment _1_insertionSort_next = 4
<operator>.greaterEqualsThan j >= index
<operator>.assignment _1_insertionSort_next = 4
<operator>.assignment _1_insertionSort_next = 8
BLOCK <empty> <empty>
<operator>.subtraction i - 1
binarySearch binarySearch(arr, key, 0, j)
BLOCK <empty> <empty>
<operator>.assignment _1_insertionSort_next = 6
BLOCK <empty> <empty>
<operator>.addition arr + i
<operator>.assignment _1_insertionSort_next = 2
BLOCK <empty> <empty>
<operator>.addition arr + (j + 1)
<operator>.addition arr + j
<operator>.addition arr + (j + 1)
<operator>.assignment _1_insertionSort_next = 0
<operator>.assignment _1_insertionSort_next = 1
<operator>.addition j + 1
<operator>.addition j + 1
>>>PDG&51 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->17 0->18 0->19 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 2->1 2->37 2->41 2->44 2->45 2->46 3->1 3->30 6->1 6->1 10->1 10->1 10->25 10->30 10->36 14->1 14->1 14->37 15->1 15->1 15->37 16->1 16->1 16->1 16->32 20->1 20->1 20->1 21->1 21->1 21->32 21->44 21->45 21->46 21->49 21->50 24->1 24->1 24->1 25->1 25->1 25->30 25->36 28->1 29->1 29->1 30->1 30->1 30->1 30->25 30->36 30->39 30->47 31->1 31->1 32->1 32->1 32->1 32->21 32->42 32->44 32->45 32->46 32->48 32->49 32->50 33->1 33->1 34->1 34->1 36->14 36->14 36->25 36->30 36->41 37->1 37->1 37->1 37->16 37->16 37->16 37->16 37->21 37->24 37->32 37->41 37->44 37->44 37->45 37->45 37->46 37->46 37->49 37->50 39->1 39->1 41->1 42->1 42->1 44->1 45->1 46->1 46->1 47->1 47->1 48->1 48->1 50->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int ( /* missing proto */ binarySearch ) ( ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; void insertionSort ( int * arr , int size ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } } void insertionSort ( int * arr , int size ) { int i ; int j ; int key ; int index ; unsigned long _1_insertionSort_next ; { { _1_insertionSort_next = 10 ; } while ( 1 ) { switch ( _1_insertionSort_next ) { case 10 : i = 0 ; { _1_insertionSort_next = 8 ; } break ; case 8 : ; if ( i < size ) { { _1_insertionSort_next = 6 ; } } else { { _1_insertionSort_next = 0 ; } } break ; case 6 : j = i - 1 ; key = * ( arr + i ) ; index = binarySearch ( arr , key , 0 , j ) ; { _1_insertionSort_next = 4 ; } break ; case 4 : ; if ( j >= index ) { { _1_insertionSort_next = 2 ; } } else { { _1_insertionSort_next = 1 ; } } break ; case 2 : * ( arr + ( j + 1 ) ) = * ( arr + j ) ; j -- ; { _1_insertionSort_next = 4 ; } break ; case 1 : * ( arr + ( j + 1 ) ) = key ; i ++ ; { _1_insertionSort_next = 8 ; } break ; case 0 : ; return ; break ; } } } }
>>>Func
METHOD min
METHOD_RETURN int
PARAM int a
PARAM int b
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_min_next = 3
LITERAL 1 while (1)
IDENTIFIER _1_min_next switch(_1_min_next)
LITERAL 3 <empty>
LITERAL 2 <empty>
<operator>.assignment tmp = a
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operator>.assignment tmp = b
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (tmp); return (tmp);
<operator>.lessThan a < b
<operator>.assignment _1_min_next = 0
<operator>.assignment _1_min_next = 0
IDENTIFIER tmp return (tmp);
BLOCK <empty> <empty>
<operator>.assignment _1_min_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_min_next = 1
>>>PDG&26 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 2->1 2->11 2->18 3->1 3->14 3->18 6->1 6->1 11->1 11->1 11->1 11->21 14->1 14->1 14->1 14->21 17->1 18->1 18->1 18->1 18->11 18->14 18->23 18->25 19->1 19->1 20->1 20->1 21->17 23->1 23->1 25->1 25->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; int min ( int a , int b ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } int min ( int a , int b ) { int tmp ; unsigned long _1_min_next ; { { _1_min_next = 3 ; } while ( 1 ) { switch ( _1_min_next ) { case 3 : ; if ( a < b ) { { _1_min_next = 2 ; } } else { { _1_min_next = 1 ; } } break ; case 2 : tmp = a ; { _1_min_next = 0 ; } break ; case 1 : tmp = b ; { _1_min_next = 0 ; } break ; case 0 : ; return ( tmp ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD decimal2Hexadecimal
METHOD_RETURN void
PARAM long num
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_decimal2Hexadecimal_next = 15
LITERAL 1 while (1)
IDENTIFIER _1_decimal2Hexadecimal_next switch(_1_decimal2Hexadecimal_next)
LITERAL 15 <empty>
<operator>.assignment decimalnum = num
<operator>.assignment j = 0
<operator>.assignment quotient = decimalnum
BLOCK <empty> <empty>
LITERAL 13 <empty>
LITERAL 11 <empty>
<operator>.assignment remainder = quotient % 16L
BLOCK <empty> <empty>
LITERAL 10 <empty>
LITERAL 9 <empty>
<operator>.assignment tmp = j
<operator>.postIncrement j ++
<operator>.assignment hexadecimalnum[tmp] = (char )(48L + remainder)
BLOCK <empty> <empty>
LITERAL 8 <empty>
<operator>.assignment tmp___0 = j
<operator>.postIncrement j ++
<operator>.assignment hexadecimalnum[tmp___0] = (char )(55L + remainder)
BLOCK <empty> <empty>
LITERAL 7 <empty>
<operator>.assignmentDivision quotient /= 16L
BLOCK <empty> <empty>
LITERAL 6 <empty>
<operator>.assignment i = j
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
printf printf("%c"  (int )hexadecimalnum[i])
<operator>.postDecrement i --
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("\n")
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return; return;
<operator>.assignment _1_decimal2Hexadecimal_next = 13
<operator>.notEquals quotient != 0L
<operator>.assignment _1_decimal2Hexadecimal_next = 10
<operator>.lessThan remainder < 10L
<operator>.assignment _1_decimal2Hexadecimal_next = 7
<operator>.assignment _1_decimal2Hexadecimal_next = 7
<operator>.assignment _1_decimal2Hexadecimal_next = 13
<operator>.assignment _1_decimal2Hexadecimal_next = 4
<operator>.greaterEqualsThan i >= 0
<operator>.assignment _1_decimal2Hexadecimal_next = 4
<operator>.assignment _1_decimal2Hexadecimal_next = 0
BLOCK <empty> <empty>
<operator>.modulo quotient % 16L
BLOCK <empty> <empty>
<operator>.cast (char )(48L + remainder)
<operator>.cast (char )(55L + remainder)
BLOCK <empty> <empty>
<operator>.cast (int )hexadecimalnum[i]
<operator>.assignment _1_decimal2Hexadecimal_next = 11
BLOCK <empty> <empty>
<operator>.assignment _1_decimal2Hexadecimal_next = 9
BLOCK <empty> <empty>
<operator>.addition 48L + remainder
<operator>.addition 55L + remainder
<operator>.assignment _1_decimal2Hexadecimal_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_decimal2Hexadecimal_next = 6
<operator>.assignment _1_decimal2Hexadecimal_next = 8
<operator>.assignment _1_decimal2Hexadecimal_next = 1
>>>PDG&73 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 0->59 0->60 0->62 0->63 0->64 0->65 0->66 0->67 0->68 0->69 0->70 0->71 0->72 2->1 2->9 5->1 5->1 9->1 9->1 9->11 10->1 10->1 10->19 10->20 10->24 10->25 10->32 11->1 11->1 11->1 11->29 11->45 11->56 15->1 15->1 15->1 15->21 15->26 15->47 15->58 15->59 15->66 15->67 19->1 19->1 20->1 20->1 20->19 20->24 20->25 20->32 21->1 21->1 21->1 24->1 24->1 25->1 25->1 25->19 25->20 25->24 25->32 26->1 26->1 26->1 29->1 29->1 29->45 29->56 32->1 32->1 32->1 32->37 32->52 36->1 36->1 37->1 37->1 37->52 40->1 43->1 44->1 44->1 45->1 45->1 45->29 45->56 45->62 45->70 46->1 46->1 47->1 47->1 47->21 47->26 47->58 47->59 47->64 47->66 47->67 47->71 48->1 48->1 49->1 49->1 50->1 50->1 51->1 51->1 52->1 52->1 52->37 52->68 52->72 53->1 53->1 54->1 54->1 56->1 56->15 56->15 56->29 56->45 58->1 59->1 61->1 62->1 62->1 64->1 64->1 66->1 67->1 68->1 68->1 70->1 70->1 71->1 71->1 72->1 72->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; void decimal2Hexadecimal ( long num ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } void decimal2Hexadecimal ( long num ) { long decimalnum ; long quotient ; long remainder ; int i ; int j ; char hexadecimalnum [ 100 ] ; int tmp ; int tmp___0 ; unsigned long _1_decimal2Hexadecimal_next ; { { _1_decimal2Hexadecimal_next = 15 ; } while ( 1 ) { switch ( _1_decimal2Hexadecimal_next ) { case 15 : decimalnum = num ; j = 0 ; quotient = decimalnum ; { _1_decimal2Hexadecimal_next = 13 ; } break ; case 13 : ; if ( quotient != 0L ) { { _1_decimal2Hexadecimal_next = 11 ; } } else { { _1_decimal2Hexadecimal_next = 6 ; } } break ; case 11 : remainder = quotient % 16L ; { _1_decimal2Hexadecimal_next = 10 ; } break ; case 10 : ; if ( remainder < 10L ) { { _1_decimal2Hexadecimal_next = 9 ; } } else { { _1_decimal2Hexadecimal_next = 8 ; } } break ; case 9 : tmp = j ; j ++ ; hexadecimalnum [ tmp ] = ( char ) ( 48L + remainder ) ; { _1_decimal2Hexadecimal_next = 7 ; } break ; case 8 : tmp___0 = j ; j ++ ; hexadecimalnum [ tmp___0 ] = ( char ) ( 55L + remainder ) ; { _1_decimal2Hexadecimal_next = 7 ; } break ; case 7 : quotient /= 16L ; { _1_decimal2Hexadecimal_next = 13 ; } break ; case 6 : i = j ; { _1_decimal2Hexadecimal_next = 4 ; } break ; case 4 : ; if ( i >= 0 ) { { _1_decimal2Hexadecimal_next = 2 ; } } else { { _1_decimal2Hexadecimal_next = 1 ; } } break ; case 2 : printf ( " " , ( int ) hexadecimalnum [ i ] ) ; i -- ; { _1_decimal2Hexadecimal_next = 4 ; } break ; case 1 : printf ( " \n " ) ; { _1_decimal2Hexadecimal_next = 0 ; } break ; case 0 : ; return ; break ; } } } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD fibMonaccianSearch
METHOD_RETURN int
PARAM int *arr
PARAM int x
PARAM int n
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_fibMonaccianSearch_next = 21
LITERAL 1 while (1)
IDENTIFIER _1_fibMonaccianSearch_next switch(_1_fibMonaccianSearch_next)
LITERAL 21 <empty>
<operator>.assignment fibMMm2 = 0
<operator>.assignment fibMMm1 = 1
<operator>.assignment fibM = fibMMm2 + fibMMm1
BLOCK <empty> <empty>
LITERAL 19 <empty>
LITERAL 17 <empty>
<operator>.assignment fibMMm2 = fibMMm1
<operator>.assignment fibMMm1 = fibM
<operator>.assignment fibM = fibMMm2 + fibMMm1
BLOCK <empty> <empty>
LITERAL 16 <empty>
<operator>.assignment offset = -1
BLOCK <empty> <empty>
LITERAL 14 <empty>
LITERAL 12 <empty>
LITERAL 11 <empty>
<operator>.assignment tmp = offset + fibMMm2
BLOCK <empty> <empty>
LITERAL 10 <empty>
<operator>.assignment tmp = n - 1
BLOCK <empty> <empty>
LITERAL 9 <empty>
<operator>.assignment i = tmp
BLOCK <empty> <empty>
LITERAL 8 <empty>
LITERAL 7 <empty>
<operator>.assignment fibM = fibMMm1
<operator>.assignment fibMMm1 = fibMMm2
<operator>.assignment fibMMm2 = fibM - fibMMm1
<operator>.assignment offset = i
BLOCK <empty> <empty>
LITERAL 6 <empty>
LITERAL 5 <empty>
<operator>.assignment fibM = fibMMm2
<operator>.assignmentMinus fibMMm1 -= fibMMm2
<operator>.assignment fibMMm2 = fibM - fibMMm1
BLOCK <empty> <empty>
LITERAL 4 <empty>
RETURN return (i); return (i);
LITERAL 3 <empty>
LITERAL 2 <empty>
LITERAL 1 <empty>
RETURN return (offset + 1); return (offset + 1);
LITERAL 0 <empty>
RETURN return (-1); return (-1);
<operator>.assignment _1_fibMonaccianSearch_next = 19
<operator>.lessThan fibM < n
<operator>.assignment _1_fibMonaccianSearch_next = 19
<operator>.assignment _1_fibMonaccianSearch_next = 14
<operator>.greaterThan fibM > 1
<operator>.lessThan offset + fibMMm2 < n - 1
<operator>.assignment _1_fibMonaccianSearch_next = 9
<operator>.assignment _1_fibMonaccianSearch_next = 9
<operator>.assignment _1_fibMonaccianSearch_next = 8
<operator>.lessThan *(arr + i) < x
<operator>.assignment _1_fibMonaccianSearch_next = 14
<operator>.greaterThan *(arr + i) > x
<operator>.assignment _1_fibMonaccianSearch_next = 14
IDENTIFIER i return (i);
IDENTIFIER fibMMm1 if (fibMMm1)
<operator>.equals *(arr + (offset + 1)) == x
<operator>.addition offset + 1
<operator>.minus -1
<operator>.addition fibMMm2 + fibMMm1
BLOCK <empty> <empty>
<operator>.addition fibMMm2 + fibMMm1
<operator>.minus -1
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.addition offset + fibMMm2
<operator>.subtraction n - 1
BLOCK <empty> <empty>
<operator>.subtraction fibM - fibMMm1
BLOCK <empty> <empty>
<operator>.subtraction fibM - fibMMm1
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_fibMonaccianSearch_next = 17
BLOCK <empty> <empty>
<operator>.assignment _1_fibMonaccianSearch_next = 12
BLOCK <empty> <empty>
<operator>.addition offset + fibMMm2
<operator>.subtraction n - 1
<operator>.assignment _1_fibMonaccianSearch_next = 11
BLOCK <empty> <empty>
<operator>.assignment _1_fibMonaccianSearch_next = 7
BLOCK <empty> <empty>
<operator>.assignment _1_fibMonaccianSearch_next = 5
BLOCK <empty> <empty>
<operator>.assignment _1_fibMonaccianSearch_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_fibMonaccianSearch_next = 1
BLOCK <empty> <empty>
<operator>.assignment _1_fibMonaccianSearch_next = 16
<operator>.assignment _1_fibMonaccianSearch_next = 3
<operator>.assignment _1_fibMonaccianSearch_next = 10
<operator>.addition arr + i
<operator>.assignment _1_fibMonaccianSearch_next = 6
<operator>.addition arr + i
<operator>.assignment _1_fibMonaccianSearch_next = 4
<operator>.assignment _1_fibMonaccianSearch_next = 0
<operator>.addition arr + (offset + 1)
<operator>.assignment _1_fibMonaccianSearch_next = 0
<operator>.addition offset + 1
>>>PDG&115 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->40 0->41 0->42 0->43 0->44 0->45 0->47 0->48 0->50 0->51 0->52 0->54 0->56 0->57 0->58 0->59 0->60 0->61 0->62 0->63 0->64 0->65 0->66 0->67 0->68 0->69 0->70 0->71 0->72 0->73 0->74 0->75 0->76 0->77 0->78 0->79 0->80 0->81 0->82 0->83 0->84 0->85 0->86 0->87 0->88 0->89 0->90 0->91 0->92 0->93 0->94 0->95 0->96 0->97 0->98 0->99 0->100 0->101 0->102 0->103 0->104 0->105 0->106 0->107 0->108 0->109 0->110 0->111 0->112 0->113 0->114 2->1 2->107 2->109 2->112 3->1 3->65 3->67 3->71 4->1 4->57 4->81 4->93 7->1 7->1 11->1 11->13 11->27 11->38 11->44 11->45 11->61 11->74 11->80 11->92 12->1 12->13 12->17 12->37 12->45 12->74 13->1 13->1 13->1 13->18 13->57 13->60 17->1 17->19 17->27 17->38 17->44 17->45 17->61 17->76 17->80 17->92 18->1 18->17 18->19 18->37 18->45 18->76 19->1 19->1 19->1 19->18 19->57 19->60 22->1 22->1 22->1 22->27 22->61 22->72 22->80 22->92 22->112 22->114 27->1 27->1 27->1 27->33 30->1 30->1 30->1 30->33 33->1 33->1 33->1 33->40 33->69 33->107 33->109 37->1 37->83 38->1 38->83 39->1 39->1 39->1 39->27 39->38 39->44 39->45 39->61 39->80 39->92 40->1 40->1 40->1 40->27 40->61 40->72 40->80 40->92 40->112 40->114 44->1 44->85 45->1 45->85 46->1 46->1 46->1 46->27 46->38 46->44 46->45 46->61 46->80 46->92 49->1 53->1 55->1 56->1 56->1 57->1 57->1 57->1 57->18 57->60 57->81 57->88 57->93 57->104 58->1 58->1 59->1 59->1 60->1 60->1 60->18 60->57 60->90 60->105 61->1 61->1 61->1 61->94 61->106 62->1 62->1 63->1 63->1 64->1 64->1 65->1 65->1 65->1 65->67 65->71 65->96 65->108 66->1 66->1 67->1 67->1 67->1 67->65 67->71 67->98 67->110 68->1 68->1 69->49 71->1 71->1 71->1 71->65 71->67 71->102 71->113 72->53 73->55 74->1 74->1 76->1 76->1 77->22 80->1 80->1 81->1 81->30 81->30 81->57 81->93 83->1 83->1 83->17 83->18 83->37 83->39 83->39 83->45 83->57 83->60 85->1 85->1 85->17 85->18 85->37 85->45 85->46 85->46 85->57 85->60 88->1 88->1 90->1 90->1 92->1 92->1 93->1 93->57 93->61 93->61 93->81 94->1 94->1 96->1 96->1 98->1 98->1 100->1 100->1 102->1 102->1 104->1 104->1 105->1 105->1 106->1 106->1 107->1 107->1 108->1 108->1 109->1 109->1 110->1 110->1 111->1 111->1 112->1 112->1 113->1 113->1 114->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int unlink ( char const * filename ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; int fibMonaccianSearch ( int * arr , int x , int n ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int fibMonaccianSearch ( int * arr , int x , int n ) { int fibMMm2 ; int fibMMm1 ; int fibM ; int offset ; int i ; int tmp ; unsigned long _1_fibMonaccianSearch_next ; { { _1_fibMonaccianSearch_next = 21 ; } while ( 1 ) { switch ( _1_fibMonaccianSearch_next ) { case 21 : fibMMm2 = 0 ; fibMMm1 = 1 ; fibM = fibMMm2 + fibMMm1 ; { _1_fibMonaccianSearch_next = 19 ; } break ; case 19 : ; if ( fibM < n ) { { _1_fibMonaccianSearch_next = 17 ; } } else { { _1_fibMonaccianSearch_next = 16 ; } } break ; case 17 : fibMMm2 = fibMMm1 ; fibMMm1 = fibM ; fibM = fibMMm2 + fibMMm1 ; { _1_fibMonaccianSearch_next = 19 ; } break ; case 16 : offset = -1 ; { _1_fibMonaccianSearch_next = 14 ; } break ; case 14 : ; if ( fibM > 1 ) { { _1_fibMonaccianSearch_next = 12 ; } } else { { _1_fibMonaccianSearch_next = 3 ; } } break ; case 12 : ; if ( offset + fibMMm2 < n - 1 ) { { _1_fibMonaccianSearch_next = 11 ; } } else { { _1_fibMonaccianSearch_next = 10 ; } } break ; case 11 : tmp = offset + fibMMm2 ; { _1_fibMonaccianSearch_next = 9 ; } break ; case 10 : tmp = n - 1 ; { _1_fibMonaccianSearch_next = 9 ; } break ; case 9 : i = tmp ; { _1_fibMonaccianSearch_next = 8 ; } break ; case 8 : ; if ( * ( arr + i ) < x ) { { _1_fibMonaccianSearch_next = 7 ; } } else { { _1_fibMonaccianSearch_next = 6 ; } } break ; case 7 : fibM = fibMMm1 ; fibMMm1 = fibMMm2 ; fibMMm2 = fibM - fibMMm1 ; offset = i ; { _1_fibMonaccianSearch_next = 14 ; } break ; case 6 : ; if ( * ( arr + i ) > x ) { { _1_fibMonaccianSearch_next = 5 ; } } else { { _1_fibMonaccianSearch_next = 4 ; } } break ; case 5 : fibM = fibMMm2 ; fibMMm1 -= fibMMm2 ; fibMMm2 = fibM - fibMMm1 ; { _1_fibMonaccianSearch_next = 14 ; } break ; case 4 : ; return ( i ) ; break ; case 3 : ; if ( fibMMm1 ) { { _1_fibMonaccianSearch_next = 2 ; } } else { { _1_fibMonaccianSearch_next = 0 ; } } break ; case 2 : ; if ( * ( arr + ( offset + 1 ) ) == x ) { { _1_fibMonaccianSearch_next = 1 ; } } else { { _1_fibMonaccianSearch_next = 0 ; } } break ; case 1 : ; return ( offset + 1 ) ; break ; case 0 : ; return ( -1 ) ; break ; } } } } void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } }
>>>Func
METHOD isP
METHOD_RETURN int
PARAM unsigned long long x
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_isP_next = 12
LITERAL 1 while (1)
IDENTIFIER _1_isP_next switch(_1_isP_next)
LITERAL 12 <empty>
<operator>.assignment n = (char)0
BLOCK <empty> <empty>
LITERAL 10 <empty>
LITERAL 8 <empty>
<operator>.assignment v[n] = (char )(x % 10ULL)
<operator>.assignmentDivision x /= 10ULL
<operator>.assignment n = (char )((int )n + 1)
BLOCK <empty> <empty>
LITERAL 7 <empty>
<operator>.assignment i = (char)0
BLOCK <empty> <empty>
LITERAL 5 <empty>
LITERAL 3 <empty>
LITERAL 2 <empty>
RETURN return (0); return (0);
LITERAL 1 <empty>
<operator>.assignment i = (char )((int )i + 1)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (1); return (1);
<operator>.assignment _1_isP_next = 10
IDENTIFIER x if (x)
<operator>.assignment _1_isP_next = 10
<operator>.assignment _1_isP_next = 5
<operator>.lessThan (int )i < ((int )n + 1) / 2
<operator>.notEquals (int )v[i] != (int )v[((int )n - (int )i) - 1]
LITERAL 0 return (0);
<operator>.assignment _1_isP_next = 5
LITERAL 1 return (1);
<operator>.cast (char)0
BLOCK <empty> <empty>
<operator>.cast (char )(x % 10ULL)
<operator>.cast (char )((int )n + 1)
<operator>.cast (char)0
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.cast (char )((int )i + 1)
<operator>.assignment _1_isP_next = 8
BLOCK <empty> <empty>
<operator>.modulo x % 10ULL
<operator>.addition (int )n + 1
<operator>.cast (int )i
<operator>.division ((int )n + 1) / 2
<operator>.assignment _1_isP_next = 3
BLOCK <empty> <empty>
<operator>.cast (int )v[i]
<operator>.cast (int )v[((int )n - (int )i) - 1]
<operator>.assignment _1_isP_next = 2
BLOCK <empty> <empty>
<operator>.addition (int )i + 1
<operator>.assignment _1_isP_next = 7
<operator>.cast (int )n
<operator>.addition (int )n + 1
<operator>.assignment _1_isP_next = 0
<operator>.assignment _1_isP_next = 1
<operator>.cast (int )i
<operator>.cast (int )n
<operator>.subtraction ((int )n - (int )i) - 1
<operator>.subtraction (int )n - (int )i
<operator>.cast (int )n
<operator>.cast (int )i
>>>PDG&70 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->35 0->36 0->37 0->38 0->39 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->56 0->57 0->58 0->59 0->60 0->61 0->62 0->63 0->64 0->65 0->66 0->67 0->68 0->69 2->1 2->48 5->1 5->1 9->1 9->1 9->1 9->15 9->41 9->49 9->51 9->60 9->61 9->65 9->67 9->68 13->1 13->1 13->1 14->1 14->1 14->48 15->1 15->1 15->1 15->41 15->49 15->51 15->60 15->61 15->65 15->67 15->68 18->1 18->1 18->1 18->25 18->33 18->45 18->50 18->58 18->64 18->67 18->69 23->1 25->1 25->1 25->1 25->33 25->45 25->50 25->58 25->64 25->67 25->69 28->1 29->1 29->1 31->1 31->1 32->1 32->1 33->1 33->1 33->1 33->52 33->62 34->1 34->1 34->1 34->56 34->63 35->23 36->1 36->1 37->28 40->1 41->1 45->1 46->1 46->1 48->13 48->13 48->14 48->40 48->40 49->1 50->1 51->1 51->33 51->33 52->1 52->1 54->1 55->1 56->1 56->1 58->1 59->1 59->1 61->1 62->1 62->1 63->1 63->1 65->1 66->1 67->1 67->1 67->66 67->66 68->1 69->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; int isP ( unsigned long long x ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int isP ( unsigned long long x ) { char v [ 14 ] ; char i ; char n ; unsigned long _1_isP_next ; { { _1_isP_next = 12 ; } while ( 1 ) { switch ( _1_isP_next ) { case 12 : n = ( char ) 0 ; { _1_isP_next = 10 ; } break ; case 10 : ; if ( x ) { { _1_isP_next = 8 ; } } else { { _1_isP_next = 7 ; } } break ; case 8 : v [ n ] = ( char ) ( x % 10ULL ) ; x /= 10ULL ; n = ( char ) ( ( int ) n + 1 ) ; { _1_isP_next = 10 ; } break ; case 7 : i = ( char ) 0 ; { _1_isP_next = 5 ; } break ; case 5 : ; if ( ( int ) i < ( ( int ) n + 1 ) / 2 ) { { _1_isP_next = 3 ; } } else { { _1_isP_next = 0 ; } } break ; case 3 : ; if ( ( int ) v [ i ] != ( int ) v [ ( ( int ) n - ( int ) i ) - 1 ] ) { { _1_isP_next = 2 ; } } else { { _1_isP_next = 1 ; } } break ; case 2 : ; return ( 0 ) ; break ; case 1 : i = ( char ) ( ( int ) i + 1 ) ; { _1_isP_next = 5 ; } break ; case 0 : ; return ( 1 ) ; break ; } } } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 6
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 6 <empty>
<operator>.assignment sum = 0
<operator>.assignment str = (char const   *)*(argv + 1)
<operator>.assignment t = str
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
<operator>.assignmentPlus sum += (int )*t
<operator>.postIncrement t ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("Sum is: %d\n", sum)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 4
<operator>.assignment _1_main_next = 4
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
<operator>.cast (char const   *)*(argv + 1)
BLOCK <empty> <empty>
<operator>.cast (int )*t
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.addition argv + 1
<operator>.assignment _1_main_next = 1
<operator>.indirection *t
>>>PDG&42 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->35 0->37 0->38 0->39 0->40 2->7 3->8 3->39 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->22 16->26 17->1 17->1 17->18 18->1 18->1 18->1 18->23 22->1 22->1 22->1 22->26 23->1 23->1 26->1 26->1 26->22 29->1 30->1 30->1 31->1 31->1 32->1 32->1 33->29 34->1 36->1 37->1 37->1 39->1 40->1 40->1 41->37 41->40
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern double log ( double x ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int argc , char * * argv , char * * _formal_envp ) { int sum ; char const * str ; register char const * t ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 6 ; } while ( 1 ) { switch ( _1_main_next ) { case 6 : sum = 0 ; str = ( char const * ) * ( argv + 1 ) ; t = str ; { _1_main_next = 4 ; } break ; case 4 : ; if ( * t ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : sum += ( int ) * t ; t ++ ; { _1_main_next = 4 ; } break ; case 1 : printf ( " \n " , sum ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 6
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 6 <empty>
printf printf("Enter size of array:\n")
scanf scanf("%d", & n)
printf printf("Enter the elements of the array\n")
<operator>.assignment tmp = malloc((unsigned long )n * sizeof(int ))
<operator>.assignment arr = (int *)tmp
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
scanf scanf("%d", arr + i)
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("Original array: ")
display display(arr, n)
cycleSort cycleSort(arr, n)
printf printf("Sorted array: ")
display display(arr, n)
free free(arr)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 4
<operator>.lessThan i < n
<operator>.assignment _1_main_next = 4
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
malloc malloc((unsigned long )n * sizeof(int ))
<operator>.cast (int *)tmp
BLOCK <empty> <empty>
<operator>.addition arr + i
<operator>.multiplication (unsigned long )n * sizeof(int )
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.cast (unsigned long )n
<operator>.sizeOf sizeof(int )
<operator>.assignment _1_main_next = 1
>>>PDG&53 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->52 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 17->1 17->30 17->31 17->33 17->39 17->47 17->50 18->1 19->1 19->1 19->20 19->44 20->1 20->1 20->1 20->25 20->30 20->46 21->1 21->1 21->25 21->26 21->39 21->46 25->1 26->1 26->1 26->25 26->39 26->46 29->1 30->31 30->31 31->1 31->33 31->33 32->1 33->1 33->1 33->17 33->30 33->34 33->39 33->47 33->50 34->1 34->25 34->30 34->46 37->1 38->1 38->1 39->1 39->1 39->1 39->17 39->25 39->26 39->30 39->46 39->47 39->48 39->50 39->52 40->1 40->1 41->1 41->1 42->37 43->1 43->19 44->1 46->1 47->1 47->43 48->1 48->1 50->1 51->1 52->1 52->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern int ( /* missing proto */ malloc ) ( ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern double ceil ( double x ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern int ( /* missing proto */ free ) ( ) ; extern int ( /* missing proto */ cycleSort ) ( ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int ( /* missing proto */ scanf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int ( /* missing proto */ display ) ( ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { int n ; int i ; int * arr ; int tmp ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 6 ; } while ( 1 ) { switch ( _1_main_next ) { case 6 : printf ( " \n " ) ; scanf ( " " , & n ) ; printf ( " \n " ) ; tmp = malloc ( ( unsigned long ) n * sizeof ( int ) ) ; arr = ( int * ) tmp ; i = 0 ; { _1_main_next = 4 ; } break ; case 4 : ; if ( i < n ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : scanf ( " " , arr + i ) ; i ++ ; { _1_main_next = 4 ; } break ; case 1 : printf ( " " ) ; display ( arr , n ) ; cycleSort ( arr , n ) ; printf ( " " ) ; display ( arr , n ) ; free ( arr ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 46
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 46 <empty>
scanf scanf("%d", & lines)
<operator>.assignment i = 1
BLOCK <empty> <empty>
LITERAL 44 <empty>
LITERAL 42 <empty>
<operator>.assignment c = 0
scanf scanf("%d\n", & s)
<operator>.assignment j = 0
BLOCK <empty> <empty>
LITERAL 40 <empty>
LITERAL 38 <empty>
gets gets(sin[j])
<operator>.postIncrement j ++
BLOCK <empty> <empty>
LITERAL 37 <empty>
scanf scanf("%d\n", & q)
BLOCK <empty> <empty>
LITERAL 36 <empty>
LITERAL 35 <empty>
<operator>.assignment j = 0
BLOCK <empty> <empty>
LITERAL 33 <empty>
LITERAL 31 <empty>
<operator>.assignment used[j] = 0
<operator>.postIncrement j ++
BLOCK <empty> <empty>
LITERAL 30 <empty>
<operator>.assignment j = 0
BLOCK <empty> <empty>
LITERAL 28 <empty>
LITERAL 26 <empty>
gets gets(qin[j])
<operator>.assignment k = 0
BLOCK <empty> <empty>
LITERAL 24 <empty>
LITERAL 22 <empty>
<operator>.assignment tmp = strcmp(qin[j], sin[k])
BLOCK <empty> <empty>
LITERAL 21 <empty>
LITERAL 20 <empty>
<operator>.assignment used[k] = 1
<operator>.assignment cleared = k
BLOCK <empty> <empty>
LITERAL 18 <empty>
<operator>.postIncrement k ++
BLOCK <empty> <empty>
LITERAL 17 <empty>
<operator>.assignment clear = 1
<operator>.assignment k = 0
BLOCK <empty> <empty>
LITERAL 15 <empty>
LITERAL 13 <empty>
LITERAL 12 <empty>
<operator>.assignment clear = 0
BLOCK <empty> <empty>
LITERAL 10 <empty>
<operator>.postIncrement k ++
BLOCK <empty> <empty>
LITERAL 9 <empty>
LITERAL 8 <empty>
<operator>.postIncrement c ++
<operator>.assignment k = 0
BLOCK <empty> <empty>
LITERAL 6 <empty>
LITERAL 4 <empty>
<operator>.assignment used[k] = 0
<operator>.postIncrement k ++
BLOCK <empty> <empty>
LITERAL 3 <empty>
<operator>.assignment used[cleared] = 1
BLOCK <empty> <empty>
LITERAL 2 <empty>
<operator>.postIncrement j ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("Case #%d: %d\n", i, c)
<operator>.postDecrement lines --
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 44
<operator>.greaterThan lines > 0
<operator>.assignment _1_main_next = 40
<operator>.lessThan j < s
<operator>.assignment _1_main_next = 40
<operator>.assignment _1_main_next = 36
<operator>.greaterEqualsThan q >= s
<operator>.assignment _1_main_next = 33
<operator>.lessThan j < s
<operator>.assignment _1_main_next = 33
<operator>.assignment _1_main_next = 28
<operator>.lessThan j < q
<operator>.assignment _1_main_next = 24
<operator>.lessThan k < s
<operator>.assignment _1_main_next = 21
<operator>.equals tmp == 0
<operator>.assignment _1_main_next = 17
<operator>.assignment _1_main_next = 24
<operator>.assignment _1_main_next = 15
<operator>.lessThan k < s
<operator>.equals used[k] == 0
<operator>.assignment _1_main_next = 9
<operator>.assignment _1_main_next = 15
<operator>.equals clear == 1
<operator>.assignment _1_main_next = 6
<operator>.lessThan k < s
<operator>.assignment _1_main_next = 6
<operator>.assignment _1_main_next = 2
<operator>.assignment _1_main_next = 28
<operator>.assignment _1_main_next = 44
LITERAL 0 return (0);
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
strcmp strcmp(qin[j], sin[k])
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 42
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 38
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 35
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 31
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 26
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 22
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 20
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 13
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 12
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 8
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 4
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 0
<operator>.assignment _1_main_next = 37
<operator>.assignment _1_main_next = 1
<operator>.assignment _1_main_next = 30
<operator>.assignment _1_main_next = 1
<operator>.assignment _1_main_next = 17
<operator>.assignment _1_main_next = 18
<operator>.assignment _1_main_next = 9
<operator>.assignment _1_main_next = 10
<operator>.assignment _1_main_next = 2
<operator>.assignment _1_main_next = 3
>>>PDG&173 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->48 0->49 0->50 0->51 0->53 0->54 0->55 0->56 0->57 0->58 0->59 0->60 0->61 0->62 0->63 0->64 0->65 0->66 0->67 0->68 0->69 0->70 0->71 0->72 0->73 0->74 0->75 0->76 0->77 0->78 0->79 0->80 0->81 0->82 0->83 0->84 0->85 0->86 0->87 0->88 0->89 0->90 0->91 0->92 0->93 0->94 0->95 0->96 0->97 0->98 0->99 0->100 0->101 0->102 0->103 0->104 0->105 0->106 0->107 0->108 0->109 0->110 0->111 0->112 0->113 0->114 0->115 0->116 0->117 0->118 0->119 0->120 0->121 0->122 0->123 0->124 0->125 0->126 0->127 0->128 0->129 0->130 0->131 0->132 0->133 0->135 0->136 0->137 0->138 0->139 0->140 0->141 0->142 0->143 0->144 0->145 0->146 0->147 0->148 0->149 0->150 0->151 0->152 0->153 0->154 0->155 0->156 0->157 0->158 0->159 0->160 0->161 0->162 0->163 0->164 0->165 0->166 0->167 0->168 0->169 0->170 0->171 0->172 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->92 16->98 17->1 17->1 17->91 21->1 21->1 21->76 21->91 22->1 22->100 22->103 22->105 22->110 22->116 22->122 23->1 23->1 23->28 23->40 23->88 23->100 23->105 23->108 27->1 27->1 28->1 28->1 28->40 28->88 28->100 28->105 28->108 31->1 31->103 31->108 35->1 35->1 35->28 35->40 35->88 35->100 35->105 35->108 39->1 39->1 40->1 40->1 40->28 40->88 40->100 40->105 40->108 43->1 43->1 43->28 43->40 43->88 43->100 43->105 43->108 47->1 47->1 47->134 48->1 48->1 48->57 48->60 48->72 48->82 48->110 48->116 48->122 52->1 52->1 52->1 52->112 56->1 56->1 56->117 57->1 57->1 57->1 60->1 60->1 60->57 60->72 60->82 60->110 60->116 60->122 63->1 63->1 63->120 64->1 64->1 64->57 64->60 64->72 64->82 64->110 64->116 64->122 69->1 69->1 69->120 72->1 72->1 72->57 72->60 72->82 72->110 72->116 72->122 76->1 76->1 76->91 77->1 77->1 77->57 77->60 77->72 77->82 77->110 77->116 77->122 81->1 81->1 81->117 82->1 82->1 82->57 82->60 82->72 82->110 82->116 82->122 85->1 85->1 88->1 88->1 88->28 88->40 88->100 88->105 88->108 91->1 91->1 91->76 91->93 92->1 92->1 92->16 92->98 93->1 93->1 93->91 96->1 97->1 97->1 98->1 98->1 98->16 98->92 98->140 98->162 99->1 99->1 100->1 100->1 100->1 100->22 100->28 100->40 100->88 100->103 100->105 100->105 100->108 100->110 100->116 100->122 100->142 100->163 101->1 101->1 102->1 102->1 103->1 103->1 103->1 103->22 103->31 103->100 103->105 103->108 103->110 103->116 103->122 103->144 103->164 104->1 104->1 105->1 105->1 105->1 105->22 105->28 105->40 105->88 105->100 105->100 105->103 105->108 105->110 105->116 105->122 105->146 105->165 106->1 106->1 107->1 107->1 108->1 108->1 108->1 108->28 108->31 108->40 108->88 108->100 108->103 108->105 108->148 108->166 109->1 109->1 110->1 110->1 110->1 110->22 110->57 110->60 110->72 110->82 110->100 110->103 110->105 110->116 110->116 110->122 110->122 110->150 110->167 111->1 111->1 112->1 112->1 112->152 112->168 113->1 113->1 114->1 114->1 115->1 115->1 116->1 116->1 116->1 116->22 116->57 116->60 116->72 116->82 116->100 116->103 116->105 116->110 116->110 116->122 116->122 116->154 116->169 117->1 117->1 117->156 117->170 118->1 118->1 119->1 119->1 120->1 120->1 120->158 120->171 121->1 121->1 122->1 122->1 122->1 122->22 122->57 122->60 122->72 122->82 122->100 122->103 122->105 122->110 122->110 122->116 122->116 122->160 122->172 123->1 123->1 124->1 124->1 125->1 125->1 126->1 126->1 127->96 134->1 134->1 134->47 134->52 134->52 140->1 140->1 142->1 142->1 144->1 144->1 146->1 146->1 148->1 148->1 150->1 150->1 152->1 152->1 154->1 154->1 156->1 156->1 158->1 158->1 160->1 160->1 162->1 162->1 163->1 163->1 164->1 164->1 165->1 165->1 166->1 166->1 167->1 167->1 168->1 168->1 169->1 169->1 170->1 170->1 171->1 171->1 172->1 172->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int getpagesize ( ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int ( /* missing proto */ printf ) ( ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ scanf ) ( ) ; extern int ( /* missing proto */ gets ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int ( /* missing proto */ strcmp ) ( ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern void signal ( int sig , void * func ) ; extern double difftime ( long tv1 , long tv0 ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { int lines ; int i ; int j ; int k ; int c ; int s ; int q ; int clear ; int cleared ; char sin [ 101 ] [ 101 ] ; char qin [ 101 ] [ 101 ] ; int used [ 101 ] ; int tmp ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 46 ; } while ( 1 ) { switch ( _1_main_next ) { case 46 : scanf ( " " , & lines ) ; i = 1 ; { _1_main_next = 44 ; } break ; case 44 : ; if ( lines > 0 ) { { _1_main_next = 42 ; } } else { { _1_main_next = 0 ; } } break ; case 42 : c = 0 ; scanf ( " \n " , & s ) ; j = 0 ; { _1_main_next = 40 ; } break ; case 40 : ; if ( j < s ) { { _1_main_next = 38 ; } } else { { _1_main_next = 37 ; } } break ; case 38 : gets ( sin [ j ] ) ; j ++ ; { _1_main_next = 40 ; } break ; case 37 : scanf ( " \n " , & q ) ; { _1_main_next = 36 ; } break ; case 36 : ; if ( q >= s ) { { _1_main_next = 35 ; } } else { { _1_main_next = 1 ; } } break ; case 35 : j = 0 ; { _1_main_next = 33 ; } break ; case 33 : ; if ( j < s ) { { _1_main_next = 31 ; } } else { { _1_main_next = 30 ; } } break ; case 31 : used [ j ] = 0 ; j ++ ; { _1_main_next = 33 ; } break ; case 30 : j = 0 ; { _1_main_next = 28 ; } break ; case 28 : ; if ( j < q ) { { _1_main_next = 26 ; } } else { { _1_main_next = 1 ; } } break ; case 26 : gets ( qin [ j ] ) ; k = 0 ; { _1_main_next = 24 ; } break ; case 24 : ; if ( k < s ) { { _1_main_next = 22 ; } } else { { _1_main_next = 17 ; } } break ; case 22 : tmp = strcmp ( qin [ j ] , sin [ k ] ) ; { _1_main_next = 21 ; } break ; case 21 : ; if ( tmp == 0 ) { { _1_main_next = 20 ; } } else { { _1_main_next = 18 ; } } break ; case 20 : used [ k ] = 1 ; cleared = k ; { _1_main_next = 17 ; } break ; case 18 : k ++ ; { _1_main_next = 24 ; } break ; case 17 : clear = 1 ; k = 0 ; { _1_main_next = 15 ; } break ; case 15 : ; if ( k < s ) { { _1_main_next = 13 ; } } else { { _1_main_next = 9 ; } } break ; case 13 : ; if ( used [ k ] == 0 ) { { _1_main_next = 12 ; } } else { { _1_main_next = 10 ; } } break ; case 12 : clear = 0 ; { _1_main_next = 9 ; } break ; case 10 : k ++ ; { _1_main_next = 15 ; } break ; case 9 : ; if ( clear == 1 ) { { _1_main_next = 8 ; } } else { { _1_main_next = 2 ; } } break ; case 8 : c ++ ; k = 0 ; { _1_main_next = 6 ; } break ; case 6 : ; if ( k < s ) { { _1_main_next = 4 ; } } else { { _1_main_next = 3 ; } } break ; case 4 : used [ k ] = 0 ; k ++ ; { _1_main_next = 6 ; } break ; case 3 : used [ cleared ] = 1 ; { _1_main_next = 2 ; } break ; case 2 : j ++ ; { _1_main_next = 28 ; } break ; case 1 : printf ( " \n " , i , c ) ; lines -- ; i ++ ; { _1_main_next = 44 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 11
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 11 <empty>
BLOCK <empty> <empty>
LITERAL 10 <empty>
LITERAL 9 <empty>
RETURN return (1); return (1);
LITERAL 8 <empty>
<operator>.assignment num = 0
<operator>.assignment n = (int )*(*(argv + 1) + 0)
<operator>.assignment n1 = n
BLOCK <empty> <empty>
LITERAL 6 <empty>
LITERAL 4 <empty>
<operator>.assignment rem = n1 % 10
<operator>.assignmentPlus num += (rem * rem) * rem
<operator>.assignmentDivision n1 /= 10
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 2 <empty>
printf printf("is an Armstrong number.")
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("is not an Armstrong number.")
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 10
<operator>.lessThan argc < 2
LITERAL 1 return (1);
<operator>.assignment _1_main_next = 6
<operator>.notEquals n1 != 0
<operator>.assignment _1_main_next = 6
<operator>.equals num == n
<operator>.assignment _1_main_next = 0
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
BLOCK <empty> <empty>
<operator>.cast (int )*(*(argv + 1) + 0)
BLOCK <empty> <empty>
<operator>.modulo n1 % 10
<operator>.multiplication (rem * rem) * rem
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 9
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 4
BLOCK <empty> <empty>
<operator>.multiplication rem * rem
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 8
<operator>.addition *(argv + 1) + 0
<operator>.assignment _1_main_next = 3
<operator>.assignment _1_main_next = 1
<operator>.addition argv + 1
>>>PDG&68 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->23 0->24 0->25 0->26 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->52 0->53 0->54 0->55 0->56 0->57 0->58 0->59 0->60 0->61 0->62 0->63 0->64 0->65 0->66 0->67 2->7 2->41 3->8 3->67 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 19->1 21->1 21->1 21->28 21->46 22->1 22->1 22->23 22->46 23->1 23->1 23->1 23->44 23->53 27->1 27->1 27->60 28->1 28->1 28->1 28->46 29->1 29->1 29->44 29->53 33->1 36->1 39->1 40->1 40->1 41->1 41->1 41->56 41->63 42->19 43->1 43->1 44->1 44->1 44->53 44->58 44->65 45->1 45->1 46->1 46->1 46->1 46->28 46->61 46->66 47->1 47->1 48->1 48->1 49->39 51->1 53->27 53->27 53->29 54->1 54->1 54->28 54->28 56->1 56->1 58->1 58->1 60->54 61->1 61->1 63->1 63->1 64->1 65->1 65->1 66->1 66->1 67->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern double ceil ( double x ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int argc , char * * argv , char * * _formal_envp ) { int n ; int n1 ; int rem ; int num ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 11 ; } while ( 1 ) { switch ( _1_main_next ) { case 11 : ; { _1_main_next = 10 ; } break ; case 10 : ; if ( argc < 2 ) { { _1_main_next = 9 ; } } else { { _1_main_next = 8 ; } } break ; case 9 : ; return ( 1 ) ; break ; case 8 : num = 0 ; n = ( int ) * ( * ( argv + 1 ) + 0 ) ; n1 = n ; { _1_main_next = 6 ; } break ; case 6 : ; if ( n1 != 0 ) { { _1_main_next = 4 ; } } else { { _1_main_next = 3 ; } } break ; case 4 : rem = n1 % 10 ; num += ( rem * rem ) * rem ; n1 /= 10 ; { _1_main_next = 6 ; } break ; case 3 : ; if ( num == n ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : printf ( " " ) ; { _1_main_next = 0 ; } break ; case 1 : printf ( " " ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD maxcmp
METHOD_RETURN int
PARAM int a
PARAM int b
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_maxcmp_next = 3
LITERAL 1 while (1)
IDENTIFIER _1_maxcmp_next switch(_1_maxcmp_next)
LITERAL 3 <empty>
LITERAL 2 <empty>
<operator>.assignment tmp = a
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operator>.assignment tmp = b
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (tmp); return (tmp);
<operator>.greaterEqualsThan a >= b
<operator>.assignment _1_maxcmp_next = 0
<operator>.assignment _1_maxcmp_next = 0
IDENTIFIER tmp return (tmp);
BLOCK <empty> <empty>
<operator>.assignment _1_maxcmp_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_maxcmp_next = 1
>>>PDG&26 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 2->1 2->11 2->18 3->1 3->14 3->18 6->1 6->1 11->1 11->1 11->1 11->21 14->1 14->1 14->1 14->21 17->1 18->1 18->1 18->1 18->11 18->14 18->23 18->25 19->1 19->1 20->1 20->1 21->17 23->1 23->1 25->1 25->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; int maxcmp ( int a , int b ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } int maxcmp ( int a , int b ) { int tmp ; unsigned long _1_maxcmp_next ; { { _1_maxcmp_next = 3 ; } while ( 1 ) { switch ( _1_maxcmp_next ) { case 3 : ; if ( a >= b ) { { _1_maxcmp_next = 2 ; } } else { { _1_maxcmp_next = 1 ; } } break ; case 2 : tmp = a ; { _1_maxcmp_next = 0 ; } break ; case 1 : tmp = b ; { _1_maxcmp_next = 0 ; } break ; case 0 : ; return ( tmp ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD strrev
METHOD_RETURN void
PARAM char *str
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_strrev_next = 6
LITERAL 1 while (1)
IDENTIFIER _1_strrev_next switch(_1_strrev_next)
LITERAL 6 <empty>
strcpy strcpy(p, str)
<operator>.assignment i = 0
<operator>.assignment tmp = strlen(str)
<operator>.assignment k = tmp
<operator>.assignment j = k - 1
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
<operator>.assignment *(str + i) = p[j]
<operator>.postIncrement i ++
<operator>.postDecrement j --
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operator>.assignment *(str + i) = (char )'\000'
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return; return;
<operator>.assignment _1_strrev_next = 4
<operator>.lessThan i < k
<operator>.assignment _1_strrev_next = 4
<operator>.assignment _1_strrev_next = 0
strlen strlen(str)
<operator>.subtraction k - 1
BLOCK <empty> <empty>
<operator>.cast (char )'\000'
<operator>.assignment _1_strrev_next = 2
BLOCK <empty> <empty>
<operator>.addition str + i
<operator>.addition str + i
<operator>.assignment _1_strrev_next = 1
>>>PDG&39 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->12 0->14 0->15 0->16 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 2->1 2->9 2->36 2->37 5->1 5->1 9->1 9->1 9->17 9->30 10->1 10->1 10->18 10->27 10->36 10->37 11->1 11->1 11->12 12->1 12->1 12->31 13->1 13->1 13->1 13->19 17->1 17->1 17->1 18->1 18->1 18->27 18->36 18->37 19->1 19->1 22->1 22->1 22->1 25->1 26->1 26->1 27->1 27->1 27->1 27->18 27->34 27->36 27->37 27->38 28->1 28->1 29->1 29->1 30->1 30->9 30->11 30->36 30->37 31->1 31->13 31->13 31->27 34->1 34->1 36->1 37->1 37->1 38->1 38->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern int ( /* missing proto */ strlen ) ( ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern int ( /* missing proto */ strcpy ) ( ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; void strrev ( char * str ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void strrev ( char * str ) { char p [ 30 ] ; int i ; int k ; int tmp ; int j ; unsigned long _1_strrev_next ; { { _1_strrev_next = 6 ; } while ( 1 ) { switch ( _1_strrev_next ) { case 6 : strcpy ( p , str ) ; i = 0 ; tmp = strlen ( str ) ; k = tmp ; j = k - 1 ; { _1_strrev_next = 4 ; } break ; case 4 : ; if ( i < k ) { { _1_strrev_next = 2 ; } } else { { _1_strrev_next = 1 ; } } break ; case 2 : * ( str + i ) = p [ j ] ; i ++ ; j -- ; { _1_strrev_next = 4 ; } break ; case 1 : * ( str + i ) = ( char ) ' \000 ' ; { _1_strrev_next = 0 ; } break ; case 0 : ; return ; break ; } } } } void megaInit ( void ) { { } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 16
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 16 <empty>
printf printf("Enter the size of the array: ")
scanf scanf("%d", & n)
<operator>.assignment tmp = malloc(sizeof(int ) * (unsigned long )n)
<operator>.assignment arr = (int *)tmp
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 14 <empty>
LITERAL 12 <empty>
printf printf("Number #%d: ", i + 1)
scanf scanf("%d", arr + i)
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 11 <empty>
printf printf("You entered:  ")
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 9 <empty>
LITERAL 7 <empty>
printf printf("%d "  *(arr + i))
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 6 <empty>
cocktailSort cocktailSort(arr, n)
printf printf("\nSorted array: ")
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
printf printf("%d "  *(arr + i))
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("\n")
free free(arr)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 14
<operator>.lessThan i < n
<operator>.assignment _1_main_next = 14
<operator>.assignment _1_main_next = 9
<operator>.lessThan i < n
<operator>.assignment _1_main_next = 9
<operator>.assignment _1_main_next = 4
<operator>.lessThan i < n
<operator>.assignment _1_main_next = 4
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
malloc malloc(sizeof(int ) * (unsigned long )n)
<operator>.cast (int *)tmp
BLOCK <empty> <empty>
<operator>.addition i + 1
<operator>.addition arr + i
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.multiplication sizeof(int ) * (unsigned long )n
<operator>.assignment _1_main_next = 12
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 7
BLOCK <empty> <empty>
<operator>.addition arr + i
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.addition arr + i
<operator>.sizeOf sizeof(int )
<operator>.cast (unsigned long )n
<operator>.assignment _1_main_next = 11
<operator>.assignment _1_main_next = 6
<operator>.assignment _1_main_next = 1
>>>PDG&85 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 0->59 0->60 0->61 0->62 0->63 0->65 0->66 0->67 0->68 0->69 0->70 0->71 0->72 0->73 0->74 0->75 0->76 0->77 0->78 0->79 0->81 0->82 0->83 0->84 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 17->1 17->38 17->54 17->57 17->60 17->71 17->81 18->1 18->1 18->19 18->65 19->1 19->1 19->1 19->25 19->38 19->49 19->68 19->76 19->79 20->1 20->1 20->24 20->25 20->26 20->35 20->45 20->54 20->57 20->60 20->67 20->68 20->76 20->79 24->1 24->1 25->1 26->1 26->1 26->24 26->25 26->35 26->45 26->54 26->57 26->60 26->67 26->68 26->76 26->79 29->1 30->1 30->1 30->24 30->25 30->26 30->35 30->45 30->54 30->57 30->60 30->67 30->68 30->76 30->79 34->1 34->1 34->25 35->1 35->1 35->24 35->25 35->26 35->45 35->54 35->57 35->60 35->67 35->68 35->76 35->79 38->1 38->1 38->1 38->17 38->25 38->49 38->54 38->57 38->60 38->68 38->71 38->76 38->79 38->81 39->1 40->1 40->1 40->24 40->25 40->26 40->35 40->45 40->54 40->57 40->60 40->67 40->68 40->76 40->79 44->1 44->1 44->25 45->1 45->1 45->24 45->25 45->26 45->35 45->54 45->57 45->60 45->67 45->68 45->76 45->79 48->1 49->1 49->25 49->38 49->68 49->76 49->79 52->1 53->1 53->1 54->1 54->1 54->1 54->17 54->24 54->25 54->26 54->35 54->38 54->45 54->57 54->57 54->60 54->60 54->67 54->68 54->71 54->72 54->76 54->79 54->81 54->82 55->1 55->1 56->1 56->1 57->1 57->1 57->1 57->17 57->24 57->25 57->26 57->35 57->38 57->45 57->54 57->54 57->60 57->60 57->67 57->68 57->71 57->74 57->76 57->79 57->81 57->83 58->1 58->1 59->1 59->1 60->1 60->1 60->1 60->17 60->24 60->25 60->26 60->35 60->38 60->45 60->54 60->54 60->57 60->57 60->67 60->68 60->71 60->76 60->77 60->79 60->81 60->84 61->1 61->1 62->1 62->1 63->52 64->1 64->18 65->1 68->1 71->1 71->64 72->1 72->1 74->1 74->1 76->1 77->1 77->1 79->1 80->1 81->1 82->1 82->1 83->1 83->1 84->1 84->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int ( /* missing proto */ cocktailSort ) ( ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern int ( /* missing proto */ malloc ) ( ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern int ( /* missing proto */ free ) ( ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int ( /* missing proto */ printf ) ( ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ scanf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { int i ; int n ; int * arr ; int tmp ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 16 ; } while ( 1 ) { switch ( _1_main_next ) { case 16 : printf ( " " ) ; scanf ( " " , & n ) ; tmp = malloc ( sizeof ( int ) * ( unsigned long ) n ) ; arr = ( int * ) tmp ; i = 0 ; { _1_main_next = 14 ; } break ; case 14 : ; if ( i < n ) { { _1_main_next = 12 ; } } else { { _1_main_next = 11 ; } } break ; case 12 : printf ( " " , i + 1 ) ; scanf ( " " , arr + i ) ; i ++ ; { _1_main_next = 14 ; } break ; case 11 : printf ( " " ) ; i = 0 ; { _1_main_next = 9 ; } break ; case 9 : ; if ( i < n ) { { _1_main_next = 7 ; } } else { { _1_main_next = 6 ; } } break ; case 7 : printf ( " " , * ( arr + i ) ) ; i ++ ; { _1_main_next = 9 ; } break ; case 6 : cocktailSort ( arr , n ) ; printf ( " \n " ) ; i = 0 ; { _1_main_next = 4 ; } break ; case 4 : ; if ( i < n ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : printf ( " " , * ( arr + i ) ) ; i ++ ; { _1_main_next = 4 ; } break ; case 1 : printf ( " \n " ) ; free ( arr ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD min
METHOD_RETURN int
PARAM int a
PARAM int b
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_min_next = 3
LITERAL 1 while (1)
IDENTIFIER _1_min_next switch(_1_min_next)
LITERAL 3 <empty>
LITERAL 2 <empty>
<operator>.assignment tmp = a
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operator>.assignment tmp = b
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (tmp); return (tmp);
<operator>.lessThan a < b
<operator>.assignment _1_min_next = 0
<operator>.assignment _1_min_next = 0
IDENTIFIER tmp return (tmp);
BLOCK <empty> <empty>
<operator>.assignment _1_min_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_min_next = 1
>>>PDG&26 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 2->1 2->11 2->18 3->1 3->14 3->18 6->1 6->1 11->1 11->1 11->1 11->21 14->1 14->1 14->1 14->21 17->1 18->1 18->1 18->1 18->11 18->14 18->23 18->25 19->1 19->1 20->1 20->1 21->17 23->1 23->1 25->1 25->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; int min ( int a , int b ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } int min ( int a , int b ) { int tmp ; unsigned long _1_min_next ; { { _1_min_next = 3 ; } while ( 1 ) { switch ( _1_min_next ) { case 3 : ; if ( a < b ) { { _1_min_next = 2 ; } } else { { _1_min_next = 1 ; } } break ; case 2 : tmp = a ; { _1_min_next = 0 ; } break ; case 1 : tmp = b ; { _1_min_next = 0 ; } break ; case 0 : ; return ( tmp ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 1 <empty>
test test()
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
>>>PDG&22 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 19->1 20->1 20->1 21->19
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int ( /* missing proto */ test ) ( ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern double log ( double x ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 1 ; } while ( 1 ) { switch ( _1_main_next ) { case 1 : test ( ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD next_step
METHOD_RETURN int
PARAM int x
PARAM int base
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_next_step_next = 5
LITERAL 1 while (1)
IDENTIFIER _1_next_step_next switch(_1_next_step_next)
LITERAL 5 <empty>
<operator>.assignment r = 0
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 1 <empty>
<operator>.assignment d = x % base
<operator>.assignmentDivision x /= base
<operator>.assignmentPlus r += d * d
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (r); return (r);
<operator>.assignment _1_next_step_next = 3
<operator>.greaterThan x > 0
<operator>.assignment _1_next_step_next = 3
IDENTIFIER r return (r);
BLOCK <empty> <empty>
<operator>.modulo x % base
<operator>.multiplication d * d
<operator>.assignment _1_next_step_next = 1
BLOCK <empty> <empty>
<operator>.assignment _1_next_step_next = 0
>>>PDG&30 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->15 0->16 0->17 0->18 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 2->1 2->21 2->25 3->1 3->25 6->1 6->1 10->1 10->1 10->16 10->23 14->1 14->1 14->26 15->1 15->1 15->1 15->21 15->25 16->1 16->1 16->1 16->23 19->1 20->1 20->1 21->1 21->1 21->25 21->27 21->29 22->1 22->1 23->19 25->14 25->14 25->15 25->15 26->1 26->16 27->1 27->1 29->1 29->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; int next_step ( int x , int base ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } int next_step ( int x , int base ) { int r ; int d ; unsigned long _1_next_step_next ; { { _1_next_step_next = 5 ; } while ( 1 ) { switch ( _1_next_step_next ) { case 5 : r = 0 ; { _1_next_step_next = 3 ; } break ; case 3 : ; if ( x > 0 ) { { _1_next_step_next = 1 ; } } else { { _1_next_step_next = 0 ; } } break ; case 1 : d = x % base ; x /= base ; r += d * d ; { _1_next_step_next = 3 ; } break ; case 0 : ; return ( r ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD calculate
METHOD_RETURN int
PARAM int scount
PARAM int qcount
PARAM int *icount
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_calculate_next = 12
LITERAL 1 while (1)
IDENTIFIER _1_calculate_next switch(_1_calculate_next)
LITERAL 24 <empty>
LITERAL 22 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 21 <empty>
LITERAL 20 <empty>
<operator>.postIncrement count ++
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 18 <empty>
LITERAL 16 <empty>
<operator>.assignment *(flags + i) = 0
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 15 <empty>
<operator>.assignment *(flags + *(icount + in)) = 1
BLOCK <empty> <empty>
LITERAL 14 <empty>
<operator>.postIncrement in ++
BLOCK <empty> <empty>
LITERAL 13 <empty>
RETURN return (count); return (count);
LITERAL 12 <empty>
<operator>.assignment tmp = malloc(sizeof(int ) * (unsigned long )scount)
<operator>.assignment flags = (int *)tmp
<operator>.assignment in = 0
<operator>.assignment count = 0
<operator>.assignment j = 0
BLOCK <empty> <empty>
LITERAL 10 <empty>
LITERAL 8 <empty>
<operator>.assignment *(flags + j) = 0
<operator>.postIncrement j ++
BLOCK <empty> <empty>
LITERAL 6 <empty>
LITERAL 4 <empty>
LITERAL 3 <empty>
<operator>.assignment *(flags + *(icount + in)) = 1
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operator>.equals *(flags + i) == 0
<operator>.assignment _1_calculate_next = 1
<operator>.equals i == scount
<operator>.assignment _1_calculate_next = 18
<operator>.lessThan i < scount
<operator>.assignment _1_calculate_next = 18
<operator>.assignment _1_calculate_next = 14
<operator>.assignment _1_calculate_next = 6
IDENTIFIER count return (count);
<operator>.assignment _1_calculate_next = 10
<operator>.lessThan j < scount
<operator>.assignment _1_calculate_next = 10
<operator>.lessThan in < qcount
<operator>.notEquals *(flags + *(icount + in)) != 1
<operator>.assignment _1_calculate_next = 1
<operator>.lessThan i < scount
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
malloc malloc(sizeof(int ) * (unsigned long )scount)
<operator>.cast (int *)tmp
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_calculate_next = 21
BLOCK <empty> <empty>
<operator>.assignment _1_calculate_next = 20
BLOCK <empty> <empty>
<operator>.assignment _1_calculate_next = 16
BLOCK <empty> <empty>
<operator>.addition flags + i
<operator>.addition flags + *(icount + in)
<operator>.multiplication sizeof(int ) * (unsigned long )scount
<operator>.assignment _1_calculate_next = 8
BLOCK <empty> <empty>
<operator>.addition flags + j
<operator>.assignment _1_calculate_next = 4
BLOCK <empty> <empty>
<operator>.assignment _1_calculate_next = 3
BLOCK <empty> <empty>
<operator>.addition flags + *(icount + in)
<operator>.assignment _1_calculate_next = 24
BLOCK <empty> <empty>
<operator>.addition flags + i
<operator>.assignment _1_calculate_next = 22
<operator>.assignment _1_calculate_next = 14
<operator>.assignment _1_calculate_next = 15
<operator>.sizeOf sizeof(int )
<operator>.cast (unsigned long )scount
<operator>.assignment _1_calculate_next = 6
<operator>.assignment _1_calculate_next = 13
<operator>.addition flags + *(icount + in)
<operator>.assignment _1_calculate_next = 14
<operator>.assignment _1_calculate_next = 21
<operator>.addition icount + in
<operator>.addition icount + in
<operator>.addition icount + in
>>>PDG&109 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->32 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 0->59 0->60 0->61 0->62 0->63 0->64 0->65 0->66 0->67 0->68 0->69 0->71 0->72 0->73 0->74 0->75 0->76 0->77 0->78 0->79 0->80 0->81 0->82 0->83 0->84 0->85 0->86 0->87 0->88 0->89 0->90 0->91 0->92 0->93 0->94 0->95 0->96 0->97 0->98 0->100 0->101 0->102 0->103 0->104 0->105 0->106 0->107 0->108 2->1 2->53 2->55 2->61 2->66 2->84 2->100 3->1 3->63 4->1 4->106 4->107 4->108 7->1 7->1 12->1 12->1 12->22 12->53 12->55 12->66 12->82 12->95 16->1 16->1 16->59 17->1 17->1 17->12 17->22 17->53 17->55 17->66 17->82 17->95 21->1 21->1 22->1 22->1 22->12 22->53 22->55 22->66 22->82 22->95 25->1 25->1 28->1 28->1 28->63 28->106 28->107 28->108 31->1 33->1 33->1 33->34 33->71 34->1 34->1 34->1 34->82 34->83 34->87 34->92 34->95 34->103 35->1 35->1 35->28 35->63 35->106 35->107 35->108 36->1 36->1 36->16 36->59 37->1 37->1 37->42 37->61 37->87 41->1 41->1 42->1 42->1 42->61 42->87 47->1 47->1 48->1 48->1 48->12 48->22 48->53 48->55 48->66 48->82 48->95 51->1 51->1 51->76 51->96 52->1 52->1 53->1 53->1 53->1 53->12 53->22 53->55 53->55 53->61 53->66 53->66 53->78 53->82 53->84 53->95 53->97 53->100 54->1 54->1 55->1 55->1 55->1 55->12 55->22 55->53 55->53 55->61 55->66 55->66 55->80 55->82 55->84 55->95 55->98 55->100 56->1 56->1 57->1 57->1 58->1 58->1 59->31 60->1 60->1 61->1 61->1 61->1 61->42 61->53 61->55 61->66 61->84 61->85 61->87 61->100 61->101 62->1 62->1 63->1 63->1 63->1 63->28 63->88 63->102 63->106 63->107 63->108 64->1 64->1 64->90 64->104 65->1 65->1 66->1 66->1 66->1 66->12 66->22 66->53 66->53 66->55 66->55 66->61 66->82 66->84 66->93 66->95 66->100 66->105 70->1 70->33 71->1 76->1 76->1 78->1 78->1 80->1 80->1 82->1 83->1 83->1 84->1 84->70 85->1 85->1 87->1 88->1 88->1 90->1 90->1 92->1 92->1 93->1 93->1 95->1 95->1 96->1 96->1 97->1 97->1 98->1 98->1 99->1 100->1 101->1 101->1 102->1 102->1 103->1 103->1 104->1 104->1 105->1 105->1 106->1 106->1 107->1 107->1 108->1 108->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int unlink ( char const * filename ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern int ( /* missing proto */ malloc ) ( ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; int calculate ( int scount , int qcount , int * icount ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int calculate ( int scount , int qcount , int * icount ) { int * flags ; int tmp ; int j ; int i ; int in ; int count ; unsigned long _1_calculate_next ; { { _1_calculate_next = 12 ; } while ( 1 ) { switch ( _1_calculate_next ) { case 24 : ; if ( * ( flags + i ) == 0 ) { { _1_calculate_next = 21 ; } } else { { _1_calculate_next = 22 ; } } break ; case 22 : i ++ ; { _1_calculate_next = 1 ; } break ; case 21 : ; if ( i == scount ) { { _1_calculate_next = 20 ; } } else { { _1_calculate_next = 14 ; } } break ; case 20 : count ++ ; i = 0 ; { _1_calculate_next = 18 ; } break ; case 18 : ; if ( i < scount ) { { _1_calculate_next = 16 ; } } else { { _1_calculate_next = 15 ; } } break ; case 16 : * ( flags + i ) = 0 ; i ++ ; { _1_calculate_next = 18 ; } break ; case 15 : * ( flags + * ( icount + in ) ) = 1 ; { _1_calculate_next = 14 ; } break ; case 14 : in ++ ; { _1_calculate_next = 6 ; } break ; case 13 : ; return ( count ) ; break ; case 12 : tmp = malloc ( sizeof ( int ) * ( unsigned long ) scount ) ; flags = ( int * ) tmp ; in = 0 ; count = 0 ; j = 0 ; { _1_calculate_next = 10 ; } break ; case 10 : ; if ( j < scount ) { { _1_calculate_next = 8 ; } } else { { _1_calculate_next = 6 ; } } break ; case 8 : * ( flags + j ) = 0 ; j ++ ; { _1_calculate_next = 10 ; } break ; case 6 : ; if ( in < qcount ) { { _1_calculate_next = 4 ; } } else { { _1_calculate_next = 13 ; } } break ; case 4 : ; if ( * ( flags + * ( icount + in ) ) != 1 ) { { _1_calculate_next = 3 ; } } else { { _1_calculate_next = 14 ; } } break ; case 3 : * ( flags + * ( icount + in ) ) = 1 ; i = 0 ; { _1_calculate_next = 1 ; } break ; case 1 : ; if ( i < scount ) { { _1_calculate_next = 24 ; } } else { { _1_calculate_next = 21 ; } } break ; } } } } void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 11
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 11 <empty>
<operator>.assignment sum = 0
<operator>.assignment str = (char const   *)*(argv + 1)
<operator>.assignment s = str
BLOCK <empty> <empty>
LITERAL 9 <empty>
LITERAL 7 <empty>
<operator>.assignmentPlus sum += (int )*s
<operator>.postIncrement s ++
BLOCK <empty> <empty>
LITERAL 6 <empty>
<operator>.assignment len = (unsigned int )(s - str)
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
<operator>.assignmentPlus sum += (int )*(str + i)
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("Sum is: %d\n", sum)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 9
<operator>.assignment _1_main_next = 9
<operator>.assignment _1_main_next = 4
<operator>.lessThan (unsigned int )i < len
<operator>.assignment _1_main_next = 4
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
<operator>.cast (char const   *)*(argv + 1)
BLOCK <empty> <empty>
<operator>.cast (int )*s
<operator>.cast (unsigned int )(s - str)
BLOCK <empty> <empty>
<operator>.cast (int )*(str + i)
<operator>.assignment _1_main_next = 7
BLOCK <empty> <empty>
<operator>.subtraction s - str
<operator>.cast (unsigned int )i
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.addition argv + 1
<operator>.assignment _1_main_next = 6
<operator>.assignment _1_main_next = 1
<operator>.addition str + i
<operator>.indirection *s
>>>PDG&63 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->47 0->50 0->52 0->53 0->54 0->55 0->56 0->57 0->58 0->59 0->60 0->61 2->7 3->8 3->58 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->22 16->31 16->35 17->1 17->1 17->18 17->54 17->61 18->1 18->1 18->1 18->23 18->54 22->1 22->1 22->1 22->31 22->35 23->1 23->1 23->54 26->1 26->1 26->1 26->42 27->1 27->1 27->32 27->42 27->55 27->61 31->1 31->1 31->1 31->22 31->35 32->1 32->1 32->42 32->55 32->61 35->1 35->1 35->22 35->31 38->1 39->1 39->1 40->1 40->1 41->1 41->1 42->1 42->1 42->1 42->56 42->60 43->1 43->1 44->1 44->1 45->38 46->1 48->1 49->1 51->1 52->1 52->1 54->1 54->1 54->23 54->26 54->26 54->49 54->49 54->61 55->1 56->1 56->1 58->1 59->1 59->1 60->1 60->1 61->1 62->52 62->59
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int argc , char * * argv , char * * _formal_envp ) { int i ; int sum ; char const * str ; register char const * s ; unsigned int len ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 11 ; } while ( 1 ) { switch ( _1_main_next ) { case 11 : sum = 0 ; str = ( char const * ) * ( argv + 1 ) ; s = str ; { _1_main_next = 9 ; } break ; case 9 : ; if ( * s ) { { _1_main_next = 7 ; } } else { { _1_main_next = 6 ; } } break ; case 7 : sum += ( int ) * s ; s ++ ; { _1_main_next = 9 ; } break ; case 6 : len = ( unsigned int ) ( s - str ) ; i = 0 ; { _1_main_next = 4 ; } break ; case 4 : ; if ( ( unsigned int ) i < len ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : sum += ( int ) * ( str + i ) ; i ++ ; { _1_main_next = 4 ; } break ; case 1 : printf ( " \n " , sum ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 7
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 7 <empty>
<operator>.assignment c = (unsigned char )*(*(argv + 1) + 0)
BLOCK <empty> <empty>
LITERAL 6 <empty>
LITERAL 5 <empty>
<operator>.assignment x = (unsigned char )((int )c / 3)
BLOCK <empty> <empty>
LITERAL 4 <empty>
<operator>.assignment x = (unsigned char )((int )c * 2)
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 2 <empty>
printf printf("if-2-win\n")
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("if-2-lose\n")
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 6
<operator>.greaterThan (int )c > 127
<operator>.assignment _1_main_next = 3
<operator>.assignment _1_main_next = 3
<operator>.greaterThan (int )x > 63
<operator>.assignment _1_main_next = 0
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
<operator>.cast (unsigned char )*(*(argv + 1) + 0)
BLOCK <empty> <empty>
<operator>.cast (unsigned char )((int )c / 3)
<operator>.cast (unsigned char )((int )c * 2)
BLOCK <empty> <empty>
<operator>.cast (int )c
<operator>.assignment _1_main_next = 5
BLOCK <empty> <empty>
<operator>.division (int )c / 3
<operator>.multiplication (int )c * 2
<operator>.cast (int )x
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.addition *(argv + 1) + 0
<operator>.assignment _1_main_next = 4
<operator>.cast (int )c
<operator>.cast (int )c
<operator>.assignment _1_main_next = 1
<operator>.addition argv + 1
>>>PDG&61 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->17 0->18 0->19 0->21 0->22 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->43 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 0->59 0->60 2->7 3->8 3->60 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->1 16->35 16->47 16->50 16->51 16->57 16->58 20->1 20->1 20->1 20->38 20->52 23->1 23->1 23->1 23->38 23->52 27->1 30->1 33->1 34->1 34->1 35->1 35->1 35->48 35->56 36->1 36->1 37->1 37->1 38->1 38->1 38->53 38->59 39->1 39->1 40->1 40->1 41->33 42->1 44->1 45->1 47->1 48->1 48->1 50->1 50->20 50->20 50->44 50->44 51->1 51->23 51->23 51->45 51->45 52->1 53->1 53->1 55->1 56->1 56->1 57->1 58->1 59->1 59->1 60->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int argc , char * * argv , char * * _formal_envp ) { unsigned char x ; unsigned char c ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 7 ; } while ( 1 ) { switch ( _1_main_next ) { case 7 : c = ( unsigned char ) * ( * ( argv + 1 ) + 0 ) ; { _1_main_next = 6 ; } break ; case 6 : ; if ( ( int ) c > 127 ) { { _1_main_next = 5 ; } } else { { _1_main_next = 4 ; } } break ; case 5 : x = ( unsigned char ) ( ( int ) c / 3 ) ; { _1_main_next = 3 ; } break ; case 4 : x = ( unsigned char ) ( ( int ) c * 2 ) ; { _1_main_next = 3 ; } break ; case 3 : ; if ( ( int ) x > 63 ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : printf ( " \n " ) ; { _1_main_next = 0 ; } break ; case 1 : printf ( " \n " ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD string_equal
METHOD_RETURN int
PARAM void *string1
PARAM void *string2
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_string_equal_next = 1
LITERAL 1 while (1)
IDENTIFIER _1_string_equal_next switch(_1_string_equal_next)
LITERAL 1 <empty>
<operator>.assignment tmp = strcmp((char *)string1  (char *)string2)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (tmp == 0); return (tmp == 0);
<operator>.assignment _1_string_equal_next = 0
<operator>.equals tmp == 0
strcmp strcmp((char *)string1  (char *)string2)
<operator>.cast (char *)string1
<operator>.cast (char *)string2
>>>PDG&19 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->11 0->12 0->14 0->15 0->16 0->17 0->18 2->1 2->16 2->17 3->1 3->16 3->18 6->1 6->1 10->1 10->1 10->15 13->1 14->1 14->1 15->1 15->1 15->13 16->1 16->1 16->10 16->10 17->1 18->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int ( /* missing proto */ strcmp ) ( ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; int string_equal ( void * string1 , void * string2 ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int string_equal ( void * string1 , void * string2 ) { int tmp ; unsigned long _1_string_equal_next ; { { _1_string_equal_next = 1 ; } while ( 1 ) { switch ( _1_string_equal_next ) { case 1 : tmp = strcmp ( ( char * ) string1 , ( char * ) string2 ) ; { _1_string_equal_next = 0 ; } break ; case 0 : ; return ( tmp == 0 ) ; break ; } } } } void megaInit ( void ) { { } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 7
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 7 <empty>
<operator>.assignment c = (unsigned char )*(*(argv + 1) + 0)
BLOCK <empty> <empty>
LITERAL 6 <empty>
LITERAL 5 <empty>
printf printf("if-1-win ")
<operator>.assignment x = (unsigned char )(((int )c / 3) * 2)
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 3 <empty>
printf printf("if-2-win\n")
BLOCK <empty> <empty>
LITERAL 2 <empty>
printf printf("if-2-lose\n")
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("if-1-lose\n")
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 6
<operator>.greaterThan (int )c > 63
<operator>.assignment _1_main_next = 4
<operator>.greaterThan (int )c > 127
<operator>.assignment _1_main_next = 0
<operator>.assignment _1_main_next = 0
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
<operator>.cast (unsigned char )*(*(argv + 1) + 0)
BLOCK <empty> <empty>
<operator>.cast (unsigned char )(((int )c / 3) * 2)
BLOCK <empty> <empty>
<operator>.cast (int )c
<operator>.assignment _1_main_next = 5
BLOCK <empty> <empty>
<operator>.multiplication ((int )c / 3) * 2
<operator>.cast (int )c
<operator>.assignment _1_main_next = 3
BLOCK <empty> <empty>
<operator>.addition *(argv + 1) + 0
<operator>.assignment _1_main_next = 1
<operator>.division (int )c / 3
<operator>.assignment _1_main_next = 2
<operator>.cast (int )c
<operator>.addition argv + 1
>>>PDG&60 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->17 0->18 0->19 0->20 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->44 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 0->59 2->7 3->8 3->59 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->1 16->36 16->38 16->47 16->51 16->56 16->58 20->1 21->1 21->1 21->1 25->1 28->1 31->1 34->1 35->1 35->1 36->1 36->1 36->48 36->55 37->1 37->1 38->1 38->1 38->52 38->57 39->1 39->1 40->1 40->1 41->1 41->1 42->34 43->1 45->1 47->1 48->1 48->1 50->1 50->21 50->21 50->45 50->45 51->1 52->1 52->1 54->1 55->1 55->1 56->1 56->50 56->50 57->1 57->1 58->1 59->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int argc , char * * argv , char * * _formal_envp ) { unsigned char c ; unsigned char x ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 7 ; } while ( 1 ) { switch ( _1_main_next ) { case 7 : c = ( unsigned char ) * ( * ( argv + 1 ) + 0 ) ; { _1_main_next = 6 ; } break ; case 6 : ; if ( ( int ) c > 63 ) { { _1_main_next = 5 ; } } else { { _1_main_next = 1 ; } } break ; case 5 : printf ( " " ) ; x = ( unsigned char ) ( ( ( int ) c / 3 ) * 2 ) ; { _1_main_next = 4 ; } break ; case 4 : ; if ( ( int ) c > 127 ) { { _1_main_next = 3 ; } } else { { _1_main_next = 2 ; } } break ; case 3 : printf ( " \n " ) ; { _1_main_next = 0 ; } break ; case 2 : printf ( " \n " ) ; { _1_main_next = 0 ; } break ; case 1 : printf ( " \n " ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 9
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 9 <empty>
<operator>.assignment sum = 0
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 7 <empty>
LITERAL 5 <empty>
LITERAL 4 <empty>
printf printf("Usage: program-name char\n")
BLOCK <empty> <empty>
LITERAL 3 <empty>
RETURN return (1); return (1);
LITERAL 2 <empty>
<operator>.assignmentPlus sum += i
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("Sum is: %d\n", sum)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 7
<operator>.lessThan i < (int )*(*(argv + 1) + 0)
<operator>.lessThan argc < 2
<operator>.assignment _1_main_next = 3
LITERAL 1 return (1);
<operator>.assignment _1_main_next = 7
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.cast (int )*(*(argv + 1) + 0)
<operator>.assignment _1_main_next = 5
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 4
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
<operator>.assignment _1_main_next = 2
<operator>.addition *(argv + 1) + 0
<operator>.addition argv + 1
>>>PDG&54 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 2->7 2->37 3->8 3->53 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->27 16->31 17->1 17->1 17->27 17->28 17->36 22->1 25->1 27->1 27->1 27->31 28->1 28->1 28->27 28->36 31->1 31->1 31->27 34->1 35->1 35->1 36->1 36->1 36->1 36->27 36->28 36->46 36->50 37->1 37->1 37->48 37->51 38->1 38->1 39->25 40->1 40->1 41->1 41->1 42->34 45->1 46->1 46->1 48->1 48->1 50->1 50->1 51->1 51->1 52->1 53->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int argc , char * * argv , char * * _formal_envp ) { int i ; int sum ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 9 ; } while ( 1 ) { switch ( _1_main_next ) { case 9 : sum = 0 ; i = 0 ; { _1_main_next = 7 ; } break ; case 7 : ; if ( i < ( int ) * ( * ( argv + 1 ) + 0 ) ) { { _1_main_next = 5 ; } } else { { _1_main_next = 1 ; } } break ; case 5 : ; if ( argc < 2 ) { { _1_main_next = 4 ; } } else { { _1_main_next = 2 ; } } break ; case 4 : printf ( " \n " ) ; { _1_main_next = 3 ; } break ; case 3 : ; return ( 1 ) ; break ; case 2 : sum += i ; i ++ ; { _1_main_next = 7 ; } break ; case 1 : printf ( " \n " , sum ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 11
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 11 <empty>
<operator>.assignment sum = 0
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 9 <empty>
LITERAL 7 <empty>
<operator>.assignment j = 1
BLOCK <empty> <empty>
LITERAL 5 <empty>
LITERAL 3 <empty>
<operator>.assignmentPlus sum += j
<operator>.postIncrement j ++
BLOCK <empty> <empty>
LITERAL 2 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("Sum is: %d\n", sum)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 9
<operator>.lessThan i < argc
<operator>.assignment _1_main_next = 5
<operator>.lessEqualsThan j <= (int )*(*(argv + 1) + 0)
<operator>.assignment _1_main_next = 5
<operator>.assignment _1_main_next = 9
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 7
BLOCK <empty> <empty>
<operator>.cast (int )*(*(argv + 1) + 0)
<operator>.assignment _1_main_next = 3
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
<operator>.assignment _1_main_next = 2
<operator>.addition *(argv + 1) + 0
<operator>.addition argv + 1
>>>PDG&55 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->49 0->50 0->51 0->52 0->53 0->54 2->7 2->37 3->8 3->54 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->25 16->32 17->1 17->1 17->29 17->37 21->1 21->1 21->25 21->26 21->39 25->1 25->1 25->32 26->1 26->1 26->25 26->39 29->1 29->1 29->37 32->1 32->1 32->25 35->1 36->1 36->1 37->1 37->1 37->1 37->29 37->46 37->51 38->1 38->1 39->1 39->1 39->1 39->25 39->26 39->49 39->52 40->1 40->1 41->1 41->1 42->1 42->1 43->35 46->1 46->1 48->1 49->1 49->1 51->1 51->1 52->1 52->1 53->1 54->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int argc , char * * argv , char * * _formal_envp ) { int i ; int j ; int sum ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 11 ; } while ( 1 ) { switch ( _1_main_next ) { case 11 : sum = 0 ; i = 0 ; { _1_main_next = 9 ; } break ; case 9 : ; if ( i < argc ) { { _1_main_next = 7 ; } } else { { _1_main_next = 1 ; } } break ; case 7 : j = 1 ; { _1_main_next = 5 ; } break ; case 5 : ; if ( j <= ( int ) * ( * ( argv + 1 ) + 0 ) ) { { _1_main_next = 3 ; } } else { { _1_main_next = 2 ; } } break ; case 3 : sum += j ; j ++ ; { _1_main_next = 5 ; } break ; case 2 : i ++ ; { _1_main_next = 9 ; } break ; case 1 : printf ( " \n " , sum ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 43
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 43 <empty>
scanf scanf("%d", & t)
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 41 <empty>
LITERAL 39 <empty>
scanf scanf("%d", & n)
<operator>.assignment __lengthofx = (unsigned long )n
<operator>.assignment tmp = __builtin_alloca(sizeof(*x) * __lengthofx)
<operator>.assignment x = (int *)tmp
<operator>.assignment j = 0
BLOCK <empty> <empty>
LITERAL 37 <empty>
LITERAL 35 <empty>
scanf scanf("%d", x + j)
<operator>.postIncrement j ++
BLOCK <empty> <empty>
LITERAL 34 <empty>
<operator>.assignment sum = 0
<operator>.assignment j = 0
BLOCK <empty> <empty>
LITERAL 32 <empty>
LITERAL 30 <empty>
<operator>.assignmentPlus sum += *(x + j)
<operator>.postIncrement j ++
BLOCK <empty> <empty>
LITERAL 29 <empty>
printf printf("Case #%d:", i + 1)
<operator>.assignment __lengthofy = (unsigned long )n
<operator>.assignment tmp___0 = __builtin_alloca(sizeof(*y) * __lengthofy)
<operator>.assignment y = (long double *)tmp___0
<operator>.assignment j = 0
BLOCK <empty> <empty>
LITERAL 27 <empty>
LITERAL 25 <empty>
<operator>.assignment *(y + j) = (long double )100 * ((long double )2 / (long double )n - (long double )*(x + j) / (long double )sum)
<operator>.postIncrement j ++
BLOCK <empty> <empty>
LITERAL 24 <empty>
<operator>.assignment __lengthofz = (unsigned long )n
<operator>.assignment tmp___1 = __builtin_alloca(sizeof(*z) * __lengthofz)
<operator>.assignment z = (int *)tmp___1
<operator>.assignment __lengthofz2 = (unsigned long )n
<operator>.assignment tmp___2 = __builtin_alloca(sizeof(*z2) * __lengthofz2)
<operator>.assignment z2 = (int *)tmp___2
<operator>.assignment zn = 0
<operator>.assignment z2n = 0
<operator>.assignment j = 0
BLOCK <empty> <empty>
LITERAL 22 <empty>
LITERAL 20 <empty>
LITERAL 19 <empty>
<operator>.assignment tmp___3 = zn
<operator>.postIncrement zn ++
<operator>.assignment *(z + tmp___3) = j
BLOCK <empty> <empty>
LITERAL 18 <empty>
<operator>.assignment tmp___4 = z2n
<operator>.postIncrement z2n ++
<operator>.assignment *(z2 + tmp___4) = j
BLOCK <empty> <empty>
LITERAL 17 <empty>
<operator>.postIncrement j ++
BLOCK <empty> <empty>
LITERAL 16 <empty>
<operator>.assignment j = 0
BLOCK <empty> <empty>
LITERAL 14 <empty>
LITERAL 12 <empty>
<operator>.assignment k = 0
BLOCK <empty> <empty>
LITERAL 10 <empty>
LITERAL 8 <empty>
<operator>.assignmentPlus *(y + *(z2 + k)) += *(y + *(z + j)) / (long double )z2n
<operator>.postIncrement k ++
BLOCK <empty> <empty>
LITERAL 7 <empty>
<operator>.assignment *(y + *(z + j)) = (long double )0
<operator>.postIncrement j ++
BLOCK <empty> <empty>
LITERAL 6 <empty>
<operator>.assignment j = 0
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
printf printf(" %Lf"  *(y + j))
<operator>.postIncrement j ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("\n")
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 41
<operator>.lessThan i < t
<operator>.assignment _1_main_next = 37
<operator>.lessThan j < n
<operator>.assignment _1_main_next = 37
<operator>.assignment _1_main_next = 32
<operator>.lessThan j < n
<operator>.assignment _1_main_next = 32
<operator>.assignment _1_main_next = 27
<operator>.lessThan j < n
<operator>.assignment _1_main_next = 27
<operator>.assignment _1_main_next = 22
<operator>.lessThan j < n
<operator>.lessThan *(y + j) < (long double )0
<operator>.assignment _1_main_next = 17
<operator>.assignment _1_main_next = 17
<operator>.assignment _1_main_next = 22
<operator>.assignment _1_main_next = 14
<operator>.lessThan j < zn
<operator>.assignment _1_main_next = 10
<operator>.lessThan k < z2n
<operator>.assignment _1_main_next = 10
<operator>.assignment _1_main_next = 14
<operator>.assignment _1_main_next = 4
<operator>.lessThan j < n
<operator>.assignment _1_main_next = 4
<operator>.assignment _1_main_next = 41
LITERAL 0 return (0);
BLOCK <empty> <empty>
<operator>.cast (unsigned long )n
__builtin_alloca __builtin_alloca(sizeof(*x) * __lengthofx)
<operator>.cast (int *)tmp
BLOCK <empty> <empty>
<operator>.addition x + j
BLOCK <empty> <empty>
<operator>.addition i + 1
<operator>.cast (unsigned long )n
__builtin_alloca __builtin_alloca(sizeof(*y) * __lengthofy)
<operator>.cast (long double *)tmp___0
BLOCK <empty> <empty>
<operator>.multiplication (long double )100 * ((long double )2 / (long double )n - (long double )*(x + j) / (long double )sum)
<operator>.cast (unsigned long )n
__builtin_alloca __builtin_alloca(sizeof(*z) * __lengthofz)
<operator>.cast (int *)tmp___1
<operator>.cast (unsigned long )n
__builtin_alloca __builtin_alloca(sizeof(*z2) * __lengthofz2)
<operator>.cast (int *)tmp___2
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.division *(y + *(z + j)) / (long double )z2n
<operator>.cast (long double )0
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 39
BLOCK <empty> <empty>
<operator>.multiplication sizeof(*x) * __lengthofx
<operator>.assignment _1_main_next = 35
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 30
BLOCK <empty> <empty>
<operator>.addition x + j
<operator>.multiplication sizeof(*y) * __lengthofy
<operator>.assignment _1_main_next = 25
BLOCK <empty> <empty>
<operator>.addition y + j
<operator>.cast (long double )100
<operator>.subtraction (long double )2 / (long double )n - (long double )*(x + j) / (long double )sum
<operator>.multiplication sizeof(*z) * __lengthofz
<operator>.multiplication sizeof(*z2) * __lengthofz2
<operator>.assignment _1_main_next = 20
BLOCK <empty> <empty>
<operator>.cast (long double )0
<operator>.assignment _1_main_next = 19
BLOCK <empty> <empty>
<operator>.addition z + tmp___3
<operator>.addition z2 + tmp___4
<operator>.assignment _1_main_next = 12
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 8
BLOCK <empty> <empty>
<operator>.addition y + *(z2 + k)
<operator>.cast (long double )z2n
<operator>.addition y + *(z + j)
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.addition y + j
<operator>.assignment _1_main_next = 0
<operator>.sizeOf sizeof(*x)
<operator>.assignment _1_main_next = 34
<operator>.assignment _1_main_next = 29
<operator>.sizeOf sizeof(*y)
<operator>.assignment _1_main_next = 24
<operator>.division (long double )2 / (long double )n
<operator>.division (long double )*(x + j) / (long double )sum
<operator>.sizeOf sizeof(*z)
<operator>.sizeOf sizeof(*z2)
<operator>.assignment _1_main_next = 16
<operator>.addition y + j
<operator>.assignment _1_main_next = 18
<operator>.assignment _1_main_next = 6
<operator>.assignment _1_main_next = 7
<operator>.addition y + *(z + j)
<operator>.assignment _1_main_next = 1
<operator>.cast (long double )2
<operator>.cast (long double )n
<operator>.cast (long double )*(x + j)
<operator>.cast (long double )sum
<operator>.addition z2 + k
<operator>.addition z + j
<operator>.addition z + j
<operator>.addition x + j
>>>PDG&221 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->45 0->46 0->47 0->48 0->49 0->51 0->52 0->53 0->54 0->56 0->57 0->59 0->60 0->61 0->62 0->63 0->64 0->65 0->66 0->67 0->68 0->69 0->70 0->71 0->72 0->73 0->74 0->75 0->76 0->77 0->78 0->79 0->80 0->81 0->82 0->83 0->84 0->85 0->86 0->87 0->89 0->90 0->91 0->92 0->93 0->94 0->95 0->96 0->97 0->98 0->99 0->100 0->101 0->102 0->103 0->104 0->105 0->106 0->107 0->108 0->109 0->110 0->111 0->112 0->113 0->114 0->115 0->116 0->117 0->118 0->119 0->120 0->121 0->122 0->123 0->124 0->125 0->126 0->127 0->128 0->129 0->130 0->131 0->132 0->133 0->134 0->135 0->136 0->137 0->138 0->140 0->141 0->142 0->143 0->144 0->145 0->147 0->148 0->149 0->150 0->152 0->153 0->155 0->156 0->157 0->158 0->159 0->160 0->161 0->162 0->163 0->164 0->165 0->166 0->167 0->168 0->169 0->170 0->171 0->172 0->173 0->174 0->175 0->177 0->178 0->179 0->180 0->181 0->182 0->183 0->184 0->185 0->186 0->187 0->188 0->189 0->190 0->191 0->192 0->193 0->194 0->195 0->196 0->198 0->199 0->201 0->202 0->203 0->206 0->207 0->208 0->209 0->210 0->211 0->212 0->213 0->214 0->216 0->217 0->218 0->219 0->220 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->110 17->1 17->1 17->42 17->105 17->110 17->144 21->1 21->22 21->43 21->54 21->57 21->112 21->115 21->118 21->121 21->133 21->138 21->145 21->150 21->153 21->202 21->214 22->1 22->1 22->165 23->1 23->1 23->24 23->140 24->1 24->1 24->1 24->29 24->142 24->170 24->220 25->1 25->1 25->29 25->30 25->39 25->51 25->69 25->74 25->77 25->93 25->101 25->112 25->115 25->118 25->121 25->127 25->133 25->142 25->170 25->174 25->195 25->207 25->218 25->219 25->220 29->1 30->1 30->1 30->29 30->39 30->51 30->69 30->74 30->77 30->93 30->101 30->112 30->115 30->118 30->121 30->127 30->133 30->142 30->170 30->174 30->195 30->207 30->218 30->219 30->220 33->1 33->1 33->38 33->203 33->216 34->1 34->1 34->29 34->30 34->39 34->51 34->69 34->74 34->77 34->93 34->101 34->112 34->115 34->118 34->121 34->127 34->133 34->142 34->170 34->174 34->195 34->207 34->218 34->219 34->220 38->1 38->1 38->1 38->203 38->216 39->1 39->1 39->29 39->30 39->51 39->69 39->74 39->77 39->93 39->101 39->112 39->115 39->118 39->121 39->127 39->133 39->142 39->170 39->174 39->195 39->207 39->218 39->219 39->220 42->1 42->1 43->1 43->1 43->171 44->1 44->1 44->45 44->147 45->1 45->1 45->1 45->174 45->190 45->192 45->195 45->207 45->211 46->1 46->1 46->29 46->30 46->39 46->51 46->69 46->74 46->77 46->93 46->101 46->112 46->115 46->118 46->121 46->127 46->133 46->142 46->170 46->174 46->195 46->207 46->218 46->219 46->220 50->1 50->1 50->1 51->1 51->1 51->29 51->30 51->39 51->69 51->74 51->77 51->93 51->101 51->112 51->115 51->118 51->121 51->127 51->133 51->142 51->170 51->174 51->195 51->207 51->218 51->219 51->220 54->1 54->177 55->1 55->1 55->56 55->152 56->1 56->1 56->1 56->184 56->218 56->219 57->1 57->1 57->178 58->1 58->1 58->59 58->155 59->1 59->1 59->1 59->185 59->217 60->1 60->1 60->67 60->68 60->127 61->1 61->1 61->72 61->73 61->129 61->160 61->191 62->1 62->1 62->29 62->30 62->39 62->51 62->69 62->74 62->77 62->93 62->101 62->112 62->115 62->118 62->121 62->127 62->133 62->142 62->170 62->174 62->195 62->207 62->218 62->219 62->220 67->1 67->184 68->1 68->1 68->67 68->127 69->1 69->1 69->1 72->1 72->185 73->1 73->1 73->72 73->129 73->160 73->191 74->1 74->1 74->1 77->1 77->1 77->29 77->30 77->39 77->51 77->69 77->74 77->93 77->101 77->112 77->115 77->118 77->121 77->127 77->133 77->142 77->170 77->174 77->195 77->207 77->218 77->219 77->220 80->1 80->1 80->29 80->30 80->39 80->51 80->69 80->74 80->77 80->93 80->101 80->112 80->115 80->118 80->121 80->127 80->133 80->142 80->170 80->174 80->195 80->207 80->218 80->219 80->220 84->1 84->1 84->89 84->129 84->217 88->1 88->1 88->1 89->1 89->1 89->129 89->217 92->1 92->1 92->1 93->1 93->1 93->29 93->30 93->39 93->51 93->69 93->74 93->77 93->101 93->112 93->115 93->118 93->121 93->127 93->133 93->142 93->170 93->174 93->195 93->207 93->218 93->219 93->220 96->1 96->1 96->29 96->30 96->39 96->51 96->69 96->74 96->77 96->93 96->101 96->112 96->115 96->118 96->121 96->127 96->133 96->142 96->170 96->174 96->195 96->207 96->218 96->219 96->220 100->1 100->1 101->1 101->1 101->29 101->30 101->39 101->51 101->69 101->74 101->77 101->93 101->112 101->115 101->118 101->121 101->127 101->133 101->142 101->170 101->174 101->195 101->207 101->218 101->219 101->220 104->1 105->1 105->1 105->42 105->110 105->144 108->1 109->1 109->1 110->1 110->1 110->1 110->16 110->42 110->105 110->144 110->163 110->196 111->1 111->1 112->1 112->1 112->1 112->21 112->22 112->29 112->30 112->39 112->43 112->51 112->54 112->57 112->69 112->74 112->77 112->93 112->101 112->115 112->115 112->118 112->118 112->121 112->121 112->127 112->133 112->133 112->138 112->142 112->145 112->150 112->153 112->166 112->170 112->174 112->195 112->198 112->202 112->207 112->214 112->218 112->219 112->220 113->1 113->1 114->1 114->1 115->1 115->1 115->1 115->21 115->22 115->29 115->30 115->39 115->43 115->51 115->54 115->57 115->69 115->74 115->77 115->93 115->101 115->112 115->112 115->118 115->118 115->121 115->121 115->127 115->133 115->133 115->138 115->142 115->145 115->150 115->153 115->168 115->170 115->174 115->195 115->199 115->202 115->207 115->214 115->218 115->219 115->220 116->1 116->1 117->1 117->1 118->1 118->1 118->1 118->21 118->22 118->29 118->30 118->39 118->43 118->51 118->54 118->57 118->69 118->74 118->77 118->93 118->101 118->112 118->112 118->115 118->115 118->121 118->121 118->127 118->133 118->133 118->138 118->142 118->145 118->150 118->153 118->170 118->172 118->174 118->195 118->201 118->202 118->207 118->214 118->218 118->219 118->220 119->1 119->1 120->1 120->1 121->1 121->1 121->1 121->21 121->22 121->29 121->30 121->39 121->43 121->51 121->54 121->57 121->69 121->74 121->77 121->93 121->101 121->112 121->112 121->115 121->115 121->118 121->118 121->127 121->133 121->133 121->138 121->142 121->145 121->150 121->153 121->170 121->174 121->179 121->195 121->202 121->206 121->207 121->214 121->218 121->219 121->220 122->1 122->1 122->1 122->182 122->208 123->1 123->1 124->1 124->1 125->1 125->1 126->1 126->1 127->1 127->1 127->1 127->29 127->30 127->39 127->51 127->67 127->68 127->69 127->74 127->77 127->93 127->101 127->112 127->115 127->118 127->121 127->133 127->142 127->170 127->174 127->186 127->195 127->207 127->209 127->218 127->219 127->220 128->1 128->1 129->1 129->1 129->1 129->72 129->73 129->89 129->160 129->188 129->191 129->210 129->217 130->1 130->1 131->1 131->1 132->1 132->1 133->1 133->1 133->1 133->21 133->22 133->29 133->30 133->39 133->43 133->51 133->54 133->57 133->69 133->74 133->77 133->93 133->101 133->112 133->112 133->115 133->115 133->118 133->118 133->121 133->121 133->127 133->138 133->142 133->145 133->150 133->153 133->170 133->174 133->193 133->195 133->202 133->207 133->212 133->214 133->218 133->219 133->220 134->1 134->1 135->1 135->1 136->108 138->1 139->1 139->23 140->1 142->1 144->1 145->1 146->1 146->44 147->1 149->1 149->1 149->50 149->50 151->1 151->55 152->1 153->1 154->1 154->58 155->1 160->1 160->1 160->88 160->88 163->1 163->1 165->1 165->139 166->1 166->1 168->1 168->1 170->1 171->1 171->146 172->1 172->1 174->1 176->1 176->1 176->149 176->149 177->1 177->151 178->1 178->154 179->1 179->1 182->1 182->1 184->1 184->1 185->1 185->1 186->1 186->1 188->1 188->1 190->1 191->1 192->1 192->1 193->1 193->1 195->1 196->1 196->1 197->1 198->1 198->1 199->1 199->1 200->1 201->1 201->1 202->1 202->1 202->176 202->176 203->1 203->1 203->176 203->176 204->1 205->1 206->1 206->1 207->1 207->1 208->1 208->1 209->1 209->1 210->1 210->1 211->1 211->1 212->1 212->1 214->1 215->1 216->1 217->1 218->1 219->1 219->1 220->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int getpagesize ( ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int ( /* missing proto */ scanf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern double log ( double x ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { int i ; int t ; int n ; int * x ; unsigned long __lengthofx ; void * tmp ; int j ; int sum ; long double * y ; unsigned long __lengthofy ; void * tmp___0 ; int * z ; unsigned long __lengthofz ; void * tmp___1 ; int * z2 ; unsigned long __lengthofz2 ; void * tmp___2 ; int zn ; int z2n ; int tmp___3 ; int tmp___4 ; int k ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 43 ; } while ( 1 ) { switch ( _1_main_next ) { case 43 : scanf ( " " , & t ) ; i = 0 ; { _1_main_next = 41 ; } break ; case 41 : ; if ( i < t ) { { _1_main_next = 39 ; } } else { { _1_main_next = 0 ; } } break ; case 39 : scanf ( " " , & n ) ; __lengthofx = ( unsigned long ) n ; tmp = __builtin_alloca ( sizeof ( * x ) * __lengthofx ) ; x = ( int * ) tmp ; j = 0 ; { _1_main_next = 37 ; } break ; case 37 : ; if ( j < n ) { { _1_main_next = 35 ; } } else { { _1_main_next = 34 ; } } break ; case 35 : scanf ( " " , x + j ) ; j ++ ; { _1_main_next = 37 ; } break ; case 34 : sum = 0 ; j = 0 ; { _1_main_next = 32 ; } break ; case 32 : ; if ( j < n ) { { _1_main_next = 30 ; } } else { { _1_main_next = 29 ; } } break ; case 30 : sum += * ( x + j ) ; j ++ ; { _1_main_next = 32 ; } break ; case 29 : printf ( " " , i + 1 ) ; __lengthofy = ( unsigned long ) n ; tmp___0 = __builtin_alloca ( sizeof ( * y ) * __lengthofy ) ; y = ( long double * ) tmp___0 ; j = 0 ; { _1_main_next = 27 ; } break ; case 27 : ; if ( j < n ) { { _1_main_next = 25 ; } } else { { _1_main_next = 24 ; } } break ; case 25 : * ( y + j ) = ( long double ) 100 * ( ( long double ) 2 / ( long double ) n - ( long double ) * ( x + j ) / ( long double ) sum ) ; j ++ ; { _1_main_next = 27 ; } break ; case 24 : __lengthofz = ( unsigned long ) n ; tmp___1 = __builtin_alloca ( sizeof ( * z ) * __lengthofz ) ; z = ( int * ) tmp___1 ; __lengthofz2 = ( unsigned long ) n ; tmp___2 = __builtin_alloca ( sizeof ( * z2 ) * __lengthofz2 ) ; z2 = ( int * ) tmp___2 ; zn = 0 ; z2n = 0 ; j = 0 ; { _1_main_next = 22 ; } break ; case 22 : ; if ( j < n ) { { _1_main_next = 20 ; } } else { { _1_main_next = 16 ; } } break ; case 20 : ; if ( * ( y + j ) < ( long double ) 0 ) { { _1_main_next = 19 ; } } else { { _1_main_next = 18 ; } } break ; case 19 : tmp___3 = zn ; zn ++ ; * ( z + tmp___3 ) = j ; { _1_main_next = 17 ; } break ; case 18 : tmp___4 = z2n ; z2n ++ ; * ( z2 + tmp___4 ) = j ; { _1_main_next = 17 ; } break ; case 17 : j ++ ; { _1_main_next = 22 ; } break ; case 16 : j = 0 ; { _1_main_next = 14 ; } break ; case 14 : ; if ( j < zn ) { { _1_main_next = 12 ; } } else { { _1_main_next = 6 ; } } break ; case 12 : k = 0 ; { _1_main_next = 10 ; } break ; case 10 : ; if ( k < z2n ) { { _1_main_next = 8 ; } } else { { _1_main_next = 7 ; } } break ; case 8 : * ( y + * ( z2 + k ) ) += * ( y + * ( z + j ) ) / ( long double ) z2n ; k ++ ; { _1_main_next = 10 ; } break ; case 7 : * ( y + * ( z + j ) ) = ( long double ) 0 ; j ++ ; { _1_main_next = 14 ; } break ; case 6 : j = 0 ; { _1_main_next = 4 ; } break ; case 4 : ; if ( j < n ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : printf ( " " , * ( y + j ) ) ; j ++ ; { _1_main_next = 4 ; } break ; case 1 : printf ( " \n " ) ; i ++ ; { _1_main_next = 41 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD swap
METHOD_RETURN void
PARAM int *first
PARAM int *second
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_swap_next = 1
LITERAL 1 while (1)
IDENTIFIER _1_swap_next switch(_1_swap_next)
LITERAL 1 <empty>
<operator>.assignment temp = *first
<operator>.assignment *first = *second
<operator>.assignment *second = temp
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return; return;
<operator>.assignment _1_swap_next = 0
>>>PDG&17 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->12 0->13 0->14 0->15 0->16 2->1 3->1 6->1 6->1 10->1 10->12 11->1 11->1 11->10 12->1 12->1 12->1 12->11 15->1 16->1 16->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void swap ( int * first , int * second ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void swap ( int * first , int * second ) { int temp ; unsigned long _1_swap_next ; { { _1_swap_next = 1 ; } while ( 1 ) { switch ( _1_swap_next ) { case 1 : temp = * first ; * first = * second ; * second = temp ; { _1_swap_next = 0 ; } break ; case 0 : ; return ; break ; } } } } void megaInit ( void ) { { } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD JSHash
METHOD_RETURN unsigned int
PARAM char *str
PARAM unsigned int len
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_JSHash_next = 5
LITERAL 1 while (1)
IDENTIFIER _1_JSHash_next switch(_1_JSHash_next)
LITERAL 5 <empty>
<operator>.assignment hash = 1315423911U
<operator>.assignment i = 0U
<operator>.assignment i = 0U
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 1 <empty>
<operators>.assignmentXor hash ^= ((hash << 5) + (unsigned int )*str) + (hash >> 2)
<operator>.postIncrement str ++
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (hash); return (hash);
<operator>.assignment _1_JSHash_next = 3
<operator>.lessThan i < len
<operator>.assignment _1_JSHash_next = 3
IDENTIFIER hash return (hash);
BLOCK <empty> <empty>
<operator>.addition ((hash << 5) + (unsigned int )*str) + (hash >> 2)
<operator>.assignment _1_JSHash_next = 1
BLOCK <empty> <empty>
<operator>.addition (hash << 5) + (unsigned int )*str
<operator>.arithmeticShiftRight hash >> 2
<operator>.assignment _1_JSHash_next = 0
<operator>.shiftLeft hash << 5
<operator>.cast (unsigned int )*str
>>>PDG&35 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->22 0->23 0->24 0->25 0->26 0->28 0->29 0->31 0->32 0->33 2->1 2->17 3->1 3->23 6->1 6->1 10->1 10->1 10->25 10->33 12->1 12->1 12->18 12->23 16->1 16->1 16->25 16->33 17->1 17->1 18->1 18->1 18->23 21->1 22->1 22->1 23->1 23->1 23->1 23->18 23->28 23->32 24->1 24->1 25->21 27->1 27->1 28->1 28->1 30->1 30->1 31->16 31->16 31->27 31->27 32->1 32->1 33->16 33->16 33->27 33->27 33->30 33->30 33->31 34->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; unsigned int JSHash ( char * str , unsigned int len ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } unsigned int JSHash ( char * str , unsigned int len ) { unsigned int hash ; unsigned int i ; unsigned long _1_JSHash_next ; { { _1_JSHash_next = 5 ; } while ( 1 ) { switch ( _1_JSHash_next ) { case 5 : hash = 1315423911U ; i = 0U ; i = 0U ; { _1_JSHash_next = 3 ; } break ; case 3 : ; if ( i < len ) { { _1_JSHash_next = 1 ; } } else { { _1_JSHash_next = 0 ; } } break ; case 1 : hash ^= ( ( hash << 5 ) + ( unsigned int ) * str ) + ( hash >> 2 ) ; str ++ ; i ++ ; { _1_JSHash_next = 3 ; } break ; case 0 : ; return ( hash ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 1 <empty>
printf printf("Enter the decimal number: ")
scanf scanf("%ld", & decimalnum)
decimal2Octal decimal2Octal(decimalnum)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
>>>PDG&24 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 17->1 17->18 18->1 18->1 18->17 21->1 22->1 22->1 23->21
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int ( /* missing proto */ scanf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ decimal2Octal ) ( ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern double log ( double x ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { long decimalnum ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 1 ; } while ( 1 ) { switch ( _1_main_next ) { case 1 : printf ( " " ) ; scanf ( " " , & decimalnum ) ; decimal2Octal ( decimalnum ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 53
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 53 <empty>
scanf scanf("%d", & n)
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 51 <empty>
LITERAL 49 <empty>
scanf scanf("%d", & ns)
<operator>.assignment tmp = getchar()
<operator>.assignment c = (char )tmp
<operator>.assignment j = 0
BLOCK <empty> <empty>
LITERAL 47 <empty>
LITERAL 45 <empty>
<operator>.assignment s[j] = 0
<operator>.assignment p = 1
BLOCK <empty> <empty>
LITERAL 43 <empty>
<operator>.assignment tmp___1 = getchar()
<operator>.assignment c = (char )tmp___1
BLOCK <empty> <empty>
LITERAL 42 <empty>
LITERAL 40 <empty>
<operator>.assignment tmp___0 = p
<operator>.postIncrement p ++
<operator>.assignmentPlus s[j] += ((int )c * (int )c) * tmp___0
BLOCK <empty> <empty>
LITERAL 39 <empty>
<operator>.postIncrement j ++
BLOCK <empty> <empty>
LITERAL 38 <empty>
scanf scanf("%d", & nq)
<operator>.assignment tmp___2 = getchar()
<operator>.assignment c = (char )tmp___2
<operator>.assignment j = 0
BLOCK <empty> <empty>
LITERAL 36 <empty>
LITERAL 34 <empty>
<operator>.assignment q[j] = 0
<operator>.assignment p = 1
BLOCK <empty> <empty>
LITERAL 32 <empty>
<operator>.assignment tmp___4 = getchar()
<operator>.assignment c = (char )tmp___4
BLOCK <empty> <empty>
LITERAL 31 <empty>
LITERAL 29 <empty>
<operator>.assignment tmp___3 = p
<operator>.postIncrement p ++
<operator>.assignmentPlus q[j] += ((int )c * (int )c) * tmp___3
BLOCK <empty> <empty>
LITERAL 28 <empty>
<operator>.postIncrement j ++
BLOCK <empty> <empty>
LITERAL 27 <empty>
<operator>.assignment dini = 0
<operator>.assignment switches = 0
BLOCK <empty> <empty>
LITERAL 25 <empty>
LITERAL 23 <empty>
<operator>.assignment melhor = -1
<operator>.assignment j = 0
<operator>.assignment dini2 = dini
BLOCK <empty> <empty>
LITERAL 21 <empty>
LITERAL 20 <empty>
LITERAL 17 <empty>
LITERAL 14 <empty>
LITERAL 13 <empty>
LITERAL 10 <empty>
<operator>.postIncrement dini2 ++
BLOCK <empty> <empty>
LITERAL 9 <empty>
LITERAL 8 <empty>
<operator>.assignment melhor = dini2
BLOCK <empty> <empty>
LITERAL 7 <empty>
LITERAL 6 <empty>
<operator>.assignment melhor = dini2
BLOCK <empty> <empty>
LITERAL 5 <empty>
<operator>.postIncrement j ++
<operator>.assignment dini2 = dini
BLOCK <empty> <empty>
LITERAL 4 <empty>
<operator>.assignment dini = melhor
<operator>.postIncrement switches ++
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 2 <empty>
<operator>.postIncrement switches ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("Case #%d: %d\n", i + 1, switches - 1)
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 51
<operator>.lessThan i < n
<operator>.assignment _1_main_next = 47
<operator>.lessThan j < ns
<operator>.assignment _1_main_next = 43
<operator>.assignment _1_main_next = 42
<operator>.notEquals (int )c != 10
<operator>.assignment _1_main_next = 43
<operator>.assignment _1_main_next = 47
<operator>.assignment _1_main_next = 36
<operator>.lessThan j < nq
<operator>.assignment _1_main_next = 32
<operator>.assignment _1_main_next = 31
<operator>.notEquals (int )c != 10
<operator>.assignment _1_main_next = 32
<operator>.assignment _1_main_next = 36
<operator>.assignment _1_main_next = 25
<operator>.lessThan dini < nq
<operator>.assignment _1_main_next = 21
<operator>.lessThan j < ns
<operator>.lessThan dini2 < nq
<operator>.equals s[j] == q[dini2]
<operator>.notEquals s[j] != q[dini2]
<operator>.lessThan dini2 < nq
<operator>.assignment _1_main_next = 14
<operator>.equals melhor == -1
<operator>.assignment _1_main_next = 7
<operator>.lessThan melhor < dini2
<operator>.assignment _1_main_next = 5
<operator>.assignment _1_main_next = 21
<operator>.assignment _1_main_next = 25
<operator>.equals switches == 0
<operator>.assignment _1_main_next = 1
<operator>.assignment _1_main_next = 51
LITERAL 0 return (0);
BLOCK <empty> <empty>
<operator>.cast (char )tmp
BLOCK <empty> <empty>
<operator>.cast (char )tmp___1
BLOCK <empty> <empty>
<operator>.multiplication ((int )c * (int )c) * tmp___0
<operator>.cast (char )tmp___2
BLOCK <empty> <empty>
<operator>.cast (char )tmp___4
BLOCK <empty> <empty>
<operator>.multiplication ((int )c * (int )c) * tmp___3
BLOCK <empty> <empty>
<operator>.minus -1
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.addition i + 1
<operator>.subtraction switches - 1
<operator>.assignment _1_main_next = 49
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 45
BLOCK <empty> <empty>
<operator>.cast (int )c
<operator>.assignment _1_main_next = 40
BLOCK <empty> <empty>
<operator>.multiplication (int )c * (int )c
<operator>.assignment _1_main_next = 34
BLOCK <empty> <empty>
<operator>.cast (int )c
<operator>.assignment _1_main_next = 29
BLOCK <empty> <empty>
<operator>.multiplication (int )c * (int )c
<operator>.assignment _1_main_next = 23
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 20
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 17
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 5
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 13
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 10
BLOCK <empty> <empty>
<operator>.minus -1
<operator>.assignment _1_main_next = 8
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 6
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 0
<operator>.assignment _1_main_next = 38
<operator>.assignment _1_main_next = 39
<operator>.cast (int )c
<operator>.cast (int )c
<operator>.assignment _1_main_next = 27
<operator>.assignment _1_main_next = 28
<operator>.cast (int )c
<operator>.cast (int )c
<operator>.assignment _1_main_next = 3
<operator>.assignment _1_main_next = 4
<operator>.assignment _1_main_next = 4
<operator>.assignment _1_main_next = 14
<operator>.assignment _1_main_next = 9
<operator>.assignment _1_main_next = 9
<operator>.assignment _1_main_next = 7
<operator>.assignment _1_main_next = 5
<operator>.assignment _1_main_next = 1
>>>PDG&221 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 0->59 0->60 0->61 0->62 0->64 0->65 0->66 0->67 0->68 0->69 0->70 0->71 0->72 0->73 0->75 0->76 0->77 0->78 0->79 0->80 0->81 0->82 0->83 0->84 0->85 0->86 0->87 0->88 0->89 0->90 0->91 0->92 0->93 0->94 0->95 0->96 0->97 0->98 0->99 0->100 0->101 0->102 0->103 0->104 0->105 0->106 0->107 0->108 0->109 0->110 0->111 0->112 0->113 0->114 0->115 0->116 0->117 0->118 0->119 0->120 0->121 0->122 0->123 0->124 0->125 0->126 0->127 0->128 0->129 0->130 0->131 0->132 0->135 0->136 0->137 0->138 0->139 0->140 0->141 0->142 0->143 0->144 0->145 0->146 0->147 0->148 0->149 0->150 0->151 0->152 0->153 0->154 0->155 0->156 0->157 0->158 0->159 0->160 0->161 0->162 0->163 0->164 0->165 0->166 0->167 0->168 0->169 0->170 0->171 0->172 0->173 0->174 0->175 0->176 0->177 0->178 0->179 0->180 0->181 0->182 0->183 0->184 0->185 0->186 0->187 0->188 0->189 0->190 0->191 0->192 0->193 0->194 0->195 0->196 0->197 0->198 0->199 0->200 0->201 0->202 0->203 0->204 0->205 0->206 0->207 0->208 0->209 0->210 0->211 0->212 0->213 0->214 0->215 0->216 0->217 0->218 0->219 0->220 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->113 17->1 17->1 17->107 17->108 17->113 17->168 21->1 21->115 21->131 22->1 22->1 22->23 22->148 23->1 23->1 23->1 23->118 23->125 23->174 23->177 23->180 23->183 23->206 23->207 23->210 23->211 24->1 24->1 24->42 24->66 24->95 24->115 24->122 24->131 28->1 28->1 28->39 28->133 28->134 29->1 29->1 29->37 29->38 29->61 29->62 32->1 32->1 32->33 32->150 33->1 33->1 33->1 33->118 33->125 33->174 33->177 33->180 33->183 33->206 33->207 33->210 33->211 37->1 37->152 38->1 38->1 38->37 38->61 38->62 39->1 39->1 39->1 39->133 39->134 42->1 42->1 42->66 42->95 42->115 42->122 42->131 45->1 45->122 45->129 45->132 45->135 46->1 46->1 46->47 46->153 47->1 47->1 47->1 47->118 47->125 47->174 47->177 47->180 47->183 47->206 47->207 47->210 47->211 48->1 48->1 48->42 48->66 48->95 48->115 48->122 48->131 52->1 52->1 52->63 53->1 53->1 53->37 53->38 53->61 53->62 56->1 56->1 56->57 56->155 57->1 57->1 57->1 57->118 57->125 57->174 57->177 57->180 57->183 57->206 57->207 57->210 57->211 61->1 61->157 62->1 62->1 62->37 62->38 62->61 63->1 63->1 63->1 66->1 66->1 66->42 66->95 66->115 66->122 66->131 69->1 69->1 69->76 69->96 69->129 70->1 70->1 70->100 70->104 70->143 70->169 74->1 74->1 74->1 74->99 74->137 74->139 75->1 75->1 75->42 75->66 75->95 75->115 75->122 75->131 76->1 76->1 76->1 76->84 76->88 76->92 76->132 76->135 76->139 84->1 84->1 84->88 84->92 84->132 84->135 84->139 88->1 88->1 88->1 88->99 88->137 88->139 92->1 92->1 92->1 92->99 92->137 92->139 95->1 95->1 95->42 95->66 95->115 95->122 95->131 96->1 96->1 96->1 96->84 96->88 96->92 96->132 96->135 96->139 99->1 99->1 99->1 99->76 99->96 99->129 100->1 100->1 100->104 100->143 100->169 104->1 104->1 104->100 104->143 104->169 107->1 107->1 107->1 108->1 108->1 108->107 108->113 108->168 111->1 112->1 112->1 113->1 113->1 113->1 113->16 113->107 113->108 113->168 113->170 113->203 114->1 114->1 115->1 115->1 115->1 115->21 115->42 115->66 115->95 115->122 115->131 115->131 115->172 115->204 116->1 116->1 117->1 117->1 118->1 118->1 118->175 118->205 119->1 119->1 120->1 120->1 121->1 121->1 122->1 122->1 122->1 122->42 122->45 122->66 122->95 122->115 122->129 122->131 122->132 122->135 122->178 122->208 123->1 123->1 124->1 124->1 125->1 125->1 125->181 125->209 126->1 126->1 127->1 127->1 128->1 128->1 129->1 129->1 129->1 129->45 129->76 129->96 129->122 129->132 129->135 129->184 129->212 130->1 130->1 131->1 131->1 131->1 131->21 131->42 131->66 131->95 131->115 131->115 131->122 131->186 131->213 132->1 132->1 132->1 132->45 132->84 132->88 132->92 132->122 132->129 132->135 132->135 132->139 132->188 132->214 133->1 133->1 133->1 133->39 133->134 133->134 133->190 133->215 134->1 134->1 134->1 134->39 134->133 134->133 134->192 134->216 135->1 135->1 135->1 135->45 135->84 135->88 135->92 135->122 135->129 135->132 135->132 135->139 135->194 135->217 136->1 136->1 137->1 137->1 137->1 137->99 137->139 137->197 137->218 138->1 138->1 139->1 139->1 139->1 139->84 139->88 139->92 139->99 139->132 139->135 139->137 139->199 139->219 140->1 140->1 141->1 141->1 142->1 142->1 143->1 143->1 143->100 143->104 143->169 143->201 143->220 144->1 144->1 145->1 145->1 146->111 148->1 150->1 152->1 152->1 152->39 152->39 153->1 155->1 157->1 157->1 157->63 157->63 159->74 169->1 169->100 169->104 169->107 169->107 169->143 170->1 170->1 172->1 172->1 174->1 175->1 175->1 177->1 177->152 178->1 178->1 180->1 181->1 181->1 183->1 183->157 184->1 184->1 186->1 186->1 188->1 188->1 190->1 190->1 192->1 192->1 194->1 194->1 196->137 197->1 197->1 199->1 199->1 201->1 201->1 203->1 203->1 204->1 204->1 205->1 205->1 207->1 208->1 208->1 209->1 209->1 211->1 212->1 212->1 213->1 213->1 214->1 214->1 215->1 215->1 216->1 216->1 217->1 217->1 218->1 218->1 219->1 219->1 220->1 220->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int ( /* missing proto */ scanf ) ( ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern double sqrt ( double x ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; extern int ( /* missing proto */ getchar ) ( ) ; void megaInit ( void ) { { } } int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { char c ; int n ; int i ; int j ; int ns ; int nq ; int melhor ; int p ; int dini ; int dini2 ; int switches ; int s [ 100 ] ; int q [ 1000 ] ; int tmp ; int tmp___0 ; int tmp___1 ; int tmp___2 ; int tmp___3 ; int tmp___4 ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 53 ; } while ( 1 ) { switch ( _1_main_next ) { case 53 : scanf ( " " , & n ) ; i = 0 ; { _1_main_next = 51 ; } break ; case 51 : ; if ( i < n ) { { _1_main_next = 49 ; } } else { { _1_main_next = 0 ; } } break ; case 49 : scanf ( " " , & ns ) ; tmp = getchar ( ) ; c = ( char ) tmp ; j = 0 ; { _1_main_next = 47 ; } break ; case 47 : ; if ( j < ns ) { { _1_main_next = 45 ; } } else { { _1_main_next = 38 ; } } break ; case 45 : s [ j ] = 0 ; p = 1 ; { _1_main_next = 43 ; } break ; case 43 : tmp___1 = getchar ( ) ; c = ( char ) tmp___1 ; { _1_main_next = 42 ; } break ; case 42 : ; if ( ( int ) c != 10 ) { { _1_main_next = 40 ; } } else { { _1_main_next = 39 ; } } break ; case 40 : tmp___0 = p ; p ++ ; s [ j ] += ( ( int ) c * ( int ) c ) * tmp___0 ; { _1_main_next = 43 ; } break ; case 39 : j ++ ; { _1_main_next = 47 ; } break ; case 38 : scanf ( " " , & nq ) ; tmp___2 = getchar ( ) ; c = ( char ) tmp___2 ; j = 0 ; { _1_main_next = 36 ; } break ; case 36 : ; if ( j < nq ) { { _1_main_next = 34 ; } } else { { _1_main_next = 27 ; } } break ; case 34 : q [ j ] = 0 ; p = 1 ; { _1_main_next = 32 ; } break ; case 32 : tmp___4 = getchar ( ) ; c = ( char ) tmp___4 ; { _1_main_next = 31 ; } break ; case 31 : ; if ( ( int ) c != 10 ) { { _1_main_next = 29 ; } } else { { _1_main_next = 28 ; } } break ; case 29 : tmp___3 = p ; p ++ ; q [ j ] += ( ( int ) c * ( int ) c ) * tmp___3 ; { _1_main_next = 32 ; } break ; case 28 : j ++ ; { _1_main_next = 36 ; } break ; case 27 : dini = 0 ; switches = 0 ; { _1_main_next = 25 ; } break ; case 25 : ; if ( dini < nq ) { { _1_main_next = 23 ; } } else { { _1_main_next = 3 ; } } break ; case 23 : melhor = -1 ; j = 0 ; dini2 = dini ; { _1_main_next = 21 ; } break ; case 21 : ; if ( j < ns ) { { _1_main_next = 20 ; } } else { { _1_main_next = 4 ; } } break ; case 20 : ; if ( dini2 < nq ) { { _1_main_next = 17 ; } } else { { _1_main_next = 4 ; } } break ; case 17 : ; if ( s [ j ] == q [ dini2 ] ) { { _1_main_next = 5 ; } } else { { _1_main_next = 14 ; } } break ; case 14 : ; if ( s [ j ] != q [ dini2 ] ) { { _1_main_next = 13 ; } } else { { _1_main_next = 9 ; } } break ; case 13 : ; if ( dini2 < nq ) { { _1_main_next = 10 ; } } else { { _1_main_next = 9 ; } } break ; case 10 : dini2 ++ ; { _1_main_next = 14 ; } break ; case 9 : ; if ( melhor == -1 ) { { _1_main_next = 8 ; } } else { { _1_main_next = 7 ; } } break ; case 8 : melhor = dini2 ; { _1_main_next = 7 ; } break ; case 7 : ; if ( melhor < dini2 ) { { _1_main_next = 6 ; } } else { { _1_main_next = 5 ; } } break ; case 6 : melhor = dini2 ; { _1_main_next = 5 ; } break ; case 5 : __Cont : /* CIL Label */ j ++ ; dini2 = dini ; { _1_main_next = 21 ; } break ; case 4 : dini = melhor ; switches ++ ; { _1_main_next = 25 ; } break ; case 3 : ; if ( switches == 0 ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : switches ++ ; { _1_main_next = 1 ; } break ; case 1 : printf ( " \n " , i + 1 , switches - 1 ) ; i ++ ; { _1_main_next = 51 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD sort
METHOD_RETURN void
PARAM double *x
PARAM int len
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_sort_next = 12
LITERAL 1 while (1)
IDENTIFIER _1_sort_next switch(_1_sort_next)
LITERAL 12 <empty>
<operator>.assignment k = 0
BLOCK <empty> <empty>
LITERAL 10 <empty>
LITERAL 8 <empty>
<operator>.assignment m = k
<operator>.assignment j = k + 1
BLOCK <empty> <empty>
LITERAL 6 <empty>
LITERAL 4 <empty>
LITERAL 3 <empty>
<operator>.assignment m = j
BLOCK <empty> <empty>
LITERAL 2 <empty>
<operator>.postIncrement j ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operator>.assignment hold = *(x + m)
<operator>.assignment *(x + m) = *(x + k)
<operator>.assignment *(x + k) = hold
<operator>.postIncrement k ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return; return;
<operator>.assignment _1_sort_next = 10
<operator>.lessEqualsThan k <= len - 2
<operator>.assignment _1_sort_next = 6
<operator>.lessEqualsThan j <= len - 1
<operator>.greaterThan *(x + j) > *(x + m)
<operator>.assignment _1_sort_next = 2
<operator>.assignment _1_sort_next = 6
<operator>.assignment _1_sort_next = 10
BLOCK <empty> <empty>
<operator>.addition k + 1
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.subtraction len - 2
<operator>.assignment _1_sort_next = 8
BLOCK <empty> <empty>
<operator>.subtraction len - 1
<operator>.assignment _1_sort_next = 4
BLOCK <empty> <empty>
<operator>.assignment _1_sort_next = 3
BLOCK <empty> <empty>
<operator>.addition x + m
<operator>.addition x + m
<operator>.addition x + k
<operator>.addition x + k
<operator>.assignment _1_sort_next = 0
<operator>.assignment _1_sort_next = 1
<operator>.addition x + j
<operator>.addition x + m
<operator>.assignment _1_sort_next = 2
>>>PDG&62 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 0->59 0->60 0->61 2->1 2->53 2->59 2->60 3->1 3->45 3->48 6->1 6->1 10->1 10->1 10->14 10->29 10->34 10->55 10->56 14->1 14->1 14->53 14->60 15->1 15->1 15->1 15->20 15->23 15->36 15->59 20->1 20->1 20->1 20->53 20->60 23->1 23->1 23->20 23->36 23->59 26->1 26->28 27->1 27->1 28->1 28->1 28->1 29->1 29->1 29->14 29->34 29->55 29->56 32->1 33->1 33->1 34->1 34->1 34->1 34->14 34->29 34->46 34->55 34->56 34->57 35->1 35->1 36->1 36->1 36->1 36->20 36->23 36->49 36->58 36->59 37->1 37->1 37->1 37->51 37->61 38->1 38->1 39->1 39->1 40->1 40->1 42->1 45->1 45->34 45->34 45->48 46->1 46->1 48->1 48->36 48->36 48->45 49->1 49->1 51->1 51->1 54->1 56->1 57->1 57->1 58->1 58->1 59->1 60->1 60->1 61->1 61->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; void sort ( double * x , int len ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } void sort ( double * x , int len ) { int k ; int j ; int m ; double hold ; unsigned long _1_sort_next ; { { _1_sort_next = 12 ; } while ( 1 ) { switch ( _1_sort_next ) { case 12 : k = 0 ; { _1_sort_next = 10 ; } break ; case 10 : ; if ( k <= len - 2 ) { { _1_sort_next = 8 ; } } else { { _1_sort_next = 0 ; } } break ; case 8 : m = k ; j = k + 1 ; { _1_sort_next = 6 ; } break ; case 6 : ; if ( j <= len - 1 ) { { _1_sort_next = 4 ; } } else { { _1_sort_next = 1 ; } } break ; case 4 : ; if ( * ( x + j ) > * ( x + m ) ) { { _1_sort_next = 3 ; } } else { { _1_sort_next = 2 ; } } break ; case 3 : m = j ; { _1_sort_next = 2 ; } break ; case 2 : j ++ ; { _1_sort_next = 6 ; } break ; case 1 : hold = * ( x + m ) ; * ( x + m ) = * ( x + k ) ; * ( x + k ) = hold ; k ++ ; { _1_sort_next = 10 ; } break ; case 0 : ; return ; break ; } } } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 1 <empty>
printf printf("Enter decimal number: ")
scanf scanf("%ld", & decimalnum)
decimal2Hexadecimal decimal2Hexadecimal(decimalnum)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
>>>PDG&24 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 17->1 17->18 18->1 18->1 18->17 21->1 22->1 22->1 23->21
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int ( /* missing proto */ decimal2Hexadecimal ) ( ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int ( /* missing proto */ scanf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern double log ( double x ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { long decimalnum ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 1 ; } while ( 1 ) { switch ( _1_main_next ) { case 1 : printf ( " " ) ; scanf ( " " , & decimalnum ) ; decimal2Hexadecimal ( decimalnum ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 1 <empty>
test_sdbm test_sdbm()
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
>>>PDG&22 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 19->1 20->1 20->1 21->19
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern int ( /* missing proto */ test_sdbm ) ( ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern double log ( double x ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 1 ; } while ( 1 ) { switch ( _1_main_next ) { case 1 : test_sdbm ( ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 6
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 6 <empty>
<operator>.assignment c = (unsigned char )*(*(argv + 1) + 0)
BLOCK <empty> <empty>
LITERAL 5 <empty>
LITERAL 4 <empty>
LITERAL 3 <empty>
printf printf("win\n")
BLOCK <empty> <empty>
LITERAL 2 <empty>
printf printf("lose\n")
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("Usage: program-name character\n")
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 5
<operator>.greaterThan argc > 1
<operator>.equals (int )c == 127
<operator>.assignment _1_main_next = 0
<operator>.assignment _1_main_next = 0
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
<operator>.cast (unsigned char )*(*(argv + 1) + 0)
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 4
BLOCK <empty> <empty>
<operator>.cast (int )c
<operator>.assignment _1_main_next = 3
BLOCK <empty> <empty>
<operator>.addition *(argv + 1) + 0
<operator>.assignment _1_main_next = 1
<operator>.assignment _1_main_next = 2
<operator>.addition argv + 1
>>>PDG&50 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 2->7 2->32 3->8 3->49 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->1 16->33 16->43 21->1 24->1 27->1 30->1 31->1 31->1 32->1 32->1 32->41 32->47 33->1 33->1 33->44 33->48 34->1 34->1 35->1 35->1 36->1 36->1 37->30 38->1 41->1 41->1 43->1 44->1 44->1 46->1 47->1 47->1 48->1 48->1 49->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int argc , char * * argv , char * * _formal_envp ) { unsigned char c ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 6 ; } while ( 1 ) { switch ( _1_main_next ) { case 6 : c = ( unsigned char ) * ( * ( argv + 1 ) + 0 ) ; { _1_main_next = 5 ; } break ; case 5 : ; if ( argc > 1 ) { { _1_main_next = 4 ; } } else { { _1_main_next = 1 ; } } break ; case 4 : ; if ( ( int ) c == 127 ) { { _1_main_next = 3 ; } } else { { _1_main_next = 2 ; } } break ; case 3 : printf ( " \n " ) ; { _1_main_next = 0 ; } break ; case 2 : printf ( " \n " ) ; { _1_main_next = 0 ; } break ; case 1 : printf ( " \n " ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD absF
METHOD_RETURN double
PARAM double n
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_absF_next = 3
LITERAL 1 while (1)
IDENTIFIER _1_absF_next switch(_1_absF_next)
LITERAL 3 <empty>
LITERAL 2 <empty>
RETURN return (- n); return (- n);
LITERAL 1 <empty>
RETURN return (n); return (n);
<operator>.lessThan n < 0.0
<operator>.minus - n
IDENTIFIER n return (n);
BLOCK <empty> <empty>
<operator>.assignment _1_absF_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_absF_next = 1
>>>PDG&20 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->11 0->13 0->14 0->15 0->16 0->17 0->18 0->19 2->13 2->14 2->15 5->1 5->1 10->1 12->1 13->1 13->14 13->15 13->17 13->19 14->1 14->1 14->10 15->12 17->1 17->1 19->1 19->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; double absF ( double n ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } double absF ( double n ) { unsigned long _1_absF_next ; { { _1_absF_next = 3 ; } while ( 1 ) { switch ( _1_absF_next ) { case 3 : ; if ( n < 0.0 ) { { _1_absF_next = 2 ; } } else { { _1_absF_next = 1 ; } } break ; case 2 : ; return ( - n ) ; break ; case 1 : ; return ( n ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD max
METHOD_RETURN int
PARAM int a
PARAM int b
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_max_next = 3
LITERAL 1 while (1)
IDENTIFIER _1_max_next switch(_1_max_next)
LITERAL 3 <empty>
LITERAL 2 <empty>
<operator>.assignment tmp = a
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operator>.assignment tmp = b
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (tmp); return (tmp);
<operator>.greaterEqualsThan a >= b
<operator>.assignment _1_max_next = 0
<operator>.assignment _1_max_next = 0
IDENTIFIER tmp return (tmp);
BLOCK <empty> <empty>
<operator>.assignment _1_max_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_max_next = 1
>>>PDG&26 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 2->1 2->11 2->18 3->1 3->14 3->18 6->1 6->1 11->1 11->1 11->1 11->21 14->1 14->1 14->1 14->21 17->1 18->1 18->1 18->1 18->11 18->14 18->23 18->25 19->1 19->1 20->1 20->1 21->17 23->1 23->1 25->1 25->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; int max ( int a , int b ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } int max ( int a , int b ) { int tmp ; unsigned long _1_max_next ; { { _1_max_next = 3 ; } while ( 1 ) { switch ( _1_max_next ) { case 3 : ; if ( a >= b ) { { _1_max_next = 2 ; } } else { { _1_max_next = 1 ; } } break ; case 2 : tmp = a ; { _1_max_next = 0 ; } break ; case 1 : tmp = b ; { _1_max_next = 0 ; } break ; case 0 : ; return ( tmp ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD int_hash
METHOD_RETURN unsigned int
PARAM void *vlocation
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_int_hash_next = 1
LITERAL 1 while (1)
IDENTIFIER _1_int_hash_next switch(_1_int_hash_next)
LITERAL 1 <empty>
<operator>.assignment location = (int *)vlocation
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return ((unsigned int )*location); return ((unsigned int )*location);
<operator>.assignment _1_int_hash_next = 0
<operator>.cast (unsigned int )*location
<operator>.cast (int *)vlocation
>>>PDG&16 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->13 0->15 2->1 2->9 2->15 5->1 5->1 9->1 9->1 9->1 12->1 13->1 13->1 14->1 14->1 14->12 15->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; unsigned int int_hash ( void * vlocation ) ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; unsigned int int_hash ( void * vlocation ) { int * location ; unsigned long _1_int_hash_next ; { { _1_int_hash_next = 1 ; } while ( 1 ) { switch ( _1_int_hash_next ) { case 1 : location = ( int * ) vlocation ; { _1_int_hash_next = 0 ; } break ; case 0 : ; return ( ( unsigned int ) * location ) ; break ; } } } } void megaInit ( void ) { { } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD test_sdbm
METHOD_RETURN void
PARAM void
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_test_sdbm_next = 1
LITERAL 1 while (1)
IDENTIFIER _1_test_sdbm_next switch(_1_test_sdbm_next)
LITERAL 1 <empty>
<operator>.assignment tmp = sdbm("Hello World")
assert assert((unsigned long )tmp == 0xb2c56f18c908f484UL)
<operator>.assignment tmp___0 = sdbm("Hello World!")
assert assert((long )tmp___0 == 7903571203300273309L)
<operator>.assignment tmp___1 = sdbm("Hello world")
assert assert((unsigned long )tmp___1 == 0xd25111c14694d4a4UL)
<operator>.assignment tmp___2 = sdbm("Hello world!")
assert assert((unsigned long )tmp___2 == 0xd3b4a5253344547dUL)
printf printf("Tests passed\n")
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return; return;
<operator>.assignment _1_test_sdbm_next = 0
sdbm sdbm("Hello World")
<operator>.equals (unsigned long )tmp == 0xb2c56f18c908f484UL
sdbm sdbm("Hello World!")
<operator>.equals (long )tmp___0 == 7903571203300273309L
sdbm sdbm("Hello world")
<operator>.equals (unsigned long )tmp___1 == 0xd25111c14694d4a4UL
sdbm sdbm("Hello world!")
<operator>.equals (unsigned long )tmp___2 == 0xd3b4a5253344547dUL
<operator>.cast (unsigned long )tmp
<operator>.cast (long )tmp___0
<operator>.cast (unsigned long )tmp___1
<operator>.cast (unsigned long )tmp___2
>>>PDG&34 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 2->1 5->1 5->1 9->1 9->1 9->23 9->30 10->1 10->1 11->1 11->1 11->25 11->31 12->1 12->1 13->1 13->1 13->27 13->32 14->1 14->1 15->1 15->1 15->29 15->33 16->1 16->1 17->1 20->1 21->1 21->1 22->9 23->1 23->10 23->10 24->11 25->1 25->12 25->12 26->13 27->1 27->14 27->14 28->15 29->1 29->16 29->16 30->1 31->1 32->1 33->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int ( /* missing proto */ assert ) ( ) ; extern int raise ( int sig ) ; extern void abort ( ) ; void test_sdbm ( void ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int ( /* missing proto */ sdbm ) ( ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void test_sdbm ( void ) { int tmp ; int tmp___0 ; int tmp___1 ; int tmp___2 ; unsigned long _1_test_sdbm_next ; { { _1_test_sdbm_next = 1 ; } while ( 1 ) { switch ( _1_test_sdbm_next ) { case 1 : tmp = sdbm ( " " ) ; assert ( ( unsigned long ) tmp == 0xb2c56f18c908f484UL ) ; tmp___0 = sdbm ( " " ) ; assert ( ( long ) tmp___0 == 7903571203300273309L ) ; tmp___1 = sdbm ( " " ) ; assert ( ( unsigned long ) tmp___1 == 0xd25111c14694d4a4UL ) ; tmp___2 = sdbm ( " " ) ; assert ( ( unsigned long ) tmp___2 == 0xd3b4a5253344547dUL ) ; printf ( " \n " ) ; { _1_test_sdbm_next = 0 ; } break ; case 0 : ; return ; break ; } } } } void megaInit ( void ) { { } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD order
METHOD_RETURN int
PARAM int x
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_order_next = 5
LITERAL 1 while (1)
IDENTIFIER _1_order_next switch(_1_order_next)
LITERAL 5 <empty>
<operator>.assignment n = 0
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 1 <empty>
<operator>.postIncrement n ++
<operator>.assignmentDivision x /= 10
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (n); return (n);
<operator>.assignment _1_order_next = 3
IDENTIFIER x if (x)
<operator>.assignment _1_order_next = 3
IDENTIFIER n return (n);
BLOCK <empty> <empty>
<operator>.assignment _1_order_next = 1
BLOCK <empty> <empty>
<operator>.assignment _1_order_next = 0
>>>PDG&26 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 2->1 2->14 5->1 5->1 9->1 9->1 9->13 9->21 13->1 13->1 13->21 14->1 14->1 17->1 18->1 18->1 20->1 20->1 21->17 23->1 23->1 25->1 25->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; int order ( int x ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } int order ( int x ) { int n ; unsigned long _1_order_next ; { { _1_order_next = 5 ; } while ( 1 ) { switch ( _1_order_next ) { case 5 : n = 0 ; { _1_order_next = 3 ; } break ; case 3 : ; if ( x ) { { _1_order_next = 1 ; } } else { { _1_order_next = 0 ; } } break ; case 1 : n ++ ; x /= 10 ; { _1_order_next = 3 ; } break ; case 0 : ; return ( n ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 17
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 17 <empty>
BLOCK <empty> <empty>
LITERAL 16 <empty>
LITERAL 15 <empty>
RETURN return (1); return (1);
LITERAL 14 <empty>
<operator>.assignment i = 0
<operator>.assignment remainder = 0
<operator>.assignment binary1 = (long )*(*(argv + 1) + 0)
<operator>.assignment binary2 = (long )*(*(argv + 2) + 0)
BLOCK <empty> <empty>
LITERAL 12 <empty>
LITERAL 11 <empty>
LITERAL 9 <empty>
<operator>.assignment tmp = i
<operator>.postIncrement i ++
<operator>.assignment sum[tmp] = (int )(((binary1 % 10L + binary2 % 10L) + (long )remainder) % 2L)
<operator>.assignment remainder = (int )(((binary1 % 10L + binary2 % 10L) + (long )remainder) / 2L)
<operator>.assignmentDivision binary1 /= 10L
<operator>.assignmentDivision binary2 /= 10L
BLOCK <empty> <empty>
LITERAL 8 <empty>
LITERAL 7 <empty>
<operator>.assignment tmp___0 = i
<operator>.postIncrement i ++
<operator>.assignment sum[tmp___0] = remainder
BLOCK <empty> <empty>
LITERAL 6 <empty>
<operator>.postDecrement i --
printf printf("Sum of two binary numbers: ")
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
<operator>.assignment tmp___1 = i
<operator>.postDecrement i --
printf printf("%d", sum[tmp___1])
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("\n")
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 16
<operator>.lessThan argc < 3
LITERAL 1 return (1);
<operator>.assignment _1_main_next = 12
<operator>.notEquals binary1 != 0L
<operator>.notEquals binary2 != 0L
<operator>.assignment _1_main_next = 12
<operator>.notEquals remainder != 0
<operator>.assignment _1_main_next = 6
<operator>.assignment _1_main_next = 4
<operator>.greaterEqualsThan i >= 0
<operator>.assignment _1_main_next = 4
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
BLOCK <empty> <empty>
<operator>.cast (long )*(*(argv + 1) + 0)
<operator>.cast (long )*(*(argv + 2) + 0)
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.cast (int )(((binary1 % 10L + binary2 % 10L) + (long )remainder) % 2L)
<operator>.cast (int )(((binary1 % 10L + binary2 % 10L) + (long )remainder) / 2L)
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 15
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 9
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 9
BLOCK <empty> <empty>
<operator>.modulo ((binary1 % 10L + binary2 % 10L) + (long )remainder) % 2L
<operator>.division ((binary1 % 10L + binary2 % 10L) + (long )remainder) / 2L
<operator>.assignment _1_main_next = 7
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 14
<operator>.addition *(argv + 1) + 0
<operator>.addition *(argv + 2) + 0
<operator>.assignment _1_main_next = 11
<operator>.assignment _1_main_next = 8
<operator>.addition (binary1 % 10L + binary2 % 10L) + (long )remainder
<operator>.addition (binary1 % 10L + binary2 % 10L) + (long )remainder
<operator>.assignment _1_main_next = 6
<operator>.assignment _1_main_next = 1
<operator>.addition binary1 % 10L + binary2 % 10L
<operator>.cast (long )remainder
<operator>.addition binary1 % 10L + binary2 % 10L
<operator>.cast (long )remainder
<operator>.addition argv + 1
<operator>.addition argv + 2
<operator>.modulo binary1 % 10L
<operator>.modulo binary2 % 10L
<operator>.modulo binary1 % 10L
<operator>.modulo binary2 % 10L
>>>PDG&111 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->25 0->26 0->27 0->28 0->29 0->30 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 0->59 0->60 0->61 0->62 0->63 0->64 0->65 0->66 0->67 0->68 0->69 0->70 0->71 0->74 0->75 0->78 0->79 0->80 0->81 0->82 0->83 0->84 0->85 0->86 0->87 0->88 0->89 0->90 0->91 0->92 0->93 0->94 0->95 0->96 0->97 0->98 0->99 0->100 0->102 0->104 0->105 0->106 0->107 0->108 0->109 0->110 2->7 2->58 3->8 3->105 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 19->1 21->1 21->1 21->29 21->30 21->38 21->39 21->43 21->48 21->49 21->67 22->1 22->1 22->40 22->64 22->86 22->87 22->97 22->98 22->102 22->104 23->1 23->1 23->1 23->61 23->107 24->1 24->1 24->1 24->62 24->108 29->1 29->1 30->1 30->1 30->29 30->38 30->39 30->43 30->48 30->49 30->67 31->1 31->1 31->1 32->1 32->1 32->1 32->40 32->64 32->86 32->87 32->97 32->98 32->102 32->104 33->1 33->1 33->61 33->107 34->1 34->1 34->62 34->108 38->1 38->1 39->1 39->1 39->29 39->30 39->38 39->43 39->48 39->49 39->67 40->1 40->1 40->1 43->1 43->1 43->29 43->30 43->38 43->39 43->48 43->49 43->67 44->1 48->1 48->1 49->1 49->1 49->29 49->30 49->38 49->39 49->43 49->48 49->67 50->1 50->1 53->1 56->1 57->1 57->1 58->1 58->1 58->80 58->92 59->19 60->1 60->1 61->1 61->1 61->82 61->95 61->107 62->1 62->1 62->84 62->96 62->108 63->1 63->1 64->1 64->1 64->40 64->86 64->87 64->88 64->97 64->98 64->99 64->102 64->104 65->1 65->1 66->1 66->1 67->1 67->1 67->29 67->30 67->38 67->39 67->43 67->48 67->49 67->90 67->100 68->1 68->1 69->1 69->1 70->56 72->1 73->1 76->1 77->1 80->1 80->1 82->1 82->1 84->1 84->1 86->31 86->31 86->76 86->76 87->1 87->32 87->32 87->77 87->77 88->1 88->1 90->1 90->1 92->1 92->1 93->1 94->1 95->1 95->1 96->1 96->1 98->1 98->1 99->1 99->1 100->1 100->1 103->1 103->1 106->1 107->86 107->86 107->97 107->97 107->101 107->101 107->109 108->86 108->86 108->97 108->97 108->101 108->101 108->110 109->33 109->87 109->87 109->98 109->98 109->103 109->103 110->34 110->87 110->87 110->98 110->98 110->103 110->103
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int argc , char * * argv , char * * _formal_envp ) { long binary1 ; long binary2 ; int i ; int remainder ; int sum [ 20 ] ; int tmp ; int tmp___0 ; int tmp___1 ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 17 ; } while ( 1 ) { switch ( _1_main_next ) { case 17 : ; { _1_main_next = 16 ; } break ; case 16 : ; if ( argc < 3 ) { { _1_main_next = 15 ; } } else { { _1_main_next = 14 ; } } break ; case 15 : ; return ( 1 ) ; break ; case 14 : i = 0 ; remainder = 0 ; binary1 = ( long ) * ( * ( argv + 1 ) + 0 ) ; binary2 = ( long ) * ( * ( argv + 2 ) + 0 ) ; { _1_main_next = 12 ; } break ; case 12 : ; if ( binary1 != 0L ) { { _1_main_next = 9 ; } } else { { _1_main_next = 11 ; } } break ; case 11 : ; if ( binary2 != 0L ) { { _1_main_next = 9 ; } } else { { _1_main_next = 8 ; } } break ; case 9 : tmp = i ; i ++ ; sum [ tmp ] = ( int ) ( ( ( binary1 % 10L + binary2 % 10L ) + ( long ) remainder ) % 2L ) ; remainder = ( int ) ( ( ( binary1 % 10L + binary2 % 10L ) + ( long ) remainder ) / 2L ) ; binary1 /= 10L ; binary2 /= 10L ; { _1_main_next = 12 ; } break ; case 8 : ; if ( remainder != 0 ) { { _1_main_next = 7 ; } } else { { _1_main_next = 6 ; } } break ; case 7 : tmp___0 = i ; i ++ ; sum [ tmp___0 ] = remainder ; { _1_main_next = 6 ; } break ; case 6 : i -- ; printf ( " " ) ; { _1_main_next = 4 ; } break ; case 4 : ; if ( i >= 0 ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : tmp___1 = i ; i -- ; printf ( " " , sum [ tmp___1 ] ) ; { _1_main_next = 4 ; } break ; case 1 : printf ( " \n " ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 14
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 14 <empty>
<operator>.assignment d = 0
<operator>.assignment base = 1
<operator>.assignment res = 0
<operator>.assignment ord = 1
printf printf("Enter the binary no: ")
scanf scanf("%d", & binary_num)
BLOCK <empty> <empty>
LITERAL 12 <empty>
LITERAL 10 <empty>
LITERAL 9 <empty>
<operator>.assignment td = three_digits(binary_num)
BLOCK <empty> <empty>
LITERAL 8 <empty>
<operator>.assignment td = binary_num
BLOCK <empty> <empty>
LITERAL 7 <empty>
<operator>.assignmentDivision binary_num /= 1000
<operator>.assignment d = 0
<operator>.assignment base = 1
BLOCK <empty> <empty>
LITERAL 5 <empty>
LITERAL 3 <empty>
<operator>.assignment remainder = td % 10
<operator>.assignmentDivision td /= 10
<operator>.assignmentPlus d += base * remainder
<operator>.assignmentMultiplication base *= 2
BLOCK <empty> <empty>
LITERAL 2 <empty>
<operator>.assignmentPlus res += d * ord
<operator>.assignmentMultiplication ord *= 10
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("\nOctal equivalent is: %d", res)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 12
<operator>.greaterThan binary_num > 0
<operator>.greaterThan binary_num > 111
<operator>.assignment _1_main_next = 7
<operator>.assignment _1_main_next = 7
<operator>.assignment _1_main_next = 5
<operator>.greaterThan td > 0
<operator>.assignment _1_main_next = 5
<operator>.assignment _1_main_next = 12
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
BLOCK <empty> <empty>
BLOCK <empty> <empty>
three_digits three_digits(binary_num)
BLOCK <empty> <empty>
<operator>.modulo td % 10
<operator>.multiplication base * remainder
<operator>.multiplication d * ord
<operator>.assignment _1_main_next = 10
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 9
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 3
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
<operator>.assignment _1_main_next = 8
<operator>.assignment _1_main_next = 2
>>>PDG&79 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 0->59 0->60 0->61 0->62 0->63 0->64 0->65 0->66 0->67 0->68 0->69 0->70 0->71 0->72 0->73 0->74 0->75 0->76 0->77 0->78 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->40 16->69 17->1 17->1 17->68 18->1 18->1 18->44 18->48 19->1 19->1 19->69 20->1 21->1 21->29 21->32 21->53 21->54 21->65 26->1 26->1 26->1 26->58 26->67 29->1 29->1 29->1 29->58 29->67 32->1 32->1 32->21 32->29 32->53 32->54 32->65 33->1 33->1 33->40 33->69 34->1 34->1 34->68 38->1 38->1 38->68 39->1 39->1 39->58 39->67 40->1 40->1 40->1 40->69 41->1 41->1 41->68 44->1 44->1 44->1 44->48 45->1 45->1 45->69 48->1 48->1 48->44 51->1 52->1 52->1 53->1 53->1 53->21 53->29 53->32 53->54 53->65 53->70 53->76 54->1 54->1 54->21 54->29 54->32 54->53 54->65 54->72 54->77 55->1 55->1 56->1 56->1 57->1 57->1 58->1 58->1 58->67 58->74 58->78 59->1 59->1 60->1 60->1 61->1 61->1 62->51 65->1 65->21 65->26 65->29 65->32 65->53 65->54 67->38 67->38 67->39 68->1 68->40 68->40 68->41 69->1 69->40 69->44 69->44 69->45 70->1 70->1 72->1 72->1 74->1 74->1 76->1 76->1 77->1 77->1 78->1 78->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int ( /* missing proto */ three_digits ) ( ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int ( /* missing proto */ printf ) ( ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ scanf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { int binary_num ; int d ; int base ; int remainder ; int td ; int res ; int ord ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 14 ; } while ( 1 ) { switch ( _1_main_next ) { case 14 : d = 0 ; base = 1 ; res = 0 ; ord = 1 ; printf ( " " ) ; scanf ( " " , & binary_num ) ; { _1_main_next = 12 ; } break ; case 12 : ; if ( binary_num > 0 ) { { _1_main_next = 10 ; } } else { { _1_main_next = 1 ; } } break ; case 10 : ; if ( binary_num > 111 ) { { _1_main_next = 9 ; } } else { { _1_main_next = 8 ; } } break ; case 9 : td = three_digits ( binary_num ) ; { _1_main_next = 7 ; } break ; case 8 : td = binary_num ; { _1_main_next = 7 ; } break ; case 7 : binary_num /= 1000 ; d = 0 ; base = 1 ; { _1_main_next = 5 ; } break ; case 5 : ; if ( td > 0 ) { { _1_main_next = 3 ; } } else { { _1_main_next = 2 ; } } break ; case 3 : remainder = td % 10 ; td /= 10 ; d += base * remainder ; base *= 2 ; { _1_main_next = 5 ; } break ; case 2 : res += d * ord ; ord *= 10 ; { _1_main_next = 12 ; } break ; case 1 : printf ( " \n " , res ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD fact
METHOD_RETURN int
PARAM int n
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_fact_next = 4
LITERAL 1 while (1)
IDENTIFIER _1_fact_next switch(_1_fact_next)
LITERAL 4 <empty>
LITERAL 3 <empty>
RETURN return (1); return (1);
LITERAL 2 <empty>
<operator>.assignment tmp = fact(n - 1)
BLOCK <empty> <empty>
LITERAL 1 <empty>
RETURN return (n * tmp); return (n * tmp);
<operator>.equals n == 1
LITERAL 1 return (1);
<operator>.assignment _1_fact_next = 1
<operator>.multiplication n * tmp
BLOCK <empty> <empty>
fact fact(n - 1)
<operator>.assignment _1_fact_next = 3
BLOCK <empty> <empty>
<operator>.subtraction n - 1
<operator>.assignment _1_fact_next = 2
>>>PDG&26 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->13 0->14 0->16 0->17 0->18 0->19 0->20 0->22 0->23 0->24 0->25 2->1 2->16 2->19 2->24 5->1 5->1 10->1 12->1 12->1 12->1 12->19 15->1 16->1 16->1 16->19 16->22 16->24 16->25 17->10 18->1 18->1 19->15 21->1 21->12 22->1 22->1 24->1 24->16 24->19 24->21 24->21 25->1 25->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; int fact ( int n ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } int fact ( int n ) { int tmp ; unsigned long _1_fact_next ; { { _1_fact_next = 4 ; } while ( 1 ) { switch ( _1_fact_next ) { case 4 : ; if ( n == 1 ) { { _1_fact_next = 3 ; } } else { { _1_fact_next = 2 ; } } break ; case 3 : ; return ( 1 ) ; break ; case 2 : tmp = fact ( n - 1 ) ; { _1_fact_next = 1 ; } break ; case 1 : ; return ( n * tmp ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 11
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 11 <empty>
<operator>.assignment sum = 0
<operator>.assignment str = (char const   *)*(argv + 1)
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 9 <empty>
LITERAL 7 <empty>
<operator>.assignment t = str
BLOCK <empty> <empty>
LITERAL 5 <empty>
LITERAL 3 <empty>
<operator>.assignmentPlus sum += (int )*t
<operator>.postIncrement t ++
BLOCK <empty> <empty>
LITERAL 2 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("Sum is: %d\n", sum)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 9
<operator>.lessThan i < (int )*(*(argv + 1) + 0)
<operator>.assignment _1_main_next = 5
<operator>.assignment _1_main_next = 5
<operator>.assignment _1_main_next = 9
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
<operator>.cast (char const   *)*(argv + 1)
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.cast (int )*t
<operator>.cast (int )*(*(argv + 1) + 0)
<operator>.assignment _1_main_next = 7
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 3
BLOCK <empty> <empty>
<operator>.addition argv + 1
<operator>.assignment _1_main_next = 1
<operator>.assignment _1_main_next = 2
<operator>.addition *(argv + 1) + 0
<operator>.addition argv + 1
<operator>.indirection *t
>>>PDG&59 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->45 0->46 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 2->7 3->8 3->53 3->57 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->26 16->33 17->1 17->1 17->1 17->22 18->1 18->1 18->30 18->38 22->1 22->1 22->1 22->27 26->1 26->1 26->1 26->33 27->1 27->1 30->1 30->1 30->38 33->1 33->1 33->26 36->1 37->1 37->1 38->1 38->1 38->1 38->30 38->49 38->54 39->1 39->1 40->1 40->1 41->1 41->1 42->1 42->1 43->36 44->1 47->1 48->1 49->1 49->1 51->1 51->1 53->1 54->1 54->1 55->1 55->1 56->1 57->1 58->51 58->55
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int argc , char * * argv , char * * _formal_envp ) { int i ; int sum ; char const * str ; register char const * t ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 11 ; } while ( 1 ) { switch ( _1_main_next ) { case 11 : sum = 0 ; str = ( char const * ) * ( argv + 1 ) ; i = 0 ; { _1_main_next = 9 ; } break ; case 9 : ; if ( i < ( int ) * ( * ( argv + 1 ) + 0 ) ) { { _1_main_next = 7 ; } } else { { _1_main_next = 1 ; } } break ; case 7 : t = str ; { _1_main_next = 5 ; } break ; case 5 : ; if ( * t ) { { _1_main_next = 3 ; } } else { { _1_main_next = 2 ; } } break ; case 3 : sum += ( int ) * t ; t ++ ; { _1_main_next = 5 ; } break ; case 2 : i ++ ; { _1_main_next = 9 ; } break ; case 1 : printf ( " \n " , sum ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 13
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 13 <empty>
BLOCK <empty> <empty>
LITERAL 12 <empty>
LITERAL 11 <empty>
RETURN return (1); return (1);
LITERAL 10 <empty>
<operator>.assignment i = 1
<operator>.assignment decimalNumber = (long )((int )*(*(argv + 1) + 0))
<operator>.assignment quotient = decimalNumber
BLOCK <empty> <empty>
LITERAL 8 <empty>
LITERAL 6 <empty>
<operator>.assignment tmp = i
<operator>.postIncrement i ++
<operator>.assignment octalNumber[tmp] = (int )(quotient % 8L)
<operator>.assignmentDivision quotient /= 8L
BLOCK <empty> <empty>
LITERAL 5 <empty>
printf printf("Equivalent octal value of decimal number %d: \n", decimalNumber)
<operator>.assignment j = i - 1
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 1 <empty>
printf printf("%d", octalNumber[j])
<operator>.postDecrement j --
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 12
<operator>.lessThan argc < 2
LITERAL 1 return (1);
<operator>.assignment _1_main_next = 8
<operator>.notEquals quotient != 0L
<operator>.assignment _1_main_next = 8
<operator>.assignment _1_main_next = 3
<operator>.greaterThan j > 0
<operator>.assignment _1_main_next = 3
LITERAL 0 return (0);
BLOCK <empty> <empty>
<operator>.cast (long )((int )*(*(argv + 1) + 0))
BLOCK <empty> <empty>
<operator>.cast (int )(quotient % 8L)
<operator>.subtraction i - 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 11
BLOCK <empty> <empty>
<operator>.cast (int )*(*(argv + 1) + 0)
<operator>.assignment _1_main_next = 6
BLOCK <empty> <empty>
<operator>.modulo quotient % 8L
<operator>.assignment _1_main_next = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 10
<operator>.assignment _1_main_next = 5
<operator>.assignment _1_main_next = 0
<operator>.addition *(argv + 1) + 0
<operator>.addition argv + 1
>>>PDG&72 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->23 0->24 0->25 0->26 0->27 0->28 0->30 0->31 0->32 0->33 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->55 0->57 0->58 0->59 0->60 0->62 0->63 0->64 0->65 0->66 0->67 0->68 0->69 0->70 0->71 2->7 2->44 3->8 3->71 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 19->1 21->1 21->1 21->27 21->28 21->57 22->1 22->1 22->23 22->33 23->1 23->1 23->1 23->47 23->64 27->1 27->1 28->1 28->1 28->27 28->57 29->1 29->1 29->1 30->1 30->1 30->47 30->64 33->1 33->1 34->1 34->1 34->1 34->39 34->50 38->1 38->1 39->1 39->1 39->50 42->1 43->1 43->1 44->1 44->1 44->59 44->67 45->19 46->1 46->1 47->1 47->1 47->62 47->64 47->68 48->1 48->1 49->1 49->1 50->1 50->1 50->39 50->65 50->69 51->1 51->1 52->42 54->1 56->1 57->1 57->27 57->28 57->34 57->34 59->1 59->1 61->1 62->1 62->1 64->29 64->29 64->30 64->56 64->56 65->1 65->1 67->1 67->1 68->1 68->1 69->1 69->1 70->1 71->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern double ceil ( double x ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int argc , char * * argv , char * * _formal_envp ) { long decimalNumber ; long quotient ; int octalNumber [ 100 ] ; int i ; int j ; int tmp ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 13 ; } while ( 1 ) { switch ( _1_main_next ) { case 13 : ; { _1_main_next = 12 ; } break ; case 12 : ; if ( argc < 2 ) { { _1_main_next = 11 ; } } else { { _1_main_next = 10 ; } } break ; case 11 : ; return ( 1 ) ; break ; case 10 : i = 1 ; decimalNumber = ( long ) ( ( int ) * ( * ( argv + 1 ) + 0 ) ) ; quotient = decimalNumber ; { _1_main_next = 8 ; } break ; case 8 : ; if ( quotient != 0L ) { { _1_main_next = 6 ; } } else { { _1_main_next = 5 ; } } break ; case 6 : tmp = i ; i ++ ; octalNumber [ tmp ] = ( int ) ( quotient % 8L ) ; quotient /= 8L ; { _1_main_next = 8 ; } break ; case 5 : printf ( " \n " , decimalNumber ) ; j = i - 1 ; { _1_main_next = 3 ; } break ; case 3 : ; if ( j > 0 ) { { _1_main_next = 1 ; } } else { { _1_main_next = 0 ; } } break ; case 1 : printf ( " " , octalNumber [ j ] ) ; j -- ; { _1_main_next = 3 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD binarysearch2
METHOD_RETURN int
PARAM int const   *arr
PARAM int l
PARAM int r
PARAM int x
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_binarysearch2_next = 12
LITERAL 1 while (1)
IDENTIFIER _1_binarysearch2_next switch(_1_binarysearch2_next)
LITERAL 12 <empty>
<operator>.assignment mid = l + (r - l) / 2
BLOCK <empty> <empty>
LITERAL 10 <empty>
LITERAL 8 <empty>
LITERAL 7 <empty>
RETURN return (-1); return (-1);
LITERAL 6 <empty>
LITERAL 5 <empty>
RETURN return (-1); return (-1);
LITERAL 4 <empty>
LITERAL 3 <empty>
<operator>.assignment r = mid - 1
BLOCK <empty> <empty>
LITERAL 2 <empty>
<operator>.assignment l = mid + 1
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operator>.assignment mid = l + (r - l) / 2
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (mid); return (mid);
<operator>.assignment _1_binarysearch2_next = 10
<operator>.notEquals *(arr + mid) != (int const   )x
<operator>.lessEqualsThan r <= l
<operator>.minus -1
<operator>.lessThan r < 0
<operator>.minus -1
<operator>.greaterThan *(arr + mid) > (int const   )x
<operator>.assignment _1_binarysearch2_next = 1
<operator>.assignment _1_binarysearch2_next = 1
<operator>.assignment _1_binarysearch2_next = 10
IDENTIFIER mid return (mid);
<operator>.addition l + (r - l) / 2
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.subtraction mid - 1
<operator>.addition mid + 1
<operator>.addition l + (r - l) / 2
<operator>.division (r - l) / 2
<operator>.cast (int const   )x
<operator>.assignment _1_binarysearch2_next = 8
BLOCK <empty> <empty>
<operator>.assignment _1_binarysearch2_next = 7
BLOCK <empty> <empty>
<operator>.assignment _1_binarysearch2_next = 5
BLOCK <empty> <empty>
<operator>.cast (int const   )x
<operator>.assignment _1_binarysearch2_next = 3
BLOCK <empty> <empty>
<operator>.division (r - l) / 2
<operator>.subtraction r - l
<operator>.addition arr + mid
<operator>.assignment _1_binarysearch2_next = 0
<operator>.assignment _1_binarysearch2_next = 6
<operator>.assignment _1_binarysearch2_next = 4
<operator>.addition arr + mid
<operator>.assignment _1_binarysearch2_next = 2
<operator>.subtraction r - l
>>>PDG&72 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->18 0->19 0->21 0->22 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 0->59 0->60 0->61 0->62 0->63 0->64 0->65 0->66 0->67 0->68 0->69 0->70 0->71 2->1 2->65 2->69 3->1 3->35 3->64 3->71 4->1 4->35 4->37 4->64 4->71 5->1 5->34 5->39 5->53 5->60 8->1 8->1 12->1 12->1 12->1 12->26 12->43 12->49 12->50 12->65 12->69 17->1 20->1 23->1 23->1 23->1 23->35 23->37 23->64 23->71 26->1 26->1 26->1 26->35 26->64 26->71 29->1 29->1 29->1 29->26 29->43 29->49 29->50 29->65 29->69 32->1 33->1 33->1 34->1 34->1 34->1 34->54 34->66 35->1 35->1 35->1 35->37 35->56 35->64 35->64 35->67 35->71 35->71 36->1 36->17 37->1 37->1 37->35 37->58 37->64 37->68 37->71 38->20 39->1 39->1 39->1 39->61 39->70 40->1 40->1 41->1 41->1 42->1 42->1 43->32 44->1 44->1 49->1 49->23 49->23 49->26 49->43 49->50 49->65 49->69 50->1 51->1 51->1 52->1 52->12 52->12 52->44 52->44 53->1 54->1 54->1 56->1 56->1 58->1 58->1 60->1 61->1 61->1 63->1 63->29 63->29 63->51 63->51 64->1 64->12 64->35 64->35 64->37 64->44 64->52 64->52 64->71 64->71 65->1 65->1 66->1 66->1 67->1 67->1 68->1 68->1 69->1 69->1 70->1 70->1 71->1 71->29 71->35 71->35 71->37 71->51 71->63 71->63 71->64 71->64
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; int binarysearch2 ( int const * arr , int l , int r , int x ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } int binarysearch2 ( int const * arr , int l , int r , int x ) { int mid ; unsigned long _1_binarysearch2_next ; { { _1_binarysearch2_next = 12 ; } while ( 1 ) { switch ( _1_binarysearch2_next ) { case 12 : mid = l + ( r - l ) / 2 ; { _1_binarysearch2_next = 10 ; } break ; case 10 : ; if ( * ( arr + mid ) != ( int const ) x ) { { _1_binarysearch2_next = 8 ; } } else { { _1_binarysearch2_next = 0 ; } } break ; case 8 : ; if ( r <= l ) { { _1_binarysearch2_next = 7 ; } } else { { _1_binarysearch2_next = 6 ; } } break ; case 7 : ; return ( -1 ) ; break ; case 6 : ; if ( r < 0 ) { { _1_binarysearch2_next = 5 ; } } else { { _1_binarysearch2_next = 4 ; } } break ; case 5 : ; return ( -1 ) ; break ; case 4 : ; if ( * ( arr + mid ) > ( int const ) x ) { { _1_binarysearch2_next = 3 ; } } else { { _1_binarysearch2_next = 2 ; } } break ; case 3 : r = mid - 1 ; { _1_binarysearch2_next = 1 ; } break ; case 2 : l = mid + 1 ; { _1_binarysearch2_next = 1 ; } break ; case 1 : mid = l + ( r - l ) / 2 ; { _1_binarysearch2_next = 10 ; } break ; case 0 : ; return ( mid ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD findComplement
METHOD_RETURN int
PARAM int num
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_findComplement_next = 11
LITERAL 1 while (1)
IDENTIFIER _1_findComplement_next switch(_1_findComplement_next)
LITERAL 11 <empty>
<operator>.assignment TotalBits = 0
<operator>.assignment temp = num
BLOCK <empty> <empty>
LITERAL 9 <empty>
LITERAL 7 <empty>
<operator>.postIncrement TotalBits ++
<operators>.assignmentArithmeticShiftRight temp >>= 1
BLOCK <empty> <empty>
LITERAL 6 <empty>
<operator>.assignment flipNumber = 1
<operator>.assignment i = 1
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
<operator>.assignment tmp = UINT32_C(1)
<operator>.assignmentPlus flipNumber += tmp << i
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operators>.assignmentXor num ^= flipNumber
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (num); return (num);
<operator>.assignment _1_findComplement_next = 9
IDENTIFIER temp if (temp)
<operator>.assignment _1_findComplement_next = 9
<operator>.assignment _1_findComplement_next = 4
<operator>.lessThan i < TotalBits
<operator>.assignment _1_findComplement_next = 4
<operator>.assignment _1_findComplement_next = 0
IDENTIFIER num return (num);
BLOCK <empty> <empty>
BLOCK <empty> <empty>
UINT32_C UINT32_C(1)
<operator>.shiftLeft tmp << i
<operator>.assignment _1_findComplement_next = 7
BLOCK <empty> <empty>
<operator>.assignment _1_findComplement_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_findComplement_next = 6
<operator>.assignment _1_findComplement_next = 1
>>>PDG&50 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 2->1 2->10 2->28 2->39 5->1 5->1 9->1 9->1 9->14 9->36 10->1 10->1 10->1 10->15 14->1 14->1 14->36 15->1 18->1 18->1 18->24 18->28 19->1 19->1 19->36 19->43 23->1 23->1 23->43 24->1 24->1 24->1 24->28 25->1 25->1 25->36 25->43 28->1 28->1 28->10 28->39 31->1 32->1 32->1 34->1 34->1 35->1 35->1 36->1 36->1 36->1 36->14 36->43 36->46 36->49 37->1 37->1 38->1 38->1 39->31 42->23 43->1 43->24 43->24 43->25 44->1 44->1 46->1 46->1 48->1 48->1 49->1 49->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; int findComplement ( int num ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; extern int ( /* missing proto */ UINT32_C ) ( ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } } int findComplement ( int num ) { int TotalBits ; int temp ; int i ; int flipNumber ; int tmp ; unsigned long _1_findComplement_next ; { { _1_findComplement_next = 11 ; } while ( 1 ) { switch ( _1_findComplement_next ) { case 11 : TotalBits = 0 ; temp = num ; { _1_findComplement_next = 9 ; } break ; case 9 : ; if ( temp ) { { _1_findComplement_next = 7 ; } } else { { _1_findComplement_next = 6 ; } } break ; case 7 : TotalBits ++ ; temp >>= 1 ; { _1_findComplement_next = 9 ; } break ; case 6 : flipNumber = 1 ; i = 1 ; { _1_findComplement_next = 4 ; } break ; case 4 : ; if ( i < TotalBits ) { { _1_findComplement_next = 2 ; } } else { { _1_findComplement_next = 1 ; } } break ; case 2 : tmp = UINT32_C ( 1 ) ; flipNumber += tmp << i ; i ++ ; { _1_findComplement_next = 4 ; } break ; case 1 : num ^= flipNumber ; { _1_findComplement_next = 0 ; } break ; case 0 : ; return ( num ) ; break ; } } } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 1 <empty>
test_xor8 test_xor8()
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
>>>PDG&22 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 19->1 20->1 20->1 21->19
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int ( /* missing proto */ test_xor8 ) ( ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern double log ( double x ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 1 ; } while ( 1 ) { switch ( _1_main_next ) { case 1 : test_xor8 ( ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD searchInsert
METHOD_RETURN int
PARAM int *nums
PARAM int numsSize
PARAM int target
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_searchInsert_next = 6
LITERAL 1 while (1)
IDENTIFIER _1_searchInsert_next switch(_1_searchInsert_next)
LITERAL 6 <empty>
<operator>.assignment idx = numsSize - 1
BLOCK <empty> <empty>
LITERAL 5 <empty>
LITERAL 4 <empty>
LITERAL 3 <empty>
RETURN return (numsSize); return (numsSize);
LITERAL 2 <empty>
<operator>.assignment tmp = searchInsert(nums, numsSize - 1, target)
BLOCK <empty> <empty>
LITERAL 1 <empty>
RETURN return (tmp); return (tmp);
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_searchInsert_next = 5
<operator>.greaterThan numsSize > 0
<operator>.greaterThan target > *(nums + idx)
IDENTIFIER numsSize return (numsSize);
<operator>.assignment _1_searchInsert_next = 1
IDENTIFIER tmp return (tmp);
LITERAL 0 return (0);
<operator>.subtraction numsSize - 1
BLOCK <empty> <empty>
BLOCK <empty> <empty>
searchInsert searchInsert(nums, numsSize - 1, target)
<operator>.assignment _1_searchInsert_next = 4
BLOCK <empty> <empty>
<operator>.assignment _1_searchInsert_next = 3
BLOCK <empty> <empty>
<operator>.subtraction numsSize - 1
<operator>.assignment _1_searchInsert_next = 0
<operator>.addition nums + idx
<operator>.assignment _1_searchInsert_next = 2
>>>PDG&43 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->12 0->13 0->14 0->15 0->17 0->19 0->20 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 2->1 2->34 2->41 3->1 3->25 3->27 3->31 3->39 4->1 4->26 4->34 7->1 7->1 11->1 11->1 11->1 11->41 16->1 18->1 18->1 18->1 18->29 21->1 23->1 24->1 24->1 25->1 25->1 25->27 25->31 25->35 25->39 25->40 26->1 26->1 26->1 26->34 26->37 26->42 27->16 28->1 28->1 29->21 30->23 31->1 31->11 31->11 31->25 31->27 31->39 34->1 34->1 34->1 34->18 34->18 34->18 34->26 34->41 35->1 35->1 37->1 37->1 39->1 39->25 39->27 39->31 39->34 39->34 40->1 40->1 41->1 41->1 42->1 42->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; int searchInsert ( int * nums , int numsSize , int target ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int searchInsert ( int * nums , int numsSize , int target ) { int idx ; int tmp ; unsigned long _1_searchInsert_next ; { { _1_searchInsert_next = 6 ; } while ( 1 ) { switch ( _1_searchInsert_next ) { case 6 : idx = numsSize - 1 ; { _1_searchInsert_next = 5 ; } break ; case 5 : ; if ( numsSize > 0 ) { { _1_searchInsert_next = 4 ; } } else { { _1_searchInsert_next = 0 ; } } break ; case 4 : ; if ( target > * ( nums + idx ) ) { { _1_searchInsert_next = 3 ; } } else { { _1_searchInsert_next = 2 ; } } break ; case 3 : ; return ( numsSize ) ; break ; case 2 : tmp = searchInsert ( nums , numsSize - 1 , target ) ; { _1_searchInsert_next = 1 ; } break ; case 1 : ; return ( tmp ) ; break ; case 0 : ; return ( 0 ) ; break ; } } } } void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 40
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 56 <empty>
LITERAL 53 <empty>
<operator>.assignment ar = ABS(((xb * ya - xa * yb) + (xc * yb - xb * yc)) + (xa * yc - xc * ya))
BLOCK <empty> <empty>
LITERAL 52 <empty>
LITERAL 51 <empty>
printf printf("%d %d %d %d %d %d\n", xa, ya, xb, yb, xc, yc)
<operator>.assignment nf = 0
BLOCK <empty> <empty>
LITERAL 50 <empty>
<operator>.postIncrement yc ++
BLOCK <empty> <empty>
LITERAL 49 <empty>
<operator>.postIncrement yb ++
BLOCK <empty> <empty>
LITERAL 48 <empty>
<operator>.postIncrement ya ++
BLOCK <empty> <empty>
LITERAL 47 <empty>
<operator>.postIncrement xc ++
BLOCK <empty> <empty>
LITERAL 46 <empty>
<operator>.postIncrement xb ++
BLOCK <empty> <empty>
LITERAL 45 <empty>
<operator>.postIncrement xa ++
BLOCK <empty> <empty>
LITERAL 44 <empty>
LITERAL 43 <empty>
printf printf("IMPOSSIBLE\n")
BLOCK <empty> <empty>
LITERAL 42 <empty>
<operator>.postIncrement t ++
BLOCK <empty> <empty>
LITERAL 41 <empty>
RETURN return (0); return (0);
LITERAL 40 <empty>
scanf scanf("%d", & c)
<operator>.assignment t = 1
BLOCK <empty> <empty>
LITERAL 38 <empty>
LITERAL 36 <empty>
scanf scanf("%d%d%d", & n, & m, & a)
printf printf("Case #%d: ", t)
BLOCK <empty> <empty>
LITERAL 35 <empty>
LITERAL 34 <empty>
printf printf("IMPOSSIBLE\n")
BLOCK <empty> <empty>
LITERAL 32 <empty>
<operator>.assignment nf = 1
<operator>.assignment xa = 0
BLOCK <empty> <empty>
LITERAL 30 <empty>
LITERAL 29 <empty>
LITERAL 26 <empty>
<operator>.assignment xb = 0
BLOCK <empty> <empty>
LITERAL 24 <empty>
LITERAL 23 <empty>
LITERAL 20 <empty>
<operator>.assignment xc = 0
BLOCK <empty> <empty>
LITERAL 18 <empty>
LITERAL 17 <empty>
LITERAL 14 <empty>
<operator>.assignment ya = 0
BLOCK <empty> <empty>
LITERAL 12 <empty>
LITERAL 11 <empty>
LITERAL 8 <empty>
<operator>.assignment yb = 0
BLOCK <empty> <empty>
LITERAL 6 <empty>
LITERAL 5 <empty>
LITERAL 2 <empty>
<operator>.assignment yc = 0
BLOCK <empty> <empty>
LITERAL 0 <empty>
IDENTIFIER nf if (nf)
<operator>.assignment _1_main_next = 52
<operator>.equals ar == a
<operator>.assignment _1_main_next = 50
<operator>.assignment _1_main_next = 0
<operator>.assignment _1_main_next = 6
<operator>.assignment _1_main_next = 12
<operator>.assignment _1_main_next = 18
<operator>.assignment _1_main_next = 24
<operator>.assignment _1_main_next = 30
IDENTIFIER nf if (nf)
<operator>.assignment _1_main_next = 42
<operator>.assignment _1_main_next = 38
LITERAL 0 return (0);
<operator>.assignment _1_main_next = 38
<operator>.lessEqualsThan t <= c
<operator>.assignment _1_main_next = 35
<operator>.greaterThan a > n * m
<operator>.assignment _1_main_next = 42
<operator>.assignment _1_main_next = 30
<operator>.lessEqualsThan xa <= n
IDENTIFIER nf if (nf)
<operator>.assignment _1_main_next = 24
<operator>.lessEqualsThan xb <= n
IDENTIFIER nf if (nf)
<operator>.assignment _1_main_next = 18
<operator>.lessEqualsThan xc <= n
IDENTIFIER nf if (nf)
<operator>.assignment _1_main_next = 12
<operator>.lessEqualsThan ya <= m
IDENTIFIER nf if (nf)
<operator>.assignment _1_main_next = 6
<operator>.lessEqualsThan yb <= m
IDENTIFIER nf if (nf)
<operator>.assignment _1_main_next = 0
<operator>.lessEqualsThan yc <= m
BLOCK <empty> <empty>
ABS ABS(((xb * ya - xa * yb) + (xc * yb - xb * yc)) + (xa * yc - xc * ya))
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 53
BLOCK <empty> <empty>
<operator>.addition ((xb * ya - xa * yb) + (xc * yb - xb * yc)) + (xa * yc - xc * ya)
<operator>.assignment _1_main_next = 51
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 43
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 36
BLOCK <empty> <empty>
<operator>.multiplication n * m
<operator>.assignment _1_main_next = 34
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 29
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 26
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 23
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 20
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 17
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 14
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 11
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 8
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 5
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 56
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 49
<operator>.addition (xb * ya - xa * yb) + (xc * yb - xb * yc)
<operator>.subtraction xa * yc - xc * ya
<operator>.assignment _1_main_next = 50
<operator>.assignment _1_main_next = 42
<operator>.assignment _1_main_next = 41
<operator>.assignment _1_main_next = 32
<operator>.assignment _1_main_next = 44
<operator>.assignment _1_main_next = 44
<operator>.assignment _1_main_next = 45
<operator>.assignment _1_main_next = 45
<operator>.assignment _1_main_next = 46
<operator>.assignment _1_main_next = 46
<operator>.assignment _1_main_next = 47
<operator>.assignment _1_main_next = 47
<operator>.assignment _1_main_next = 48
<operator>.assignment _1_main_next = 48
<operator>.assignment _1_main_next = 49
<operator>.subtraction xb * ya - xa * yb
<operator>.subtraction xc * yb - xb * yc
<operator>.multiplication xa * yc
<operator>.multiplication xc * ya
<operator>.multiplication xb * ya
<operator>.multiplication xa * yb
<operator>.multiplication xc * yb
<operator>.multiplication xb * yc
>>>PDG&207 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 0->59 0->60 0->61 0->62 0->63 0->64 0->65 0->66 0->67 0->68 0->69 0->70 0->71 0->72 0->73 0->74 0->75 0->76 0->77 0->78 0->79 0->80 0->81 0->82 0->83 0->84 0->85 0->86 0->87 0->88 0->89 0->90 0->91 0->92 0->93 0->94 0->95 0->96 0->97 0->98 0->99 0->100 0->101 0->102 0->103 0->104 0->105 0->106 0->107 0->108 0->109 0->110 0->111 0->112 0->113 0->114 0->115 0->116 0->117 0->118 0->119 0->120 0->121 0->122 0->123 0->124 0->125 0->126 0->127 0->128 0->129 0->130 0->132 0->133 0->134 0->135 0->136 0->137 0->138 0->139 0->140 0->141 0->142 0->143 0->144 0->145 0->146 0->147 0->148 0->150 0->151 0->152 0->153 0->154 0->155 0->156 0->157 0->158 0->159 0->160 0->161 0->162 0->163 0->164 0->165 0->166 0->167 0->168 0->169 0->170 0->171 0->172 0->173 0->174 0->175 0->176 0->177 0->178 0->179 0->180 0->181 0->184 0->185 0->186 0->187 0->188 0->189 0->190 0->191 0->192 0->193 0->194 0->195 0->196 0->197 0->198 0->201 0->202 0->203 0->204 0->205 0->206 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 17->1 17->1 17->1 17->96 21->1 21->1 21->1 21->1 21->1 21->1 21->1 21->25 21->28 21->31 21->34 21->37 21->40 21->114 21->117 21->120 21->123 21->126 21->129 21->203 21->203 21->204 21->204 21->205 21->206 22->1 22->1 25->1 25->1 25->21 25->129 25->206 28->1 28->1 28->21 28->126 28->204 31->1 31->1 31->21 31->123 31->203 34->1 34->1 34->21 34->120 34->205 37->1 37->1 37->21 37->117 37->203 40->1 40->1 40->21 40->114 40->204 44->1 47->1 47->1 47->58 47->109 50->1 52->1 52->109 53->1 53->1 53->47 53->58 53->109 57->1 57->1 57->1 57->114 57->117 57->120 57->156 58->1 58->1 58->47 58->109 62->1 65->1 65->1 66->1 66->1 66->21 66->40 66->114 66->204 71->1 71->1 71->21 71->37 71->117 71->203 76->1 76->1 76->21 76->34 76->120 76->205 81->1 81->1 81->21 81->31 81->123 81->203 86->1 86->1 86->21 86->28 86->126 86->204 91->1 91->1 91->21 91->25 91->129 91->206 95->1 95->1 96->1 96->1 96->1 96->111 96->150 96->184 97->1 97->1 98->1 98->1 99->1 99->1 100->1 100->1 101->1 101->1 102->1 102->1 103->1 103->1 105->1 105->1 106->1 106->1 107->50 108->1 108->1 109->1 109->1 109->1 109->47 109->52 109->58 109->154 109->186 110->1 110->1 111->1 111->1 111->1 111->96 111->157 111->187 112->1 112->1 113->1 113->1 114->1 114->1 114->1 114->21 114->40 114->57 114->117 114->120 114->156 114->159 114->188 114->204 116->1 116->1 117->1 117->1 117->1 117->21 117->37 117->57 117->114 117->120 117->156 117->163 117->190 117->203 119->1 119->1 120->1 120->1 120->1 120->21 120->34 120->57 120->114 120->117 120->156 120->167 120->192 120->205 122->1 122->1 123->1 123->1 123->1 123->21 123->31 123->126 123->129 123->156 123->171 123->194 123->203 125->1 125->1 126->1 126->1 126->1 126->21 126->28 126->123 126->129 126->156 126->175 126->196 126->204 128->1 128->1 129->1 129->1 129->1 129->21 129->25 129->123 129->126 129->156 129->179 129->198 129->206 131->1 131->17 147->1 147->1 149->1 149->1 150->1 150->1 152->1 152->1 154->1 154->1 156->1 156->1 156->57 156->111 156->111 156->114 156->117 156->120 156->123 156->126 156->129 157->1 157->1 159->1 159->1 161->1 161->1 163->1 163->1 165->1 165->1 167->1 167->1 169->1 169->1 171->1 171->1 173->1 173->1 175->1 175->1 177->1 177->1 179->1 179->1 181->1 181->1 182->1 182->1 183->1 183->1 183->131 183->131 183->149 183->149 184->1 184->1 185->1 185->1 186->1 186->1 187->1 187->1 188->1 188->1 189->1 189->1 190->1 190->1 191->1 191->1 192->1 192->1 193->1 193->1 194->1 194->1 195->1 195->1 196->1 196->1 197->1 197->1 198->1 198->1 199->1 199->1 199->131 199->131 199->149 199->149 199->182 199->182 200->1 200->1 200->131 200->131 200->149 200->149 200->182 200->182 201->1 201->1 201->21 201->21 201->25 201->40 201->114 201->129 201->183 201->183 201->204 201->206 202->1 202->1 202->21 202->21 202->31 202->34 202->120 202->123 202->183 202->183 202->203 202->205 203->199 203->199 203->202 203->206 204->199 204->199 204->201 204->205 205->1 205->21 205->28 205->126 205->200 205->200 205->202 205->204 206->1 206->21 206->37 206->117 206->200 206->200 206->201 206->203
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int ( /* missing proto */ ABS ) ( ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; char * * _global_envp = ( char * * ) 0 ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int ( /* missing proto */ scanf ) ( ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { int c ; int n ; int m ; int a ; int t ; int xa ; int ya ; int xb ; int yb ; int xc ; int yc ; int ar ; int nf ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 40 ; } while ( 1 ) { switch ( _1_main_next ) { case 56 : ; if ( nf ) { { _1_main_next = 53 ; } } else { { _1_main_next = 49 ; } } break ; case 53 : ar = ABS ( ( ( xb * ya - xa * yb ) + ( xc * yb - xb * yc ) ) + ( xa * yc - xc * ya ) ) ; { _1_main_next = 52 ; } break ; case 52 : ; if ( ar == a ) { { _1_main_next = 51 ; } } else { { _1_main_next = 50 ; } } break ; case 51 : printf ( " \n " , xa , ya , xb , yb , xc , yc ) ; nf = 0 ; { _1_main_next = 50 ; } break ; case 50 : yc ++ ; { _1_main_next = 0 ; } break ; case 49 : yb ++ ; { _1_main_next = 6 ; } break ; case 48 : ya ++ ; { _1_main_next = 12 ; } break ; case 47 : xc ++ ; { _1_main_next = 18 ; } break ; case 46 : xb ++ ; { _1_main_next = 24 ; } break ; case 45 : xa ++ ; { _1_main_next = 30 ; } break ; case 44 : ; if ( nf ) { { _1_main_next = 43 ; } } else { { _1_main_next = 42 ; } } break ; case 43 : printf ( " \n " ) ; { _1_main_next = 42 ; } break ; case 42 : __Cont : /* CIL Label */ t ++ ; { _1_main_next = 38 ; } break ; case 41 : ; return ( 0 ) ; break ; case 40 : scanf ( " " , & c ) ; t = 1 ; { _1_main_next = 38 ; } break ; case 38 : ; if ( t <= c ) { { _1_main_next = 36 ; } } else { { _1_main_next = 41 ; } } break ; case 36 : scanf ( " " , & n , & m , & a ) ; printf ( " " , t ) ; { _1_main_next = 35 ; } break ; case 35 : ; if ( a > n * m ) { { _1_main_next = 34 ; } } else { { _1_main_next = 32 ; } } break ; case 34 : printf ( " \n " ) ; { _1_main_next = 42 ; } break ; case 32 : nf = 1 ; xa = 0 ; { _1_main_next = 30 ; } break ; case 30 : ; if ( xa <= n ) { { _1_main_next = 29 ; } } else { { _1_main_next = 44 ; } } break ; case 29 : ; if ( nf ) { { _1_main_next = 26 ; } } else { { _1_main_next = 44 ; } } break ; case 26 : xb = 0 ; { _1_main_next = 24 ; } break ; case 24 : ; if ( xb <= n ) { { _1_main_next = 23 ; } } else { { _1_main_next = 45 ; } } break ; case 23 : ; if ( nf ) { { _1_main_next = 20 ; } } else { { _1_main_next = 45 ; } } break ; case 20 : xc = 0 ; { _1_main_next = 18 ; } break ; case 18 : ; if ( xc <= n ) { { _1_main_next = 17 ; } } else { { _1_main_next = 46 ; } } break ; case 17 : ; if ( nf ) { { _1_main_next = 14 ; } } else { { _1_main_next = 46 ; } } break ; case 14 : ya = 0 ; { _1_main_next = 12 ; } break ; case 12 : ; if ( ya <= m ) { { _1_main_next = 11 ; } } else { { _1_main_next = 47 ; } } break ; case 11 : ; if ( nf ) { { _1_main_next = 8 ; } } else { { _1_main_next = 47 ; } } break ; case 8 : yb = 0 ; { _1_main_next = 6 ; } break ; case 6 : ; if ( yb <= m ) { { _1_main_next = 5 ; } } else { { _1_main_next = 48 ; } } break ; case 5 : ; if ( nf ) { { _1_main_next = 2 ; } } else { { _1_main_next = 48 ; } } break ; case 2 : yc = 0 ; { _1_main_next = 0 ; } break ; case 0 : ; if ( yc <= m ) { { _1_main_next = 56 ; } } else { { _1_main_next = 49 ; } } break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 1 <empty>
test_djb2 test_djb2()
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
>>>PDG&22 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 19->1 20->1 20->1 21->19
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern int ( /* missing proto */ test_djb2 ) ( ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern double log ( double x ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 1 ; } while ( 1 ) { switch ( _1_main_next ) { case 1 : test_djb2 ( ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD findgcd
METHOD_RETURN int
PARAM int x
PARAM int y
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_findgcd_next = 8
LITERAL 1 while (1)
IDENTIFIER _1_findgcd_next switch(_1_findgcd_next)
LITERAL 8 <empty>
BLOCK <empty> <empty>
LITERAL 7 <empty>
LITERAL 5 <empty>
LITERAL 4 <empty>
<operator>.assignment tmp = findgcd(x - y, y)
BLOCK <empty> <empty>
LITERAL 3 <empty>
RETURN return (tmp); return (tmp);
LITERAL 2 <empty>
<operator>.assignment tmp___0 = findgcd(x, y - x)
BLOCK <empty> <empty>
LITERAL 1 <empty>
RETURN return (tmp___0); return (tmp___0);
LITERAL 0 <empty>
RETURN return (x); return (x);
<operator>.assignment _1_findgcd_next = 7
<operator>.notEquals x != y
<operator>.greaterThan x > y
<operator>.assignment _1_findgcd_next = 3
IDENTIFIER tmp return (tmp);
<operator>.assignment _1_findgcd_next = 1
IDENTIFIER tmp___0 return (tmp___0);
IDENTIFIER x return (x);
BLOCK <empty> <empty>
BLOCK <empty> <empty>
findgcd findgcd(x - y, y)
findgcd findgcd(x, y - x)
<operator>.assignment _1_findgcd_next = 5
BLOCK <empty> <empty>
<operator>.assignment _1_findgcd_next = 4
BLOCK <empty> <empty>
<operator>.subtraction x - y
<operator>.subtraction y - x
<operator>.assignment _1_findgcd_next = 0
<operator>.assignment _1_findgcd_next = 2
>>>PDG&45 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->15 0->16 0->18 0->20 0->21 0->23 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 2->1 2->26 2->27 2->32 2->41 2->42 3->1 3->26 3->27 3->41 3->42 6->1 6->1 14->1 14->1 14->1 14->29 17->1 19->1 19->1 19->1 19->31 22->1 24->1 25->1 25->1 26->1 26->1 26->1 26->27 26->27 26->32 26->37 26->41 26->41 26->42 26->42 26->43 27->1 27->1 27->1 27->26 27->26 27->32 27->39 27->41 27->41 27->42 27->42 27->44 28->1 28->1 29->17 30->1 30->1 31->22 32->24 35->1 35->1 35->14 35->14 35->26 35->27 35->41 35->42 36->1 36->1 36->19 36->19 36->26 36->27 36->32 36->41 36->42 37->1 37->1 39->1 39->1 41->1 41->26 41->27 41->32 41->35 41->35 41->42 42->1 42->26 42->27 42->36 42->36 42->41 43->1 43->1 44->1 44->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; int findgcd ( int x , int y ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int findgcd ( int x , int y ) { int tmp ; int tmp___0 ; unsigned long _1_findgcd_next ; { { _1_findgcd_next = 8 ; } while ( 1 ) { switch ( _1_findgcd_next ) { case 8 : ; { _1_findgcd_next = 7 ; } break ; case 7 : ; if ( x != y ) { { _1_findgcd_next = 5 ; } } else { { _1_findgcd_next = 0 ; } } break ; case 5 : ; if ( x > y ) { { _1_findgcd_next = 4 ; } } else { { _1_findgcd_next = 2 ; } } break ; case 4 : tmp = findgcd ( x - y , y ) ; { _1_findgcd_next = 3 ; } break ; case 3 : ; return ( tmp ) ; break ; case 2 : tmp___0 = findgcd ( x , y - x ) ; { _1_findgcd_next = 1 ; } break ; case 1 : ; return ( tmp___0 ) ; break ; case 0 : ; return ( x ) ; break ; } } } } void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } }
>>>Func
METHOD binary
METHOD_RETURN int
PARAM int *a
PARAM int n
PARAM int m
PARAM int l
PARAM int u
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_binary_next = 11
LITERAL 1 while (1)
IDENTIFIER _1_binary_next switch(_1_binary_next)
LITERAL 11 <empty>
<operator>.assignment c = 0
BLOCK <empty> <empty>
LITERAL 10 <empty>
LITERAL 9 <empty>
<operator>.assignment mid = (l + u) / 2
BLOCK <empty> <empty>
LITERAL 8 <empty>
LITERAL 7 <empty>
<operator>.assignment c = 1
BLOCK <empty> <empty>
LITERAL 6 <empty>
LITERAL 5 <empty>
<operator>.assignment tmp = binary(a, n, m, l, mid - 1)
BLOCK <empty> <empty>
LITERAL 4 <empty>
RETURN return (tmp); return (tmp);
LITERAL 3 <empty>
<operator>.assignment tmp___0 = binary(a, n, m, mid + 1, u)
BLOCK <empty> <empty>
LITERAL 2 <empty>
RETURN return (tmp___0); return (tmp___0);
LITERAL 1 <empty>
RETURN return (c); return (c);
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_binary_next = 10
<operator>.lessEqualsThan l <= u
<operator>.assignment _1_binary_next = 8
<operator>.equals m == *(a + mid)
<operator>.assignment _1_binary_next = 0
<operator>.lessThan m < *(a + mid)
<operator>.assignment _1_binary_next = 4
IDENTIFIER tmp return (tmp);
<operator>.assignment _1_binary_next = 2
IDENTIFIER tmp___0 return (tmp___0);
IDENTIFIER c return (c);
LITERAL 0 return (0);
BLOCK <empty> <empty>
<operator>.division (l + u) / 2
BLOCK <empty> <empty>
BLOCK <empty> <empty>
binary binary(a, n, m, l, mid - 1)
binary binary(a, n, m, mid + 1, u)
<operator>.assignment _1_binary_next = 9
BLOCK <empty> <empty>
<operator>.addition l + u
<operator>.assignment _1_binary_next = 7
BLOCK <empty> <empty>
<operator>.assignment _1_binary_next = 5
BLOCK <empty> <empty>
<operator>.subtraction mid - 1
<operator>.addition mid + 1
<operator>.assignment _1_binary_next = 1
<operator>.addition a + mid
<operator>.assignment _1_binary_next = 6
<operator>.addition a + mid
<operator>.assignment _1_binary_next = 3
>>>PDG&70 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->26 0->27 0->29 0->31 0->32 0->34 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 0->59 0->60 0->61 0->62 0->63 0->64 0->65 0->66 0->67 0->68 0->69 2->1 2->54 2->55 2->66 2->68 3->1 3->54 3->55 4->1 4->41 4->43 4->54 4->55 5->1 5->39 5->51 5->54 5->58 6->1 6->39 6->51 6->55 6->58 9->1 9->1 13->1 13->1 13->48 17->1 17->1 17->1 17->55 17->63 17->64 17->66 17->68 21->1 21->1 21->48 25->1 25->1 25->1 25->45 28->1 30->1 30->1 30->1 30->47 33->1 35->1 37->1 38->1 38->1 39->1 39->1 39->1 39->51 39->51 39->54 39->55 39->56 39->58 39->58 39->65 40->1 40->1 41->1 41->1 41->1 41->43 41->54 41->55 41->59 41->67 42->1 42->1 43->1 43->1 43->1 43->41 43->54 43->55 43->61 43->69 44->1 44->1 45->28 46->1 46->1 47->33 48->35 49->37 51->1 51->17 51->17 54->1 54->1 54->1 54->1 54->1 54->25 54->25 54->25 54->25 54->25 54->39 54->41 54->43 54->51 54->55 54->55 54->55 54->58 54->66 54->68 55->1 55->1 55->1 55->1 55->1 55->30 55->30 55->30 55->30 55->30 55->39 55->41 55->43 55->51 55->54 55->54 55->54 55->58 55->66 55->68 56->1 56->1 58->1 58->1 59->1 59->1 61->1 61->1 63->1 63->54 63->54 63->55 63->64 63->66 63->68 64->1 65->1 65->1 66->1 66->1 67->1 67->1 68->1 68->1 69->1 69->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; int binary ( int * a , int n , int m , int l , int u ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int binary ( int * a , int n , int m , int l , int u ) { int mid ; int c ; int tmp ; int tmp___0 ; unsigned long _1_binary_next ; { { _1_binary_next = 11 ; } while ( 1 ) { switch ( _1_binary_next ) { case 11 : c = 0 ; { _1_binary_next = 10 ; } break ; case 10 : ; if ( l <= u ) { { _1_binary_next = 9 ; } } else { { _1_binary_next = 1 ; } } break ; case 9 : mid = ( l + u ) / 2 ; { _1_binary_next = 8 ; } break ; case 8 : ; if ( m == * ( a + mid ) ) { { _1_binary_next = 7 ; } } else { { _1_binary_next = 6 ; } } break ; case 7 : c = 1 ; { _1_binary_next = 0 ; } break ; case 6 : ; if ( m < * ( a + mid ) ) { { _1_binary_next = 5 ; } } else { { _1_binary_next = 3 ; } } break ; case 5 : tmp = binary ( a , n , m , l , mid - 1 ) ; { _1_binary_next = 4 ; } break ; case 4 : ; return ( tmp ) ; break ; case 3 : tmp___0 = binary ( a , n , m , mid + 1 , u ) ; { _1_binary_next = 2 ; } break ; case 2 : ; return ( tmp___0 ) ; break ; case 1 : ; return ( c ) ; break ; case 0 : ; return ( 0 ) ; break ; } } } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD mult
METHOD_RETURN unsigned long
PARAM unsigned long m1
PARAM unsigned long m2
PARAM unsigned long M
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_mult_next = 7
LITERAL 1 while (1)
IDENTIFIER _1_mult_next switch(_1_mult_next)
LITERAL 7 <empty>
LITERAL 6 <empty>
<operator>.assignment aux = m1
<operator>.assignment m1 = m2
<operator>.assignment m2 = aux
BLOCK <empty> <empty>
LITERAL 5 <empty>
<operator>.assignment max = 4294967295UL / m1
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 3 <empty>
RETURN return ((m1 * m2) % M); return ((m1 * m2) % M);
LITERAL 2 <empty>
<operator>.assignment tmp = mult(m1, m2 - max, M)
BLOCK <empty> <empty>
LITERAL 1 <empty>
RETURN return (((m1 * max) % M + tmp) % M); return (((m1 * max) % M + tmp) % M);
<operator>.lessThan m1 < m2
<operator>.assignment _1_mult_next = 5
<operator>.assignment _1_mult_next = 4
<operator>.lessEqualsThan m2 <= max
<operator>.modulo (m1 * m2) % M
<operator>.assignment _1_mult_next = 1
<operator>.modulo ((m1 * max) % M + tmp) % M
BLOCK <empty> <empty>
<operator>.division 4294967295UL / m1
BLOCK <empty> <empty>
mult mult(m1, m2 - max, M)
<operator>.assignment _1_mult_next = 6
BLOCK <empty> <empty>
<operator>.assignment _1_mult_next = 3
BLOCK <empty> <empty>
<operator>.multiplication m1 * m2
<operator>.subtraction m2 - max
<operator>.addition (m1 * max) % M + tmp
<operator>.assignment _1_mult_next = 5
<operator>.assignment _1_mult_next = 2
<operator>.modulo (m1 * max) % M
<operator>.multiplication m1 * max
>>>PDG&49 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->18 0->19 0->20 0->22 0->24 0->25 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 2->12 2->27 2->35 2->37 2->42 2->48 3->13 3->27 3->30 3->42 3->43 4->31 4->37 4->47 7->1 7->1 12->1 12->14 13->1 13->12 13->27 13->35 13->37 13->42 13->48 14->1 14->1 14->13 14->27 14->30 14->42 14->43 17->1 17->1 17->1 17->30 17->43 17->48 21->1 23->1 23->1 23->1 23->33 23->44 26->1 27->1 27->12 27->13 27->30 27->35 27->37 27->38 27->42 27->42 27->43 27->45 27->48 28->1 28->1 29->1 29->1 30->1 30->1 30->13 30->27 30->40 30->42 30->43 30->43 30->46 30->48 31->1 31->1 31->1 31->21 32->1 32->1 33->26 35->12 35->17 35->17 35->27 35->37 35->42 35->48 37->1 37->12 37->23 37->23 37->23 37->27 37->31 37->35 37->42 37->47 37->48 38->1 38->1 40->1 40->1 42->1 42->1 42->31 42->31 43->1 43->13 43->27 43->30 43->30 43->37 43->37 43->42 43->48 45->1 45->1 46->1 46->1 47->33 47->33 47->44 47->44 48->47 48->47
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; unsigned long mult ( unsigned long m1 , unsigned long m2 , unsigned long M ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; unsigned long mult ( unsigned long m1 , unsigned long m2 , unsigned long M ) { unsigned long aux ; unsigned long max ; unsigned long tmp ; unsigned long _1_mult_next ; { { _1_mult_next = 7 ; } while ( 1 ) { switch ( _1_mult_next ) { case 7 : ; if ( m1 < m2 ) { { _1_mult_next = 6 ; } } else { { _1_mult_next = 5 ; } } break ; case 6 : aux = m1 ; m1 = m2 ; m2 = aux ; { _1_mult_next = 5 ; } break ; case 5 : max = 4294967295UL / m1 ; { _1_mult_next = 4 ; } break ; case 4 : ; if ( m2 <= max ) { { _1_mult_next = 3 ; } } else { { _1_mult_next = 2 ; } } break ; case 3 : ; return ( ( m1 * m2 ) % M ) ; break ; case 2 : tmp = mult ( m1 , m2 - max , M ) ; { _1_mult_next = 1 ; } break ; case 1 : ; return ( ( ( m1 * max ) % M + tmp ) % M ) ; break ; } } } } void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } }
>>>Func
METHOD stringConcat
METHOD_RETURN void
PARAM char *str1
PARAM char *str2
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_stringConcat_next = 10
LITERAL 1 while (1)
IDENTIFIER _1_stringConcat_next switch(_1_stringConcat_next)
LITERAL 10 <empty>
<operator>.assignment i = 0
<operator>.assignment j = 0
BLOCK <empty> <empty>
LITERAL 8 <empty>
LITERAL 6 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
<operator>.assignment *(str1 + i) = *(str2 + j)
<operator>.postIncrement i ++
<operator>.postIncrement j ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operator>.assignment *(str1 + i) = (char )'\000'
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return; return;
<operator>.assignment _1_stringConcat_next = 8
<operator>.notEquals (int )*(str1 + i) != 0
<operator>.assignment _1_stringConcat_next = 8
<operator>.notEquals (int )*(str2 + j) != 0
<operator>.assignment _1_stringConcat_next = 4
<operator>.assignment _1_stringConcat_next = 0
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.cast (char )'\000'
<operator>.cast (int )*(str1 + i)
<operator>.assignment _1_stringConcat_next = 6
BLOCK <empty> <empty>
<operator>.cast (int )*(str2 + j)
<operator>.assignment _1_stringConcat_next = 2
BLOCK <empty> <empty>
<operator>.addition str1 + i
<operator>.addition str2 + j
<operator>.addition str1 + i
<operator>.assignment _1_stringConcat_next = 4
<operator>.assignment _1_stringConcat_next = 1
<operator>.addition str1 + i
<operator>.addition str2 + j
>>>PDG&50 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->38 0->39 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 2->1 2->43 2->45 2->48 3->1 3->44 3->49 6->1 6->1 10->1 10->1 10->15 10->20 10->43 10->45 10->48 11->1 11->1 11->21 11->44 11->49 15->1 15->1 15->20 15->43 15->45 15->48 19->1 19->1 19->1 20->1 20->1 20->15 20->43 20->45 20->48 21->1 21->1 21->44 21->49 24->1 24->1 24->1 27->1 28->1 28->1 29->1 29->1 29->38 29->46 30->1 30->1 31->1 31->1 31->41 31->47 32->1 32->1 33->1 33->1 37->1 38->1 38->1 40->1 41->1 41->1 43->1 44->1 45->1 45->1 46->1 46->1 47->1 47->1 48->1 48->1 49->1 49->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; void stringConcat ( char * str1 , char * str2 ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void stringConcat ( char * str1 , char * str2 ) { int i ; int j ; unsigned long _1_stringConcat_next ; { { _1_stringConcat_next = 10 ; } while ( 1 ) { switch ( _1_stringConcat_next ) { case 10 : i = 0 ; j = 0 ; { _1_stringConcat_next = 8 ; } break ; case 8 : ; if ( ( int ) * ( str1 + i ) != 0 ) { { _1_stringConcat_next = 6 ; } } else { { _1_stringConcat_next = 4 ; } } break ; case 6 : i ++ ; { _1_stringConcat_next = 8 ; } break ; case 4 : ; if ( ( int ) * ( str2 + j ) != 0 ) { { _1_stringConcat_next = 2 ; } } else { { _1_stringConcat_next = 1 ; } } break ; case 2 : * ( str1 + i ) = * ( str2 + j ) ; i ++ ; j ++ ; { _1_stringConcat_next = 4 ; } break ; case 1 : * ( str1 + i ) = ( char ) ' \000 ' ; { _1_stringConcat_next = 0 ; } break ; case 0 : ; return ; break ; } } } } void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } }
>>>Func
METHOD plusOne
METHOD_RETURN int*
PARAM int *digits
PARAM int digitsSize
PARAM int *returnSize
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_plusOne_next = 15
LITERAL 1 while (1)
IDENTIFIER _1_plusOne_next switch(_1_plusOne_next)
LITERAL 15 <empty>
<operator>.assignment i = digitsSize - 1
BLOCK <empty> <empty>
LITERAL 13 <empty>
LITERAL 11 <empty>
LITERAL 10 <empty>
<operator>.postIncrement (*(digits + i)) ++
<operator>.assignment *returnSize = digitsSize
BLOCK <empty> <empty>
LITERAL 9 <empty>
RETURN return (digits); return (digits);
LITERAL 8 <empty>
<operator>.assignment *(digits + i) = 0
BLOCK <empty> <empty>
LITERAL 7 <empty>
<operator>.postDecrement i --
BLOCK <empty> <empty>
LITERAL 6 <empty>
<operator>.assignment tmp = malloc((unsigned long )(digitsSize + 1) * sizeof(int ))
<operator>.assignment newdigit = (int *)tmp
<operator>.assignment *(newdigit + 0) = 1
<operator>.assignment i___0 = 1
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
<operator>.assignment *(newdigit + i___0) = *(digits + (i___0 - 1))
<operator>.postIncrement i___0 ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operator>.assignment *returnSize = digitsSize + 1
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (newdigit); return (newdigit);
<operator>.assignment _1_plusOne_next = 13
<operator>.greaterEqualsThan i >= 0
<operator>.lessThan *(digits + i) < 9
<operator>.assignment _1_plusOne_next = 9
IDENTIFIER digits return (digits);
<operator>.assignment _1_plusOne_next = 7
<operator>.assignment _1_plusOne_next = 13
<operator>.assignment _1_plusOne_next = 4
<operator>.lessThan i___0 < digitsSize + 1
<operator>.assignment _1_plusOne_next = 4
<operator>.assignment _1_plusOne_next = 0
IDENTIFIER newdigit return (newdigit);
<operator>.subtraction digitsSize - 1
BLOCK <empty> <empty>
BLOCK <empty> <empty>
malloc malloc((unsigned long )(digitsSize + 1) * sizeof(int ))
<operator>.cast (int *)tmp
BLOCK <empty> <empty>
<operator>.addition digitsSize + 1
<operator>.assignment _1_plusOne_next = 11
BLOCK <empty> <empty>
<operator>.assignment _1_plusOne_next = 10
BLOCK <empty> <empty>
<operator>.addition digits + i
<operator>.addition digits + i
<operator>.multiplication (unsigned long )(digitsSize + 1) * sizeof(int )
<operator>.addition newdigit + 0
<operator>.addition digitsSize + 1
<operator>.assignment _1_plusOne_next = 2
BLOCK <empty> <empty>
<operator>.addition newdigit + i___0
<operator>.addition digits + (i___0 - 1)
<operator>.assignment _1_plusOne_next = 6
<operator>.addition digits + i
<operator>.assignment _1_plusOne_next = 8
<operator>.cast (unsigned long )(digitsSize + 1)
<operator>.sizeOf sizeof(int )
<operator>.assignment _1_plusOne_next = 1
<operator>.subtraction i___0 - 1
<operator>.addition digitsSize + 1
>>>PDG&83 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->12 0->13 0->14 0->15 0->17 0->18 0->19 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->29 0->30 0->31 0->32 0->33 0->34 0->36 0->37 0->38 0->39 0->40 0->41 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->59 0->60 0->61 0->62 0->63 0->64 0->65 0->66 0->67 0->68 0->69 0->70 0->71 0->72 0->73 0->74 0->75 0->76 0->77 0->78 0->80 0->81 0->82 2->1 2->47 2->66 2->67 2->74 2->76 3->1 3->17 3->39 3->51 3->55 3->61 3->68 3->70 3->78 3->82 4->1 7->1 7->1 11->1 11->1 11->1 11->25 11->44 11->66 11->67 11->76 16->1 16->1 17->1 17->1 17->1 20->1 22->1 22->1 25->1 25->1 25->44 25->66 25->67 25->76 28->1 28->1 28->29 28->59 29->1 29->1 29->54 29->69 29->73 30->1 30->1 31->1 31->1 31->51 31->73 31->81 35->1 35->1 35->1 36->1 36->1 36->51 36->73 36->81 39->1 39->1 39->1 42->1 43->1 43->1 44->1 44->1 44->25 44->62 44->66 44->67 44->75 44->76 45->1 45->1 45->64 45->77 46->1 46->1 47->20 48->1 48->1 49->1 49->1 50->1 50->1 51->1 51->1 51->1 51->71 51->73 51->80 51->81 52->1 52->1 53->1 53->1 54->42 55->1 55->11 55->11 55->17 55->39 55->51 55->61 55->68 55->70 55->78 55->82 58->1 58->28 59->1 61->1 62->1 62->1 64->1 64->1 66->1 66->1 67->1 67->1 68->1 68->58 69->1 70->1 71->1 71->1 73->1 74->1 74->1 75->1 75->1 76->1 76->1 77->1 77->1 78->1 79->1 80->1 80->1 81->36 81->74 81->74 82->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern int ( /* missing proto */ malloc ) ( ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; int * plusOne ( int * digits , int digitsSize , int * returnSize ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int * plusOne ( int * digits , int digitsSize , int * returnSize ) { int i ; int * newdigit ; int tmp ; int i___0 ; unsigned long _1_plusOne_next ; { { _1_plusOne_next = 15 ; } while ( 1 ) { switch ( _1_plusOne_next ) { case 15 : i = digitsSize - 1 ; { _1_plusOne_next = 13 ; } break ; case 13 : ; if ( i >= 0 ) { { _1_plusOne_next = 11 ; } } else { { _1_plusOne_next = 6 ; } } break ; case 11 : ; if ( * ( digits + i ) < 9 ) { { _1_plusOne_next = 10 ; } } else { { _1_plusOne_next = 8 ; } } break ; case 10 : ( * ( digits + i ) ) ++ ; * returnSize = digitsSize ; { _1_plusOne_next = 9 ; } break ; case 9 : ; return ( digits ) ; break ; case 8 : * ( digits + i ) = 0 ; { _1_plusOne_next = 7 ; } break ; case 7 : i -- ; { _1_plusOne_next = 13 ; } break ; case 6 : tmp = malloc ( ( unsigned long ) ( digitsSize + 1 ) * sizeof ( int ) ) ; newdigit = ( int * ) tmp ; * ( newdigit + 0 ) = 1 ; i___0 = 1 ; { _1_plusOne_next = 4 ; } break ; case 4 : ; if ( i___0 < digitsSize + 1 ) { { _1_plusOne_next = 2 ; } } else { { _1_plusOne_next = 1 ; } } break ; case 2 : * ( newdigit + i___0 ) = * ( digits + ( i___0 - 1 ) ) ; i___0 ++ ; { _1_plusOne_next = 4 ; } break ; case 1 : * returnSize = digitsSize + 1 ; { _1_plusOne_next = 0 ; } break ; case 0 : ; return ( newdigit ) ; break ; } } } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD three_digits
METHOD_RETURN int
PARAM int n
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_three_digits_next = 5
LITERAL 1 while (1)
IDENTIFIER _1_three_digits_next switch(_1_three_digits_next)
LITERAL 5 <empty>
<operator>.assignment d = 0
<operator>.assignment p = 1
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 1 <empty>
<operator>.assignment r = n % 10
<operator>.assignmentPlus d += r * p
<operator>.assignmentMultiplication p *= 10
<operator>.assignmentDivision n /= 10
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (d); return (d);
<operator>.assignment _1_three_digits_next = 3
<operator>.lessThan i < 3
<operator>.assignment _1_three_digits_next = 3
IDENTIFIER d return (d);
BLOCK <empty> <empty>
<operator>.modulo n % 10
<operator>.multiplication r * p
<operator>.assignment _1_three_digits_next = 1
BLOCK <empty> <empty>
<operator>.assignment _1_three_digits_next = 0
>>>PDG&33 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->16 0->17 0->18 0->19 0->20 0->21 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 2->1 2->28 5->1 5->1 9->1 9->1 9->16 9->26 10->1 10->1 10->29 11->1 11->1 11->19 11->24 15->1 15->1 15->29 16->1 16->1 16->1 16->26 17->1 17->1 17->29 18->1 18->1 18->28 19->1 19->1 19->24 22->1 23->1 23->1 24->1 24->1 24->19 24->30 24->32 25->1 25->1 26->22 28->15 28->15 28->18 29->1 29->16 29->16 29->17 30->1 30->1 32->1 32->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; int three_digits ( int n ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } int three_digits ( int n ) { int r ; int d ; int p ; int i ; unsigned long _1_three_digits_next ; { { _1_three_digits_next = 5 ; } while ( 1 ) { switch ( _1_three_digits_next ) { case 5 : d = 0 ; p = 1 ; i = 0 ; { _1_three_digits_next = 3 ; } break ; case 3 : ; if ( i < 3 ) { { _1_three_digits_next = 1 ; } } else { { _1_three_digits_next = 0 ; } } break ; case 1 : r = n % 10 ; d += r * p ; p *= 10 ; n /= 10 ; i ++ ; { _1_three_digits_next = 3 ; } break ; case 0 : ; return ( d ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 6
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 6 <empty>
printf printf("Enter number of vertices: ")
scanf scanf("%d", & V)
printf printf("Enter number of edges: ")
scanf scanf("%d", & E)
createGraph createGraph(& G, V)
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
printf printf("\nEdge %d \nEnter source: ", i + 1)
scanf scanf("%d", & src)
printf printf("Enter destination: ")
scanf scanf("%d", & dst)
printf printf("Enter weight: ")
scanf scanf("%d", & weight)
addEdge addEdge(& G, src, dst, weight)
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
FloydWarshall FloydWarshall(& G)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 4
<operator>.lessThan i < E
<operator>.assignment _1_main_next = 4
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
BLOCK <empty> <empty>
<operator>.addition i + 1
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
>>>PDG&49 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 17->1 17->20 18->1 19->1 19->40 20->1 20->1 20->1 20->17 20->31 20->35 21->1 21->1 21->25 21->32 21->40 21->45 25->1 25->1 26->1 26->31 27->1 28->1 28->31 29->1 30->1 30->31 31->1 31->1 31->1 31->1 31->1 31->20 31->26 31->28 31->30 31->35 32->1 32->1 32->25 32->40 32->45 35->1 35->1 35->20 35->31 38->1 39->1 39->1 40->1 40->1 40->1 40->19 40->25 40->32 40->45 40->46 40->48 41->1 41->1 42->1 42->1 43->38 46->1 46->1 48->1 48->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct Graph ; struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int ( /* missing proto */ addEdge ) ( ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; extern int ( /* missing proto */ FloydWarshall ) ( ) ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int ( /* missing proto */ scanf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int ( /* missing proto */ createGraph ) ( ) ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { int V ; int E ; int src ; int dst ; int weight ; struct Graph G ; int i ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 6 ; } while ( 1 ) { switch ( _1_main_next ) { case 6 : printf ( " " ) ; scanf ( " " , & V ) ; printf ( " " ) ; scanf ( " " , & E ) ; createGraph ( & G , V ) ; i = 0 ; { _1_main_next = 4 ; } break ; case 4 : ; if ( i < E ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : printf ( " \n \n " , i + 1 ) ; scanf ( " " , & src ) ; printf ( " " ) ; scanf ( " " , & dst ) ; printf ( " " ) ; scanf ( " " , & weight ) ; addEdge ( & G , src , dst , weight ) ; i ++ ; { _1_main_next = 4 ; } break ; case 1 : FloydWarshall ( & G ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD maxcmp
METHOD_RETURN int
PARAM int a
PARAM int b
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_maxcmp_next = 3
LITERAL 1 while (1)
IDENTIFIER _1_maxcmp_next switch(_1_maxcmp_next)
LITERAL 3 <empty>
LITERAL 2 <empty>
<operator>.assignment tmp = a
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operator>.assignment tmp = b
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (tmp); return (tmp);
<operator>.greaterEqualsThan a >= b
<operator>.assignment _1_maxcmp_next = 0
<operator>.assignment _1_maxcmp_next = 0
IDENTIFIER tmp return (tmp);
BLOCK <empty> <empty>
<operator>.assignment _1_maxcmp_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_maxcmp_next = 1
>>>PDG&26 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 2->1 2->11 2->18 3->1 3->14 3->18 6->1 6->1 11->1 11->1 11->1 11->21 14->1 14->1 14->1 14->21 17->1 18->1 18->1 18->1 18->11 18->14 18->23 18->25 19->1 19->1 20->1 20->1 21->17 23->1 23->1 25->1 25->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; int maxcmp ( int a , int b ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } int maxcmp ( int a , int b ) { int tmp ; unsigned long _1_maxcmp_next ; { { _1_maxcmp_next = 3 ; } while ( 1 ) { switch ( _1_maxcmp_next ) { case 3 : ; if ( a >= b ) { { _1_maxcmp_next = 2 ; } } else { { _1_maxcmp_next = 1 ; } } break ; case 2 : tmp = a ; { _1_maxcmp_next = 0 ; } break ; case 1 : tmp = b ; { _1_maxcmp_next = 0 ; } break ; case 0 : ; return ( tmp ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD contains
METHOD_RETURN unsigned int
PARAM unsigned int const   size
PARAM unsigned int const   index
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_contains_next = 4
LITERAL 1 while (1)
IDENTIFIER _1_contains_next switch(_1_contains_next)
LITERAL 4 <empty>
LITERAL 3 <empty>
LITERAL 2 <empty>
RETURN return (1U); return (1U);
LITERAL 1 <empty>
printf printf("index [%d] out of bounds!\n", index)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0U); return (0U);
<operator>.greaterEqualsThan size >= 0U
<operator>.lessThan index < size
LITERAL 1U return (1U);
<operator>.assignment _1_contains_next = 0
LITERAL 0U return (0U);
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_contains_next = 3
BLOCK <empty> <empty>
<operator>.assignment _1_contains_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_contains_next = 1
<operator>.assignment _1_contains_next = 1
>>>PDG&31 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 2->1 2->18 2->19 3->1 3->14 3->19 6->1 6->1 12->1 14->1 14->1 14->19 17->1 18->1 18->1 18->19 18->25 18->29 19->1 19->1 19->1 19->14 19->18 19->27 19->30 20->12 21->1 21->1 22->17 25->1 25->1 27->1 27->1 29->1 29->1 30->1 30->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; unsigned int contains ( unsigned int const size , unsigned int const index ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; unsigned int contains ( unsigned int const size , unsigned int const index ) { unsigned long _1_contains_next ; { { _1_contains_next = 4 ; } while ( 1 ) { switch ( _1_contains_next ) { case 4 : ; if ( size >= 0U ) { { _1_contains_next = 3 ; } } else { { _1_contains_next = 1 ; } } break ; case 3 : ; if ( index < size ) { { _1_contains_next = 2 ; } } else { { _1_contains_next = 1 ; } } break ; case 2 : ; return ( 1U ) ; break ; case 1 : printf ( " \n " , index ) ; { _1_contains_next = 0 ; } break ; case 0 : ; return ( 0U ) ; break ; } } } } void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } }
>>>Func
METHOD majorityElement
METHOD_RETURN int
PARAM int *nums
PARAM int numsSize
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_majorityElement_next = 10
LITERAL 1 while (1)
IDENTIFIER _1_majorityElement_next switch(_1_majorityElement_next)
LITERAL 10 <empty>
<operator>.assignment count = 1
<operator>.assignment majorNum = *(nums + 0)
<operator>.assignment i = 1
BLOCK <empty> <empty>
LITERAL 8 <empty>
LITERAL 6 <empty>
LITERAL 5 <empty>
<operator>.assignment majorNum = *(nums + i)
<operator>.postIncrement count ++
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 3 <empty>
<operator>.postIncrement count ++
BLOCK <empty> <empty>
LITERAL 2 <empty>
<operator>.postDecrement count --
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (majorNum); return (majorNum);
<operator>.assignment _1_majorityElement_next = 8
<operator>.lessThan i < numsSize
<operator>.equals count == 0
<operator>.assignment _1_majorityElement_next = 1
<operator>.equals majorNum == *(nums + i)
<operator>.assignment _1_majorityElement_next = 1
<operator>.assignment _1_majorityElement_next = 1
<operator>.assignment _1_majorityElement_next = 8
IDENTIFIER majorNum return (majorNum);
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.addition nums + 0
<operator>.assignment _1_majorityElement_next = 6
BLOCK <empty> <empty>
<operator>.assignment _1_majorityElement_next = 5
BLOCK <empty> <empty>
<operator>.addition nums + i
<operator>.assignment _1_majorityElement_next = 3
BLOCK <empty> <empty>
<operator>.assignment _1_majorityElement_next = 0
<operator>.assignment _1_majorityElement_next = 4
<operator>.addition nums + i
<operator>.assignment _1_majorityElement_next = 2
>>>PDG&56 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->12 0->13 0->14 0->15 0->16 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 2->1 2->44 2->49 2->54 3->1 3->33 6->1 6->1 10->1 10->1 10->18 10->22 10->25 10->34 11->1 11->1 11->1 11->36 11->40 12->1 12->1 12->28 12->33 12->49 12->54 17->1 17->1 17->1 17->36 17->40 18->1 18->1 18->22 18->25 18->34 22->1 22->1 22->18 22->25 22->34 25->1 25->1 25->18 25->22 25->34 28->1 28->1 28->33 28->49 28->54 31->1 32->1 32->1 33->1 33->1 33->1 33->28 33->45 33->49 33->52 33->54 34->1 34->1 34->18 34->22 34->25 34->47 34->53 35->1 35->1 36->1 36->1 36->1 36->40 36->50 36->55 37->1 37->1 38->1 38->1 39->1 39->1 40->31 44->1 45->1 45->1 47->1 47->1 49->1 49->1 50->1 50->1 52->1 52->1 53->1 53->1 54->1 54->1 55->1 55->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; int majorityElement ( int * nums , int numsSize ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int majorityElement ( int * nums , int numsSize ) { int count ; int majorNum ; int i ; unsigned long _1_majorityElement_next ; { { _1_majorityElement_next = 10 ; } while ( 1 ) { switch ( _1_majorityElement_next ) { case 10 : count = 1 ; majorNum = * ( nums + 0 ) ; i = 1 ; { _1_majorityElement_next = 8 ; } break ; case 8 : ; if ( i < numsSize ) { { _1_majorityElement_next = 6 ; } } else { { _1_majorityElement_next = 0 ; } } break ; case 6 : ; if ( count == 0 ) { { _1_majorityElement_next = 5 ; } } else { { _1_majorityElement_next = 4 ; } } break ; case 5 : majorNum = * ( nums + i ) ; count ++ ; { _1_majorityElement_next = 1 ; } break ; case 4 : ; if ( majorNum == * ( nums + i ) ) { { _1_majorityElement_next = 3 ; } } else { { _1_majorityElement_next = 2 ; } } break ; case 3 : count ++ ; { _1_majorityElement_next = 1 ; } break ; case 2 : count -- ; { _1_majorityElement_next = 1 ; } break ; case 1 : i ++ ; { _1_majorityElement_next = 8 ; } break ; case 0 : ; return ( majorNum ) ; break ; } } } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 9
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 9 <empty>
<operator>.assignment sum = 0
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 7 <empty>
LITERAL 5 <empty>
LITERAL 4 <empty>
<operator>.assignmentMultiplication sum *= i
BLOCK <empty> <empty>
LITERAL 3 <empty>
<operator>.assignmentPlus sum += i
BLOCK <empty> <empty>
LITERAL 2 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("Sum is: %d\n", sum)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 7
<operator>.lessThan i < (int )*(*(argv + 1) + 0)
<operator>.greaterThan sum > 8128
<operator>.assignment _1_main_next = 2
<operator>.assignment _1_main_next = 2
<operator>.assignment _1_main_next = 7
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.cast (int )*(*(argv + 1) + 0)
<operator>.assignment _1_main_next = 5
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 4
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
<operator>.assignment _1_main_next = 3
<operator>.addition *(argv + 1) + 0
<operator>.addition argv + 1
>>>PDG&54 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 2->7 3->8 3->53 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->22 16->25 16->31 16->37 17->1 17->1 17->22 17->25 17->28 17->36 22->1 22->1 22->1 22->25 22->31 22->37 25->1 25->1 25->1 25->22 25->31 25->37 28->1 28->1 28->22 28->25 28->36 31->1 31->1 31->22 31->25 31->37 34->1 35->1 35->1 36->1 36->1 36->1 36->22 36->25 36->28 36->46 36->50 37->1 37->1 37->22 37->25 37->31 37->48 37->51 38->1 38->1 39->1 39->1 40->1 40->1 41->1 41->1 42->34 45->1 46->1 46->1 48->1 48->1 50->1 50->1 51->1 51->1 52->1 53->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int argc , char * * argv , char * * _formal_envp ) { int i ; int sum ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 9 ; } while ( 1 ) { switch ( _1_main_next ) { case 9 : sum = 0 ; i = 0 ; { _1_main_next = 7 ; } break ; case 7 : ; if ( i < ( int ) * ( * ( argv + 1 ) + 0 ) ) { { _1_main_next = 5 ; } } else { { _1_main_next = 1 ; } } break ; case 5 : ; if ( sum > 8128 ) { { _1_main_next = 4 ; } } else { { _1_main_next = 3 ; } } break ; case 4 : sum *= i ; { _1_main_next = 2 ; } break ; case 3 : sum += i ; { _1_main_next = 2 ; } break ; case 2 : i ++ ; { _1_main_next = 7 ; } break ; case 1 : printf ( " \n " , sum ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD test
METHOD_RETURN void
PARAM void
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_test_next = 5
LITERAL 1 while (1)
IDENTIFIER _1_test_next switch(_1_test_next)
LITERAL 5 <empty>
srand srand(10)
<operator>.assignment NUM_TESTS = 5
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 1 <empty>
printf printf("Test %d.... ", i)
<operator>.assignment tmp = get_rand(-5, 5)
<operator>.assignment x = (double )tmp
<operator>.assignment tmp___0 = get_rand(-5, 5)
<operator>.assignment y = (double )tmp___0
printf printf("(%.2g, %.2g).... ", x, y)
to_polar to_polar(x, y, & r, & theta)
<operator>.assignment tmp___1 = hypot(x, y)
<operator>.assignment tmp___2 = fabs(r - (double )tmp___1)
assert assert((double )tmp___2 < 0.01)
<operator>.assignment tmp___3 = atan2(y, x)
<operator>.assignment tmp___4 = fabs(theta - (double )tmp___3)
assert assert((double )tmp___4 < 0.01)
printf printf("passed\n")
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return; return;
<operator>.assignment _1_test_next = 3
<operator>.lessThan i < NUM_TESTS
<operator>.assignment _1_test_next = 3
BLOCK <empty> <empty>
get_rand get_rand(-5, 5)
<operator>.cast (double )tmp
get_rand get_rand(-5, 5)
<operator>.cast (double )tmp___0
hypot hypot(x, y)
fabs fabs(r - (double )tmp___1)
<operator>.lessThan (double )tmp___2 < 0.01
atan2 atan2(y, x)
fabs fabs(theta - (double )tmp___3)
<operator>.lessThan (double )tmp___4 < 0.01
<operator>.assignment _1_test_next = 1
BLOCK <empty> <empty>
<operator>.minus -5
<operator>.minus -5
<operator>.subtraction r - (double )tmp___1
<operator>.cast (double )tmp___2
<operator>.subtraction theta - (double )tmp___3
<operator>.cast (double )tmp___4
<operator>.assignment _1_test_next = 0
<operator>.cast (double )tmp___1
<operator>.cast (double )tmp___3
>>>PDG&58 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->17 0->19 0->20 0->21 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->43 0->44 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 2->1 5->1 5->1 9->1 10->1 10->1 10->34 11->1 11->1 11->15 11->34 15->1 15->29 16->1 16->17 16->38 17->1 17->1 17->20 18->1 18->1 18->19 18->40 19->1 19->1 19->20 20->1 20->21 20->21 21->1 21->1 21->1 21->41 21->41 21->51 21->53 22->1 22->1 22->51 22->56 23->1 23->1 23->43 23->52 24->1 24->1 25->1 25->1 25->53 25->57 26->1 26->1 26->46 26->54 27->1 27->1 28->1 29->1 29->1 29->15 29->34 32->1 33->1 33->1 34->1 34->1 34->1 34->15 34->47 34->55 35->1 35->1 37->16 37->16 38->1 39->1 39->18 39->18 40->1 41->22 41->22 41->44 41->44 42->1 43->1 43->24 43->24 44->1 44->1 44->25 44->25 45->1 46->1 46->27 46->27 47->1 47->1 49->37 50->39 51->1 51->1 51->21 51->23 51->23 51->42 51->42 52->1 53->1 53->1 53->21 53->26 53->26 53->45 53->45 54->1 55->1 55->1 56->1 57->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int ( /* missing proto */ get_rand ) ( ) ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int ( /* missing proto */ hypot ) ( ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int ( /* missing proto */ assert ) ( ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern int ( /* missing proto */ to_polar ) ( ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern double strtod ( char const * str , char const * endptr ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; void test ( void ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern int ( /* missing proto */ fabs ) ( ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern int ( /* missing proto */ srand ) ( ) ; extern double sqrt ( double x ) ; extern int ( /* missing proto */ atan2 ) ( ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void test ( void ) { int NUM_TESTS ; int i ; double r ; double theta ; double x ; int tmp ; double y ; int tmp___0 ; int tmp___1 ; int tmp___2 ; int tmp___3 ; int tmp___4 ; unsigned long _1_test_next ; { { _1_test_next = 5 ; } while ( 1 ) { switch ( _1_test_next ) { case 5 : srand ( 10 ) ; NUM_TESTS = 5 ; i = 0 ; { _1_test_next = 3 ; } break ; case 3 : ; if ( i < NUM_TESTS ) { { _1_test_next = 1 ; } } else { { _1_test_next = 0 ; } } break ; case 1 : printf ( " " , i ) ; tmp = get_rand ( -5 , 5 ) ; x = ( double ) tmp ; tmp___0 = get_rand ( -5 , 5 ) ; y = ( double ) tmp___0 ; printf ( " " , x , y ) ; to_polar ( x , y , & r , & theta ) ; tmp___1 = hypot ( x , y ) ; tmp___2 = fabs ( r - ( double ) tmp___1 ) ; assert ( ( double ) tmp___2 < 0.01 ) ; tmp___3 = atan2 ( y , x ) ; tmp___4 = fabs ( theta - ( double ) tmp___3 ) ; assert ( ( double ) tmp___4 < 0.01 ) ; printf ( " \n " ) ; i ++ ; { _1_test_next = 3 ; } break ; case 0 : ; return ; break ; } } } } void megaInit ( void ) { { } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 8
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 15 <empty>
sort_d sort_d(a, l)
<operator>.assignment cur = 0L
<operator>.assignment kp = 1L
<operator>.assignment tot = 0L
BLOCK <empty> <empty>
LITERAL 13 <empty>
LITERAL 11 <empty>
<operator>.assignment tmp = sumk(a, cur, k, l)
<operator>.assignmentPlus tot += kp * (long )tmp
<operator>.assignmentPlus cur += k
<operator>.postIncrement kp ++
BLOCK <empty> <empty>
LITERAL 10 <empty>
printf printf("Case #%ld: %ld\n", i, tot)
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 9 <empty>
RETURN return (0); return (0);
LITERAL 8 <empty>
scanf scanf("%ld", & tc)
<operator>.assignment i = 1L
BLOCK <empty> <empty>
LITERAL 6 <empty>
LITERAL 4 <empty>
scanf scanf("%ld %ld %ld", & p, & k, & l)
<operator>.assignment j = 0L
BLOCK <empty> <empty>
LITERAL 2 <empty>
LITERAL 0 <empty>
scanf scanf("%ld", & a[j])
<operator>.postIncrement j ++
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 13
<operator>.lessThan cur < l
<operator>.assignment _1_main_next = 13
<operator>.assignment _1_main_next = 6
LITERAL 0 return (0);
<operator>.assignment _1_main_next = 6
<operator>.lessEqualsThan i <= tc
<operator>.assignment _1_main_next = 2
<operator>.lessThan j < l
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
sumk sumk(a, cur, k, l)
<operator>.multiplication kp * (long )tmp
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 11
BLOCK <empty> <empty>
<operator>.cast (long )tmp
<operator>.assignment _1_main_next = 4
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 0
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 10
<operator>.assignment _1_main_next = 9
<operator>.assignment _1_main_next = 15
>>>PDG&73 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 0->59 0->60 0->61 0->62 0->63 0->64 0->65 0->66 0->67 0->68 0->69 0->70 0->71 0->72 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->1 16->45 16->49 16->56 16->59 16->59 17->1 17->1 17->49 17->59 18->1 18->1 18->60 19->1 19->1 19->24 19->29 23->1 23->1 23->60 23->65 24->1 24->1 24->1 24->29 25->1 25->1 25->1 25->49 25->59 26->1 26->1 26->60 29->1 29->1 29->24 29->30 30->1 30->1 30->29 30->54 33->1 35->1 35->54 36->1 36->1 36->29 36->54 40->1 40->1 40->1 41->1 41->1 41->46 41->56 45->1 45->16 45->59 46->1 46->1 46->56 48->1 48->1 49->1 49->1 49->1 49->16 49->56 49->59 49->59 49->63 49->70 50->1 50->1 51->1 51->1 52->33 53->1 53->1 54->1 54->1 54->1 54->29 54->35 54->66 54->71 55->1 55->1 56->1 56->1 56->1 56->16 56->46 56->49 56->59 56->68 56->72 57->1 57->1 59->1 59->1 59->16 59->16 59->23 59->23 59->23 59->23 59->25 59->25 59->45 59->49 59->56 60->1 60->24 60->24 60->26 63->1 63->1 65->1 66->1 66->1 68->1 68->1 70->1 70->1 71->1 71->1 72->1 72->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; char * * _global_envp = ( char * * ) 0 ; void megaInit ( void ) ; extern int ( /* missing proto */ sort_d ) ( ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int ( /* missing proto */ scanf ) ( ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern int ( /* missing proto */ sumk ) ( ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { long a [ 1000 ] ; long p ; long k ; long l ; long tot ; long kp ; long tc ; long i ; long j ; long cur ; int tmp ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 8 ; } while ( 1 ) { switch ( _1_main_next ) { case 15 : sort_d ( a , l ) ; cur = 0L ; kp = 1L ; tot = 0L ; { _1_main_next = 13 ; } break ; case 13 : ; if ( cur < l ) { { _1_main_next = 11 ; } } else { { _1_main_next = 10 ; } } break ; case 11 : tmp = sumk ( a , cur , k , l ) ; tot += kp * ( long ) tmp ; cur += k ; kp ++ ; { _1_main_next = 13 ; } break ; case 10 : printf ( " \n " , i , tot ) ; i ++ ; { _1_main_next = 6 ; } break ; case 9 : ; return ( 0 ) ; break ; case 8 : scanf ( " " , & tc ) ; i = 1L ; { _1_main_next = 6 ; } break ; case 6 : ; if ( i <= tc ) { { _1_main_next = 4 ; } } else { { _1_main_next = 9 ; } } break ; case 4 : scanf ( " " , & p , & k , & l ) ; j = 0L ; { _1_main_next = 2 ; } break ; case 2 : ; if ( j < l ) { { _1_main_next = 0 ; } } else { { _1_main_next = 15 ; } } break ; case 0 : scanf ( " " , & a [ j ] ) ; j ++ ; { _1_main_next = 2 ; } break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 1 <empty>
test test()
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
>>>PDG&22 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 19->1 20->1 20->1 21->19
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int ( /* missing proto */ test ) ( ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern double log ( double x ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 1 ; } while ( 1 ) { switch ( _1_main_next ) { case 1 : test ( ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD BPHash
METHOD_RETURN unsigned int
PARAM char *str
PARAM unsigned int len
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_BPHash_next = 5
LITERAL 1 while (1)
IDENTIFIER _1_BPHash_next switch(_1_BPHash_next)
LITERAL 5 <empty>
<operator>.assignment hash = 0U
<operator>.assignment i = 0U
<operator>.assignment i = 0U
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 1 <empty>
<operator>.assignment hash = (hash << 7) ^ (unsigned int )*str
<operator>.postIncrement str ++
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (hash); return (hash);
<operator>.assignment _1_BPHash_next = 3
<operator>.lessThan i < len
<operator>.assignment _1_BPHash_next = 3
IDENTIFIER hash return (hash);
BLOCK <empty> <empty>
<operator>.xor (hash << 7) ^ (unsigned int )*str
<operator>.assignment _1_BPHash_next = 1
BLOCK <empty> <empty>
<operator>.shiftLeft hash << 7
<operator>.cast (unsigned int )*str
<operator>.assignment _1_BPHash_next = 0
>>>PDG&33 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->17 0->18 0->19 0->20 0->22 0->23 0->24 0->25 0->26 0->28 0->29 0->30 0->32 2->1 2->17 3->1 3->23 6->1 6->1 10->1 10->1 10->25 10->30 12->1 12->1 12->18 12->23 16->1 16->1 16->1 16->25 16->30 17->1 17->1 18->1 18->1 18->23 21->1 22->1 22->1 23->1 23->1 23->1 23->18 23->28 23->32 24->1 24->1 25->21 27->1 27->1 27->16 27->16 28->1 28->1 30->27 30->27 31->1 32->1 32->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; unsigned int BPHash ( char * str , unsigned int len ) ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } unsigned int BPHash ( char * str , unsigned int len ) { unsigned int hash ; unsigned int i ; unsigned long _1_BPHash_next ; { { _1_BPHash_next = 5 ; } while ( 1 ) { switch ( _1_BPHash_next ) { case 5 : hash = 0U ; i = 0U ; i = 0U ; { _1_BPHash_next = 3 ; } break ; case 3 : ; if ( i < len ) { { _1_BPHash_next = 1 ; } } else { { _1_BPHash_next = 0 ; } } break ; case 1 : hash = ( hash << 7 ) ^ ( unsigned int ) * str ; str ++ ; i ++ ; { _1_BPHash_next = 3 ; } break ; case 0 : ; return ( hash ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 22
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 40 <empty>
LITERAL 39 <empty>
LITERAL 38 <empty>
LITERAL 37 <empty>
<operator>.postDecrement (v[k]) --
<operator>.postDecrement total --
BLOCK <empty> <empty>
LITERAL 36 <empty>
LITERAL 35 <empty>
LITERAL 34 <empty>
<operator>.assignment tmp___0 = strcmp(ss[k], qs[j])
BLOCK <empty> <empty>
LITERAL 33 <empty>
LITERAL 32 <empty>
<operator>.postIncrement ch ++
<operator>.assignment total = s
<operator>.assignment l = 0
BLOCK <empty> <empty>
LITERAL 30 <empty>
LITERAL 28 <empty>
<operator>.assignment v[l] = 1
<operator>.postIncrement l ++
BLOCK <empty> <empty>
LITERAL 27 <empty>
<operator>.postDecrement (v[k]) --
<operator>.postDecrement total --
BLOCK <empty> <empty>
LITERAL 26 <empty>
<operator>.postIncrement k ++
BLOCK <empty> <empty>
LITERAL 25 <empty>
<operator>.postIncrement j ++
BLOCK <empty> <empty>
LITERAL 24 <empty>
printf printf("Case #%d: %d\n", i + 1, ch)
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 23 <empty>
RETURN return (0); return (0);
LITERAL 22 <empty>
scanf scanf("%d", & n)
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 20 <empty>
LITERAL 18 <empty>
scanf scanf("%d ", & s)
<operator>.assignment j = 0
BLOCK <empty> <empty>
LITERAL 16 <empty>
LITERAL 14 <empty>
<operator>.assignment v[j] = 1
gets gets(ss[j])
<operator>.postIncrement j ++
BLOCK <empty> <empty>
LITERAL 13 <empty>
scanf scanf("%d ", & q)
<operator>.assignment k = 0
BLOCK <empty> <empty>
LITERAL 11 <empty>
LITERAL 9 <empty>
gets gets(qs[k])
<operator>.postIncrement k ++
BLOCK <empty> <empty>
LITERAL 8 <empty>
<operator>.assignment total = s
<operator>.assignment ch = 0
<operator>.assignment j = 0
BLOCK <empty> <empty>
LITERAL 6 <empty>
LITERAL 4 <empty>
<operator>.assignment k = 0
BLOCK <empty> <empty>
LITERAL 2 <empty>
LITERAL 0 <empty>
<operator>.assignment tmp = strcmp(ss[k], qs[j])
BLOCK <empty> <empty>
<operator>.equals tmp == 0
<operator>.equals v[k] == 1
<operator>.notEquals total != 1
<operator>.assignment _1_main_next = 36
<operator>.equals total == 1
<operator>.equals v[k] == 1
<operator>.assignment _1_main_next = 33
<operator>.equals tmp___0 == 0
<operator>.assignment _1_main_next = 30
<operator>.lessThan l < s
<operator>.assignment _1_main_next = 30
<operator>.assignment _1_main_next = 26
<operator>.assignment _1_main_next = 2
<operator>.assignment _1_main_next = 6
<operator>.assignment _1_main_next = 20
LITERAL 0 return (0);
<operator>.assignment _1_main_next = 20
<operator>.lessThan i < n
<operator>.assignment _1_main_next = 16
<operator>.lessThan j < s
<operator>.assignment _1_main_next = 16
<operator>.assignment _1_main_next = 11
<operator>.lessThan k < q
<operator>.assignment _1_main_next = 11
<operator>.assignment _1_main_next = 6
<operator>.lessThan j < q
<operator>.assignment _1_main_next = 2
<operator>.lessThan k < s
<operator>.assignment _1_main_next = 40
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
strcmp strcmp(ss[k], qs[j])
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.addition i + 1
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
strcmp strcmp(ss[k], qs[j])
<operator>.assignment _1_main_next = 39
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 38
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 37
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 35
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 34
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 32
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 28
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 18
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 14
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 9
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 4
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 0
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 36
<operator>.assignment _1_main_next = 36
<operator>.assignment _1_main_next = 36
<operator>.assignment _1_main_next = 26
<operator>.assignment _1_main_next = 26
<operator>.assignment _1_main_next = 26
<operator>.assignment _1_main_next = 27
<operator>.assignment _1_main_next = 23
<operator>.assignment _1_main_next = 13
<operator>.assignment _1_main_next = 8
<operator>.assignment _1_main_next = 24
<operator>.assignment _1_main_next = 25
>>>PDG&171 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->20 0->21 0->22 0->23 0->24 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 0->59 0->60 0->61 0->62 0->63 0->64 0->65 0->67 0->68 0->69 0->70 0->71 0->72 0->73 0->74 0->76 0->77 0->78 0->79 0->80 0->81 0->82 0->83 0->84 0->85 0->86 0->87 0->88 0->90 0->91 0->92 0->93 0->94 0->95 0->96 0->97 0->98 0->99 0->100 0->101 0->102 0->103 0->104 0->105 0->106 0->107 0->108 0->109 0->110 0->111 0->112 0->113 0->114 0->115 0->116 0->117 0->118 0->119 0->120 0->121 0->122 0->123 0->124 0->126 0->127 0->128 0->129 0->130 0->131 0->132 0->133 0->135 0->136 0->137 0->138 0->139 0->140 0->141 0->142 0->143 0->144 0->145 0->146 0->147 0->148 0->149 0->150 0->151 0->152 0->153 0->154 0->155 0->156 0->157 0->158 0->159 0->160 0->161 0->162 0->163 0->164 0->165 0->166 0->167 0->168 0->169 0->170 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 19->1 19->1 19->39 19->92 19->96 20->1 20->1 20->40 20->93 20->95 25->1 25->1 25->1 25->98 29->1 29->1 29->49 30->1 30->1 30->1 30->20 30->40 30->93 30->95 31->1 31->1 31->36 31->100 35->1 35->1 36->1 36->1 36->100 39->1 39->1 39->19 39->92 39->96 40->1 40->1 40->20 40->93 40->95 43->1 43->1 43->76 43->113 43->118 46->1 46->1 46->67 46->110 46->116 49->1 49->1 49->1 49->29 50->1 50->1 50->49 50->108 50->128 53->1 55->1 55->108 56->1 56->1 56->49 56->50 56->108 56->128 60->1 60->30 60->79 60->100 60->110 60->118 61->1 61->1 61->46 61->67 61->110 61->116 65->1 65->1 66->1 66->1 67->1 67->1 67->46 67->110 67->116 70->1 70->113 70->116 71->1 71->1 71->43 71->76 71->113 71->118 75->1 75->1 76->1 76->1 76->43 76->113 76->118 79->1 79->1 79->1 79->20 79->40 79->93 79->95 80->1 80->1 80->29 80->49 81->1 81->1 81->46 81->67 81->110 81->116 85->1 85->1 85->43 85->76 85->113 85->118 89->1 89->1 89->1 89->91 91->1 91->1 91->135 91->159 92->1 92->1 92->19 92->39 92->96 92->137 92->160 93->1 93->1 93->20 93->40 93->95 93->139 93->161 94->1 94->1 95->1 95->1 95->20 95->40 95->93 95->141 95->162 96->1 96->1 96->19 96->39 96->92 96->143 96->163 97->1 97->1 98->1 98->1 98->145 98->164 99->1 99->1 100->1 100->1 100->1 100->30 100->36 100->60 100->79 100->110 100->118 100->147 100->165 101->1 101->1 102->1 102->1 103->1 103->1 104->1 104->1 105->1 105->1 106->53 107->1 107->1 108->1 108->1 108->1 108->49 108->50 108->55 108->128 108->149 108->166 109->1 109->1 110->1 110->1 110->1 110->30 110->46 110->60 110->67 110->79 110->100 110->116 110->118 110->151 110->167 111->1 111->1 112->1 112->1 113->1 113->1 113->1 113->43 113->70 113->76 113->116 113->118 113->153 113->168 114->1 114->1 115->1 115->1 116->1 116->1 116->1 116->46 116->67 116->70 116->110 116->113 116->155 116->169 117->1 117->1 118->1 118->1 118->1 118->30 118->43 118->60 118->76 118->79 118->100 118->110 118->113 118->157 118->170 119->1 119->1 125->1 125->1 125->25 125->25 125->134 125->134 134->1 134->1 134->89 134->89 134->125 134->125 135->1 135->1 137->1 137->1 139->1 139->1 141->1 141->1 143->1 143->1 145->1 145->1 147->1 147->1 149->1 149->1 151->1 151->1 153->1 153->1 155->1 155->1 157->1 157->1 159->1 159->1 160->1 160->1 161->1 161->1 162->1 162->1 163->1 163->1 164->1 164->1 165->1 165->1 166->1 166->1 167->1 167->1 168->1 168->1 169->1 169->1 170->1 170->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern void exit ( int status ) ; extern int pthread_cond_signal ( int * cond ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int ( /* missing proto */ scanf ) ( ) ; extern int ( /* missing proto */ gets ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int ( /* missing proto */ strcmp ) ( ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { int n ; int q ; int i ; int j ; int k ; int total ; int ch ; int s ; int v [ 150 ] ; int l ; char ss [ 150 ] [ 1100 ] ; char qs [ 150 ] [ 1100 ] ; int tmp ; int tmp___0 ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 22 ; } while ( 1 ) { switch ( _1_main_next ) { case 40 : ; if ( tmp == 0 ) { { _1_main_next = 39 ; } } else { { _1_main_next = 36 ; } } break ; case 39 : ; if ( v [ k ] == 1 ) { { _1_main_next = 38 ; } } else { { _1_main_next = 36 ; } } break ; case 38 : ; if ( total != 1 ) { { _1_main_next = 37 ; } } else { { _1_main_next = 36 ; } } break ; case 37 : ( v [ k ] ) -- ; total -- ; { _1_main_next = 36 ; } break ; case 36 : ; if ( total == 1 ) { { _1_main_next = 35 ; } } else { { _1_main_next = 26 ; } } break ; case 35 : ; if ( v [ k ] == 1 ) { { _1_main_next = 34 ; } } else { { _1_main_next = 26 ; } } break ; case 34 : tmp___0 = strcmp ( ss [ k ] , qs [ j ] ) ; { _1_main_next = 33 ; } break ; case 33 : ; if ( tmp___0 == 0 ) { { _1_main_next = 32 ; } } else { { _1_main_next = 26 ; } } break ; case 32 : ch ++ ; total = s ; l = 0 ; { _1_main_next = 30 ; } break ; case 30 : ; if ( l < s ) { { _1_main_next = 28 ; } } else { { _1_main_next = 27 ; } } break ; case 28 : v [ l ] = 1 ; l ++ ; { _1_main_next = 30 ; } break ; case 27 : ( v [ k ] ) -- ; total -- ; { _1_main_next = 26 ; } break ; case 26 : k ++ ; { _1_main_next = 2 ; } break ; case 25 : j ++ ; { _1_main_next = 6 ; } break ; case 24 : printf ( " \n " , i + 1 , ch ) ; i ++ ; { _1_main_next = 20 ; } break ; case 23 : ; return ( 0 ) ; break ; case 22 : scanf ( " " , & n ) ; i = 0 ; { _1_main_next = 20 ; } break ; case 20 : ; if ( i < n ) { { _1_main_next = 18 ; } } else { { _1_main_next = 23 ; } } break ; case 18 : scanf ( " " , & s ) ; j = 0 ; { _1_main_next = 16 ; } break ; case 16 : ; if ( j < s ) { { _1_main_next = 14 ; } } else { { _1_main_next = 13 ; } } break ; case 14 : v [ j ] = 1 ; gets ( ss [ j ] ) ; j ++ ; { _1_main_next = 16 ; } break ; case 13 : scanf ( " " , & q ) ; k = 0 ; { _1_main_next = 11 ; } break ; case 11 : ; if ( k < q ) { { _1_main_next = 9 ; } } else { { _1_main_next = 8 ; } } break ; case 9 : gets ( qs [ k ] ) ; k ++ ; { _1_main_next = 11 ; } break ; case 8 : total = s ; ch = 0 ; j = 0 ; { _1_main_next = 6 ; } break ; case 6 : ; if ( j < q ) { { _1_main_next = 4 ; } } else { { _1_main_next = 24 ; } } break ; case 4 : k = 0 ; { _1_main_next = 2 ; } break ; case 2 : ; if ( k < s ) { { _1_main_next = 0 ; } } else { { _1_main_next = 25 ; } } break ; case 0 : tmp = strcmp ( ss [ k ] , qs [ j ] ) ; { _1_main_next = 40 ; } break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD Sort
METHOD_RETURN int*
PARAM int *values
PARAM int size
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_Sort_next = 12
LITERAL 1 while (1)
IDENTIFIER _1_Sort_next switch(_1_Sort_next)
LITERAL 12 <empty>
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 10 <empty>
LITERAL 8 <empty>
<operator>.assignment value = *(values + i)
<operator>.assignment j = i - 1
BLOCK <empty> <empty>
LITERAL 6 <empty>
LITERAL 5 <empty>
LITERAL 2 <empty>
<operator>.assignment *(values + (j + 1)) = *(values + j)
<operator>.postDecrement j --
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operator>.assignment *(values + (j + 1)) = value
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (values); return (values);
<operator>.assignment _1_Sort_next = 10
<operator>.lessThan i < size
<operator>.assignment _1_Sort_next = 6
<operator>.greaterEqualsThan j >= 0
<operator>.greaterThan *(values + j) > value
<operator>.assignment _1_Sort_next = 6
<operator>.assignment _1_Sort_next = 10
IDENTIFIER values return (values);
BLOCK <empty> <empty>
<operator>.subtraction i - 1
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_Sort_next = 8
BLOCK <empty> <empty>
<operator>.addition values + i
<operator>.assignment _1_Sort_next = 5
BLOCK <empty> <empty>
<operator>.assignment _1_Sort_next = 2
BLOCK <empty> <empty>
<operator>.addition values + (j + 1)
<operator>.addition values + j
<operator>.addition values + (j + 1)
<operator>.assignment _1_Sort_next = 0
<operator>.assignment _1_Sort_next = 1
<operator>.addition values + j
<operator>.assignment _1_Sort_next = 1
<operator>.addition j + 1
<operator>.addition j + 1
>>>PDG&57 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->16 0->17 0->18 0->19 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 2->1 2->36 2->43 2->48 2->49 2->50 2->53 3->1 3->30 6->1 6->1 10->1 10->1 10->25 10->30 10->38 10->43 14->1 14->1 14->1 14->24 14->33 15->1 15->1 15->1 15->21 15->32 15->48 15->49 15->50 15->53 15->55 15->56 20->1 20->1 20->1 21->1 21->1 21->32 21->48 21->49 21->50 21->53 21->55 21->56 24->1 24->1 24->1 25->1 25->1 25->30 25->38 25->43 28->1 29->1 29->1 30->1 30->1 30->1 30->25 30->38 30->41 30->43 30->51 31->1 31->1 32->1 32->1 32->21 32->44 32->48 32->49 32->50 32->52 32->53 32->55 32->56 33->1 33->1 33->1 33->24 33->46 33->54 34->1 34->1 35->1 35->1 36->28 38->1 38->15 38->15 38->25 38->30 38->43 41->1 41->1 43->1 44->1 44->1 46->1 46->1 48->1 49->1 50->1 50->1 51->1 51->1 52->1 52->1 53->1 53->1 54->1 54->1 56->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; int * Sort ( int * values , int size ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int * Sort ( int * values , int size ) { int i ; int j ; int value ; unsigned long _1_Sort_next ; { { _1_Sort_next = 12 ; } while ( 1 ) { switch ( _1_Sort_next ) { case 12 : i = 0 ; { _1_Sort_next = 10 ; } break ; case 10 : ; if ( i < size ) { { _1_Sort_next = 8 ; } } else { { _1_Sort_next = 0 ; } } break ; case 8 : value = * ( values + i ) ; j = i - 1 ; { _1_Sort_next = 6 ; } break ; case 6 : ; if ( j >= 0 ) { { _1_Sort_next = 5 ; } } else { { _1_Sort_next = 1 ; } } break ; case 5 : ; if ( * ( values + j ) > value ) { { _1_Sort_next = 2 ; } } else { { _1_Sort_next = 1 ; } } break ; case 2 : * ( values + ( j + 1 ) ) = * ( values + j ) ; j -- ; { _1_Sort_next = 6 ; } break ; case 1 : * ( values + ( j + 1 ) ) = value ; i ++ ; { _1_Sort_next = 10 ; } break ; case 0 : ; return ( values ) ; break ; } } } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD cmpint
METHOD_RETURN int
PARAM void const   *a
PARAM void const   *b
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_cmpint_next = 0
LITERAL 1 while (1)
IDENTIFIER _1_cmpint_next switch(_1_cmpint_next)
LITERAL 0 <empty>
RETURN return (*((int *)a) - *((int *)b)); return (*((int *)a) - *((int *)b));
<operator>.subtraction *((int *)a) - *((int *)b)
<operator>.cast (int *)a
<operator>.cast (int *)b
>>>PDG&14 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->12 0->13 2->12 3->13 6->1 6->1 10->1 11->1 11->1 11->1 11->10 12->1 13->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; int cmpint ( void const * a , void const * b ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int cmpint ( void const * a , void const * b ) { unsigned long _1_cmpint_next ; { { _1_cmpint_next = 0 ; } while ( 1 ) { switch ( _1_cmpint_next ) { case 0 : ; return ( * ( ( int * ) a ) - * ( ( int * ) b ) ) ; break ; } } } } void megaInit ( void ) { { } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 8
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 8 <empty>
BLOCK <empty> <empty>
LITERAL 7 <empty>
LITERAL 6 <empty>
printf printf("Usage: program-name argument\n")
BLOCK <empty> <empty>
LITERAL 5 <empty>
RETURN return (1); return (1);
LITERAL 4 <empty>
<operator>.assignment c = (unsigned char )*(*(argv + 1) + 0)
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 2 <empty>
printf printf("win\n")
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("lose\n")
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 7
<operator>.lessThan argc < 2
<operator>.assignment _1_main_next = 5
LITERAL 1 return (1);
<operator>.assignment _1_main_next = 3
<operator>.equals (int )c == 127
<operator>.assignment _1_main_next = 0
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
BLOCK <empty> <empty>
<operator>.cast (unsigned char )*(*(argv + 1) + 0)
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 6
BLOCK <empty> <empty>
<operator>.cast (int )c
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 4
<operator>.addition *(argv + 1) + 0
<operator>.assignment _1_main_next = 1
<operator>.addition argv + 1
>>>PDG&56 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 2->7 2->36 3->8 3->55 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 19->1 22->1 24->1 24->1 24->1 24->40 24->49 28->1 31->1 34->1 35->1 35->1 36->1 36->1 36->47 36->52 37->1 37->1 38->22 39->1 39->1 40->1 40->1 40->50 40->54 41->1 41->1 42->1 42->1 43->34 45->1 47->1 47->1 49->1 50->1 50->1 52->1 52->1 53->1 54->1 54->1 55->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int argc , char * * argv , char * * _formal_envp ) { unsigned char c ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 8 ; } while ( 1 ) { switch ( _1_main_next ) { case 8 : ; { _1_main_next = 7 ; } break ; case 7 : ; if ( argc < 2 ) { { _1_main_next = 6 ; } } else { { _1_main_next = 4 ; } } break ; case 6 : printf ( " \n " ) ; { _1_main_next = 5 ; } break ; case 5 : ; return ( 1 ) ; break ; case 4 : c = ( unsigned char ) * ( * ( argv + 1 ) + 0 ) ; { _1_main_next = 3 ; } break ; case 3 : ; if ( ( int ) c == 127 ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : printf ( " \n " ) ; { _1_main_next = 0 ; } break ; case 1 : printf ( " \n " ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD test
METHOD_RETURN void
PARAM void
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_test_next = 1
LITERAL 1 while (1)
IDENTIFIER _1_test_next switch(_1_test_next)
LITERAL 1 <empty>
<operator>.assignment arr[0] = 2
<operator>.assignment arr[1] = 3
<operator>.assignment arr[2] = 4
<operator>.assignment arr[3] = 10
<operator>.assignment arr[4] = 40
<operator>.assignment n = (int )(sizeof(arr) / sizeof(arr[0]))
printf printf("Test 1.... ")
<operator>.assignment x = 10
<operator>.assignment tmp = binarysearch1(arr, 0, n - 1, x)
<operator>.assignment result = tmp
assert assert(result == 3)
printf printf("passed recursive... ")
<operator>.assignment result = binarysearch2(arr, 0, n - 1, x)
assert assert(result == 3)
printf printf("passed iterative...\n")
printf printf("Test 2.... ")
<operator>.assignment x = 5
<operator>.assignment result = binarysearch1(arr, 0, n - 1, x)
assert assert(result == -1)
printf printf("passed recursive... ")
<operator>.assignment result = binarysearch2(arr, 0, n - 1, x)
assert assert(result == -1)
printf printf("passed iterative...\n")
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return; return;
<operator>.assignment _1_test_next = 0
<operator>.cast (int )(sizeof(arr) / sizeof(arr[0]))
binarysearch1 binarysearch1(arr, 0, n - 1, x)
<operator>.equals result == 3
binarysearch2 binarysearch2(arr, 0, n - 1, x)
<operator>.equals result == 3
binarysearch1 binarysearch1(arr, 0, n - 1, x)
<operator>.equals result == -1
binarysearch2 binarysearch2(arr, 0, n - 1, x)
<operator>.equals result == -1
<operator>.subtraction n - 1
<operator>.subtraction n - 1
<operator>.subtraction n - 1
<operator>.minus -1
<operator>.subtraction n - 1
<operator>.minus -1
<operator>.sizeOf sizeof(arr[0])
>>>PDG&52 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->15 0->16 0->18 0->20 0->23 0->24 0->25 0->28 0->31 0->32 0->33 0->34 0->35 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 2->1 5->1 5->1 9->1 10->1 10->1 10->37 10->39 10->41 10->43 11->1 11->1 11->37 11->39 11->41 11->43 12->1 12->1 12->37 12->39 12->41 12->43 13->1 13->1 13->37 13->39 13->41 13->43 14->1 14->1 14->45 15->1 16->1 16->37 17->1 17->18 18->1 18->1 18->38 21->40 22->1 22->1 24->1 25->1 25->41 26->1 26->1 26->42 28->1 29->1 29->1 29->44 30->1 30->1 31->1 34->1 35->1 35->1 36->1 37->17 37->17 37->17 37->17 37->39 37->39 38->19 38->19 39->21 39->21 39->21 39->21 39->41 40->22 40->22 41->26 41->26 41->26 41->26 41->43 41->43 42->27 42->27 43->1 43->1 43->1 43->29 43->29 43->29 43->29 44->1 44->1 44->30 44->30 45->37 45->37 45->46 46->39 46->39 46->47 47->41 47->41 47->49 48->42 49->1 49->43 49->43 50->44 51->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int ( /* missing proto */ assert ) ( ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; void test ( void ) ; extern int ( /* missing proto */ binarysearch2 ) ( ) ; extern int ( /* missing proto */ binarysearch1 ) ( ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } void test ( void ) { int arr [ 5 ] ; int n ; int x ; int result ; int tmp ; unsigned long _1_test_next ; { { _1_test_next = 1 ; } while ( 1 ) { switch ( _1_test_next ) { case 1 : arr [ 0 ] = 2 ; arr [ 1 ] = 3 ; arr [ 2 ] = 4 ; arr [ 3 ] = 10 ; arr [ 4 ] = 40 ; n = ( int ) ( sizeof ( arr ) / sizeof ( arr [ 0 ] ) ) ; printf ( " " ) ; x = 10 ; tmp = binarysearch1 ( arr , 0 , n - 1 , x ) ; result = tmp ; assert ( result == 3 ) ; printf ( " " ) ; result = binarysearch2 ( arr , 0 , n - 1 , x ) ; assert ( result == 3 ) ; printf ( " \n " ) ; printf ( " " ) ; x = 5 ; result = binarysearch1 ( arr , 0 , n - 1 , x ) ; assert ( result == -1 ) ; printf ( " " ) ; result = binarysearch2 ( arr , 0 , n - 1 , x ) ; assert ( result == -1 ) ; printf ( " \n " ) ; { _1_test_next = 0 ; } break ; case 0 : ; return ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD romanToInt
METHOD_RETURN int
PARAM char *s
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_romanToInt_next = 46
LITERAL 1 while (1)
IDENTIFIER _1_romanToInt_next switch(_1_romanToInt_next)
LITERAL 46 <empty>
<operator>.assignment romanToInt___0 = 0
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 44 <empty>
<operator>.assignment tmp___2 = strlen(s)
BLOCK <empty> <empty>
LITERAL 43 <empty>
LITERAL 41 <empty>
LITERAL 40 <empty>
<operator>.assignment tmp = strlen(s)
BLOCK <empty> <empty>
LITERAL 39 <empty>
LITERAL 38 <empty>
LITERAL 37 <empty>
<operator>.postDecrement romanToInt___0 --
BLOCK <empty> <empty>
LITERAL 35 <empty>
LITERAL 34 <empty>
<operator>.postDecrement romanToInt___0 --
BLOCK <empty> <empty>
LITERAL 32 <empty>
<operator>.postIncrement romanToInt___0 ++
BLOCK <empty> <empty>
LITERAL 30 <empty>
<operator>.assignmentPlus romanToInt___0 += 5
BLOCK <empty> <empty>
LITERAL 28 <empty>
<operator>.assignment tmp___0 = strlen(s)
BLOCK <empty> <empty>
LITERAL 27 <empty>
LITERAL 26 <empty>
LITERAL 25 <empty>
<operator>.assignmentMinus romanToInt___0 -= 10
BLOCK <empty> <empty>
LITERAL 23 <empty>
LITERAL 22 <empty>
<operator>.assignmentMinus romanToInt___0 -= 10
BLOCK <empty> <empty>
LITERAL 20 <empty>
<operator>.assignmentPlus romanToInt___0 += 10
BLOCK <empty> <empty>
LITERAL 18 <empty>
<operator>.assignmentPlus romanToInt___0 += 50
BLOCK <empty> <empty>
LITERAL 16 <empty>
<operator>.assignment tmp___1 = strlen(s)
BLOCK <empty> <empty>
LITERAL 15 <empty>
LITERAL 14 <empty>
LITERAL 13 <empty>
<operator>.assignmentMinus romanToInt___0 -= 100
BLOCK <empty> <empty>
LITERAL 11 <empty>
LITERAL 10 <empty>
<operator>.assignmentMinus romanToInt___0 -= 100
BLOCK <empty> <empty>
LITERAL 8 <empty>
<operator>.assignmentPlus romanToInt___0 += 100
BLOCK <empty> <empty>
LITERAL 6 <empty>
<operator>.assignmentPlus romanToInt___0 += 500
BLOCK <empty> <empty>
LITERAL 4 <empty>
<operator>.assignmentPlus romanToInt___0 += 1000
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (romanToInt___0); return (romanToInt___0);
<operator>.assignment _1_romanToInt_next = 44
<operator>.assignment _1_romanToInt_next = 43
<operator>.lessThan i < tmp___2
<operator>.cast (int )*(s + i)
<operator>.assignment _1_romanToInt_next = 39
<operator>.lessThan i + 1 < tmp
<operator>.equals (int )*(s + (i + 1)) == 86
<operator>.assignment _1_romanToInt_next = 1
<operator>.equals (int )*(s + (i + 1)) == 88
<operator>.assignment _1_romanToInt_next = 1
<operator>.assignment _1_romanToInt_next = 1
<operator>.assignment _1_romanToInt_next = 1
<operator>.assignment _1_romanToInt_next = 27
<operator>.lessThan i + 1 < tmp___0
<operator>.equals (int )*(s + (i + 1)) == 76
<operator>.assignment _1_romanToInt_next = 1
<operator>.equals (int )*(s + (i + 1)) == 67
<operator>.assignment _1_romanToInt_next = 1
<operator>.assignment _1_romanToInt_next = 1
<operator>.assignment _1_romanToInt_next = 1
<operator>.assignment _1_romanToInt_next = 15
<operator>.lessThan i + 1 < tmp___1
<operator>.equals (int )*(s + (i + 1)) == 68
<operator>.assignment _1_romanToInt_next = 1
<operator>.equals (int )*(s + (i + 1)) == 77
<operator>.assignment _1_romanToInt_next = 1
<operator>.assignment _1_romanToInt_next = 1
<operator>.assignment _1_romanToInt_next = 1
<operator>.assignment _1_romanToInt_next = 1
<operator>.assignment _1_romanToInt_next = 44
IDENTIFIER romanToInt___0 return (romanToInt___0);
strlen strlen(s)
BLOCK <empty> <empty>
LITERAL 73 <empty>
BLOCK <empty> <empty>
LITERAL 86 <empty>
BLOCK <empty> <empty>
LITERAL 88 <empty>
BLOCK <empty> <empty>
LITERAL 76 <empty>
BLOCK <empty> <empty>
LITERAL 67 <empty>
BLOCK <empty> <empty>
LITERAL 68 <empty>
BLOCK <empty> <empty>
LITERAL 77 <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
strlen strlen(s)
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
strlen strlen(s)
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
strlen strlen(s)
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_romanToInt_next = 41
BLOCK <empty> <empty>
<operator>.assignment _1_romanToInt_next = 40
<operator>.assignment _1_romanToInt_next = 30
<operator>.assignment _1_romanToInt_next = 28
<operator>.assignment _1_romanToInt_next = 18
<operator>.assignment _1_romanToInt_next = 16
<operator>.assignment _1_romanToInt_next = 6
<operator>.assignment _1_romanToInt_next = 4
<operator>.assignment _1_romanToInt_next = 1
<operator>.addition i + 1
<operator>.assignment _1_romanToInt_next = 38
BLOCK <empty> <empty>
<operator>.cast (int )*(s + (i + 1))
<operator>.assignment _1_romanToInt_next = 37
BLOCK <empty> <empty>
<operator>.cast (int )*(s + (i + 1))
<operator>.assignment _1_romanToInt_next = 34
BLOCK <empty> <empty>
<operator>.addition i + 1
<operator>.assignment _1_romanToInt_next = 26
BLOCK <empty> <empty>
<operator>.cast (int )*(s + (i + 1))
<operator>.assignment _1_romanToInt_next = 25
BLOCK <empty> <empty>
<operator>.cast (int )*(s + (i + 1))
<operator>.assignment _1_romanToInt_next = 22
BLOCK <empty> <empty>
<operator>.addition i + 1
<operator>.assignment _1_romanToInt_next = 14
BLOCK <empty> <empty>
<operator>.cast (int )*(s + (i + 1))
<operator>.assignment _1_romanToInt_next = 13
BLOCK <empty> <empty>
<operator>.cast (int )*(s + (i + 1))
<operator>.assignment _1_romanToInt_next = 10
BLOCK <empty> <empty>
<operator>.assignment _1_romanToInt_next = 0
<operator>.addition s + i
<operator>.assignment _1_romanToInt_next = 32
<operator>.assignment _1_romanToInt_next = 35
<operator>.assignment _1_romanToInt_next = 32
<operator>.assignment _1_romanToInt_next = 20
<operator>.assignment _1_romanToInt_next = 23
<operator>.assignment _1_romanToInt_next = 20
<operator>.assignment _1_romanToInt_next = 8
<operator>.assignment _1_romanToInt_next = 11
<operator>.assignment _1_romanToInt_next = 8
<operator>.addition s + (i + 1)
<operator>.addition s + (i + 1)
<operator>.addition s + (i + 1)
<operator>.addition s + (i + 1)
<operator>.addition s + (i + 1)
<operator>.addition s + (i + 1)
<operator>.addition i + 1
<operator>.addition i + 1
<operator>.addition i + 1
<operator>.addition i + 1
<operator>.addition i + 1
<operator>.addition i + 1
>>>PDG&199 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->14 0->15 0->16 0->17 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->55 0->56 0->57 0->58 0->59 0->60 0->61 0->62 0->63 0->64 0->65 0->66 0->67 0->68 0->69 0->70 0->71 0->72 0->73 0->74 0->75 0->76 0->77 0->79 0->80 0->81 0->83 0->84 0->85 0->86 0->87 0->88 0->89 0->90 0->91 0->92 0->93 0->94 0->95 0->96 0->97 0->98 0->99 0->100 0->101 0->102 0->103 0->104 0->105 0->106 0->107 0->108 0->109 0->110 0->111 0->112 0->113 0->114 0->115 0->116 0->117 0->118 0->119 0->120 0->121 0->122 0->123 0->124 0->125 0->126 0->127 0->128 0->129 0->130 0->131 0->132 0->133 0->134 0->135 0->136 0->137 0->138 0->139 0->140 0->141 0->142 0->143 0->144 0->145 0->146 0->147 0->148 0->149 0->150 0->151 0->153 0->154 0->156 0->157 0->158 0->159 0->160 0->162 0->163 0->165 0->166 0->167 0->168 0->169 0->171 0->172 0->174 0->175 0->176 0->177 0->178 0->179 0->180 0->181 0->182 0->183 0->184 0->185 0->186 0->187 0->188 0->189 0->190 0->191 0->192 0->193 0->194 0->195 0->196 0->197 0->198 2->1 2->110 2->127 2->131 2->135 2->177 2->187 2->188 2->189 2->190 2->191 2->192 5->1 5->1 9->1 9->1 9->23 9->27 9->30 9->33 9->41 9->45 9->48 9->51 9->59 9->63 9->66 9->69 9->72 9->109 10->1 10->1 10->75 10->81 10->84 10->92 10->100 10->149 10->158 10->167 10->177 10->187 10->188 10->189 10->190 10->191 10->192 10->193 10->194 10->195 10->196 10->197 10->198 13->1 13->1 13->1 13->81 18->1 18->1 18->1 18->84 23->1 23->1 23->27 23->30 23->33 23->41 23->45 23->48 23->51 23->59 23->63 23->66 23->69 23->72 23->109 27->1 27->1 27->23 27->30 27->33 27->41 27->45 27->48 27->51 27->59 27->63 27->66 27->69 27->72 27->109 30->1 30->1 30->23 30->27 30->33 30->41 30->45 30->48 30->51 30->59 30->63 30->66 30->69 30->72 30->109 33->1 33->1 33->23 33->27 33->30 33->41 33->45 33->48 33->51 33->59 33->63 33->66 33->69 33->72 33->109 36->1 36->1 36->1 36->92 41->1 41->1 41->23 41->27 41->30 41->33 41->45 41->48 41->51 41->59 41->63 41->66 41->69 41->72 41->109 45->1 45->1 45->23 45->27 45->30 45->33 45->41 45->48 45->51 45->59 45->63 45->66 45->69 45->72 45->109 48->1 48->1 48->23 48->27 48->30 48->33 48->41 48->45 48->51 48->59 48->63 48->66 48->69 48->72 48->109 51->1 51->1 51->23 51->27 51->30 51->33 51->41 51->45 51->48 51->59 51->63 51->66 51->69 51->72 51->109 54->1 54->1 54->1 54->100 59->1 59->1 59->23 59->27 59->30 59->33 59->41 59->45 59->48 59->51 59->63 59->66 59->69 59->72 59->109 63->1 63->1 63->23 63->27 63->30 63->33 63->41 63->45 63->48 63->51 63->59 63->66 63->69 63->72 63->109 66->1 66->1 66->23 66->27 66->30 66->33 66->41 66->45 66->48 66->51 66->59 66->63 66->69 66->72 66->109 69->1 69->1 69->23 69->27 69->30 69->33 69->41 69->45 69->48 69->51 69->59 69->63 69->66 69->72 69->109 72->1 72->1 72->23 72->27 72->30 72->33 72->41 72->45 72->48 72->51 72->59 72->63 72->66 72->69 72->109 75->1 75->1 75->81 75->84 75->92 75->100 75->149 75->158 75->167 75->177 75->187 75->188 75->189 75->190 75->191 75->192 75->193 75->194 75->195 75->196 75->197 75->198 78->1 79->1 79->1 80->1 80->1 81->1 81->1 81->1 81->75 81->84 81->92 81->100 81->139 81->149 81->158 81->167 81->176 81->177 81->187 81->188 81->189 81->190 81->191 81->192 81->193 81->194 81->195 81->196 81->197 81->198 82->1 82->1 82->141 82->142 82->143 82->144 82->145 82->146 82->147 82->148 83->1 83->1 84->1 84->1 84->1 84->150 84->178 85->1 85->1 85->153 85->179 86->1 86->1 87->1 87->1 87->156 87->180 88->1 88->1 89->1 89->1 90->1 90->1 91->1 91->1 92->1 92->1 92->1 92->159 92->181 93->1 93->1 93->162 93->182 94->1 94->1 95->1 95->1 95->165 95->183 96->1 96->1 97->1 97->1 98->1 98->1 99->1 99->1 100->1 100->1 100->1 100->168 100->184 101->1 101->1 101->171 101->185 102->1 102->1 103->1 103->1 103->174 103->186 104->1 104->1 105->1 105->1 106->1 106->1 107->1 107->1 108->1 108->1 109->78 110->1 110->13 110->127 110->131 110->135 110->177 110->187 110->188 110->189 110->190 110->191 110->192 127->1 127->18 127->110 127->131 127->135 127->177 127->187 127->188 127->189 127->190 127->191 127->192 131->1 131->36 131->110 131->127 131->135 131->177 131->187 131->188 131->189 131->190 131->191 131->192 135->1 135->54 135->110 135->127 135->131 135->177 135->187 135->188 135->189 135->190 135->191 135->192 139->1 139->1 141->1 141->1 142->1 142->1 143->1 143->1 144->1 144->1 145->1 145->1 146->1 146->1 147->1 147->1 148->1 148->1 149->1 150->1 150->1 152->1 153->1 153->1 155->1 156->1 156->1 158->1 159->1 159->1 161->1 162->1 162->1 164->1 165->1 165->1 167->1 168->1 168->1 170->1 171->1 171->1 173->1 174->1 174->1 176->1 176->1 177->1 177->1 178->1 178->1 179->1 179->1 180->1 180->1 181->1 181->1 182->1 182->1 183->1 183->1 184->1 184->1 185->1 185->1 186->1 186->1 187->1 187->1 188->1 188->1 189->1 189->1 190->1 190->1 191->1 191->1 192->1 192->1 193->1 194->1 195->1 196->1 197->1 198->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; int romanToInt ( char * s ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern int ( /* missing proto */ strlen ) ( ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern double log ( double x ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } int romanToInt ( char * s ) { int romanToInt___0 ; int i ; int tmp ; int tmp___0 ; int tmp___1 ; int tmp___2 ; unsigned long _1_romanToInt_next ; { { _1_romanToInt_next = 46 ; } while ( 1 ) { switch ( _1_romanToInt_next ) { case 46 : romanToInt___0 = 0 ; i = 0 ; { _1_romanToInt_next = 44 ; } break ; case 44 : tmp___2 = strlen ( s ) ; { _1_romanToInt_next = 43 ; } break ; case 43 : ; if ( i < tmp___2 ) { { _1_romanToInt_next = 41 ; } } else { { _1_romanToInt_next = 0 ; } } break ; case 41 : ; switch ( ( int ) * ( s + i ) ) { case 73 : { _1_romanToInt_next = 40 ; } break ; case 86 : { _1_romanToInt_next = 30 ; } break ; case 88 : { _1_romanToInt_next = 28 ; } break ; case 76 : { _1_romanToInt_next = 18 ; } break ; case 67 : { _1_romanToInt_next = 16 ; } break ; case 68 : { _1_romanToInt_next = 6 ; } break ; case 77 : { _1_romanToInt_next = 4 ; } break ; default : { _1_romanToInt_next = 1 ; } break ; } break ; case 40 : tmp = strlen ( s ) ; { _1_romanToInt_next = 39 ; } break ; case 39 : ; if ( i + 1 < tmp ) { { _1_romanToInt_next = 38 ; } } else { { _1_romanToInt_next = 32 ; } } break ; case 38 : ; if ( ( int ) * ( s + ( i + 1 ) ) == 86 ) { { _1_romanToInt_next = 37 ; } } else { { _1_romanToInt_next = 35 ; } } break ; case 37 : romanToInt___0 -- ; { _1_romanToInt_next = 1 ; } break ; case 35 : ; if ( ( int ) * ( s + ( i + 1 ) ) == 88 ) { { _1_romanToInt_next = 34 ; } } else { { _1_romanToInt_next = 32 ; } } break ; case 34 : romanToInt___0 -- ; { _1_romanToInt_next = 1 ; } break ; case 32 : romanToInt___0 ++ ; { _1_romanToInt_next = 1 ; } break ; case 30 : romanToInt___0 += 5 ; { _1_romanToInt_next = 1 ; } break ; case 28 : tmp___0 = strlen ( s ) ; { _1_romanToInt_next = 27 ; } break ; case 27 : ; if ( i + 1 < tmp___0 ) { { _1_romanToInt_next = 26 ; } } else { { _1_romanToInt_next = 20 ; } } break ; case 26 : ; if ( ( int ) * ( s + ( i + 1 ) ) == 76 ) { { _1_romanToInt_next = 25 ; } } else { { _1_romanToInt_next = 23 ; } } break ; case 25 : romanToInt___0 -= 10 ; { _1_romanToInt_next = 1 ; } break ; case 23 : ; if ( ( int ) * ( s + ( i + 1 ) ) == 67 ) { { _1_romanToInt_next = 22 ; } } else { { _1_romanToInt_next = 20 ; } } break ; case 22 : romanToInt___0 -= 10 ; { _1_romanToInt_next = 1 ; } break ; case 20 : romanToInt___0 += 10 ; { _1_romanToInt_next = 1 ; } break ; case 18 : romanToInt___0 += 50 ; { _1_romanToInt_next = 1 ; } break ; case 16 : tmp___1 = strlen ( s ) ; { _1_romanToInt_next = 15 ; } break ; case 15 : ; if ( i + 1 < tmp___1 ) { { _1_romanToInt_next = 14 ; } } else { { _1_romanToInt_next = 8 ; } } break ; case 14 : ; if ( ( int ) * ( s + ( i + 1 ) ) == 68 ) { { _1_romanToInt_next = 13 ; } } else { { _1_romanToInt_next = 11 ; } } break ; case 13 : romanToInt___0 -= 100 ; { _1_romanToInt_next = 1 ; } break ; case 11 : ; if ( ( int ) * ( s + ( i + 1 ) ) == 77 ) { { _1_romanToInt_next = 10 ; } } else { { _1_romanToInt_next = 8 ; } } break ; case 10 : romanToInt___0 -= 100 ; { _1_romanToInt_next = 1 ; } break ; case 8 : romanToInt___0 += 100 ; { _1_romanToInt_next = 1 ; } break ; case 6 : romanToInt___0 += 500 ; { _1_romanToInt_next = 1 ; } break ; case 4 : romanToInt___0 += 1000 ; { _1_romanToInt_next = 1 ; } break ; case 1 : i ++ ; { _1_romanToInt_next = 44 ; } break ; case 0 : ; return ( romanToInt___0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD test_adler32
METHOD_RETURN void
PARAM void
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_test_adler32_next = 1
LITERAL 1 while (1)
IDENTIFIER _1_test_adler32_next switch(_1_test_adler32_next)
LITERAL 1 <empty>
<operator>.assignment tmp = adler32("Hello World")
assert assert(tmp == 403375133)
<operator>.assignment tmp___0 = adler32("Hello World!")
assert assert(tmp___0 == 474547262)
<operator>.assignment tmp___1 = adler32("Hello world")
assert assert(tmp___1 == 413860925)
<operator>.assignment tmp___2 = adler32("Hello world!")
assert assert(tmp___2 == 487130206)
printf printf("Tests passed\n")
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return; return;
<operator>.assignment _1_test_adler32_next = 0
adler32 adler32("Hello World")
<operator>.equals tmp == 403375133
adler32 adler32("Hello World!")
<operator>.equals tmp___0 == 474547262
adler32 adler32("Hello world")
<operator>.equals tmp___1 == 413860925
adler32 adler32("Hello world!")
<operator>.equals tmp___2 == 487130206
>>>PDG&30 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 2->1 5->1 5->1 9->1 9->1 9->23 10->1 10->1 11->1 11->1 11->25 12->1 12->1 13->1 13->1 13->27 14->1 14->1 15->1 15->1 15->29 16->1 16->1 17->1 20->1 21->1 21->1 22->9 23->1 23->10 23->10 24->11 25->1 25->12 25->12 26->13 27->1 27->14 27->14 28->15 29->1 29->16 29->16
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int ( /* missing proto */ assert ) ( ) ; extern int raise ( int sig ) ; void test_adler32 ( void ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern int ( /* missing proto */ adler32 ) ( ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void test_adler32 ( void ) { int tmp ; int tmp___0 ; int tmp___1 ; int tmp___2 ; unsigned long _1_test_adler32_next ; { { _1_test_adler32_next = 1 ; } while ( 1 ) { switch ( _1_test_adler32_next ) { case 1 : tmp = adler32 ( " " ) ; assert ( tmp == 403375133 ) ; tmp___0 = adler32 ( " " ) ; assert ( tmp___0 == 474547262 ) ; tmp___1 = adler32 ( " " ) ; assert ( tmp___1 == 413860925 ) ; tmp___2 = adler32 ( " " ) ; assert ( tmp___2 == 487130206 ) ; printf ( " \n " ) ; { _1_test_adler32_next = 0 ; } break ; case 0 : ; return ; break ; } } } } void megaInit ( void ) { { } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 11
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 11 <empty>
<operator>.assignment sum = 0
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 9 <empty>
LITERAL 7 <empty>
<operator>.assignmentPlus sum += i
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 6 <empty>
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
<operator>.assignmentPlus sum += i
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("Sum is: %d\n", sum)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 9
<operator>.lessThan i < (int )*(*(argv + 1) + 0)
<operator>.assignment _1_main_next = 9
<operator>.assignment _1_main_next = 4
<operator>.lessThan i < (int )*(*(argv + 1) + 0)
<operator>.assignment _1_main_next = 4
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.cast (int )*(*(argv + 1) + 0)
<operator>.assignment _1_main_next = 7
BLOCK <empty> <empty>
<operator>.cast (int )*(*(argv + 1) + 0)
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 6
<operator>.assignment _1_main_next = 1
<operator>.addition *(argv + 1) + 0
<operator>.addition *(argv + 1) + 0
<operator>.addition argv + 1
<operator>.addition argv + 1
>>>PDG&59 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->48 0->49 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 2->7 3->8 3->57 3->58 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->21 16->29 16->33 17->1 17->1 17->21 17->22 17->29 17->30 17->38 17->41 21->1 21->1 21->29 21->33 22->1 22->1 22->21 22->29 22->30 22->38 22->41 25->1 25->1 25->21 25->22 25->29 25->30 25->38 25->41 29->1 29->1 29->21 29->33 30->1 30->1 30->21 30->22 30->29 30->38 30->41 33->1 33->1 33->21 33->29 36->1 37->1 37->1 38->1 38->1 38->1 38->21 38->22 38->29 38->30 38->41 38->48 38->53 39->1 39->1 40->1 40->1 41->1 41->1 41->1 41->21 41->22 41->29 41->30 41->38 41->51 41->54 42->1 42->1 43->1 43->1 44->36 47->1 48->1 48->1 50->1 51->1 51->1 53->1 53->1 54->1 54->1 55->1 56->1 57->1 58->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int argc , char * * argv , char * * _formal_envp ) { int i ; int sum ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 11 ; } while ( 1 ) { switch ( _1_main_next ) { case 11 : sum = 0 ; i = 0 ; { _1_main_next = 9 ; } break ; case 9 : ; if ( i < ( int ) * ( * ( argv + 1 ) + 0 ) ) { { _1_main_next = 7 ; } } else { { _1_main_next = 6 ; } } break ; case 7 : sum += i ; i ++ ; { _1_main_next = 9 ; } break ; case 6 : i = 0 ; { _1_main_next = 4 ; } break ; case 4 : ; if ( i < ( int ) * ( * ( argv + 1 ) + 0 ) ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : sum += i ; i ++ ; { _1_main_next = 4 ; } break ; case 1 : printf ( " \n " , sum ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD numJewelsInStones
METHOD_RETURN int
PARAM char *j
PARAM char *s
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_numJewelsInStones_next = 10
LITERAL 1 while (1)
IDENTIFIER _1_numJewelsInStones_next switch(_1_numJewelsInStones_next)
LITERAL 10 <empty>
<operator>.assignment tmp = strlen(s)
<operator>.assignment lens = tmp
<operator>.assignment tmp___0 = strlen(j)
<operator>.assignment lenj = tmp___0
<operator>.assignment sol = 0
memset memset(cnt  0  sizeof(cnt))
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 8 <empty>
LITERAL 6 <empty>
<operator>.postIncrement (cnt[*(j + i)]) ++
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 5 <empty>
<operator>.assignment i___0 = 0
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 1 <empty>
<operator>.assignmentPlus sol += cnt[*(s + i___0)]
<operator>.postIncrement i___0 ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (sol); return (sol);
<operator>.assignment _1_numJewelsInStones_next = 8
<operator>.lessThan i < lenj
<operator>.assignment _1_numJewelsInStones_next = 8
<operator>.assignment _1_numJewelsInStones_next = 3
<operator>.lessThan i___0 < lens
<operator>.assignment _1_numJewelsInStones_next = 3
IDENTIFIER sol return (sol);
strlen strlen(s)
strlen strlen(j)
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_numJewelsInStones_next = 6
BLOCK <empty> <empty>
<operator>.assignment _1_numJewelsInStones_next = 1
BLOCK <empty> <empty>
<operator>.assignment _1_numJewelsInStones_next = 5
<operator>.addition j + i
<operator>.assignment _1_numJewelsInStones_next = 0
<operator>.addition s + i___0
>>>PDG&52 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->11 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 2->1 2->41 2->49 3->1 3->40 3->51 6->1 6->1 10->1 10->1 10->11 11->1 11->1 11->1 11->37 12->1 12->1 12->13 13->1 13->1 13->1 13->34 14->1 14->1 14->28 14->39 15->1 15->1 15->20 15->28 16->1 16->1 16->21 16->34 16->49 20->1 20->1 20->15 21->1 21->1 21->34 21->49 24->1 24->1 24->29 24->37 24->51 28->1 28->1 28->1 28->39 29->1 29->1 29->37 29->51 32->1 33->1 33->1 34->1 34->1 34->1 34->21 34->44 34->48 34->49 35->1 35->1 36->1 36->1 37->1 37->1 37->1 37->29 37->46 37->50 37->51 38->1 38->1 39->32 40->1 40->10 40->51 41->1 41->12 41->49 44->1 44->1 46->1 46->1 48->1 48->1 49->1 50->1 50->1 51->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern int ( /* missing proto */ strlen ) ( ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int printf ( char const * format , ... ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; int numJewelsInStones ( char * j , char * s ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ memset ) ( ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } } int numJewelsInStones ( char * j , char * s ) { int cnt [ 500 ] ; int lens ; int tmp ; int lenj ; int tmp___0 ; int sol ; int i ; int i___0 ; unsigned long _1_numJewelsInStones_next ; { { _1_numJewelsInStones_next = 10 ; } while ( 1 ) { switch ( _1_numJewelsInStones_next ) { case 10 : tmp = strlen ( s ) ; lens = tmp ; tmp___0 = strlen ( j ) ; lenj = tmp___0 ; sol = 0 ; memset ( cnt , 0 , sizeof ( cnt ) ) ; i = 0 ; { _1_numJewelsInStones_next = 8 ; } break ; case 8 : ; if ( i < lenj ) { { _1_numJewelsInStones_next = 6 ; } } else { { _1_numJewelsInStones_next = 5 ; } } break ; case 6 : ( cnt [ * ( j + i ) ] ) ++ ; i ++ ; { _1_numJewelsInStones_next = 8 ; } break ; case 5 : i___0 = 0 ; { _1_numJewelsInStones_next = 3 ; } break ; case 3 : ; if ( i___0 < lens ) { { _1_numJewelsInStones_next = 1 ; } } else { { _1_numJewelsInStones_next = 0 ; } } break ; case 1 : sol += cnt [ * ( s + i___0 ) ] ; i___0 ++ ; { _1_numJewelsInStones_next = 3 ; } break ; case 0 : ; return ( sol ) ; break ; } } } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 11
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 11 <empty>
<operator>.assignment sum = 0
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 9 <empty>
LITERAL 7 <empty>
<operator>.assignment j = 1
BLOCK <empty> <empty>
LITERAL 5 <empty>
LITERAL 3 <empty>
<operator>.assignmentPlus sum += j
<operator>.postIncrement j ++
BLOCK <empty> <empty>
LITERAL 2 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("Sum is: %d\n", sum)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 9
<operator>.lessThan i < argc
<operator>.assignment _1_main_next = 5
<operator>.lessEqualsThan j <= argc
<operator>.assignment _1_main_next = 5
<operator>.assignment _1_main_next = 9
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 7
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 3
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
<operator>.assignment _1_main_next = 2
>>>PDG&52 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 2->7 2->37 2->39 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->25 16->32 17->1 17->1 17->29 17->37 21->1 21->1 21->25 21->26 21->39 25->1 25->1 25->32 26->1 26->1 26->25 26->39 29->1 29->1 29->37 32->1 32->1 32->25 35->1 36->1 36->1 37->1 37->1 37->1 37->29 37->39 37->46 37->50 38->1 38->1 39->1 39->1 39->1 39->25 39->26 39->37 39->48 39->51 40->1 40->1 41->1 41->1 42->1 42->1 43->35 46->1 46->1 48->1 48->1 50->1 50->1 51->1 51->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int argc , char * * argv , char * * _formal_envp ) { int i ; int j ; int sum ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 11 ; } while ( 1 ) { switch ( _1_main_next ) { case 11 : sum = 0 ; i = 0 ; { _1_main_next = 9 ; } break ; case 9 : ; if ( i < argc ) { { _1_main_next = 7 ; } } else { { _1_main_next = 1 ; } } break ; case 7 : j = 1 ; { _1_main_next = 5 ; } break ; case 5 : ; if ( j <= argc ) { { _1_main_next = 3 ; } } else { { _1_main_next = 2 ; } } break ; case 3 : sum += j ; j ++ ; { _1_main_next = 5 ; } break ; case 2 : i ++ ; { _1_main_next = 9 ; } break ; case 1 : printf ( " \n " , sum ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD fib
METHOD_RETURN int
PARAM int n
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_fib_next = 5
LITERAL 1 while (1)
IDENTIFIER _1_fib_next switch(_1_fib_next)
LITERAL 5 <empty>
<operator>.assignment a = 1
<operator>.assignment b = 1
<operator>.assignment i = 3
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 1 <empty>
<operator>.assignment c = a + b
<operator>.assignment a = b
<operator>.assignment b = c
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (b); return (b);
<operator>.assignment _1_fib_next = 3
<operator>.lessEqualsThan i <= n
<operator>.assignment _1_fib_next = 3
IDENTIFIER b return (b);
BLOCK <empty> <empty>
<operator>.addition a + b
<operator>.assignment _1_fib_next = 1
BLOCK <empty> <empty>
<operator>.assignment _1_fib_next = 0
>>>PDG&31 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 2->1 2->23 5->1 5->1 9->1 9->1 9->15 9->27 10->1 10->1 10->15 10->16 10->25 10->27 11->1 11->1 11->18 11->23 15->1 15->1 15->17 16->1 16->1 16->15 16->27 17->1 17->1 17->1 17->15 17->16 17->25 17->27 18->1 18->1 18->23 21->1 22->1 22->1 23->1 23->1 23->1 23->18 23->28 23->30 24->1 24->1 25->21 28->1 28->1 30->1 30->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; int fib ( int n ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } int fib ( int n ) { int a ; int b ; int i ; int c ; unsigned long _1_fib_next ; { { _1_fib_next = 5 ; } while ( 1 ) { switch ( _1_fib_next ) { case 5 : a = 1 ; b = 1 ; i = 3 ; { _1_fib_next = 3 ; } break ; case 3 : ; if ( i <= n ) { { _1_fib_next = 1 ; } } else { { _1_fib_next = 0 ; } } break ; case 1 : c = a + b ; a = b ; b = c ; i ++ ; { _1_fib_next = 3 ; } break ; case 0 : ; return ( b ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 6
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 6 <empty>
<operator>.assignment c = (unsigned char )*(*(argv + 1) + 0)
BLOCK <empty> <empty>
LITERAL 5 <empty>
LITERAL 4 <empty>
LITERAL 3 <empty>
printf printf("win\n")
BLOCK <empty> <empty>
LITERAL 2 <empty>
printf printf("lose\n")
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("Usage: program-name character\n")
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 5
<operator>.greaterThan argc > 1
<operator>.greaterThan (int )c > 127
<operator>.assignment _1_main_next = 0
<operator>.assignment _1_main_next = 0
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
<operator>.cast (unsigned char )*(*(argv + 1) + 0)
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 4
BLOCK <empty> <empty>
<operator>.cast (int )c
<operator>.assignment _1_main_next = 3
BLOCK <empty> <empty>
<operator>.addition *(argv + 1) + 0
<operator>.assignment _1_main_next = 1
<operator>.assignment _1_main_next = 2
<operator>.addition argv + 1
>>>PDG&50 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 2->7 2->32 3->8 3->49 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->1 16->33 16->43 21->1 24->1 27->1 30->1 31->1 31->1 32->1 32->1 32->41 32->47 33->1 33->1 33->44 33->48 34->1 34->1 35->1 35->1 36->1 36->1 37->30 38->1 41->1 41->1 43->1 44->1 44->1 46->1 47->1 47->1 48->1 48->1 49->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int argc , char * * argv , char * * _formal_envp ) { unsigned char c ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 6 ; } while ( 1 ) { switch ( _1_main_next ) { case 6 : c = ( unsigned char ) * ( * ( argv + 1 ) + 0 ) ; { _1_main_next = 5 ; } break ; case 5 : ; if ( argc > 1 ) { { _1_main_next = 4 ; } } else { { _1_main_next = 1 ; } } break ; case 4 : ; if ( ( int ) c > 127 ) { { _1_main_next = 3 ; } } else { { _1_main_next = 2 ; } } break ; case 3 : printf ( " \n " ) ; { _1_main_next = 0 ; } break ; case 2 : printf ( " \n " ) ; { _1_main_next = 0 ; } break ; case 1 : printf ( " \n " ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD increment
METHOD_RETURN void
PARAM char *str
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_increment_next = 11
LITERAL 1 while (1)
IDENTIFIER _1_increment_next switch(_1_increment_next)
LITERAL 11 <empty>
<operator>.assignment i = 0
<operator>.assignment tmp = strlen(str)
<operator>.assignment len = tmp
BLOCK <empty> <empty>
LITERAL 10 <empty>
LITERAL 9 <empty>
<operator>.assignment *(str + i) = (char )((int )*(str + i) + 1)
BLOCK <empty> <empty>
LITERAL 7 <empty>
LITERAL 5 <empty>
<operator>.assignment *(str + i) = (char )'0'
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 3 <empty>
<operator>.assignment *(str + i) = (char )'1'
<operator>.assignment *(str + (i + 1)) = (char )'\000'
BLOCK <empty> <empty>
LITERAL 2 <empty>
RETURN return; return;
LITERAL 1 <empty>
<operator>.assignment *(str + i) = (char )((int )*(str + i) + 1)
<operator>.postIncrement i ++
<operator>.assignment *(str + len) = (char )'\000'
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return; return;
<operator>.assignment _1_increment_next = 10
<operator>.notEquals (int )*(str + i) != 57
<operator>.assignment _1_increment_next = 0
<operator>.equals (int )*(str + i) == 57
<operator>.assignment _1_increment_next = 4
<operator>.equals (int )*(str + i) == 0
<operator>.assignment _1_increment_next = 2
<operator>.assignment _1_increment_next = 0
strlen strlen(str)
BLOCK <empty> <empty>
<operator>.cast (char )((int )*(str + i) + 1)
BLOCK <empty> <empty>
<operator>.cast (char )'0'
BLOCK <empty> <empty>
<operator>.cast (char )'1'
<operator>.cast (char )'\000'
<operator>.cast (char )((int )*(str + i) + 1)
<operator>.cast (char )'\000'
<operator>.cast (int )*(str + i)
<operator>.assignment _1_increment_next = 9
BLOCK <empty> <empty>
<operator>.addition str + i
<operator>.addition (int )*(str + i) + 1
<operator>.cast (int )*(str + i)
<operator>.assignment _1_increment_next = 5
BLOCK <empty> <empty>
<operator>.addition str + i
<operator>.cast (int )*(str + i)
<operator>.assignment _1_increment_next = 3
BLOCK <empty> <empty>
<operator>.addition str + i
<operator>.addition str + (i + 1)
<operator>.addition str + i
<operator>.addition (int )*(str + i) + 1
<operator>.addition str + len
<operator>.assignment _1_increment_next = 7
<operator>.assignment _1_increment_next = 1
<operator>.assignment _1_increment_next = 7
<operator>.addition i + 1
<operator>.addition str + i
<operator>.addition str + i
<operator>.addition str + i
<operator>.addition str + i
<operator>.addition str + i
>>>PDG&80 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->55 0->56 0->57 0->58 0->60 0->61 0->62 0->64 0->65 0->66 0->67 0->68 0->69 0->70 0->71 0->72 0->73 0->74 0->75 0->76 0->77 0->78 0->79 2->1 2->44 2->57 2->62 2->66 2->67 2->68 2->70 2->75 2->76 2->77 2->78 2->79 5->1 5->1 9->1 9->1 9->20 9->31 9->57 9->62 9->66 9->67 9->68 9->74 9->75 9->76 9->77 9->78 9->79 10->1 10->1 10->11 11->1 11->1 11->1 11->70 15->1 15->1 15->1 19->1 19->1 19->1 20->1 20->1 20->31 20->57 20->62 20->66 20->67 20->68 20->74 20->75 20->76 20->77 20->78 20->79 24->1 24->1 24->1 25->1 25->1 25->1 28->1 30->1 30->1 30->1 31->1 31->1 31->20 31->57 31->62 31->66 31->67 31->68 31->74 31->75 31->76 31->77 31->78 31->79 32->1 32->1 32->1 35->1 36->1 36->1 37->1 37->1 37->55 37->71 38->1 38->1 39->1 39->1 39->60 39->72 40->1 40->1 41->1 41->1 41->64 41->73 42->1 42->1 43->1 43->1 44->1 44->10 44->57 44->62 44->66 44->67 44->68 44->70 44->75 44->76 44->77 44->78 44->79 46->1 52->1 54->1 55->1 55->1 58->1 59->1 60->1 60->1 62->1 63->1 64->1 64->1 67->1 67->1 69->1 70->1 70->1 71->1 71->1 72->1 72->1 73->1 73->1 74->1 75->1 75->1 76->1 76->1 77->1 77->1 78->1 78->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern int ( /* missing proto */ strlen ) ( ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int printf ( char const * format , ... ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; void increment ( char * str ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } void increment ( char * str ) { int i ; int len ; int tmp ; unsigned long _1_increment_next ; { { _1_increment_next = 11 ; } while ( 1 ) { switch ( _1_increment_next ) { case 11 : i = 0 ; tmp = strlen ( str ) ; len = tmp ; { _1_increment_next = 10 ; } break ; case 10 : ; if ( ( int ) * ( str + i ) != 57 ) { { _1_increment_next = 9 ; } } else { { _1_increment_next = 7 ; } } break ; case 9 : * ( str + i ) = ( char ) ( ( int ) * ( str + i ) + 1 ) ; { _1_increment_next = 0 ; } break ; case 7 : ; if ( ( int ) * ( str + i ) == 57 ) { { _1_increment_next = 5 ; } } else { { _1_increment_next = 1 ; } } break ; case 5 : * ( str + i ) = ( char ) ' ' ; i ++ ; { _1_increment_next = 4 ; } break ; case 4 : ; if ( ( int ) * ( str + i ) == 0 ) { { _1_increment_next = 3 ; } } else { { _1_increment_next = 7 ; } } break ; case 3 : * ( str + i ) = ( char ) ' ' ; * ( str + ( i + 1 ) ) = ( char ) ' \000 ' ; { _1_increment_next = 2 ; } break ; case 2 : ; return ; break ; case 1 : * ( str + i ) = ( char ) ( ( int ) * ( str + i ) + 1 ) ; i ++ ; * ( str + len ) = ( char ) ' \000 ' ; { _1_increment_next = 0 ; } break ; case 0 : ; return ; break ; } } } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 8
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 8 <empty>
<operator>.assignment x = 153
<operator>.assignment tmp = isArmstrong(x)
BLOCK <empty> <empty>
LITERAL 7 <empty>
LITERAL 6 <empty>
printf printf("True\n")
BLOCK <empty> <empty>
LITERAL 5 <empty>
printf printf("False\n")
BLOCK <empty> <empty>
LITERAL 4 <empty>
<operator>.assignment x = 1253
<operator>.assignment tmp___0 = isArmstrong(x)
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 2 <empty>
printf printf("True\n")
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("False\n")
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 7
<operator>.equals tmp == 1
<operator>.assignment _1_main_next = 4
<operator>.assignment _1_main_next = 4
<operator>.assignment _1_main_next = 3
<operator>.equals tmp___0 == 1
<operator>.assignment _1_main_next = 0
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
isArmstrong isArmstrong(x)
BLOCK <empty> <empty>
isArmstrong isArmstrong(x)
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 6
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 5
<operator>.assignment _1_main_next = 1
>>>PDG&58 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->48 17->1 17->1 17->1 17->40 21->1 24->1 27->1 27->50 28->1 28->1 28->1 28->44 32->1 35->1 38->1 39->1 39->1 40->1 40->1 40->52 40->56 41->1 41->1 42->1 42->1 43->1 43->1 44->1 44->1 44->54 44->57 45->1 45->1 46->1 46->1 47->38 48->1 48->17 50->1 50->28 52->1 52->1 54->1 54->1 56->1 56->1 57->1 57->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern double ceil ( double x ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ isArmstrong ) ( ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { int x ; int tmp ; int tmp___0 ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 8 ; } while ( 1 ) { switch ( _1_main_next ) { case 8 : x = 153 ; tmp = isArmstrong ( x ) ; { _1_main_next = 7 ; } break ; case 7 : ; if ( tmp == 1 ) { { _1_main_next = 6 ; } } else { { _1_main_next = 5 ; } } break ; case 6 : printf ( " \n " ) ; { _1_main_next = 4 ; } break ; case 5 : printf ( " \n " ) ; { _1_main_next = 4 ; } break ; case 4 : x = 1253 ; tmp___0 = isArmstrong ( x ) ; { _1_main_next = 3 ; } break ; case 3 : ; if ( tmp___0 == 1 ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : printf ( " \n " ) ; { _1_main_next = 0 ; } break ; case 1 : printf ( " \n " ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 7
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 7 <empty>
<operator>.assignment c = (unsigned char )*(*(argv + 1) + 0)
BLOCK <empty> <empty>
LITERAL 6 <empty>
LITERAL 5 <empty>
<operator>.assignment x = (unsigned char )((int )c / 3)
BLOCK <empty> <empty>
LITERAL 4 <empty>
<operator>.assignment x = (unsigned char )((int )c * 2)
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 2 <empty>
printf printf("if-2-win\n")
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("if-2-lose\n")
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 6
<operator>.greaterThan (int )c > 127
<operator>.assignment _1_main_next = 3
<operator>.assignment _1_main_next = 3
<operator>.equals (int )x == 63
<operator>.assignment _1_main_next = 0
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
<operator>.cast (unsigned char )*(*(argv + 1) + 0)
BLOCK <empty> <empty>
<operator>.cast (unsigned char )((int )c / 3)
<operator>.cast (unsigned char )((int )c * 2)
BLOCK <empty> <empty>
<operator>.cast (int )c
<operator>.assignment _1_main_next = 5
BLOCK <empty> <empty>
<operator>.division (int )c / 3
<operator>.multiplication (int )c * 2
<operator>.cast (int )x
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.addition *(argv + 1) + 0
<operator>.assignment _1_main_next = 4
<operator>.cast (int )c
<operator>.cast (int )c
<operator>.assignment _1_main_next = 1
<operator>.addition argv + 1
>>>PDG&61 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->17 0->18 0->19 0->21 0->22 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->43 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 0->59 0->60 2->7 3->8 3->60 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->1 16->35 16->47 16->50 16->51 16->57 16->58 20->1 20->1 20->1 20->38 20->52 23->1 23->1 23->1 23->38 23->52 27->1 30->1 33->1 34->1 34->1 35->1 35->1 35->48 35->56 36->1 36->1 37->1 37->1 38->1 38->1 38->53 38->59 39->1 39->1 40->1 40->1 41->33 42->1 44->1 45->1 47->1 48->1 48->1 50->1 50->20 50->20 50->44 50->44 51->1 51->23 51->23 51->45 51->45 52->1 53->1 53->1 55->1 56->1 56->1 57->1 58->1 59->1 59->1 60->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int argc , char * * argv , char * * _formal_envp ) { unsigned char x ; unsigned char c ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 7 ; } while ( 1 ) { switch ( _1_main_next ) { case 7 : c = ( unsigned char ) * ( * ( argv + 1 ) + 0 ) ; { _1_main_next = 6 ; } break ; case 6 : ; if ( ( int ) c > 127 ) { { _1_main_next = 5 ; } } else { { _1_main_next = 4 ; } } break ; case 5 : x = ( unsigned char ) ( ( int ) c / 3 ) ; { _1_main_next = 3 ; } break ; case 4 : x = ( unsigned char ) ( ( int ) c * 2 ) ; { _1_main_next = 3 ; } break ; case 3 : ; if ( ( int ) x == 63 ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : printf ( " \n " ) ; { _1_main_next = 0 ; } break ; case 1 : printf ( " \n " ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD firstUniqChar
METHOD_RETURN int
PARAM char *s
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_firstUniqChar_next = 14
LITERAL 1 while (1)
IDENTIFIER _1_firstUniqChar_next switch(_1_firstUniqChar_next)
LITERAL 14 <empty>
<operator>.assignment tmp = calloc(256  sizeof(int ))
<operator>.assignment arr = (int *)tmp
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 12 <empty>
<operator>.assignment tmp___0 = strlen(s)
BLOCK <empty> <empty>
LITERAL 11 <empty>
LITERAL 9 <empty>
<operator>.postIncrement (*(arr + *(s + i))) ++
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 8 <empty>
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 6 <empty>
<operator>.assignment tmp___1 = strlen(s)
BLOCK <empty> <empty>
LITERAL 5 <empty>
LITERAL 3 <empty>
LITERAL 2 <empty>
RETURN return (i); return (i);
LITERAL 1 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (-1); return (-1);
<operator>.assignment _1_firstUniqChar_next = 12
<operator>.assignment _1_firstUniqChar_next = 11
<operator>.lessThan i < tmp___0
<operator>.assignment _1_firstUniqChar_next = 12
<operator>.assignment _1_firstUniqChar_next = 6
<operator>.assignment _1_firstUniqChar_next = 5
<operator>.lessThan i < tmp___1
<operator>.equals *(arr + *(s + i)) == 1
IDENTIFIER i return (i);
<operator>.assignment _1_firstUniqChar_next = 6
<operator>.minus -1
calloc calloc(256  sizeof(int ))
<operator>.cast (int *)tmp
strlen strlen(s)
BLOCK <empty> <empty>
strlen strlen(s)
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.sizeOf sizeof(int )
<operator>.assignment _1_firstUniqChar_next = 9
BLOCK <empty> <empty>
<operator>.addition arr + *(s + i)
<operator>.assignment _1_firstUniqChar_next = 3
BLOCK <empty> <empty>
<operator>.assignment _1_firstUniqChar_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_firstUniqChar_next = 8
<operator>.assignment _1_firstUniqChar_next = 0
<operator>.addition arr + *(s + i)
<operator>.assignment _1_firstUniqChar_next = 1
<operator>.addition s + i
<operator>.addition s + i
>>>PDG&68 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->15 0->16 0->17 0->19 0->20 0->21 0->22 0->23 0->24 0->26 0->27 0->28 0->29 0->31 0->32 0->33 0->34 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->55 0->56 0->57 0->58 0->59 0->60 0->61 0->62 0->63 0->64 0->65 0->66 0->67 2->1 2->49 2->51 2->66 2->67 5->1 5->1 9->1 9->1 9->10 9->48 10->1 10->1 10->1 10->57 10->64 11->1 11->1 11->19 11->32 11->38 11->42 11->44 11->66 11->67 14->1 14->1 14->1 14->38 18->1 18->1 19->1 19->1 19->32 19->38 19->42 19->44 19->66 19->67 22->1 22->1 22->19 22->32 22->38 22->42 22->44 22->66 22->67 25->1 25->1 25->1 25->42 30->1 32->1 32->1 32->19 32->38 32->42 32->44 32->66 32->67 35->1 36->1 36->1 37->1 37->1 38->1 38->1 38->1 38->19 38->32 38->42 38->44 38->55 38->62 38->66 38->67 39->1 39->1 40->1 40->1 41->1 41->1 42->1 42->1 42->1 42->19 42->32 42->38 42->44 42->58 42->63 42->66 42->67 43->1 43->1 43->60 43->65 44->30 45->1 45->1 46->35 48->1 49->1 49->14 49->51 49->66 49->67 51->1 51->25 51->49 51->66 51->67 54->1 55->1 55->1 57->1 57->1 58->1 58->1 60->1 60->1 62->1 62->1 63->1 63->1 64->1 64->1 65->1 65->1 66->1 67->1 67->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int ( /* missing proto */ calloc ) ( ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern double ceil ( double x ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern int ( /* missing proto */ strlen ) ( ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; int firstUniqChar ( char * s ) ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } } int firstUniqChar ( char * s ) { int * arr ; int tmp ; int i ; int tmp___0 ; int tmp___1 ; unsigned long _1_firstUniqChar_next ; { { _1_firstUniqChar_next = 14 ; } while ( 1 ) { switch ( _1_firstUniqChar_next ) { case 14 : tmp = calloc ( 256 , sizeof ( int ) ) ; arr = ( int * ) tmp ; i = 0 ; { _1_firstUniqChar_next = 12 ; } break ; case 12 : tmp___0 = strlen ( s ) ; { _1_firstUniqChar_next = 11 ; } break ; case 11 : ; if ( i < tmp___0 ) { { _1_firstUniqChar_next = 9 ; } } else { { _1_firstUniqChar_next = 8 ; } } break ; case 9 : ( * ( arr + * ( s + i ) ) ) ++ ; i ++ ; { _1_firstUniqChar_next = 12 ; } break ; case 8 : i = 0 ; { _1_firstUniqChar_next = 6 ; } break ; case 6 : tmp___1 = strlen ( s ) ; { _1_firstUniqChar_next = 5 ; } break ; case 5 : ; if ( i < tmp___1 ) { { _1_firstUniqChar_next = 3 ; } } else { { _1_firstUniqChar_next = 0 ; } } break ; case 3 : ; if ( * ( arr + * ( s + i ) ) == 1 ) { { _1_firstUniqChar_next = 2 ; } } else { { _1_firstUniqChar_next = 1 ; } } break ; case 2 : ; return ( i ) ; break ; case 1 : i ++ ; { _1_firstUniqChar_next = 6 ; } break ; case 0 : ; return ( -1 ) ; break ; } } } }
>>>Func
METHOD baseconv
METHOD_RETURN int
PARAM int d
PARAM int b
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_baseconv_next = 17
LITERAL 1 while (1)
IDENTIFIER _1_baseconv_next switch(_1_baseconv_next)
LITERAL 17 <empty>
LITERAL 16 <empty>
RETURN return (d); return (d);
LITERAL 15 <empty>
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 13 <empty>
LITERAL 11 <empty>
<operator>.assignment invdigits[i] = d % b
<operator>.assignmentDivision d /= b
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 10 <empty>
<operator>.assignment len = i
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 8 <empty>
LITERAL 6 <empty>
<operator>.assignment digits[i] = invdigits[(len - i) - 1]
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 5 <empty>
<operator>.assignment ans = 0
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 1 <empty>
<operator>.assignmentMultiplication ans *= 10
<operator>.assignmentPlus ans += digits[i]
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (ans); return (ans);
<operator>.equals b == 10
IDENTIFIER d return (d);
<operator>.assignment _1_baseconv_next = 13
IDENTIFIER d if (d)
<operator>.assignment _1_baseconv_next = 13
<operator>.assignment _1_baseconv_next = 8
<operator>.lessThan i < len
<operator>.assignment _1_baseconv_next = 8
<operator>.assignment _1_baseconv_next = 3
<operator>.lessThan i < len
<operator>.assignment _1_baseconv_next = 3
IDENTIFIER ans return (ans);
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.modulo d % b
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_baseconv_next = 16
BLOCK <empty> <empty>
<operator>.assignment _1_baseconv_next = 11
BLOCK <empty> <empty>
<operator>.assignment _1_baseconv_next = 6
BLOCK <empty> <empty>
<operator>.subtraction (len - i) - 1
<operator>.assignment _1_baseconv_next = 1
BLOCK <empty> <empty>
<operator>.assignment _1_baseconv_next = 15
<operator>.assignment _1_baseconv_next = 10
<operator>.assignment _1_baseconv_next = 5
<operator>.subtraction len - i
<operator>.assignment _1_baseconv_next = 0
>>>PDG&73 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->12 0->13 0->14 0->15 0->16 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 0->59 0->60 0->61 0->62 0->63 0->64 0->65 0->66 0->67 0->68 0->69 0->70 0->71 0->72 2->1 2->43 2->56 3->1 3->42 3->56 6->1 6->1 11->1 13->1 13->1 13->19 13->22 13->38 13->48 13->51 13->71 17->1 17->1 17->1 18->1 18->1 18->1 18->43 18->56 19->1 19->1 19->22 19->38 19->48 19->51 19->71 22->1 22->1 22->48 22->51 22->71 23->1 23->1 23->19 23->22 23->38 23->48 23->51 23->71 27->1 27->1 27->1 27->37 28->1 28->1 28->19 28->22 28->38 28->48 28->51 28->71 31->1 31->1 31->36 31->53 32->1 32->1 32->19 32->22 32->38 32->48 32->51 32->71 36->1 36->37 37->1 37->1 37->1 37->36 37->53 38->1 38->1 38->19 38->22 38->48 38->51 38->71 41->1 42->1 42->1 42->56 42->59 42->68 43->11 44->1 44->1 46->1 46->1 47->1 47->1 48->1 48->1 48->1 48->19 48->22 48->38 48->51 48->51 48->63 48->70 48->71 48->71 49->1 49->1 50->1 50->1 51->1 51->1 51->1 51->19 51->22 51->38 51->48 51->48 51->66 51->71 51->71 51->72 52->1 52->1 53->41 56->17 56->17 56->18 56->18 56->42 59->1 59->1 61->1 61->1 63->1 63->1 65->1 66->1 66->1 68->1 68->1 69->1 69->1 70->1 70->1 71->1 71->28 71->48 71->51 71->65 71->65 72->1 72->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; int baseconv ( int d , int b ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } int baseconv ( int d , int b ) { int invdigits [ 20 ] ; int digits [ 20 ] ; int i ; int len ; int ans ; unsigned long _1_baseconv_next ; { { _1_baseconv_next = 17 ; } while ( 1 ) { switch ( _1_baseconv_next ) { case 17 : ; if ( b == 10 ) { { _1_baseconv_next = 16 ; } } else { { _1_baseconv_next = 15 ; } } break ; case 16 : ; return ( d ) ; break ; case 15 : i = 0 ; { _1_baseconv_next = 13 ; } break ; case 13 : ; if ( d ) { { _1_baseconv_next = 11 ; } } else { { _1_baseconv_next = 10 ; } } break ; case 11 : invdigits [ i ] = d % b ; d /= b ; i ++ ; { _1_baseconv_next = 13 ; } break ; case 10 : len = i ; i = 0 ; { _1_baseconv_next = 8 ; } break ; case 8 : ; if ( i < len ) { { _1_baseconv_next = 6 ; } } else { { _1_baseconv_next = 5 ; } } break ; case 6 : digits [ i ] = invdigits [ ( len - i ) - 1 ] ; i ++ ; { _1_baseconv_next = 8 ; } break ; case 5 : ans = 0 ; i = 0 ; { _1_baseconv_next = 3 ; } break ; case 3 : ; if ( i < len ) { { _1_baseconv_next = 1 ; } } else { { _1_baseconv_next = 0 ; } } break ; case 1 : ans *= 10 ; ans += digits [ i ] ; i ++ ; { _1_baseconv_next = 3 ; } break ; case 0 : ; return ( ans ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD countAndSay
METHOD_RETURN char*
PARAM int n
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_countAndSay_next = 17
LITERAL 1 while (1)
IDENTIFIER _1_countAndSay_next switch(_1_countAndSay_next)
LITERAL 17 <empty>
<operator>.assignment result = 1.0
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 15 <empty>
LITERAL 13 <empty>
<operator>.assignmentMultiplication result *= 1.4
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 12 <empty>
<operator>.assignment convert = (int )result
<operator>.assignment tmp = malloc(convert + 4)
<operator>.assignment arr = (char *)tmp
<operator>.assignment *(arr + 0) = (char )'1'
<operator>.assignment *(arr + 1) = (char )'\000'
<operator>.assignment i___0 = 2
BLOCK <empty> <empty>
LITERAL 10 <empty>
LITERAL 8 <empty>
<operator>.assignment length = strlen(arr)
<operator>.assignment __lengthofnewArr = (unsigned long )(length * 2)
<operator>.assignment tmp___0 = __builtin_alloca(sizeof(*newArr) * __lengthofnewArr)
<operator>.assignment newArr = (char *)tmp___0
strcpy strcpy(newArr, arr)
<operator>.assignment k = 0
<operator>.assignment j = 0
<operator>.assignment count = 1
BLOCK <empty> <empty>
LITERAL 6 <empty>
LITERAL 4 <empty>
LITERAL 3 <empty>
<operator>.postIncrement count ++
<operator>.postIncrement j ++
BLOCK <empty> <empty>
LITERAL 2 <empty>
<operator>.assignment *(arr + k) = (char )(48 + count)
<operator>.assignment *(arr + (k + 1)) = *(newArr + j)
<operator>.assignment *(arr + (k + 2)) = (char )'\000'
<operator>.postIncrement j ++
<operator>.assignmentPlus k += 2
<operator>.assignment count = 1
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operator>.postIncrement i___0 ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (arr); return (arr);
<operator>.assignment _1_countAndSay_next = 15
<operator>.lessThan i < n - 1
<operator>.assignment _1_countAndSay_next = 15
<operator>.assignment _1_countAndSay_next = 10
<operator>.lessEqualsThan i___0 <= n
<operator>.assignment _1_countAndSay_next = 6
<operator>.notEquals (int )*(newArr + j) != 0
<operator>.equals (int )*(newArr + j) == (int )*(newArr + (j + 1))
<operator>.assignment _1_countAndSay_next = 6
<operator>.assignment _1_countAndSay_next = 6
<operator>.assignment _1_countAndSay_next = 10
IDENTIFIER arr return (arr);
BLOCK <empty> <empty>
<operator>.cast (int )result
malloc malloc(convert + 4)
<operator>.cast (char *)tmp
<operator>.cast (char )'1'
<operator>.cast (char )'\000'
BLOCK <empty> <empty>
strlen strlen(arr)
<operator>.cast (unsigned long )(length * 2)
__builtin_alloca __builtin_alloca(sizeof(*newArr) * __lengthofnewArr)
<operator>.cast (char *)tmp___0
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.cast (char )(48 + count)
<operator>.cast (char )'\000'
<operator>.subtraction n - 1
<operator>.assignment _1_countAndSay_next = 13
BLOCK <empty> <empty>
<operator>.addition convert + 4
<operator>.addition arr + 0
<operator>.addition arr + 1
<operator>.assignment _1_countAndSay_next = 8
BLOCK <empty> <empty>
<operator>.multiplication length * 2
<operator>.multiplication sizeof(*newArr) * __lengthofnewArr
<operator>.cast (int )*(newArr + j)
<operator>.assignment _1_countAndSay_next = 4
BLOCK <empty> <empty>
<operator>.cast (int )*(newArr + j)
<operator>.cast (int )*(newArr + (j + 1))
<operator>.assignment _1_countAndSay_next = 3
BLOCK <empty> <empty>
<operator>.addition arr + k
<operator>.addition 48 + count
<operator>.addition arr + (k + 1)
<operator>.addition newArr + j
<operator>.addition arr + (k + 2)
<operator>.assignment _1_countAndSay_next = 12
<operator>.assignment _1_countAndSay_next = 0
<operator>.sizeOf sizeof(*newArr)
<operator>.assignment _1_countAndSay_next = 1
<operator>.assignment _1_countAndSay_next = 2
<operator>.addition k + 1
<operator>.addition k + 2
<operator>.addition newArr + j
<operator>.addition newArr + j
<operator>.addition newArr + (j + 1)
<operator>.addition j + 1
>>>PDG&115 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->55 0->56 0->57 0->58 0->59 0->60 0->61 0->63 0->64 0->65 0->66 0->67 0->68 0->69 0->70 0->71 0->72 0->73 0->74 0->77 0->78 0->79 0->80 0->81 0->82 0->83 0->84 0->85 0->86 0->87 0->88 0->89 0->90 0->91 0->93 0->94 0->97 0->98 0->99 0->100 0->101 0->102 0->103 0->104 0->105 0->107 0->108 0->109 0->110 0->111 0->112 0->113 0->114 2->1 2->59 2->82 5->1 5->1 9->1 9->1 9->14 9->18 9->68 10->1 10->1 10->15 10->56 14->1 14->1 14->18 14->68 15->1 15->1 15->56 18->1 18->1 18->69 18->85 19->1 19->1 19->20 19->70 20->1 20->1 20->66 20->74 20->86 20->87 20->99 20->101 20->103 21->1 21->1 21->1 22->1 22->1 22->1 23->1 23->1 23->51 23->59 27->1 27->1 27->90 28->1 28->1 28->91 29->1 29->1 29->30 29->77 30->1 30->1 30->31 31->1 31->1 31->1 31->66 31->74 31->99 31->101 31->102 31->103 31->111 31->112 31->113 32->1 32->1 32->47 32->99 32->101 32->103 32->109 32->110 33->1 33->1 33->40 33->46 33->102 33->111 33->112 33->113 33->114 34->1 34->1 34->39 34->43 34->80 34->100 39->1 39->1 39->43 39->80 39->100 40->1 40->1 40->46 40->102 40->111 40->112 40->113 40->114 43->1 43->1 43->1 44->1 44->1 44->1 45->1 45->1 45->1 46->1 46->1 46->40 46->102 46->111 46->112 46->113 46->114 47->1 47->1 47->99 47->101 47->103 47->109 47->110 48->1 48->1 48->39 48->43 48->80 48->100 51->1 51->1 51->59 54->1 55->1 55->1 56->1 56->1 56->1 56->15 56->83 56->104 57->1 57->1 58->1 58->1 59->1 59->1 59->1 59->51 59->82 59->88 59->105 60->1 60->1 61->1 61->1 61->93 61->107 62->1 62->1 62->1 62->97 62->108 63->1 63->1 64->1 64->1 65->1 65->1 66->54 68->1 69->1 69->19 70->1 74->27 74->31 75->1 76->1 76->29 77->1 80->1 82->1 82->56 82->56 82->59 83->1 83->1 85->1 87->1 88->1 88->1 90->1 90->28 90->28 90->75 90->75 91->1 91->76 92->1 93->1 93->1 95->1 96->1 97->1 97->1 101->1 102->1 103->1 103->1 104->1 104->1 105->1 105->1 106->1 107->1 107->1 108->1 108->1 111->1 111->1 113->1 113->1 114->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; char * countAndSay ( int n ) ; extern int atoi ( char const * s ) ; extern int ( /* missing proto */ malloc ) ( ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern int ( /* missing proto */ strlen ) ( ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern int ( /* missing proto */ strcpy ) ( ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; char * countAndSay ( int n ) { double result ; int i ; int k ; int j ; int count ; int convert ; char * arr ; int tmp ; int i___0 ; int length ; char * newArr ; unsigned long __lengthofnewArr ; void * tmp___0 ; unsigned long _1_countAndSay_next ; { { _1_countAndSay_next = 17 ; } while ( 1 ) { switch ( _1_countAndSay_next ) { case 17 : result = 1.0 ; i = 0 ; { _1_countAndSay_next = 15 ; } break ; case 15 : ; if ( i < n - 1 ) { { _1_countAndSay_next = 13 ; } } else { { _1_countAndSay_next = 12 ; } } break ; case 13 : result *= 1.4 ; i ++ ; { _1_countAndSay_next = 15 ; } break ; case 12 : convert = ( int ) result ; tmp = malloc ( convert + 4 ) ; arr = ( char * ) tmp ; * ( arr + 0 ) = ( char ) ' ' ; * ( arr + 1 ) = ( char ) ' \000 ' ; i___0 = 2 ; { _1_countAndSay_next = 10 ; } break ; case 10 : ; if ( i___0 <= n ) { { _1_countAndSay_next = 8 ; } } else { { _1_countAndSay_next = 0 ; } } break ; case 8 : length = strlen ( arr ) ; __lengthofnewArr = ( unsigned long ) ( length * 2 ) ; tmp___0 = __builtin_alloca ( sizeof ( * newArr ) * __lengthofnewArr ) ; newArr = ( char * ) tmp___0 ; strcpy ( newArr , arr ) ; k = 0 ; j = 0 ; count = 1 ; { _1_countAndSay_next = 6 ; } break ; case 6 : ; if ( ( int ) * ( newArr + j ) != 0 ) { { _1_countAndSay_next = 4 ; } } else { { _1_countAndSay_next = 1 ; } } break ; case 4 : ; if ( ( int ) * ( newArr + j ) == ( int ) * ( newArr + ( j + 1 ) ) ) { { _1_countAndSay_next = 3 ; } } else { { _1_countAndSay_next = 2 ; } } break ; case 3 : count ++ ; j ++ ; { _1_countAndSay_next = 6 ; } break ; case 2 : * ( arr + k ) = ( char ) ( 48 + count ) ; * ( arr + ( k + 1 ) ) = * ( newArr + j ) ; * ( arr + ( k + 2 ) ) = ( char ) ' \000 ' ; j ++ ; k += 2 ; count = 1 ; { _1_countAndSay_next = 6 ; } break ; case 1 : i___0 ++ ; { _1_countAndSay_next = 10 ; } break ; case 0 : ; return ( arr ) ; break ; } } } } void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 1 <empty>
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
>>>PDG&21 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 18->1 19->1 19->1 20->18
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 1 ; } while ( 1 ) { switch ( _1_main_next ) { case 1 : ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD cmpval
METHOD_RETURN int
PARAM void const   *a
PARAM void const   *b
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_cmpval_next = 0
LITERAL 1 while (1)
IDENTIFIER _1_cmpval_next switch(_1_cmpval_next)
LITERAL 0 <empty>
RETURN return (*((int *)a) - *((int *)b)); return (*((int *)a) - *((int *)b));
<operator>.subtraction *((int *)a) - *((int *)b)
<operator>.cast (int *)a
<operator>.cast (int *)b
>>>PDG&14 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->12 0->13 2->12 3->13 6->1 6->1 10->1 11->1 11->1 11->1 11->10 12->1 13->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; int cmpval ( void const * a , void const * b ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int cmpval ( void const * a , void const * b ) { unsigned long _1_cmpval_next ; { { _1_cmpval_next = 0 ; } while ( 1 ) { switch ( _1_cmpval_next ) { case 0 : ; return ( * ( ( int * ) a ) - * ( ( int * ) b ) ) ; break ; } } } } void megaInit ( void ) { { } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD reverseOnlyLetters
METHOD_RETURN char*
PARAM char *S
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_reverseOnlyLetters_next = 14
LITERAL 1 while (1)
IDENTIFIER _1_reverseOnlyLetters_next switch(_1_reverseOnlyLetters_next)
LITERAL 14 <empty>
<operator>.assignment tmp = strlen(S)
<operator>.assignment last = tmp - 1
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 12 <empty>
LITERAL 10 <empty>
<operator>.assignment tmp___0 = isalpha((int )*(S + i))
BLOCK <empty> <empty>
LITERAL 9 <empty>
LITERAL 8 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 6 <empty>
<operator>.assignment tmp___1 = isalpha((int )*(S + last))
BLOCK <empty> <empty>
LITERAL 5 <empty>
LITERAL 4 <empty>
<operator>.postDecrement last --
BLOCK <empty> <empty>
LITERAL 2 <empty>
<operator>.assignment tmp___2 = *(S + i)
<operator>.assignment *(S + i) = *(S + last)
<operator>.assignment *(S + last) = tmp___2
<operator>.postIncrement i ++
<operator>.postDecrement last --
BLOCK <empty> <empty>
LITERAL 1 <empty>
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (S); return (S);
<operator>.assignment _1_reverseOnlyLetters_next = 12
<operator>.lessThan i < last
<operator>.assignment _1_reverseOnlyLetters_next = 9
IDENTIFIER tmp___0 if (tmp___0)
<operator>.assignment _1_reverseOnlyLetters_next = 1
<operator>.assignment _1_reverseOnlyLetters_next = 5
IDENTIFIER tmp___1 if (tmp___1)
<operator>.assignment _1_reverseOnlyLetters_next = 1
<operator>.assignment _1_reverseOnlyLetters_next = 1
<operator>.assignment _1_reverseOnlyLetters_next = 12
IDENTIFIER S return (S);
strlen strlen(S)
<operator>.subtraction tmp - 1
BLOCK <empty> <empty>
isalpha isalpha((int )*(S + i))
BLOCK <empty> <empty>
isalpha isalpha((int )*(S + last))
BLOCK <empty> <empty>
<operator>.assignment _1_reverseOnlyLetters_next = 10
BLOCK <empty> <empty>
<operator>.cast (int )*(S + i)
<operator>.assignment _1_reverseOnlyLetters_next = 6
BLOCK <empty> <empty>
<operator>.cast (int )*(S + last)
<operator>.assignment _1_reverseOnlyLetters_next = 2
BLOCK <empty> <empty>
<operator>.addition S + i
<operator>.addition S + i
<operator>.addition S + last
<operator>.addition S + last
<operator>.assignment _1_reverseOnlyLetters_next = 0
<operator>.assignment _1_reverseOnlyLetters_next = 8
<operator>.assignment _1_reverseOnlyLetters_next = 4
<operator>.addition S + i
<operator>.addition S + last
>>>PDG&74 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->11 0->12 0->13 0->14 0->16 0->17 0->18 0->19 0->20 0->21 0->23 0->24 0->25 0->26 0->27 0->28 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->54 0->56 0->57 0->58 0->60 0->61 0->63 0->64 0->65 0->66 0->67 0->68 0->69 0->70 0->71 0->72 0->73 2->1 2->49 2->50 2->65 2->66 2->67 2->68 2->72 2->73 5->1 5->1 9->1 9->1 9->51 10->1 10->1 10->1 10->26 10->33 10->40 10->67 10->68 10->73 11->1 11->1 11->19 11->32 11->40 11->65 11->66 11->72 15->1 15->1 15->1 19->1 19->1 19->32 19->40 19->65 19->66 19->72 22->1 22->1 22->1 26->1 26->1 26->33 26->40 26->67 26->68 26->73 29->1 29->31 30->1 30->1 31->1 31->1 31->1 32->1 32->1 32->19 32->40 32->65 32->66 32->72 33->1 33->1 33->26 33->40 33->67 33->68 33->73 38->1 39->1 39->1 40->1 40->1 40->1 40->19 40->26 40->32 40->33 40->57 40->65 40->66 40->67 40->68 40->69 40->72 40->73 41->1 41->1 43->1 43->1 44->1 44->1 46->1 46->1 47->1 47->1 48->1 48->1 49->38 50->1 50->9 50->49 50->65 50->66 50->67 50->68 50->72 50->73 51->1 51->10 51->10 53->1 53->15 55->1 55->22 57->1 57->1 59->1 60->1 60->1 62->1 63->1 63->1 68->1 69->1 69->1 70->1 70->1 71->1 71->1 72->1 72->1 73->1 73->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern double ceil ( double x ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern int ( /* missing proto */ strlen ) ( ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern int ( /* missing proto */ isalpha ) ( ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; char * reverseOnlyLetters ( char * S ) ; void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } } char * reverseOnlyLetters ( char * S ) { int last ; int tmp ; int i ; int tmp___0 ; int tmp___1 ; char tmp___2 ; unsigned long _1_reverseOnlyLetters_next ; { { _1_reverseOnlyLetters_next = 14 ; } while ( 1 ) { switch ( _1_reverseOnlyLetters_next ) { case 14 : tmp = strlen ( S ) ; last = tmp - 1 ; i = 0 ; { _1_reverseOnlyLetters_next = 12 ; } break ; case 12 : ; if ( i < last ) { { _1_reverseOnlyLetters_next = 10 ; } } else { { _1_reverseOnlyLetters_next = 0 ; } } break ; case 10 : tmp___0 = isalpha ( ( int ) * ( S + i ) ) ; { _1_reverseOnlyLetters_next = 9 ; } break ; case 9 : ; if ( tmp___0 ) { { _1_reverseOnlyLetters_next = 6 ; } } else { { _1_reverseOnlyLetters_next = 8 ; } } break ; case 8 : i ++ ; { _1_reverseOnlyLetters_next = 1 ; } break ; case 6 : tmp___1 = isalpha ( ( int ) * ( S + last ) ) ; { _1_reverseOnlyLetters_next = 5 ; } break ; case 5 : ; if ( tmp___1 ) { { _1_reverseOnlyLetters_next = 2 ; } } else { { _1_reverseOnlyLetters_next = 4 ; } } break ; case 4 : last -- ; { _1_reverseOnlyLetters_next = 1 ; } break ; case 2 : tmp___2 = * ( S + i ) ; * ( S + i ) = * ( S + last ) ; * ( S + last ) = tmp___2 ; i ++ ; last -- ; { _1_reverseOnlyLetters_next = 1 ; } break ; case 1 : __Cont : /* CIL Label */ ; { _1_reverseOnlyLetters_next = 12 ; } break ; case 0 : ; return ( S ) ; break ; } } } }
>>>Func
METHOD process
METHOD_RETURN int
PARAM int d
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_process_next = 5
LITERAL 1 while (1)
IDENTIFIER _1_process_next switch(_1_process_next)
LITERAL 5 <empty>
<operator>.assignment ans = 0
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 1 <empty>
<operator>.assignment dig = d % 10
<operator>.assignmentMultiplication dig *= dig
<operator>.assignmentPlus ans += dig
<operator>.assignmentDivision d /= 10
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (ans); return (ans);
<operator>.assignment _1_process_next = 3
IDENTIFIER d if (d)
<operator>.assignment _1_process_next = 3
IDENTIFIER ans return (ans);
BLOCK <empty> <empty>
<operator>.modulo d % 10
<operator>.assignment _1_process_next = 1
BLOCK <empty> <empty>
<operator>.assignment _1_process_next = 0
>>>PDG&31 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->15 0->16 0->17 0->18 0->19 0->20 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 2->1 2->27 5->1 5->1 9->1 9->1 9->16 9->25 10->1 10->1 10->18 14->1 14->1 14->15 14->16 15->1 15->16 16->1 16->1 16->1 16->25 17->1 17->1 17->27 18->1 18->1 21->1 22->1 22->1 24->1 24->1 25->21 27->14 27->14 27->17 28->1 28->1 30->1 30->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; int process ( int d ) ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } int process ( int d ) { int i ; int ans ; int dig ; unsigned long _1_process_next ; { { _1_process_next = 5 ; } while ( 1 ) { switch ( _1_process_next ) { case 5 : ans = 0 ; i = 0 ; { _1_process_next = 3 ; } break ; case 3 : ; if ( d ) { { _1_process_next = 1 ; } } else { { _1_process_next = 0 ; } } break ; case 1 : dig = d % 10 ; dig *= dig ; ans += dig ; d /= 10 ; i ++ ; { _1_process_next = 3 ; } break ; case 0 : ; return ( ans ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD APHash
METHOD_RETURN unsigned int
PARAM char *str
PARAM unsigned int len
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_APHash_next = 8
LITERAL 1 while (1)
IDENTIFIER _1_APHash_next switch(_1_APHash_next)
LITERAL 8 <empty>
<operator>.assignment hash = 2863311530U
<operator>.assignment i = 0U
<operator>.assignment i = 0U
BLOCK <empty> <empty>
LITERAL 6 <empty>
LITERAL 4 <empty>
LITERAL 3 <empty>
<operator>.assignment tmp = (hash << 7) ^ (unsigned int )*str * (hash >> 3)
BLOCK <empty> <empty>
LITERAL 2 <empty>
<operator>.assignment tmp = ~ (((hash << 11) + (unsigned int )*str) ^ (hash >> 5))
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operators>.assignmentXor hash ^= tmp
<operator>.postIncrement str ++
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (hash); return (hash);
<operator>.assignment _1_APHash_next = 6
<operator>.lessThan i < len
<operator>.equals (i & 1U) == 0U
<operator>.assignment _1_APHash_next = 1
<operator>.assignment _1_APHash_next = 1
<operator>.assignment _1_APHash_next = 6
IDENTIFIER hash return (hash);
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.xor (hash << 7) ^ (unsigned int )*str * (hash >> 3)
<operator>.not ~ (((hash << 11) + (unsigned int )*str) ^ (hash >> 5))
<operator>.assignment _1_APHash_next = 4
BLOCK <empty> <empty>
<operator>.and i & 1U
<operator>.assignment _1_APHash_next = 3
BLOCK <empty> <empty>
<operator>.shiftLeft hash << 7
<operator>.multiplication (unsigned int )*str * (hash >> 3)
<operator>.xor ((hash << 11) + (unsigned int )*str) ^ (hash >> 5)
<operator>.assignment _1_APHash_next = 0
<operator>.assignment _1_APHash_next = 2
<operator>.cast (unsigned int )*str
<operator>.arithmeticShiftRight hash >> 3
<operator>.addition (hash << 11) + (unsigned int )*str
<operator>.arithmeticShiftRight hash >> 5
<operator>.shiftLeft hash << 11
<operator>.cast (unsigned int )*str
>>>PDG&56 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->18 0->19 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->40 0->41 0->42 0->43 0->44 0->45 0->48 0->49 0->51 0->53 0->54 2->1 2->24 3->1 3->30 6->1 6->1 10->1 10->1 10->23 10->35 10->45 10->54 12->1 12->1 12->25 12->30 12->42 17->1 17->1 17->1 17->23 20->1 20->1 20->1 20->23 23->1 23->1 23->35 23->45 23->54 24->1 24->1 25->1 25->1 25->30 25->42 28->1 29->1 29->1 30->1 30->1 30->1 30->25 30->40 30->42 30->48 31->1 31->1 31->43 31->49 32->1 32->1 33->1 33->1 34->1 34->1 35->28 38->1 38->1 38->17 38->17 39->1 39->20 40->1 40->1 42->1 42->25 42->30 42->31 42->31 43->1 43->1 45->38 45->38 45->51 46->1 46->1 46->38 46->38 47->1 47->1 47->39 47->39 48->1 48->1 49->1 49->1 50->1 51->1 51->23 51->35 51->45 51->46 51->46 51->54 52->1 52->1 53->1 53->23 53->35 53->45 53->47 53->47 53->54 54->47 54->47 54->52 54->52 54->53 55->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; unsigned int APHash ( char * str , unsigned int len ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; unsigned int APHash ( char * str , unsigned int len ) { unsigned int hash ; unsigned int i ; unsigned int tmp ; unsigned long _1_APHash_next ; { { _1_APHash_next = 8 ; } while ( 1 ) { switch ( _1_APHash_next ) { case 8 : hash = 2863311530U ; i = 0U ; i = 0U ; { _1_APHash_next = 6 ; } break ; case 6 : ; if ( i < len ) { { _1_APHash_next = 4 ; } } else { { _1_APHash_next = 0 ; } } break ; case 4 : ; if ( ( i & 1U ) == 0U ) { { _1_APHash_next = 3 ; } } else { { _1_APHash_next = 2 ; } } break ; case 3 : tmp = ( hash << 7 ) ^ ( unsigned int ) * str * ( hash >> 3 ) ; { _1_APHash_next = 1 ; } break ; case 2 : tmp = ~ ( ( ( hash << 11 ) + ( unsigned int ) * str ) ^ ( hash >> 5 ) ) ; { _1_APHash_next = 1 ; } break ; case 1 : hash ^= tmp ; str ++ ; i ++ ; { _1_APHash_next = 6 ; } break ; case 0 : ; return ( hash ) ; break ; } } } } void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } }
>>>Func
METHOD read_intx
METHOD_RETURN int
PARAM char **s
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_read_intx_next = 7
LITERAL 1 while (1)
IDENTIFIER _1_read_intx_next switch(_1_read_intx_next)
LITERAL 7 <empty>
<operator>.assignment p = *s
BLOCK <empty> <empty>
LITERAL 5 <empty>
<operator>.assignment tmp = isspace((int )*p)
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
<operator>.postIncrement p ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operator>.assignment ret = strtoul(p, & p, 10)
<operator>.assignment *s = p
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (ret); return (ret);
<operator>.assignment _1_read_intx_next = 5
<operator>.assignment _1_read_intx_next = 4
IDENTIFIER tmp if (tmp)
<operator>.assignment _1_read_intx_next = 5
<operator>.assignment _1_read_intx_next = 0
IDENTIFIER ret return (ret);
isspace isspace((int )*p)
BLOCK <empty> <empty>
strtoul strtoul(p, & p, 10)
<operator>.cast (int )*p
<operator>.assignment _1_read_intx_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_read_intx_next = 1
>>>PDG&37 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->10 0->11 0->13 0->14 0->15 0->16 0->17 0->18 0->20 0->21 0->22 0->24 0->25 0->26 0->27 0->28 0->29 0->31 0->32 0->34 0->35 0->36 2->1 5->1 5->1 9->1 9->1 9->1 9->16 9->32 12->1 12->1 12->1 16->1 16->1 16->32 19->1 19->1 19->1 19->29 20->1 20->1 20->1 20->9 23->1 24->1 24->1 25->1 25->1 27->1 27->1 28->1 28->1 29->23 30->1 30->12 32->1 32->16 32->16 32->19 32->19 32->19 32->20 32->20 33->1 34->1 34->1 36->1 36->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern int ( /* missing proto */ strtoul ) ( ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern int ( /* missing proto */ isspace ) ( ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; int read_intx ( char * * s ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int read_intx ( char * * s ) { char * p ; int ret ; int tmp ; unsigned long _1_read_intx_next ; { { _1_read_intx_next = 7 ; } while ( 1 ) { switch ( _1_read_intx_next ) { case 7 : p = * s ; { _1_read_intx_next = 5 ; } break ; case 5 : tmp = isspace ( ( int ) * p ) ; { _1_read_intx_next = 4 ; } break ; case 4 : ; if ( tmp ) { { _1_read_intx_next = 2 ; } } else { { _1_read_intx_next = 1 ; } } break ; case 2 : p ++ ; { _1_read_intx_next = 5 ; } break ; case 1 : ret = strtoul ( p , & p , 10 ) ; * s = p ; { _1_read_intx_next = 0 ; } break ; case 0 : ; return ( ret ) ; break ; } } } } void megaInit ( void ) { { } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD cmpval
METHOD_RETURN int
PARAM void const   *a
PARAM void const   *b
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_cmpval_next = 0
LITERAL 1 while (1)
IDENTIFIER _1_cmpval_next switch(_1_cmpval_next)
LITERAL 0 <empty>
RETURN return (*((int *)a) - *((int *)b)); return (*((int *)a) - *((int *)b));
<operator>.subtraction *((int *)a) - *((int *)b)
<operator>.cast (int *)a
<operator>.cast (int *)b
>>>PDG&14 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->12 0->13 2->12 3->13 6->1 6->1 10->1 11->1 11->1 11->1 11->10 12->1 13->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; int cmpval ( void const * a , void const * b ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int cmpval ( void const * a , void const * b ) { unsigned long _1_cmpval_next ; { { _1_cmpval_next = 0 ; } while ( 1 ) { switch ( _1_cmpval_next ) { case 0 : ; return ( * ( ( int * ) a ) - * ( ( int * ) b ) ) ; break ; } } } } void megaInit ( void ) { { } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD findMin
METHOD_RETURN int
PARAM int *nums
PARAM int numsSize
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_findMin_next = 8
LITERAL 1 while (1)
IDENTIFIER _1_findMin_next switch(_1_findMin_next)
LITERAL 8 <empty>
<operator>.assignment low = 0
<operator>.assignment high = numsSize - 1
BLOCK <empty> <empty>
LITERAL 6 <empty>
LITERAL 4 <empty>
<operator>.assignment mid = low + (high - low) / 2
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 2 <empty>
<operator>.assignment high = mid
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operator>.assignment low = mid + 1
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (*(nums + low)); return (*(nums + low));
<operator>.assignment _1_findMin_next = 6
<operator>.lessThan low < high
<operator>.assignment _1_findMin_next = 3
<operator>.lessThan *(nums + mid) < *(nums + high)
<operator>.assignment _1_findMin_next = 6
<operator>.assignment _1_findMin_next = 6
<operator>.subtraction numsSize - 1
BLOCK <empty> <empty>
<operator>.addition low + (high - low) / 2
BLOCK <empty> <empty>
<operator>.addition mid + 1
<operator>.assignment _1_findMin_next = 4
BLOCK <empty> <empty>
<operator>.division (high - low) / 2
<operator>.assignment _1_findMin_next = 2
BLOCK <empty> <empty>
<operator>.addition nums + low
<operator>.assignment _1_findMin_next = 0
<operator>.subtraction high - low
<operator>.addition nums + mid
<operator>.addition nums + high
<operator>.assignment _1_findMin_next = 1
>>>PDG&48 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 2->42 2->45 2->46 3->1 3->32 6->1 6->1 10->1 10->27 10->42 10->44 11->1 11->1 11->1 11->27 11->44 11->46 15->1 15->1 15->1 15->19 15->22 15->36 15->45 19->1 19->1 19->1 19->27 19->44 19->46 22->1 22->1 22->27 22->42 22->44 25->1 26->1 26->1 27->1 27->1 27->37 27->42 27->43 27->44 27->44 27->46 28->1 28->1 29->1 29->1 29->1 29->40 29->47 30->1 30->1 31->1 31->1 32->1 32->11 32->11 34->1 36->1 37->1 37->1 39->1 39->15 39->15 39->34 39->34 40->1 40->1 42->1 42->1 43->1 43->1 44->1 44->15 44->27 44->27 44->34 44->39 44->39 44->42 44->46 45->1 46->1 47->1 47->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; int findMin ( int * nums , int numsSize ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int findMin ( int * nums , int numsSize ) { int low ; int high ; int mid ; unsigned long _1_findMin_next ; { { _1_findMin_next = 8 ; } while ( 1 ) { switch ( _1_findMin_next ) { case 8 : low = 0 ; high = numsSize - 1 ; { _1_findMin_next = 6 ; } break ; case 6 : ; if ( low < high ) { { _1_findMin_next = 4 ; } } else { { _1_findMin_next = 0 ; } } break ; case 4 : mid = low + ( high - low ) / 2 ; { _1_findMin_next = 3 ; } break ; case 3 : ; if ( * ( nums + mid ) < * ( nums + high ) ) { { _1_findMin_next = 2 ; } } else { { _1_findMin_next = 1 ; } } break ; case 2 : high = mid ; { _1_findMin_next = 6 ; } break ; case 1 : low = mid + 1 ; { _1_findMin_next = 6 ; } break ; case 0 : ; return ( * ( nums + low ) ) ; break ; } } } } void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } }
>>>Func
METHOD skip
METHOD_RETURN char*
PARAM char *str
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_skip_next = 5
LITERAL 1 while (1)
IDENTIFIER _1_skip_next switch(_1_skip_next)
LITERAL 5 <empty>
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 3 <empty>
LITERAL 1 <empty>
<operator>.postIncrement str ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (str); return (str);
<operator>.assignment _1_skip_next = 4
<operator>.equals (int )*str == 32
<operator>.equals (int )*str == 10
<operator>.assignment _1_skip_next = 4
IDENTIFIER str return (str);
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.cast (int )*str
<operator>.assignment _1_skip_next = 1
BLOCK <empty> <empty>
<operator>.cast (int )*str
<operator>.assignment _1_skip_next = 1
BLOCK <empty> <empty>
<operator>.assignment _1_skip_next = 3
<operator>.assignment _1_skip_next = 0
>>>PDG&32 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->25 0->26 0->28 0->29 0->30 0->31 2->1 2->13 2->21 5->1 5->1 13->1 13->1 13->21 16->1 17->1 17->1 18->1 18->1 18->25 18->30 19->1 19->1 19->28 19->31 20->1 20->1 21->16 24->1 25->1 25->1 27->1 28->1 28->1 30->1 30->1 31->1 31->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; char * skip ( char * str ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; char * skip ( char * str ) { unsigned long _1_skip_next ; { { _1_skip_next = 5 ; } while ( 1 ) { switch ( _1_skip_next ) { case 5 : ; { _1_skip_next = 4 ; } break ; case 4 : ; if ( ( int ) * str == 32 ) { { _1_skip_next = 1 ; } } else { { _1_skip_next = 3 ; } } break ; case 3 : ; if ( ( int ) * str == 10 ) { { _1_skip_next = 1 ; } } else { { _1_skip_next = 0 ; } } break ; case 1 : str ++ ; { _1_skip_next = 4 ; } break ; case 0 : ; return ( str ) ; break ; } } } } void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 9
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 9 <empty>
<operator>.assignment sum = 0
BLOCK <empty> <empty>
LITERAL 8 <empty>
LITERAL 7 <empty>
<operator>.postIncrement sum ++
BLOCK <empty> <empty>
LITERAL 6 <empty>
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
<operator>.assignmentPlus sum += i
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("Sum is: %d\n", sum)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 8
<operator>.greaterThan (int )*(*(argv + 1) + 0) > 127
<operator>.assignment _1_main_next = 6
<operator>.assignment _1_main_next = 4
<operator>.lessThan i < argc
<operator>.assignment _1_main_next = 4
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.cast (int )*(*(argv + 1) + 0)
<operator>.assignment _1_main_next = 7
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 6
<operator>.assignment _1_main_next = 1
<operator>.addition *(argv + 1) + 0
<operator>.addition argv + 1
>>>PDG&54 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 2->7 2->39 3->8 3->53 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->20 16->27 16->31 20->1 20->1 20->27 20->31 23->1 23->1 23->27 23->28 23->39 27->1 27->1 27->20 27->31 28->1 28->1 28->27 28->39 31->1 31->1 31->20 31->27 34->1 35->1 35->1 36->1 36->1 36->46 36->50 37->1 37->1 38->1 38->1 39->1 39->1 39->1 39->27 39->28 39->48 39->51 40->1 40->1 41->1 41->1 42->34 45->1 46->1 46->1 48->1 48->1 50->1 50->1 51->1 51->1 52->1 53->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int argc , char * * argv , char * * _formal_envp ) { int i ; int sum ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 9 ; } while ( 1 ) { switch ( _1_main_next ) { case 9 : sum = 0 ; { _1_main_next = 8 ; } break ; case 8 : ; if ( ( int ) * ( * ( argv + 1 ) + 0 ) > 127 ) { { _1_main_next = 7 ; } } else { { _1_main_next = 6 ; } } break ; case 7 : sum ++ ; { _1_main_next = 6 ; } break ; case 6 : i = 0 ; { _1_main_next = 4 ; } break ; case 4 : ; if ( i < argc ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : sum += i ; i ++ ; { _1_main_next = 4 ; } break ; case 1 : printf ( " \n " , sum ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD cycleSort
METHOD_RETURN void
PARAM int *arr
PARAM int n
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_cycleSort_next = 36
LITERAL 1 while (1)
IDENTIFIER _1_cycleSort_next switch(_1_cycleSort_next)
LITERAL 36 <empty>
<operator>.assignment writes = 0
<operator>.assignment cycle_start = 0
BLOCK <empty> <empty>
LITERAL 34 <empty>
LITERAL 32 <empty>
<operator>.assignment item = *(arr + cycle_start)
<operator>.assignment pos = cycle_start
<operator>.assignment i = cycle_start + 1
BLOCK <empty> <empty>
LITERAL 30 <empty>
LITERAL 28 <empty>
LITERAL 27 <empty>
<operator>.postIncrement pos ++
BLOCK <empty> <empty>
LITERAL 26 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 25 <empty>
LITERAL 22 <empty>
LITERAL 20 <empty>
<operator>.postIncrement pos ++
BLOCK <empty> <empty>
LITERAL 19 <empty>
LITERAL 18 <empty>
swap swap(& item, arr + pos)
<operator>.postIncrement writes ++
BLOCK <empty> <empty>
LITERAL 16 <empty>
LITERAL 14 <empty>
<operator>.assignment pos = cycle_start
<operator>.assignment i___0 = cycle_start + 1
BLOCK <empty> <empty>
LITERAL 12 <empty>
LITERAL 10 <empty>
LITERAL 9 <empty>
<operator>.postIncrement pos ++
BLOCK <empty> <empty>
LITERAL 8 <empty>
<operator>.postIncrement i___0 ++
BLOCK <empty> <empty>
LITERAL 6 <empty>
LITERAL 4 <empty>
<operator>.postIncrement pos ++
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 2 <empty>
swap swap(& item, arr + pos)
<operator>.postIncrement writes ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operator>.postIncrement cycle_start ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return; return;
<operator>.assignment _1_cycleSort_next = 34
<operator>.lessEqualsThan cycle_start <= n - 2
<operator>.assignment _1_cycleSort_next = 30
<operator>.lessThan i < n
<operator>.lessThan *(arr + i) < item
<operator>.assignment _1_cycleSort_next = 26
<operator>.assignment _1_cycleSort_next = 30
<operator>.equals pos == cycle_start
<operator>.equals item == *(arr + pos)
<operator>.assignment _1_cycleSort_next = 22
<operator>.notEquals pos != cycle_start
<operator>.assignment _1_cycleSort_next = 16
<operator>.notEquals pos != cycle_start
<operator>.assignment _1_cycleSort_next = 12
<operator>.lessThan i___0 < n
<operator>.lessThan *(arr + i___0) < item
<operator>.assignment _1_cycleSort_next = 8
<operator>.assignment _1_cycleSort_next = 12
<operator>.equals item == *(arr + pos)
<operator>.assignment _1_cycleSort_next = 6
<operator>.notEquals item != *(arr + pos)
<operator>.assignment _1_cycleSort_next = 16
<operator>.assignment _1_cycleSort_next = 34
BLOCK <empty> <empty>
<operator>.addition cycle_start + 1
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.addition arr + pos
BLOCK <empty> <empty>
<operator>.addition cycle_start + 1
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.addition arr + pos
<operator>.subtraction n - 2
<operator>.assignment _1_cycleSort_next = 32
BLOCK <empty> <empty>
<operator>.addition arr + cycle_start
<operator>.assignment _1_cycleSort_next = 28
BLOCK <empty> <empty>
<operator>.assignment _1_cycleSort_next = 27
BLOCK <empty> <empty>
<operator>.assignment _1_cycleSort_next = 1
BLOCK <empty> <empty>
<operator>.assignment _1_cycleSort_next = 20
BLOCK <empty> <empty>
<operator>.assignment _1_cycleSort_next = 18
BLOCK <empty> <empty>
<operator>.assignment _1_cycleSort_next = 14
BLOCK <empty> <empty>
<operator>.assignment _1_cycleSort_next = 10
BLOCK <empty> <empty>
<operator>.assignment _1_cycleSort_next = 9
BLOCK <empty> <empty>
<operator>.assignment _1_cycleSort_next = 4
BLOCK <empty> <empty>
<operator>.assignment _1_cycleSort_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_cycleSort_next = 0
<operator>.assignment _1_cycleSort_next = 25
<operator>.addition arr + i
<operator>.assignment _1_cycleSort_next = 26
<operator>.assignment _1_cycleSort_next = 22
<operator>.addition arr + pos
<operator>.assignment _1_cycleSort_next = 19
<operator>.assignment _1_cycleSort_next = 16
<operator>.assignment _1_cycleSort_next = 1
<operator>.assignment _1_cycleSort_next = 6
<operator>.addition arr + i___0
<operator>.assignment _1_cycleSort_next = 8
<operator>.addition arr + pos
<operator>.assignment _1_cycleSort_next = 3
<operator>.addition arr + pos
<operator>.assignment _1_cycleSort_next = 16
>>>PDG&142 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 0->59 0->60 0->61 0->62 0->63 0->64 0->65 0->66 0->67 0->68 0->69 0->70 0->71 0->72 0->73 0->74 0->75 0->76 0->77 0->78 0->79 0->80 0->81 0->82 0->83 0->84 0->85 0->86 0->87 0->88 0->89 0->90 0->91 0->92 0->93 0->94 0->95 0->96 0->97 0->98 0->99 0->100 0->101 0->102 0->103 0->104 0->105 0->106 0->107 0->108 0->109 0->110 0->111 0->112 0->113 0->114 0->115 0->116 0->117 0->118 0->119 0->120 0->121 0->122 0->123 0->124 0->125 0->126 0->127 0->128 0->129 0->130 0->131 0->132 0->133 0->134 0->135 0->136 0->137 0->138 0->139 0->140 0->141 2->1 2->34 2->56 2->94 2->101 2->105 2->128 2->131 2->136 2->138 2->140 3->1 3->67 3->78 3->102 6->1 6->1 10->1 10->1 10->35 10->57 11->1 11->1 11->16 11->39 11->40 11->60 11->65 11->71 11->74 11->76 11->96 11->105 15->1 15->1 15->1 15->34 15->56 15->68 15->72 15->79 15->82 15->84 16->1 16->1 16->22 16->30 16->34 16->45 16->52 16->56 16->71 16->74 16->76 16->94 16->101 16->131 16->138 16->140 17->1 17->1 17->1 17->25 17->67 17->128 22->1 22->1 22->30 22->34 22->45 22->52 22->56 22->71 22->74 22->76 22->94 22->101 22->131 22->138 22->140 25->1 25->1 25->67 25->128 30->1 30->1 30->22 30->34 30->45 30->52 30->56 30->71 30->74 30->76 30->94 30->101 30->131 30->138 30->140 34->1 34->1 34->1 34->56 34->68 34->72 34->79 34->82 34->84 35->1 35->1 35->57 39->1 39->1 39->22 39->30 39->34 39->45 39->52 39->56 39->71 39->74 39->76 39->94 39->101 39->131 39->138 39->140 40->1 40->1 40->1 40->48 40->78 40->136 45->1 45->1 45->22 45->30 45->34 45->52 45->56 45->71 45->74 45->76 45->94 45->101 45->131 45->138 45->140 48->1 48->1 48->78 48->136 52->1 52->1 52->22 52->30 52->34 52->45 52->56 52->71 52->74 52->76 52->94 52->101 52->131 52->138 52->140 56->1 56->1 56->1 56->34 56->68 56->72 56->79 56->82 56->84 57->1 57->1 57->35 60->1 60->1 60->16 60->39 60->40 60->65 60->71 60->74 60->76 60->96 60->105 63->1 64->1 64->1 65->1 65->1 65->1 65->16 65->39 65->40 65->60 65->71 65->74 65->76 65->96 65->103 65->105 65->126 66->1 66->1 67->1 67->1 67->1 67->25 67->78 67->102 67->106 67->127 67->128 68->1 68->1 68->1 68->34 68->56 68->72 68->79 68->82 68->84 68->108 68->129 69->1 69->1 70->1 70->1 71->1 71->1 71->1 71->16 71->22 71->30 71->34 71->39 71->40 71->45 71->52 71->56 71->60 71->65 71->74 71->74 71->76 71->76 71->94 71->96 71->101 71->105 71->110 71->130 71->131 71->138 71->140 72->1 72->1 72->1 72->34 72->34 72->56 72->56 72->68 72->79 72->82 72->84 72->112 72->132 73->1 73->1 74->1 74->1 74->1 74->16 74->22 74->30 74->34 74->39 74->40 74->45 74->52 74->56 74->60 74->65 74->71 74->71 74->76 74->76 74->94 74->96 74->101 74->105 74->114 74->131 74->133 74->138 74->140 75->1 75->1 76->1 76->1 76->1 76->16 76->22 76->30 76->34 76->39 76->40 76->45 76->52 76->56 76->60 76->65 76->71 76->71 76->74 76->74 76->94 76->96 76->101 76->105 76->116 76->131 76->134 76->138 76->140 77->1 77->1 78->1 78->1 78->1 78->48 78->67 78->102 78->118 78->135 78->136 79->1 79->1 79->1 79->34 79->56 79->68 79->72 79->82 79->84 79->120 79->137 80->1 80->1 81->1 81->1 82->1 82->1 82->1 82->34 82->34 82->56 82->56 82->68 82->72 82->79 82->84 82->122 82->139 83->1 83->1 84->1 84->1 84->1 84->34 84->34 84->56 84->56 84->68 84->72 84->79 84->82 84->124 84->141 85->1 85->1 86->1 86->1 88->1 94->1 94->1 96->1 101->1 101->1 102->1 102->65 102->65 102->67 102->78 103->1 103->1 105->1 106->1 106->1 108->1 108->1 110->1 110->1 112->1 112->1 114->1 114->1 116->1 116->1 118->1 118->1 120->1 120->1 122->1 122->1 124->1 124->1 126->1 126->1 127->1 127->1 128->1 128->1 129->1 129->1 130->1 130->1 131->1 131->1 132->1 132->1 133->1 133->1 134->1 134->1 135->1 135->1 136->1 136->1 137->1 137->1 138->1 138->1 139->1 139->1 140->1 140->1 141->1 141->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern void exit ( int status ) ; extern int pthread_cond_signal ( int * cond ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; void cycleSort ( int * arr , int n ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; extern int ( /* missing proto */ swap ) ( ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void cycleSort ( int * arr , int n ) { int writes ; int cycle_start ; int item ; int pos ; int i ; int i___0 ; unsigned long _1_cycleSort_next ; { { _1_cycleSort_next = 36 ; } while ( 1 ) { switch ( _1_cycleSort_next ) { case 36 : writes = 0 ; cycle_start = 0 ; { _1_cycleSort_next = 34 ; } break ; case 34 : ; if ( cycle_start <= n - 2 ) { { _1_cycleSort_next = 32 ; } } else { { _1_cycleSort_next = 0 ; } } break ; case 32 : item = * ( arr + cycle_start ) ; pos = cycle_start ; i = cycle_start + 1 ; { _1_cycleSort_next = 30 ; } break ; case 30 : ; if ( i < n ) { { _1_cycleSort_next = 28 ; } } else { { _1_cycleSort_next = 25 ; } } break ; case 28 : ; if ( * ( arr + i ) < item ) { { _1_cycleSort_next = 27 ; } } else { { _1_cycleSort_next = 26 ; } } break ; case 27 : pos ++ ; { _1_cycleSort_next = 26 ; } break ; case 26 : i ++ ; { _1_cycleSort_next = 30 ; } break ; case 25 : ; if ( pos == cycle_start ) { { _1_cycleSort_next = 1 ; } } else { { _1_cycleSort_next = 22 ; } } break ; case 22 : ; if ( item == * ( arr + pos ) ) { { _1_cycleSort_next = 20 ; } } else { { _1_cycleSort_next = 19 ; } } break ; case 20 : pos ++ ; { _1_cycleSort_next = 22 ; } break ; case 19 : ; if ( pos != cycle_start ) { { _1_cycleSort_next = 18 ; } } else { { _1_cycleSort_next = 16 ; } } break ; case 18 : swap ( & item , arr + pos ) ; writes ++ ; { _1_cycleSort_next = 16 ; } break ; case 16 : ; if ( pos != cycle_start ) { { _1_cycleSort_next = 14 ; } } else { { _1_cycleSort_next = 1 ; } } break ; case 14 : pos = cycle_start ; i___0 = cycle_start + 1 ; { _1_cycleSort_next = 12 ; } break ; case 12 : ; if ( i___0 < n ) { { _1_cycleSort_next = 10 ; } } else { { _1_cycleSort_next = 6 ; } } break ; case 10 : ; if ( * ( arr + i___0 ) < item ) { { _1_cycleSort_next = 9 ; } } else { { _1_cycleSort_next = 8 ; } } break ; case 9 : pos ++ ; { _1_cycleSort_next = 8 ; } break ; case 8 : i___0 ++ ; { _1_cycleSort_next = 12 ; } break ; case 6 : ; if ( item == * ( arr + pos ) ) { { _1_cycleSort_next = 4 ; } } else { { _1_cycleSort_next = 3 ; } } break ; case 4 : pos ++ ; { _1_cycleSort_next = 6 ; } break ; case 3 : ; if ( item != * ( arr + pos ) ) { { _1_cycleSort_next = 2 ; } } else { { _1_cycleSort_next = 16 ; } } break ; case 2 : swap ( & item , arr + pos ) ; writes ++ ; { _1_cycleSort_next = 16 ; } break ; case 1 : __Cont : /* CIL Label */ cycle_start ++ ; { _1_cycleSort_next = 34 ; } break ; case 0 : ; return ; break ; } } } } void megaInit ( void ) { { } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 1 <empty>
<operator>.assignment arr[0] = 10
<operator>.assignment arr[1] = 22
<operator>.assignment arr[2] = 35
<operator>.assignment arr[3] = 40
<operator>.assignment arr[4] = 45
<operator>.assignment arr[5] = 50
<operator>.assignment arr[6] = 80
<operator>.assignment arr[7] = 82
<operator>.assignment arr[8] = 85
<operator>.assignment arr[9] = 90
<operator>.assignment arr[10] = 100
<operator>.assignment n = (int )(sizeof(arr) / sizeof(arr[0]))
<operator>.assignment x = 85
<operator>.assignment tmp = fibMonaccianSearch(arr, x, n)
printf printf("Found at index: %d", tmp)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
<operator>.cast (int )(sizeof(arr) / sizeof(arr[0]))
fibMonaccianSearch fibMonaccianSearch(arr, x, n)
<operator>.sizeOf sizeof(arr[0])
>>>PDG&39 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->28 0->30 0->31 0->32 0->33 0->34 0->35 0->37 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 17->1 17->1 17->37 18->1 18->1 18->37 19->1 19->1 19->37 20->1 20->1 20->37 21->1 21->1 21->37 22->1 22->1 22->37 23->1 23->1 23->37 24->1 24->1 24->37 25->1 25->1 25->37 26->1 26->1 26->37 27->1 27->1 27->37 28->1 28->37 29->1 29->1 29->30 30->1 30->1 33->1 34->1 34->1 35->33 36->1 37->1 37->1 37->1 37->29 37->29 37->29 38->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int ( /* missing proto */ fibMonaccianSearch ) ( ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern double log ( double x ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { int arr [ 11 ] ; int n ; int x ; int tmp ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 1 ; } while ( 1 ) { switch ( _1_main_next ) { case 1 : arr [ 0 ] = 10 ; arr [ 1 ] = 22 ; arr [ 2 ] = 35 ; arr [ 3 ] = 40 ; arr [ 4 ] = 45 ; arr [ 5 ] = 50 ; arr [ 6 ] = 80 ; arr [ 7 ] = 82 ; arr [ 8 ] = 85 ; arr [ 9 ] = 90 ; arr [ 10 ] = 100 ; n = ( int ) ( sizeof ( arr ) / sizeof ( arr [ 0 ] ) ) ; x = 85 ; tmp = fibMonaccianSearch ( arr , x , n ) ; printf ( " " , tmp ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 11
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 11 <empty>
<operator>.assignment sum = 0
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 9 <empty>
LITERAL 7 <empty>
<operator>.assignmentPlus sum += i
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 6 <empty>
<operator>.assignment i = 1
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
<operator>.assignmentPlus sum += sum
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("Sum is: %d\n", sum)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 9
<operator>.lessThan i < argc
<operator>.assignment _1_main_next = 9
<operator>.assignment _1_main_next = 4
<operator>.lessEqualsThan i <= (int )*(*(argv + 1) + 0)
<operator>.assignment _1_main_next = 4
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 7
BLOCK <empty> <empty>
<operator>.cast (int )*(*(argv + 1) + 0)
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 6
<operator>.assignment _1_main_next = 1
<operator>.addition *(argv + 1) + 0
<operator>.addition argv + 1
>>>PDG&56 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->50 0->51 0->52 0->53 0->54 0->55 2->7 2->38 3->8 3->55 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->21 16->29 16->33 17->1 17->1 17->21 17->22 17->30 17->38 17->41 21->1 21->1 21->29 21->33 22->1 22->1 22->21 22->30 22->38 22->41 25->1 25->1 25->21 25->22 25->30 25->38 25->41 29->1 29->1 29->21 29->33 30->1 30->1 30->21 30->22 30->38 30->41 33->1 33->1 33->21 33->29 36->1 37->1 37->1 38->1 38->1 38->1 38->21 38->22 38->30 38->41 38->47 38->52 39->1 39->1 40->1 40->1 41->1 41->1 41->1 41->21 41->22 41->30 41->38 41->50 41->53 42->1 42->1 43->1 43->1 44->36 47->1 47->1 49->1 50->1 50->1 52->1 52->1 53->1 53->1 54->1 55->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int argc , char * * argv , char * * _formal_envp ) { int i ; int sum ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 11 ; } while ( 1 ) { switch ( _1_main_next ) { case 11 : sum = 0 ; i = 0 ; { _1_main_next = 9 ; } break ; case 9 : ; if ( i < argc ) { { _1_main_next = 7 ; } } else { { _1_main_next = 6 ; } } break ; case 7 : sum += i ; i ++ ; { _1_main_next = 9 ; } break ; case 6 : i = 1 ; { _1_main_next = 4 ; } break ; case 4 : ; if ( i <= ( int ) * ( * ( argv + 1 ) + 0 ) ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : sum += sum ; i ++ ; { _1_main_next = 4 ; } break ; case 1 : printf ( " \n " , sum ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD maxArea
METHOD_RETURN int
PARAM int *height
PARAM int heightSize
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_maxArea_next = 10
LITERAL 1 while (1)
IDENTIFIER _1_maxArea_next switch(_1_maxArea_next)
LITERAL 10 <empty>
<operator>.assignment start = 0
<operator>.assignment end = heightSize - 1
<operator>.assignment res = 0
BLOCK <empty> <empty>
LITERAL 8 <empty>
LITERAL 6 <empty>
<operator>.assignment tmp = min(*(height + start)  *(height + end))
<operator>.assignment currArea = (end - start) * tmp
BLOCK <empty> <empty>
LITERAL 5 <empty>
LITERAL 4 <empty>
<operator>.assignment res = currArea
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 2 <empty>
<operator>.postIncrement start ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operator>.postDecrement end --
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (res); return (res);
<operator>.assignment _1_maxArea_next = 8
<operator>.lessThan start < end
<operator>.assignment _1_maxArea_next = 5
<operator>.greaterThan currArea > res
<operator>.assignment _1_maxArea_next = 3
<operator>.lessThan *(height + start) < *(height + end)
<operator>.assignment _1_maxArea_next = 8
<operator>.assignment _1_maxArea_next = 8
IDENTIFIER res return (res);
<operator>.subtraction heightSize - 1
BLOCK <empty> <empty>
min min(*(height + start)  *(height + end))
<operator>.multiplication (end - start) * tmp
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_maxArea_next = 6
BLOCK <empty> <empty>
<operator>.subtraction end - start
<operator>.assignment _1_maxArea_next = 4
BLOCK <empty> <empty>
<operator>.assignment _1_maxArea_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_maxArea_next = 0
<operator>.addition height + start
<operator>.addition height + end
<operator>.assignment _1_maxArea_next = 3
<operator>.addition height + start
<operator>.addition height + end
<operator>.assignment _1_maxArea_next = 1
>>>PDG&61 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->12 0->13 0->14 0->15 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->32 0->33 0->34 0->35 0->36 0->38 0->39 0->40 0->41 0->42 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 0->59 0->60 2->1 2->55 2->58 2->59 3->1 3->41 6->1 6->1 10->1 10->1 10->25 10->33 10->49 10->55 10->58 11->1 11->1 11->1 11->28 11->33 11->49 11->56 11->59 12->1 12->1 12->35 12->40 16->1 16->1 16->44 17->1 17->1 17->1 17->21 17->35 21->1 21->1 21->1 21->35 21->40 25->1 25->1 25->33 25->49 25->55 25->58 28->1 28->1 28->33 28->49 28->56 28->59 31->1 32->1 32->1 33->1 33->1 33->1 33->25 33->28 33->47 33->49 33->49 33->54 33->55 33->56 33->58 33->59 34->1 34->1 35->1 35->1 35->1 35->21 35->40 35->50 35->57 36->1 36->1 37->1 37->1 37->1 37->52 37->60 38->1 38->1 39->1 39->1 40->31 41->1 41->11 41->11 43->1 43->1 43->16 43->16 44->1 44->1 44->17 44->17 47->1 47->1 49->1 49->1 49->25 49->28 49->33 49->33 49->44 49->44 49->55 49->56 49->58 49->59 50->1 50->1 52->1 52->1 54->1 54->1 56->1 57->1 57->1 58->1 59->1 59->1 60->1 60->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; int maxArea ( int * height , int heightSize ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern double ceil ( double x ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern int ( /* missing proto */ min ) ( ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } } int maxArea ( int * height , int heightSize ) { int start ; int end ; int res ; int currArea ; int tmp ; unsigned long _1_maxArea_next ; { { _1_maxArea_next = 10 ; } while ( 1 ) { switch ( _1_maxArea_next ) { case 10 : start = 0 ; end = heightSize - 1 ; res = 0 ; { _1_maxArea_next = 8 ; } break ; case 8 : ; if ( start < end ) { { _1_maxArea_next = 6 ; } } else { { _1_maxArea_next = 0 ; } } break ; case 6 : tmp = min ( * ( height + start ) , * ( height + end ) ) ; currArea = ( end - start ) * tmp ; { _1_maxArea_next = 5 ; } break ; case 5 : ; if ( currArea > res ) { { _1_maxArea_next = 4 ; } } else { { _1_maxArea_next = 3 ; } } break ; case 4 : res = currArea ; { _1_maxArea_next = 3 ; } break ; case 3 : ; if ( * ( height + start ) < * ( height + end ) ) { { _1_maxArea_next = 2 ; } } else { { _1_maxArea_next = 1 ; } } break ; case 2 : start ++ ; { _1_maxArea_next = 8 ; } break ; case 1 : end -- ; { _1_maxArea_next = 8 ; } break ; case 0 : ; return ( res ) ; break ; } } } }
>>>Func
METHOD countSubstrings
METHOD_RETURN int
PARAM char *s
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_countSubstrings_next = 8
LITERAL 1 while (1)
IDENTIFIER _1_countSubstrings_next switch(_1_countSubstrings_next)
LITERAL 8 <empty>
<operator>.assignment tmp = strlen(s)
<operator>.assignment len = tmp
<operator>.assignment count = 0
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 6 <empty>
LITERAL 4 <empty>
<operator>.assignment tmp___0 = countPalin(s, i, i, len)
<operator>.assignmentPlus count += tmp___0
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 2 <empty>
<operator>.assignment tmp___1 = countPalin(s, i, i + 1, len)
<operator>.assignmentPlus count += tmp___1
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (count); return (count);
<operator>.assignment _1_countSubstrings_next = 6
<operator>.lessThan i < len
<operator>.assignment _1_countSubstrings_next = 3
<operator>.notEquals i != len - 1
<operator>.assignment _1_countSubstrings_next = 1
<operator>.assignment _1_countSubstrings_next = 6
IDENTIFIER count return (count);
strlen strlen(s)
BLOCK <empty> <empty>
countPalin countPalin(s, i, i, len)
BLOCK <empty> <empty>
countPalin countPalin(s, i, i + 1, len)
<operator>.assignment _1_countSubstrings_next = 4
BLOCK <empty> <empty>
<operator>.subtraction len - 1
<operator>.assignment _1_countSubstrings_next = 2
BLOCK <empty> <empty>
<operator>.addition i + 1
<operator>.assignment _1_countSubstrings_next = 0
<operator>.assignment _1_countSubstrings_next = 1
>>>PDG&49 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->10 0->11 0->12 0->13 0->14 0->15 0->17 0->18 0->19 0->20 0->22 0->23 0->24 0->25 0->26 0->27 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 2->1 2->36 2->38 2->40 5->1 5->1 9->1 9->1 9->10 10->1 10->1 10->1 10->30 10->38 10->40 10->43 11->1 11->1 11->17 11->22 11->35 12->1 12->1 12->25 12->30 12->32 12->38 12->40 12->46 16->1 16->1 16->17 17->1 17->1 17->1 17->22 17->35 21->1 21->1 21->22 22->1 22->1 22->1 22->17 22->35 25->1 25->1 25->30 25->32 25->38 25->40 25->46 28->1 29->1 29->1 30->1 30->1 30->1 30->25 30->32 30->38 30->38 30->40 30->40 30->41 30->43 30->46 30->47 31->1 31->1 32->1 32->1 32->1 32->25 32->30 32->38 32->40 32->44 32->46 32->48 33->1 33->1 34->1 34->1 35->28 36->1 36->9 36->38 36->40 38->1 38->1 38->1 38->16 38->16 38->16 38->25 38->30 38->30 38->32 38->36 38->40 38->40 38->40 38->43 38->46 40->1 40->1 40->1 40->1 40->21 40->21 40->21 40->21 40->25 40->30 40->30 40->32 40->36 40->38 40->38 40->38 40->43 40->46 41->1 41->1 43->1 43->30 43->32 43->32 43->38 43->40 44->1 44->1 47->1 47->1 48->1 48->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern int ( /* missing proto */ strlen ) ( ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int printf ( char const * format , ... ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern int ( /* missing proto */ countPalin ) ( ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; int countSubstrings ( char * s ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } } int countSubstrings ( char * s ) { int len ; int tmp ; int i ; int count ; int tmp___0 ; int tmp___1 ; unsigned long _1_countSubstrings_next ; { { _1_countSubstrings_next = 8 ; } while ( 1 ) { switch ( _1_countSubstrings_next ) { case 8 : tmp = strlen ( s ) ; len = tmp ; count = 0 ; i = 0 ; { _1_countSubstrings_next = 6 ; } break ; case 6 : ; if ( i < len ) { { _1_countSubstrings_next = 4 ; } } else { { _1_countSubstrings_next = 0 ; } } break ; case 4 : tmp___0 = countPalin ( s , i , i , len ) ; count += tmp___0 ; { _1_countSubstrings_next = 3 ; } break ; case 3 : ; if ( i != len - 1 ) { { _1_countSubstrings_next = 2 ; } } else { { _1_countSubstrings_next = 1 ; } } break ; case 2 : tmp___1 = countPalin ( s , i , i + 1 , len ) ; count += tmp___1 ; { _1_countSubstrings_next = 1 ; } break ; case 1 : i ++ ; { _1_countSubstrings_next = 6 ; } break ; case 0 : ; return ( count ) ; break ; } } } }
>>>Func
METHOD sort_d
METHOD_RETURN void
PARAM long *a
PARAM long n
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_sort_d_next = 12
LITERAL 1 while (1)
IDENTIFIER _1_sort_d_next switch(_1_sort_d_next)
LITERAL 12 <empty>
<operator>.assignment i = 0L
BLOCK <empty> <empty>
LITERAL 10 <empty>
LITERAL 8 <empty>
<operator>.assignment mi = 0L
<operator>.assignment mv = *(a + mi)
<operator>.assignment j = 1L
BLOCK <empty> <empty>
LITERAL 6 <empty>
LITERAL 4 <empty>
LITERAL 3 <empty>
<operator>.assignment mv = *(a + j)
<operator>.assignment mi = j
BLOCK <empty> <empty>
LITERAL 2 <empty>
<operator>.postIncrement j ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operator>.assignment *(a + mi) = *(a + ((n - 1L) - i))
<operator>.assignment *(a + ((n - 1L) - i)) = mv
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return; return;
<operator>.assignment _1_sort_d_next = 10
<operator>.lessThan i < n - 1L
<operator>.assignment _1_sort_d_next = 6
<operator>.lessThan j < n - i
<operator>.lessThan *(a + j) < mv
<operator>.assignment _1_sort_d_next = 2
<operator>.assignment _1_sort_d_next = 6
<operator>.assignment _1_sort_d_next = 10
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.subtraction n - 1L
<operator>.assignment _1_sort_d_next = 8
BLOCK <empty> <empty>
<operator>.addition a + mi
<operator>.subtraction n - i
<operator>.assignment _1_sort_d_next = 4
BLOCK <empty> <empty>
<operator>.assignment _1_sort_d_next = 3
BLOCK <empty> <empty>
<operator>.addition a + j
<operator>.addition a + mi
<operator>.addition a + ((n - 1L) - i)
<operator>.addition a + ((n - 1L) - i)
<operator>.assignment _1_sort_d_next = 0
<operator>.assignment _1_sort_d_next = 1
<operator>.addition a + j
<operator>.assignment _1_sort_d_next = 2
<operator>.subtraction (n - 1L) - i
<operator>.subtraction (n - 1L) - i
<operator>.subtraction n - 1L
<operator>.subtraction n - 1L
>>>PDG&66 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->16 0->17 0->18 0->19 0->20 0->22 0->23 0->24 0->25 0->26 0->27 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 0->59 0->60 0->61 0->62 0->63 0->64 0->65 2->1 2->48 2->54 2->55 2->56 2->57 2->60 3->1 3->45 3->49 3->64 6->1 6->1 10->1 10->1 10->35 10->49 10->62 14->1 14->48 14->55 15->1 15->1 15->1 15->29 15->38 16->1 16->1 16->22 16->25 16->37 16->54 16->60 21->1 21->1 21->1 21->29 21->38 22->1 22->1 22->1 22->55 25->1 25->1 25->22 25->37 25->54 25->60 28->1 28->1 29->1 29->1 29->1 30->1 30->1 30->35 30->49 30->62 33->1 34->1 34->1 35->1 35->1 35->1 35->46 35->49 35->58 35->62 36->1 36->1 37->1 37->1 37->1 37->22 37->25 37->50 37->54 37->59 37->60 38->1 38->1 38->1 38->29 38->52 38->61 39->1 39->1 40->1 40->1 41->1 41->1 45->1 45->35 45->35 45->49 45->64 46->1 46->1 48->1 48->1 49->1 49->1 49->35 49->37 49->37 49->45 49->62 49->64 50->1 50->1 52->1 52->1 54->1 55->1 57->1 57->1 58->1 58->1 59->1 59->1 60->1 60->1 61->1 61->1 62->56 62->56 62->63 63->1 63->30 63->57 63->57 64->62 64->62 64->65 65->1 65->45 65->49 65->63 65->63 65->64
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; void sort_d ( long * a , long n ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } void sort_d ( long * a , long n ) { long i ; long j ; long mi ; long mv ; unsigned long _1_sort_d_next ; { { _1_sort_d_next = 12 ; } while ( 1 ) { switch ( _1_sort_d_next ) { case 12 : i = 0L ; { _1_sort_d_next = 10 ; } break ; case 10 : ; if ( i < n - 1L ) { { _1_sort_d_next = 8 ; } } else { { _1_sort_d_next = 0 ; } } break ; case 8 : mi = 0L ; mv = * ( a + mi ) ; j = 1L ; { _1_sort_d_next = 6 ; } break ; case 6 : ; if ( j < n - i ) { { _1_sort_d_next = 4 ; } } else { { _1_sort_d_next = 1 ; } } break ; case 4 : ; if ( * ( a + j ) < mv ) { { _1_sort_d_next = 3 ; } } else { { _1_sort_d_next = 2 ; } } break ; case 3 : mv = * ( a + j ) ; mi = j ; { _1_sort_d_next = 2 ; } break ; case 2 : j ++ ; { _1_sort_d_next = 6 ; } break ; case 1 : * ( a + mi ) = * ( a + ( ( n - 1L ) - i ) ) ; * ( a + ( ( n - 1L ) - i ) ) = mv ; i ++ ; { _1_sort_d_next = 10 ; } break ; case 0 : ; return ; break ; } } } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD sort1
METHOD_RETURN int
PARAM void const   *data1
PARAM void const   *data2
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_sort1_next = 5
LITERAL 1 while (1)
IDENTIFIER _1_sort1_next switch(_1_sort1_next)
LITERAL 5 <empty>
<operator>.assignment I1 = (double *)data1
<operator>.assignment I2 = (double *)data2
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 3 <empty>
RETURN return (1); return (1);
LITERAL 2 <empty>
LITERAL 1 <empty>
RETURN return (-1); return (-1);
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_sort1_next = 4
<operator>.greaterThan *(I1 + 1) > *(I2 + 1)
LITERAL 1 return (1);
<operator>.lessThan *(I1 + 1) < *(I2 + 1)
<operator>.minus -1
LITERAL 0 return (0);
<operator>.cast (double *)data1
<operator>.cast (double *)data2
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_sort1_next = 3
BLOCK <empty> <empty>
<operator>.assignment _1_sort1_next = 1
BLOCK <empty> <empty>
<operator>.addition I1 + 1
<operator>.addition I2 + 1
<operator>.assignment _1_sort1_next = 2
<operator>.addition I1 + 1
<operator>.addition I2 + 1
<operator>.assignment _1_sort1_next = 0
>>>PDG&41 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->19 0->20 0->21 0->23 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 2->1 2->10 2->27 3->1 3->11 3->28 6->1 6->1 10->1 10->1 10->1 10->35 10->38 11->1 11->1 11->1 11->36 11->39 15->1 18->1 20->1 21->1 21->1 22->1 22->1 22->1 22->31 22->37 23->15 24->1 24->1 24->1 24->33 24->40 25->18 26->20 27->1 28->1 31->1 31->1 33->1 33->1 35->1 36->1 37->1 37->1 38->1 39->1 40->1 40->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; int sort1 ( void const * data1 , void const * data2 ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int sort1 ( void const * data1 , void const * data2 ) { double * I1 ; double * I2 ; unsigned long _1_sort1_next ; { { _1_sort1_next = 5 ; } while ( 1 ) { switch ( _1_sort1_next ) { case 5 : I1 = ( double * ) data1 ; I2 = ( double * ) data2 ; { _1_sort1_next = 4 ; } break ; case 4 : ; if ( * ( I1 + 1 ) > * ( I2 + 1 ) ) { { _1_sort1_next = 3 ; } } else { { _1_sort1_next = 2 ; } } break ; case 3 : ; return ( 1 ) ; break ; case 2 : ; if ( * ( I1 + 1 ) < * ( I2 + 1 ) ) { { _1_sort1_next = 1 ; } } else { { _1_sort1_next = 0 ; } } break ; case 1 : ; return ( -1 ) ; break ; case 0 : ; return ( 0 ) ; break ; } } } } void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 1 <empty>
scanf scanf("%d", & n)
<operator>.assignment tmp = factorial(2 * n)
<operator>.assignment f1 = (long )tmp
<operator>.assignment tmp___0 = factorial(n + 1)
<operator>.assignment f2 = (long )tmp___0
<operator>.assignment tmp___1 = factorial(n)
<operator>.assignment f3 = (long )tmp___1
<operator>.assignment C = (float )(f1 / (f2 * f3))
printf printf("%0.2f"  (double )C)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
factorial factorial(2 * n)
<operator>.cast (long )tmp
factorial factorial(n + 1)
<operator>.cast (long )tmp___0
factorial factorial(n)
<operator>.cast (long )tmp___1
<operator>.cast (float )(f1 / (f2 * f3))
<operator>.cast (double )C
<operator>.multiplication 2 * n
<operator>.addition n + 1
<operator>.division f1 / (f2 * f3)
<operator>.multiplication f2 * f3
>>>PDG&42 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->18 0->20 0->22 0->24 0->25 0->26 0->27 0->28 0->29 0->31 0->32 0->33 0->34 0->35 0->37 0->38 0->39 0->40 0->41 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->32 16->34 16->38 16->39 17->1 17->1 17->18 17->31 18->1 18->1 18->40 19->1 19->1 19->20 19->33 20->1 20->1 20->41 21->1 21->1 21->22 21->35 22->1 22->1 22->41 23->1 23->1 23->24 23->37 24->1 24->1 27->1 28->1 28->1 29->27 30->1 30->17 31->1 32->1 32->19 33->1 34->1 34->16 34->21 34->38 35->1 36->1 37->1 38->30 38->30 38->32 38->34 38->39 40->1 40->1 40->23 40->23 40->36 40->36 41->1 41->1 41->40 41->40
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int ( /* missing proto */ factorial ) ( ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int ( /* missing proto */ scanf ) ( ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern double log ( double x ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { long f1 ; long f2 ; long f3 ; int n ; float C ; int tmp ; int tmp___0 ; int tmp___1 ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 1 ; } while ( 1 ) { switch ( _1_main_next ) { case 1 : scanf ( " " , & n ) ; tmp = factorial ( 2 * n ) ; f1 = ( long ) tmp ; tmp___0 = factorial ( n + 1 ) ; f2 = ( long ) tmp___0 ; tmp___1 = factorial ( n ) ; f3 = ( long ) tmp___1 ; C = ( float ) ( f1 / ( f2 * f3 ) ) ; printf ( " " , ( double ) C ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 1 <empty>
test test()
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
>>>PDG&22 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 19->1 20->1 20->1 21->19
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int ( /* missing proto */ test ) ( ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern double log ( double x ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 1 ; } while ( 1 ) { switch ( _1_main_next ) { case 1 : test ( ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 11
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 11 <empty>
<operator>.assignment sum = 0
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 9 <empty>
LITERAL 7 <empty>
<operator>.assignment j = 0
BLOCK <empty> <empty>
LITERAL 5 <empty>
LITERAL 3 <empty>
<operator>.assignmentPlus sum += j
<operator>.postIncrement j ++
BLOCK <empty> <empty>
LITERAL 2 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("Sum is: %d\n", sum)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 9
<operator>.lessThan i < (int )*(*(argv + 1) + 0)
<operator>.assignment _1_main_next = 5
<operator>.lessThan j < (int )*(*(argv + 1) + 0)
<operator>.assignment _1_main_next = 5
<operator>.assignment _1_main_next = 9
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.cast (int )*(*(argv + 1) + 0)
<operator>.assignment _1_main_next = 7
BLOCK <empty> <empty>
<operator>.cast (int )*(*(argv + 1) + 0)
<operator>.assignment _1_main_next = 3
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
<operator>.assignment _1_main_next = 2
<operator>.addition *(argv + 1) + 0
<operator>.addition *(argv + 1) + 0
<operator>.addition argv + 1
<operator>.addition argv + 1
>>>PDG&58 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->47 0->48 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 2->7 3->8 3->56 3->57 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->25 16->32 17->1 17->1 17->29 17->37 21->1 21->1 21->25 21->26 21->39 25->1 25->1 25->32 26->1 26->1 26->25 26->39 29->1 29->1 29->37 32->1 32->1 32->25 35->1 36->1 36->1 37->1 37->1 37->1 37->29 37->47 37->52 38->1 38->1 39->1 39->1 39->1 39->25 39->26 39->50 39->53 40->1 40->1 41->1 41->1 42->1 42->1 43->35 46->1 47->1 47->1 49->1 50->1 50->1 52->1 52->1 53->1 53->1 54->1 55->1 56->1 57->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int argc , char * * argv , char * * _formal_envp ) { int i ; int j ; int sum ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 11 ; } while ( 1 ) { switch ( _1_main_next ) { case 11 : sum = 0 ; i = 0 ; { _1_main_next = 9 ; } break ; case 9 : ; if ( i < ( int ) * ( * ( argv + 1 ) + 0 ) ) { { _1_main_next = 7 ; } } else { { _1_main_next = 1 ; } } break ; case 7 : j = 0 ; { _1_main_next = 5 ; } break ; case 5 : ; if ( j < ( int ) * ( * ( argv + 1 ) + 0 ) ) { { _1_main_next = 3 ; } } else { { _1_main_next = 2 ; } } break ; case 3 : sum += j ; j ++ ; { _1_main_next = 5 ; } break ; case 2 : i ++ ; { _1_main_next = 9 ; } break ; case 1 : printf ( " \n " , sum ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 8
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 8 <empty>
BLOCK <empty> <empty>
LITERAL 7 <empty>
LITERAL 6 <empty>
printf printf("Usage: program-name argument\n")
BLOCK <empty> <empty>
LITERAL 5 <empty>
RETURN return (1); return (1);
LITERAL 4 <empty>
<operator>.assignment c = (unsigned char )*(*(argv + 1) + 0)
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 2 <empty>
printf printf("win\n")
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("lose\n")
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 7
<operator>.lessThan argc < 2
<operator>.assignment _1_main_next = 5
LITERAL 1 return (1);
<operator>.assignment _1_main_next = 3
<operator>.greaterThan (int )c > 127
<operator>.assignment _1_main_next = 0
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
BLOCK <empty> <empty>
<operator>.cast (unsigned char )*(*(argv + 1) + 0)
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 6
BLOCK <empty> <empty>
<operator>.cast (int )c
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 4
<operator>.addition *(argv + 1) + 0
<operator>.assignment _1_main_next = 1
<operator>.addition argv + 1
>>>PDG&56 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 2->7 2->36 3->8 3->55 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 19->1 22->1 24->1 24->1 24->1 24->40 24->49 28->1 31->1 34->1 35->1 35->1 36->1 36->1 36->47 36->52 37->1 37->1 38->22 39->1 39->1 40->1 40->1 40->50 40->54 41->1 41->1 42->1 42->1 43->34 45->1 47->1 47->1 49->1 50->1 50->1 52->1 52->1 53->1 54->1 54->1 55->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int argc , char * * argv , char * * _formal_envp ) { unsigned char c ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 8 ; } while ( 1 ) { switch ( _1_main_next ) { case 8 : ; { _1_main_next = 7 ; } break ; case 7 : ; if ( argc < 2 ) { { _1_main_next = 6 ; } } else { { _1_main_next = 4 ; } } break ; case 6 : printf ( " \n " ) ; { _1_main_next = 5 ; } break ; case 5 : ; return ( 1 ) ; break ; case 4 : c = ( unsigned char ) * ( * ( argv + 1 ) + 0 ) ; { _1_main_next = 3 ; } break ; case 3 : ; if ( ( int ) c > 127 ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : printf ( " \n " ) ; { _1_main_next = 0 ; } break ; case 1 : printf ( " \n " ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD decimal2Octal
METHOD_RETURN void
PARAM long decimalnum
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_decimal2Octal_next = 11
LITERAL 1 while (1)
IDENTIFIER _1_decimal2Octal_next switch(_1_decimal2Octal_next)
LITERAL 11 <empty>
<operator>.assignment i = 1
<operator>.assignment quotient = decimalnum
BLOCK <empty> <empty>
LITERAL 9 <empty>
LITERAL 7 <empty>
<operator>.assignment tmp = i
<operator>.postIncrement i ++
<operator>.assignment octalNumber[tmp] = (int )(quotient % 8L)
<operator>.assignmentDivision quotient /= 8L
BLOCK <empty> <empty>
LITERAL 6 <empty>
<operator>.assignment j = i - 1
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
printf printf("%d", octalNumber[j])
<operator>.postDecrement j --
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("\n")
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return; return;
<operator>.assignment _1_decimal2Octal_next = 9
<operator>.notEquals quotient != 0L
<operator>.assignment _1_decimal2Octal_next = 9
<operator>.assignment _1_decimal2Octal_next = 4
<operator>.greaterThan j > 0
<operator>.assignment _1_decimal2Octal_next = 4
<operator>.assignment _1_decimal2Octal_next = 0
BLOCK <empty> <empty>
<operator>.cast (int )(quotient % 8L)
<operator>.subtraction i - 1
BLOCK <empty> <empty>
<operator>.assignment _1_decimal2Octal_next = 7
BLOCK <empty> <empty>
<operator>.modulo quotient % 8L
<operator>.assignment _1_decimal2Octal_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_decimal2Octal_next = 6
<operator>.assignment _1_decimal2Octal_next = 1
>>>PDG&50 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->17 0->18 0->19 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 2->1 2->10 5->1 5->1 9->1 9->1 9->14 9->15 9->41 10->1 10->1 10->1 10->33 10->45 14->1 14->1 15->1 15->1 15->14 15->41 16->1 16->1 16->1 17->1 17->1 17->33 17->45 20->1 20->1 20->1 20->25 20->36 24->1 24->1 25->1 25->1 25->36 28->1 31->1 32->1 32->1 33->1 33->1 33->43 33->45 33->48 34->1 34->1 35->1 35->1 36->1 36->1 36->25 36->46 36->49 37->1 37->1 38->1 38->1 40->1 41->1 41->14 41->15 41->20 41->20 43->1 43->1 45->16 45->16 45->17 45->40 45->40 46->1 46->1 48->1 48->1 49->1 49->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; void decimal2Octal ( long decimalnum ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void decimal2Octal ( long decimalnum ) { long quotient ; int octalNumber [ 100 ] ; int i ; int j ; int tmp ; unsigned long _1_decimal2Octal_next ; { { _1_decimal2Octal_next = 11 ; } while ( 1 ) { switch ( _1_decimal2Octal_next ) { case 11 : i = 1 ; quotient = decimalnum ; { _1_decimal2Octal_next = 9 ; } break ; case 9 : ; if ( quotient != 0L ) { { _1_decimal2Octal_next = 7 ; } } else { { _1_decimal2Octal_next = 6 ; } } break ; case 7 : tmp = i ; i ++ ; octalNumber [ tmp ] = ( int ) ( quotient % 8L ) ; quotient /= 8L ; { _1_decimal2Octal_next = 9 ; } break ; case 6 : j = i - 1 ; { _1_decimal2Octal_next = 4 ; } break ; case 4 : ; if ( j > 0 ) { { _1_decimal2Octal_next = 2 ; } } else { { _1_decimal2Octal_next = 1 ; } } break ; case 2 : printf ( " " , octalNumber [ j ] ) ; j -- ; { _1_decimal2Octal_next = 4 ; } break ; case 1 : printf ( " \n " ) ; { _1_decimal2Octal_next = 0 ; } break ; case 0 : ; return ; break ; } } } } void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } }
>>>Func
METHOD compare_asc
METHOD_RETURN int
PARAM void const   *x1
PARAM void const   *x2
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_compare_asc_next = 7
LITERAL 1 while (1)
IDENTIFIER _1_compare_asc_next switch(_1_compare_asc_next)
LITERAL 7 <empty>
<operator>.assignment t1 = *((int *)x1)
<operator>.assignment t2 = *((int *)x2)
BLOCK <empty> <empty>
LITERAL 6 <empty>
LITERAL 5 <empty>
RETURN return (-1); return (-1);
LITERAL 4 <empty>
LITERAL 3 <empty>
RETURN return (1); return (1);
LITERAL 2 <empty>
LITERAL 1 <empty>
RETURN return (0); return (0);
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_compare_asc_next = 6
<operator>.lessThan t1 < t2
<operator>.minus -1
<operator>.greaterThan t1 > t2
LITERAL 1 return (1);
<operator>.equals t1 == t2
LITERAL 0 return (0);
LITERAL 0 return (0);
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.cast (int *)x1
<operator>.cast (int *)x2
<operator>.assignment _1_compare_asc_next = 5
BLOCK <empty> <empty>
<operator>.assignment _1_compare_asc_next = 3
BLOCK <empty> <empty>
<operator>.assignment _1_compare_asc_next = 1
BLOCK <empty> <empty>
<operator>.assignment _1_compare_asc_next = 4
<operator>.assignment _1_compare_asc_next = 2
<operator>.assignment _1_compare_asc_next = 0
>>>PDG&46 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->12 0->13 0->14 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 2->1 2->35 3->1 3->36 6->1 6->1 10->1 10->1 10->1 10->25 10->27 10->29 11->1 11->1 11->1 11->25 11->27 11->29 15->1 18->1 21->1 23->1 24->1 24->1 25->1 25->1 25->1 25->27 25->27 25->29 25->29 25->37 25->43 26->1 26->15 27->1 27->1 27->1 27->25 27->25 27->29 27->29 27->39 27->44 28->18 29->1 29->1 29->1 29->25 29->25 29->27 29->27 29->41 29->45 30->21 31->23 35->1 36->1 37->1 37->1 39->1 39->1 41->1 41->1 43->1 43->1 44->1 44->1 45->1 45->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; int compare_asc ( void const * x1 , void const * x2 ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int compare_asc ( void const * x1 , void const * x2 ) { int t1 ; int t2 ; unsigned long _1_compare_asc_next ; { { _1_compare_asc_next = 7 ; } while ( 1 ) { switch ( _1_compare_asc_next ) { case 7 : t1 = * ( ( int * ) x1 ) ; t2 = * ( ( int * ) x2 ) ; { _1_compare_asc_next = 6 ; } break ; case 6 : ; if ( t1 < t2 ) { { _1_compare_asc_next = 5 ; } } else { { _1_compare_asc_next = 4 ; } } break ; case 5 : ; return ( -1 ) ; break ; case 4 : ; if ( t1 > t2 ) { { _1_compare_asc_next = 3 ; } } else { { _1_compare_asc_next = 2 ; } } break ; case 3 : ; return ( 1 ) ; break ; case 2 : ; if ( t1 == t2 ) { { _1_compare_asc_next = 1 ; } } else { { _1_compare_asc_next = 0 ; } } break ; case 1 : ; return ( 0 ) ; break ; case 0 : ; return ( 0 ) ; break ; } } } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD rotate
METHOD_RETURN void
PARAM int *nums
PARAM int numsSize
PARAM int k
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_rotate_next = 10
LITERAL 1 while (1)
IDENTIFIER _1_rotate_next switch(_1_rotate_next)
LITERAL 10 <empty>
<operator>.assignment i = 1
BLOCK <empty> <empty>
LITERAL 8 <empty>
LITERAL 6 <empty>
<operator>.assignment lastElement = *(nums + (numsSize - 1))
<operator>.assignment j = numsSize - 1
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
<operator>.assignment *(nums + j) = *(nums + (j - 1))
<operator>.postDecrement j --
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operator>.assignment *(nums + 0) = lastElement
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return; return;
<operator>.assignment _1_rotate_next = 8
<operator>.lessEqualsThan i <= k
<operator>.assignment _1_rotate_next = 4
<operator>.greaterThan j > 0
<operator>.assignment _1_rotate_next = 4
<operator>.assignment _1_rotate_next = 8
BLOCK <empty> <empty>
<operator>.subtraction numsSize - 1
BLOCK <empty> <empty>
<operator>.assignment _1_rotate_next = 6
BLOCK <empty> <empty>
<operator>.addition nums + (numsSize - 1)
<operator>.assignment _1_rotate_next = 2
BLOCK <empty> <empty>
<operator>.addition nums + j
<operator>.addition nums + (j - 1)
<operator>.addition nums + 0
<operator>.assignment _1_rotate_next = 0
<operator>.subtraction numsSize - 1
<operator>.assignment _1_rotate_next = 1
<operator>.subtraction j - 1
>>>PDG&50 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->17 0->18 0->19 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 2->1 2->40 2->43 2->44 2->45 3->1 3->47 4->1 4->30 7->1 7->1 11->1 11->1 11->25 11->30 15->1 15->1 15->1 15->24 16->1 16->1 16->1 16->32 16->43 16->49 20->1 20->1 20->1 21->1 21->1 21->32 21->43 21->49 24->1 24->1 24->1 25->1 25->1 25->30 28->1 29->1 29->1 30->1 30->1 30->1 30->25 30->38 30->46 31->1 31->1 32->1 32->1 32->41 32->43 32->48 32->49 33->1 33->1 34->1 34->1 36->1 36->16 36->16 36->47 38->1 38->1 40->1 41->1 41->1 44->1 44->1 45->1 46->1 46->1 47->36 47->40 47->40 48->1 48->1 49->21 49->44 49->44
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; void rotate ( int * nums , int numsSize , int k ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void rotate ( int * nums , int numsSize , int k ) { int i ; int j ; int lastElement ; unsigned long _1_rotate_next ; { { _1_rotate_next = 10 ; } while ( 1 ) { switch ( _1_rotate_next ) { case 10 : i = 1 ; { _1_rotate_next = 8 ; } break ; case 8 : ; if ( i <= k ) { { _1_rotate_next = 6 ; } } else { { _1_rotate_next = 0 ; } } break ; case 6 : lastElement = * ( nums + ( numsSize - 1 ) ) ; j = numsSize - 1 ; { _1_rotate_next = 4 ; } break ; case 4 : ; if ( j > 0 ) { { _1_rotate_next = 2 ; } } else { { _1_rotate_next = 1 ; } } break ; case 2 : * ( nums + j ) = * ( nums + ( j - 1 ) ) ; j -- ; { _1_rotate_next = 4 ; } break ; case 1 : * ( nums + 0 ) = lastElement ; i ++ ; { _1_rotate_next = 8 ; } break ; case 0 : ; return ; break ; } } } } void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } }
>>>Func
METHOD max
METHOD_RETURN double
PARAM double n1
PARAM double n2
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_max_next = 3
LITERAL 1 while (1)
IDENTIFIER _1_max_next switch(_1_max_next)
LITERAL 3 <empty>
LITERAL 2 <empty>
RETURN return (n1); return (n1);
LITERAL 1 <empty>
RETURN return (n2); return (n2);
<operator>.greaterThan n1 > n2
IDENTIFIER n1 return (n1);
IDENTIFIER n2 return (n2);
BLOCK <empty> <empty>
<operator>.assignment _1_max_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_max_next = 1
>>>PDG&21 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->12 0->14 0->15 0->16 0->17 0->18 0->19 0->20 2->1 2->14 2->15 3->1 3->14 3->16 6->1 6->1 11->1 13->1 14->1 14->1 14->1 14->15 14->16 14->18 14->20 15->11 16->13 18->1 18->1 20->1 20->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; double max ( double n1 , double n2 ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } double max ( double n1 , double n2 ) { unsigned long _1_max_next ; { { _1_max_next = 3 ; } while ( 1 ) { switch ( _1_max_next ) { case 3 : ; if ( n1 > n2 ) { { _1_max_next = 2 ; } } else { { _1_max_next = 1 ; } } break ; case 2 : ; return ( n1 ) ; break ; case 1 : ; return ( n2 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD cmpval
METHOD_RETURN int
PARAM void const   *a
PARAM void const   *b
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_cmpval_next = 0
LITERAL 1 while (1)
IDENTIFIER _1_cmpval_next switch(_1_cmpval_next)
LITERAL 0 <empty>
RETURN return (*((int *)a) - *((int *)b)); return (*((int *)a) - *((int *)b));
<operator>.subtraction *((int *)a) - *((int *)b)
<operator>.cast (int *)a
<operator>.cast (int *)b
>>>PDG&14 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->12 0->13 2->12 3->13 6->1 6->1 10->1 11->1 11->1 11->1 11->10 12->1 13->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; int cmpval ( void const * a , void const * b ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int cmpval ( void const * a , void const * b ) { unsigned long _1_cmpval_next ; { { _1_cmpval_next = 0 ; } while ( 1 ) { switch ( _1_cmpval_next ) { case 0 : ; return ( * ( ( int * ) a ) - * ( ( int * ) b ) ) ; break ; } } } } void megaInit ( void ) { { } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 6
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 6 <empty>
<operator>.assignment size = 6
<operator>.assignment tmp = malloc((unsigned long )size * sizeof(int ))
<operator>.assignment numbers = (int *)tmp
printf printf("Insert %d unsorted numbers: \n", size)
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
scanf scanf("%d", numbers + i)
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("Initial array: ")
display display(numbers, size)
sort sort(numbers, size)
printf printf("Sorted array: ")
display display(numbers, size)
free free(numbers)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 4
<operator>.lessThan i < size
<operator>.assignment _1_main_next = 4
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
malloc malloc((unsigned long )size * sizeof(int ))
<operator>.cast (int *)tmp
BLOCK <empty> <empty>
<operator>.addition numbers + i
<operator>.multiplication (unsigned long )size * sizeof(int )
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.cast (unsigned long )size
<operator>.sizeOf sizeof(int )
<operator>.assignment _1_main_next = 1
>>>PDG&52 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->51 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->19 16->46 16->49 17->1 17->1 17->18 17->43 18->1 18->1 18->1 18->24 18->29 18->45 19->1 19->1 19->29 19->38 20->1 20->1 20->24 20->25 20->38 20->45 24->1 25->1 25->1 25->24 25->38 25->45 28->1 29->30 29->30 30->1 30->32 30->32 31->1 32->1 32->1 32->29 32->33 32->38 33->1 33->24 33->29 33->45 36->1 37->1 37->1 38->1 38->1 38->1 38->24 38->25 38->29 38->45 38->47 38->51 39->1 39->1 40->1 40->1 41->36 42->1 42->17 43->1 45->1 46->1 46->42 47->1 47->1 50->1 51->1 51->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int ( /* missing proto */ sort ) ( ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern int ( /* missing proto */ malloc ) ( ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern double ceil ( double x ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern int ( /* missing proto */ free ) ( ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int ( /* missing proto */ scanf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int ( /* missing proto */ display ) ( ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { int size ; int * numbers ; int tmp ; int i ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 6 ; } while ( 1 ) { switch ( _1_main_next ) { case 6 : size = 6 ; tmp = malloc ( ( unsigned long ) size * sizeof ( int ) ) ; numbers = ( int * ) tmp ; printf ( " \n " , size ) ; i = 0 ; { _1_main_next = 4 ; } break ; case 4 : ; if ( i < size ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : scanf ( " " , numbers + i ) ; i ++ ; { _1_main_next = 4 ; } break ; case 1 : printf ( " " ) ; display ( numbers , size ) ; sort ( numbers , size ) ; printf ( " " ) ; display ( numbers , size ) ; free ( numbers ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD maxNumberOfBalloons
METHOD_RETURN int
PARAM char *text
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_maxNumberOfBalloons_next = 27
LITERAL 1 while (1)
IDENTIFIER _1_maxNumberOfBalloons_next switch(_1_maxNumberOfBalloons_next)
LITERAL 27 <empty>
<operator>.assignment count_letters[0] = 0
<operator>.assignment tmp = 1U
BLOCK <empty> <empty>
LITERAL 25 <empty>
LITERAL 23 <empty>
<operator>.assignment count_letters[tmp] = 0
<operator>.postIncrement tmp ++
BLOCK <empty> <empty>
LITERAL 22 <empty>
<operator>.assignment ptr = text
BLOCK <empty> <empty>
LITERAL 20 <empty>
LITERAL 18 <empty>
LITERAL 17 <empty>
<operator>.postIncrement (count_letters[0]) ++
BLOCK <empty> <empty>
LITERAL 16 <empty>
LITERAL 15 <empty>
<operator>.postIncrement (count_letters[1]) ++
BLOCK <empty> <empty>
LITERAL 14 <empty>
LITERAL 13 <empty>
<operator>.postIncrement (count_letters[2]) ++
BLOCK <empty> <empty>
LITERAL 12 <empty>
LITERAL 11 <empty>
<operator>.postIncrement (count_letters[3]) ++
BLOCK <empty> <empty>
LITERAL 10 <empty>
LITERAL 9 <empty>
<operator>.postIncrement (count_letters[4]) ++
BLOCK <empty> <empty>
LITERAL 8 <empty>
<operator>.postIncrement ptr ++
BLOCK <empty> <empty>
LITERAL 7 <empty>
<operator>.assignmentDivision count_letters[2] /= 2
<operator>.assignmentDivision count_letters[3] /= 2
<operator>.assignment min_counter_ballons = count_letters[0]
<operator>.assignment i = 1
BLOCK <empty> <empty>
LITERAL 5 <empty>
LITERAL 3 <empty>
LITERAL 2 <empty>
<operator>.assignment min_counter_ballons = count_letters[i]
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (min_counter_ballons); return (min_counter_ballons);
<operator>.assignment _1_maxNumberOfBalloons_next = 25
<operator>.greaterEqualsThan tmp >= 5U
<operator>.assignment _1_maxNumberOfBalloons_next = 25
<operator>.assignment _1_maxNumberOfBalloons_next = 20
<operator>.equals (int )*ptr == 98
<operator>.assignment _1_maxNumberOfBalloons_next = 8
<operator>.equals (int )*ptr == 97
<operator>.assignment _1_maxNumberOfBalloons_next = 8
<operator>.equals (int )*ptr == 108
<operator>.assignment _1_maxNumberOfBalloons_next = 8
<operator>.equals (int )*ptr == 111
<operator>.assignment _1_maxNumberOfBalloons_next = 8
<operator>.equals (int )*ptr == 110
<operator>.assignment _1_maxNumberOfBalloons_next = 8
<operator>.assignment _1_maxNumberOfBalloons_next = 20
<operator>.assignment _1_maxNumberOfBalloons_next = 5
<operator>.lessThan i < 5
<operator>.lessThan count_letters[i] < min_counter_ballons
<operator>.assignment _1_maxNumberOfBalloons_next = 1
<operator>.assignment _1_maxNumberOfBalloons_next = 5
IDENTIFIER min_counter_ballons return (min_counter_ballons);
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_maxNumberOfBalloons_next = 22
BLOCK <empty> <empty>
<operator>.assignment _1_maxNumberOfBalloons_next = 18
BLOCK <empty> <empty>
<operator>.cast (int )*ptr
<operator>.assignment _1_maxNumberOfBalloons_next = 17
BLOCK <empty> <empty>
<operator>.cast (int )*ptr
<operator>.assignment _1_maxNumberOfBalloons_next = 15
BLOCK <empty> <empty>
<operator>.cast (int )*ptr
<operator>.assignment _1_maxNumberOfBalloons_next = 13
BLOCK <empty> <empty>
<operator>.cast (int )*ptr
<operator>.assignment _1_maxNumberOfBalloons_next = 11
BLOCK <empty> <empty>
<operator>.cast (int )*ptr
<operator>.assignment _1_maxNumberOfBalloons_next = 9
BLOCK <empty> <empty>
<operator>.assignment _1_maxNumberOfBalloons_next = 3
BLOCK <empty> <empty>
<operator>.assignment _1_maxNumberOfBalloons_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_maxNumberOfBalloons_next = 23
<operator>.assignment _1_maxNumberOfBalloons_next = 7
<operator>.assignment _1_maxNumberOfBalloons_next = 16
<operator>.assignment _1_maxNumberOfBalloons_next = 14
<operator>.assignment _1_maxNumberOfBalloons_next = 12
<operator>.assignment _1_maxNumberOfBalloons_next = 10
<operator>.assignment _1_maxNumberOfBalloons_next = 8
<operator>.assignment _1_maxNumberOfBalloons_next = 0
<operator>.assignment _1_maxNumberOfBalloons_next = 1
<operator>.indirection *ptr
>>>PDG&123 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->24 0->25 0->26 0->28 0->29 0->30 0->32 0->33 0->34 0->36 0->37 0->38 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->48 0->49 0->50 0->51 0->52 0->54 0->55 0->56 0->57 0->58 0->60 0->61 0->62 0->63 0->64 0->65 0->66 0->67 0->68 0->69 0->70 0->71 0->72 0->73 0->74 0->75 0->76 0->77 0->78 0->79 0->80 0->81 0->82 0->83 0->84 0->85 0->86 0->87 0->88 0->89 0->90 0->91 0->92 0->93 0->95 0->96 0->98 0->99 0->101 0->102 0->104 0->105 0->107 0->108 0->109 0->110 0->111 0->112 0->113 0->114 0->115 0->116 0->117 0->118 0->119 0->120 0->121 2->1 2->18 5->1 5->1 9->1 9->1 9->23 9->47 10->1 10->1 10->15 10->61 14->1 14->1 15->1 15->1 15->61 18->1 18->1 18->1 18->42 23->1 23->1 23->47 27->1 27->1 31->1 31->1 31->45 35->1 35->1 35->46 39->1 39->1 42->1 42->1 45->1 45->1 45->31 46->1 46->1 46->35 47->1 47->1 47->1 47->77 47->80 48->1 48->1 48->56 48->76 53->1 53->1 53->1 53->77 53->80 56->1 56->1 56->76 59->1 60->1 60->1 61->1 61->1 61->15 61->90 61->113 62->1 62->1 63->1 63->1 64->1 64->1 64->95 64->115 65->1 65->1 66->1 66->1 66->98 66->116 67->1 67->1 68->1 68->1 68->101 68->117 69->1 69->1 70->1 70->1 70->104 70->118 71->1 71->1 72->1 72->1 72->107 72->119 73->1 73->1 74->1 74->1 75->1 75->1 76->1 76->1 76->56 76->109 76->120 77->1 77->1 77->1 77->53 77->80 77->111 77->121 78->1 78->1 79->1 79->1 80->59 90->1 90->1 92->1 92->1 94->1 95->1 95->1 97->1 98->1 98->1 100->1 101->1 101->1 103->1 104->1 104->1 106->1 107->1 107->1 109->1 109->1 111->1 111->1 113->1 113->1 114->1 114->1 115->1 115->1 116->1 116->1 117->1 117->1 118->1 118->1 119->1 119->1 120->1 120->1 121->1 121->1 122->92 122->114
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; int maxNumberOfBalloons ( char * text ) ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int maxNumberOfBalloons ( char * text ) { int count_letters [ 5 ] ; unsigned int tmp ; int i ; int min_counter_ballons ; char * ptr ; unsigned long _1_maxNumberOfBalloons_next ; { { _1_maxNumberOfBalloons_next = 27 ; } while ( 1 ) { switch ( _1_maxNumberOfBalloons_next ) { case 27 : count_letters [ 0 ] = 0 ; tmp = 1U ; { _1_maxNumberOfBalloons_next = 25 ; } break ; case 25 : ; if ( tmp >= 5U ) { { _1_maxNumberOfBalloons_next = 22 ; } } else { { _1_maxNumberOfBalloons_next = 23 ; } } break ; case 23 : count_letters [ tmp ] = 0 ; tmp ++ ; { _1_maxNumberOfBalloons_next = 25 ; } break ; case 22 : ptr = text ; { _1_maxNumberOfBalloons_next = 20 ; } break ; case 20 : ; if ( * ptr ) { { _1_maxNumberOfBalloons_next = 18 ; } } else { { _1_maxNumberOfBalloons_next = 7 ; } } break ; case 18 : ; if ( ( int ) * ptr == 98 ) { { _1_maxNumberOfBalloons_next = 17 ; } } else { { _1_maxNumberOfBalloons_next = 16 ; } } break ; case 17 : ( count_letters [ 0 ] ) ++ ; { _1_maxNumberOfBalloons_next = 8 ; } break ; case 16 : ; if ( ( int ) * ptr == 97 ) { { _1_maxNumberOfBalloons_next = 15 ; } } else { { _1_maxNumberOfBalloons_next = 14 ; } } break ; case 15 : ( count_letters [ 1 ] ) ++ ; { _1_maxNumberOfBalloons_next = 8 ; } break ; case 14 : ; if ( ( int ) * ptr == 108 ) { { _1_maxNumberOfBalloons_next = 13 ; } } else { { _1_maxNumberOfBalloons_next = 12 ; } } break ; case 13 : ( count_letters [ 2 ] ) ++ ; { _1_maxNumberOfBalloons_next = 8 ; } break ; case 12 : ; if ( ( int ) * ptr == 111 ) { { _1_maxNumberOfBalloons_next = 11 ; } } else { { _1_maxNumberOfBalloons_next = 10 ; } } break ; case 11 : ( count_letters [ 3 ] ) ++ ; { _1_maxNumberOfBalloons_next = 8 ; } break ; case 10 : ; if ( ( int ) * ptr == 110 ) { { _1_maxNumberOfBalloons_next = 9 ; } } else { { _1_maxNumberOfBalloons_next = 8 ; } } break ; case 9 : ( count_letters [ 4 ] ) ++ ; { _1_maxNumberOfBalloons_next = 8 ; } break ; case 8 : ptr ++ ; { _1_maxNumberOfBalloons_next = 20 ; } break ; case 7 : count_letters [ 2 ] /= 2 ; count_letters [ 3 ] /= 2 ; min_counter_ballons = count_letters [ 0 ] ; i = 1 ; { _1_maxNumberOfBalloons_next = 5 ; } break ; case 5 : ; if ( i < 5 ) { { _1_maxNumberOfBalloons_next = 3 ; } } else { { _1_maxNumberOfBalloons_next = 0 ; } } break ; case 3 : ; if ( count_letters [ i ] < min_counter_ballons ) { { _1_maxNumberOfBalloons_next = 2 ; } } else { { _1_maxNumberOfBalloons_next = 1 ; } } break ; case 2 : min_counter_ballons = count_letters [ i ] ; { _1_maxNumberOfBalloons_next = 1 ; } break ; case 1 : i ++ ; { _1_maxNumberOfBalloons_next = 5 ; } break ; case 0 : ; return ( min_counter_ballons ) ; break ; } } } } void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } }
>>>Func
METHOD build_maxheap
METHOD_RETURN void
PARAM int *a
PARAM int n
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_build_maxheap_next = 5
LITERAL 1 while (1)
IDENTIFIER _1_build_maxheap_next switch(_1_build_maxheap_next)
LITERAL 5 <empty>
<operator>.assignment i = n / 2
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 1 <empty>
max_heapify max_heapify(a, i, n)
<operator>.postDecrement i --
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return; return;
<operator>.assignment _1_build_maxheap_next = 3
<operator>.greaterEqualsThan i >= 1
<operator>.assignment _1_build_maxheap_next = 3
<operator>.division n / 2
BLOCK <empty> <empty>
<operator>.assignment _1_build_maxheap_next = 1
BLOCK <empty> <empty>
<operator>.assignment _1_build_maxheap_next = 0
>>>PDG&27 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 2->1 2->14 3->1 3->14 3->22 6->1 6->1 10->1 10->1 10->1 10->14 10->20 14->1 14->1 14->1 14->15 14->22 15->1 15->1 15->14 15->20 18->1 19->1 19->1 20->1 20->1 20->14 20->24 20->26 21->1 21->1 22->1 22->10 22->10 22->14 24->1 24->1 26->1 26->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern int ( /* missing proto */ max_heapify ) ( ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; void build_maxheap ( int * a , int n ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void build_maxheap ( int * a , int n ) { int i ; unsigned long _1_build_maxheap_next ; { { _1_build_maxheap_next = 5 ; } while ( 1 ) { switch ( _1_build_maxheap_next ) { case 5 : i = n / 2 ; { _1_build_maxheap_next = 3 ; } break ; case 3 : ; if ( i >= 1 ) { { _1_build_maxheap_next = 1 ; } } else { { _1_build_maxheap_next = 0 ; } } break ; case 1 : max_heapify ( a , i , n ) ; i -- ; { _1_build_maxheap_next = 3 ; } break ; case 0 : ; return ; break ; } } } } void megaInit ( void ) { { } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 6
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 6 <empty>
<operator>.assignment sum = 0
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
<operator>.assignmentPlus sum += i
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("Sum is: %d\n", sum)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 4
<operator>.lessThan i < argc
<operator>.assignment _1_main_next = 4
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
>>>PDG&38 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 2->7 2->30 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->21 16->25 17->1 17->1 17->21 17->22 17->30 21->1 21->1 21->25 22->1 22->1 22->21 22->30 25->1 25->1 25->21 28->1 29->1 29->1 30->1 30->1 30->1 30->21 30->22 30->35 30->37 31->1 31->1 32->1 32->1 33->28 35->1 35->1 37->1 37->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern double log ( double x ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int argc , char * * argv , char * * _formal_envp ) { int i ; int sum ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 6 ; } while ( 1 ) { switch ( _1_main_next ) { case 6 : sum = 0 ; i = 0 ; { _1_main_next = 4 ; } break ; case 4 : ; if ( i < argc ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : sum += i ; i ++ ; { _1_main_next = 4 ; } break ; case 1 : printf ( " \n " , sum ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD test_c_atoi
METHOD_RETURN void
PARAM void
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_test_c_atoi_next = 1
LITERAL 1 while (1)
IDENTIFIER _1_test_c_atoi_next switch(_1_test_c_atoi_next)
LITERAL 1 <empty>
printf printf("<<<< TEST FUNCTION >>>>\n")
<operator>.assignment tmp = c_atoi("123")
<operator>.assignment tmp___0 = atoi("123")
assert assert(tmp == tmp___0)
<operator>.assignment tmp___1 = c_atoi("-123")
<operator>.assignment tmp___2 = atoi("-123")
assert assert(tmp___1 == tmp___2)
<operator>.assignment tmp___3 = c_atoi("")
<operator>.assignment tmp___4 = atoi("")
assert assert(tmp___3 == tmp___4)
<operator>.assignment tmp___5 = c_atoi("-h23")
<operator>.assignment tmp___6 = atoi("-h23")
assert assert(tmp___5 == tmp___6)
<operator>.assignment tmp___7 = c_atoi("         23")
<operator>.assignment tmp___8 = atoi("         23")
assert assert(tmp___7 == tmp___8)
<operator>.assignment tmp___9 = c_atoi("999999999")
<operator>.assignment tmp___10 = atoi("999999999")
assert assert(tmp___9 == tmp___10)
printf printf("<<<< TEST DONE >>>>\n")
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return; return;
<operator>.assignment _1_test_c_atoi_next = 0
c_atoi c_atoi("123")
atoi atoi("123")
<operator>.equals tmp == tmp___0
c_atoi c_atoi("-123")
atoi atoi("-123")
<operator>.equals tmp___1 == tmp___2
c_atoi c_atoi("")
atoi atoi("")
<operator>.equals tmp___3 == tmp___4
c_atoi c_atoi("-h23")
atoi atoi("-h23")
<operator>.equals tmp___5 == tmp___6
c_atoi c_atoi("         23")
atoi atoi("         23")
<operator>.equals tmp___7 == tmp___8
c_atoi c_atoi("999999999")
atoi atoi("999999999")
<operator>.equals tmp___9 == tmp___10
>>>PDG&51 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 2->1 5->1 5->1 9->1 10->1 10->1 10->35 11->1 11->1 11->35 12->1 12->1 13->1 13->1 13->38 14->1 14->1 14->38 15->1 15->1 16->1 16->1 16->41 17->1 17->1 17->41 18->1 18->1 19->1 19->1 19->44 20->1 20->1 20->44 21->1 21->1 22->1 22->1 22->47 23->1 23->1 23->47 24->1 24->1 25->1 25->1 25->50 26->1 26->1 26->50 27->1 27->1 28->1 31->1 32->1 32->1 33->10 34->11 35->1 35->1 35->12 35->12 36->13 37->14 38->1 38->1 38->15 38->15 39->16 40->17 41->1 41->1 41->18 41->18 42->19 43->20 44->1 44->1 44->21 44->21 45->22 46->23 47->1 47->1 47->24 47->24 48->25 49->26 50->1 50->1 50->27 50->27
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int ( /* missing proto */ assert ) ( ) ; void test_c_atoi ( void ) ; extern int raise ( int sig ) ; extern int ( /* missing proto */ c_atoi ) ( ) ; extern void abort ( ) ; extern int ( /* missing proto */ atoi ) ( ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void test_c_atoi ( void ) { int tmp ; int tmp___0 ; int tmp___1 ; int tmp___2 ; int tmp___3 ; int tmp___4 ; int tmp___5 ; int tmp___6 ; int tmp___7 ; int tmp___8 ; int tmp___9 ; int tmp___10 ; unsigned long _1_test_c_atoi_next ; { { _1_test_c_atoi_next = 1 ; } while ( 1 ) { switch ( _1_test_c_atoi_next ) { case 1 : printf ( " \n " ) ; tmp = c_atoi ( " " ) ; tmp___0 = atoi ( " " ) ; assert ( tmp == tmp___0 ) ; tmp___1 = c_atoi ( " " ) ; tmp___2 = atoi ( " " ) ; assert ( tmp___1 == tmp___2 ) ; tmp___3 = c_atoi ( " " ) ; tmp___4 = atoi ( " " ) ; assert ( tmp___3 == tmp___4 ) ; tmp___5 = c_atoi ( " " ) ; tmp___6 = atoi ( " " ) ; assert ( tmp___5 == tmp___6 ) ; tmp___7 = c_atoi ( " " ) ; tmp___8 = atoi ( " " ) ; assert ( tmp___7 == tmp___8 ) ; tmp___9 = c_atoi ( " " ) ; tmp___10 = atoi ( " " ) ; assert ( tmp___9 == tmp___10 ) ; printf ( " \n " ) ; { _1_test_c_atoi_next = 0 ; } break ; case 0 : ; return ; break ; } } } } void megaInit ( void ) { { } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 1 <empty>
example example()
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
>>>PDG&22 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 19->1 20->1 20->1 21->19
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; extern int ( /* missing proto */ example ) ( ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern double log ( double x ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 1 ; } while ( 1 ) { switch ( _1_main_next ) { case 1 : example ( ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 9
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 9 <empty>
<operator>.assignment sum = 0
<operator>.assignment str = (char const   *)*(argv + 1)
<operator>.assignment t = str
BLOCK <empty> <empty>
LITERAL 7 <empty>
LITERAL 5 <empty>
<operator>.assignmentPlus sum += (int )*t
<operator>.postIncrement t ++
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 3 <empty>
<operator>.assignmentPlus sum += (int )*t
BLOCK <empty> <empty>
LITERAL 2 <empty>
<operator>.assignmentMultiplication sum *= (int )*t
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("Sum is: %d\n", sum)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 7
<operator>.assignment _1_main_next = 7
<operator>.greaterThan argc > 127
<operator>.assignment _1_main_next = 1
<operator>.assignment _1_main_next = 1
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
<operator>.cast (char const   *)*(argv + 1)
BLOCK <empty> <empty>
<operator>.cast (int )*t
BLOCK <empty> <empty>
<operator>.cast (int )*t
<operator>.cast (int )*t
<operator>.assignment _1_main_next = 5
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 3
BLOCK <empty> <empty>
<operator>.addition argv + 1
<operator>.assignment _1_main_next = 4
<operator>.assignment _1_main_next = 2
<operator>.indirection *t
>>>PDG&58 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->45 0->47 0->50 0->51 0->52 0->53 0->54 0->55 0->56 2->7 2->39 3->8 3->54 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->22 16->27 16->30 16->33 17->1 17->1 17->18 18->1 18->1 18->1 18->23 22->1 22->1 22->1 22->27 22->30 22->33 23->1 23->1 27->1 27->1 27->1 27->22 27->30 27->33 30->1 30->1 30->1 30->22 30->27 30->33 33->1 33->1 33->22 33->27 33->30 36->1 37->1 37->1 38->1 38->1 39->1 39->1 39->52 39->56 40->1 40->1 41->1 41->1 42->1 42->1 43->36 44->1 46->1 48->1 49->1 50->1 50->1 52->1 52->1 54->1 55->1 55->1 56->1 56->1 57->50 57->55
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int argc , char * * argv , char * * _formal_envp ) { int sum ; char const * str ; register char const * t ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 9 ; } while ( 1 ) { switch ( _1_main_next ) { case 9 : sum = 0 ; str = ( char const * ) * ( argv + 1 ) ; t = str ; { _1_main_next = 7 ; } break ; case 7 : ; if ( * t ) { { _1_main_next = 5 ; } } else { { _1_main_next = 4 ; } } break ; case 5 : sum += ( int ) * t ; t ++ ; { _1_main_next = 7 ; } break ; case 4 : ; if ( argc > 127 ) { { _1_main_next = 3 ; } } else { { _1_main_next = 2 ; } } break ; case 3 : sum += ( int ) * t ; { _1_main_next = 1 ; } break ; case 2 : sum *= ( int ) * t ; { _1_main_next = 1 ; } break ; case 1 : printf ( " \n " , sum ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD check_anagram
METHOD_RETURN int
PARAM char *a
PARAM char *b
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_check_anagram_next = 27
LITERAL 1 while (1)
IDENTIFIER _1_check_anagram_next switch(_1_check_anagram_next)
LITERAL 27 <empty>
<operator>.assignment first[0] = 0
<operator>.assignment tmp = 1U
BLOCK <empty> <empty>
LITERAL 25 <empty>
LITERAL 23 <empty>
<operator>.assignment first[tmp] = 0
<operator>.postIncrement tmp ++
BLOCK <empty> <empty>
LITERAL 22 <empty>
<operator>.assignment second[0] = 0
<operator>.assignment tmp___0 = 1U
BLOCK <empty> <empty>
LITERAL 20 <empty>
LITERAL 18 <empty>
<operator>.assignment second[tmp___0] = 0
<operator>.postIncrement tmp___0 ++
BLOCK <empty> <empty>
LITERAL 17 <empty>
<operator>.assignment c = 0
BLOCK <empty> <empty>
LITERAL 15 <empty>
LITERAL 13 <empty>
<operator>.postIncrement (first[(int )*(a + c) - 97]) ++
<operator>.postIncrement c ++
BLOCK <empty> <empty>
LITERAL 12 <empty>
<operator>.assignment c = 0
BLOCK <empty> <empty>
LITERAL 10 <empty>
LITERAL 8 <empty>
<operator>.postIncrement (second[(int )*(b + c) - 97]) ++
<operator>.postIncrement c ++
BLOCK <empty> <empty>
LITERAL 7 <empty>
<operator>.assignment c = 0
BLOCK <empty> <empty>
LITERAL 5 <empty>
LITERAL 3 <empty>
LITERAL 2 <empty>
RETURN return (0); return (0);
LITERAL 1 <empty>
<operator>.postIncrement c ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (1); return (1);
<operator>.assignment _1_check_anagram_next = 25
<operator>.greaterEqualsThan tmp >= 26U
<operator>.assignment _1_check_anagram_next = 25
<operator>.assignment _1_check_anagram_next = 20
<operator>.greaterEqualsThan tmp___0 >= 26U
<operator>.assignment _1_check_anagram_next = 20
<operator>.assignment _1_check_anagram_next = 15
<operator>.notEquals (int )*(a + c) != 0
<operator>.assignment _1_check_anagram_next = 15
<operator>.assignment _1_check_anagram_next = 10
<operator>.notEquals (int )*(b + c) != 0
<operator>.assignment _1_check_anagram_next = 10
<operator>.assignment _1_check_anagram_next = 5
<operator>.lessThan c < 26
<operator>.notEquals first[c] != second[c]
LITERAL 0 return (0);
<operator>.assignment _1_check_anagram_next = 5
LITERAL 1 return (1);
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_check_anagram_next = 22
BLOCK <empty> <empty>
<operator>.assignment _1_check_anagram_next = 17
BLOCK <empty> <empty>
<operator>.cast (int )*(a + c)
<operator>.assignment _1_check_anagram_next = 13
BLOCK <empty> <empty>
<operator>.subtraction (int )*(a + c) - 97
<operator>.cast (int )*(b + c)
<operator>.assignment _1_check_anagram_next = 8
BLOCK <empty> <empty>
<operator>.subtraction (int )*(b + c) - 97
<operator>.assignment _1_check_anagram_next = 3
BLOCK <empty> <empty>
<operator>.assignment _1_check_anagram_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_check_anagram_next = 23
<operator>.assignment _1_check_anagram_next = 18
<operator>.assignment _1_check_anagram_next = 12
<operator>.cast (int )*(a + c)
<operator>.assignment _1_check_anagram_next = 7
<operator>.cast (int )*(b + c)
<operator>.assignment _1_check_anagram_next = 0
<operator>.assignment _1_check_anagram_next = 1
<operator>.addition a + c
<operator>.addition b + c
<operator>.addition a + c
<operator>.addition b + c
>>>PDG&107 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 0->59 0->60 0->61 0->62 0->63 0->64 0->65 0->66 0->67 0->68 0->70 0->71 0->72 0->73 0->74 0->75 0->76 0->77 0->78 0->79 0->80 0->81 0->82 0->84 0->85 0->86 0->88 0->89 0->90 0->91 0->92 0->93 0->94 0->95 0->96 0->97 0->99 0->101 0->102 0->103 0->104 0->105 0->106 2->1 2->103 2->105 3->1 3->104 3->106 6->1 6->1 10->1 10->1 11->1 11->1 11->16 11->56 15->1 15->1 16->1 16->1 16->56 19->1 19->1 20->1 20->1 20->25 20->59 24->1 24->1 25->1 25->1 25->59 28->1 28->1 28->33 28->41 28->51 28->68 28->103 28->104 28->105 28->106 32->1 32->1 33->1 33->1 33->41 33->51 33->68 33->103 33->104 33->105 33->106 36->1 36->1 36->33 36->41 36->51 36->68 36->103 36->104 36->105 36->106 40->1 40->1 41->1 41->1 41->33 41->51 41->68 41->103 41->104 41->105 41->106 44->1 44->1 44->33 44->41 44->51 44->68 44->103 44->104 44->105 44->106 49->1 51->1 51->1 51->33 51->41 51->68 51->103 51->104 51->105 51->106 54->1 55->1 55->1 56->1 56->1 56->16 56->79 56->95 57->1 57->1 58->1 58->1 59->1 59->1 59->25 59->81 59->96 60->1 60->1 61->1 61->1 62->1 62->1 62->84 62->97 63->1 63->1 64->1 64->1 65->1 65->1 65->88 65->99 66->1 66->1 67->1 67->1 68->1 68->1 68->33 68->41 68->51 68->91 68->101 68->103 68->104 68->105 68->106 69->1 69->1 69->1 69->93 69->102 70->49 71->1 71->1 72->54 79->1 79->1 81->1 81->1 83->1 84->1 84->1 86->1 87->1 88->1 88->1 90->1 91->1 91->1 93->1 93->1 95->1 95->1 96->1 96->1 97->1 97->1 98->1 99->1 99->1 100->1 101->1 101->1 102->1 102->1 103->1 103->1 104->1 104->1 105->1 106->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; int check_anagram ( char * a , char * b ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } int check_anagram ( char * a , char * b ) { int first [ 26 ] ; unsigned int tmp ; int second [ 26 ] ; unsigned int tmp___0 ; int c ; unsigned long _1_check_anagram_next ; { { _1_check_anagram_next = 27 ; } while ( 1 ) { switch ( _1_check_anagram_next ) { case 27 : first [ 0 ] = 0 ; tmp = 1U ; { _1_check_anagram_next = 25 ; } break ; case 25 : ; if ( tmp >= 26U ) { { _1_check_anagram_next = 22 ; } } else { { _1_check_anagram_next = 23 ; } } break ; case 23 : first [ tmp ] = 0 ; tmp ++ ; { _1_check_anagram_next = 25 ; } break ; case 22 : second [ 0 ] = 0 ; tmp___0 = 1U ; { _1_check_anagram_next = 20 ; } break ; case 20 : ; if ( tmp___0 >= 26U ) { { _1_check_anagram_next = 17 ; } } else { { _1_check_anagram_next = 18 ; } } break ; case 18 : second [ tmp___0 ] = 0 ; tmp___0 ++ ; { _1_check_anagram_next = 20 ; } break ; case 17 : c = 0 ; { _1_check_anagram_next = 15 ; } break ; case 15 : ; if ( ( int ) * ( a + c ) != 0 ) { { _1_check_anagram_next = 13 ; } } else { { _1_check_anagram_next = 12 ; } } break ; case 13 : ( first [ ( int ) * ( a + c ) - 97 ] ) ++ ; c ++ ; { _1_check_anagram_next = 15 ; } break ; case 12 : c = 0 ; { _1_check_anagram_next = 10 ; } break ; case 10 : ; if ( ( int ) * ( b + c ) != 0 ) { { _1_check_anagram_next = 8 ; } } else { { _1_check_anagram_next = 7 ; } } break ; case 8 : ( second [ ( int ) * ( b + c ) - 97 ] ) ++ ; c ++ ; { _1_check_anagram_next = 10 ; } break ; case 7 : c = 0 ; { _1_check_anagram_next = 5 ; } break ; case 5 : ; if ( c < 26 ) { { _1_check_anagram_next = 3 ; } } else { { _1_check_anagram_next = 0 ; } } break ; case 3 : ; if ( first [ c ] != second [ c ] ) { { _1_check_anagram_next = 2 ; } } else { { _1_check_anagram_next = 1 ; } } break ; case 2 : ; return ( 0 ) ; break ; case 1 : c ++ ; { _1_check_anagram_next = 5 ; } break ; case 0 : ; return ( 1 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 8
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 8 <empty>
<operator>.assignment sum = 0
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 6 <empty>
LITERAL 4 <empty>
LITERAL 3 <empty>
<operator>.postIncrement sum ++
BLOCK <empty> <empty>
LITERAL 2 <empty>
<operator>.assignmentPlus sum += i
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("Sum is: %d\n", sum)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 6
<operator>.lessThan i < argc
<operator>.greaterThan (int )*(*(argv + i) + 0) > 127
<operator>.assignment _1_main_next = 2
<operator>.assignment _1_main_next = 6
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 4
BLOCK <empty> <empty>
<operator>.cast (int )*(*(argv + i) + 0)
<operator>.assignment _1_main_next = 3
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
<operator>.assignment _1_main_next = 2
<operator>.addition *(argv + i) + 0
<operator>.addition argv + i
>>>PDG&51 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->45 0->46 0->47 0->48 0->49 0->50 2->7 2->34 3->8 3->50 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->22 16->25 16->29 17->1 17->1 17->25 17->26 17->34 17->50 22->1 22->1 22->25 22->29 25->1 25->1 25->22 25->29 26->1 26->1 26->25 26->34 26->50 29->1 29->1 29->22 29->25 32->1 33->1 33->1 34->1 34->1 34->1 34->25 34->26 34->42 34->47 34->50 35->1 35->1 35->45 35->48 36->1 36->1 37->1 37->1 38->1 38->1 39->32 42->1 42->1 44->1 45->1 45->1 47->1 47->1 48->1 48->1 49->1 50->1 50->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int argc , char * * argv , char * * _formal_envp ) { int i ; int sum ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 8 ; } while ( 1 ) { switch ( _1_main_next ) { case 8 : sum = 0 ; i = 0 ; { _1_main_next = 6 ; } break ; case 6 : ; if ( i < argc ) { { _1_main_next = 4 ; } } else { { _1_main_next = 1 ; } } break ; case 4 : ; if ( ( int ) * ( * ( argv + i ) + 0 ) > 127 ) { { _1_main_next = 3 ; } } else { { _1_main_next = 2 ; } } break ; case 3 : sum ++ ; { _1_main_next = 2 ; } break ; case 2 : sum += i ; i ++ ; { _1_main_next = 6 ; } break ; case 1 : printf ( " \n " , sum ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD Cmpdep
METHOD_RETURN int
PARAM void const   *a
PARAM void const   *b
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_Cmpdep_next = 0
LITERAL 1 while (1)
IDENTIFIER _1_Cmpdep_next switch(_1_Cmpdep_next)
LITERAL 0 <empty>
RETURN return (*((int *)b) - *((int *)a)); return (*((int *)b) - *((int *)a));
<operator>.subtraction *((int *)b) - *((int *)a)
<operator>.cast (int *)b
<operator>.cast (int *)a
>>>PDG&14 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->12 0->13 2->13 3->12 6->1 6->1 10->1 11->1 11->1 11->1 11->10 12->1 13->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; int Cmpdep ( void const * a , void const * b ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int Cmpdep ( void const * a , void const * b ) { unsigned long _1_Cmpdep_next ; { { _1_Cmpdep_next = 0 ; } while ( 1 ) { switch ( _1_Cmpdep_next ) { case 0 : ; return ( * ( ( int * ) b ) - * ( ( int * ) a ) ) ; break ; } } } } void megaInit ( void ) { { } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD fib
METHOD_RETURN int
PARAM unsigned int n
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_fib_next = 1
LITERAL 1 while (1)
IDENTIFIER _1_fib_next switch(_1_fib_next)
LITERAL 1 <empty>
<operator>.assignment tmp = sqrt(5)
<operator>.assignment tmp___0 = sqrt(5)
<operator>.assignment tmp___1 = pow((1 + tmp___0) / 2, n + 1U)
<operator>.assignment tmp___2 = sqrt(5)
<operator>.assignment tmp___3 = sqrt(5)
<operator>.assignment tmp___4 = pow((1 - tmp___3) / 2, n + 1U)
<operator>.assignment seq = (float )((1 / tmp) * tmp___1 - (1 / tmp___2) * tmp___4)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return ((int )seq); return ((int )seq);
<operator>.assignment _1_fib_next = 0
<operator>.cast (int )seq
sqrt sqrt(5)
sqrt sqrt(5)
pow pow((1 + tmp___0) / 2, n + 1U)
sqrt sqrt(5)
sqrt sqrt(5)
pow pow((1 - tmp___3) / 2, n + 1U)
<operator>.cast (float )((1 / tmp) * tmp___1 - (1 / tmp___2) * tmp___4)
<operator>.division (1 + tmp___0) / 2
<operator>.addition n + 1U
<operator>.division (1 - tmp___3) / 2
<operator>.addition n + 1U
<operator>.subtraction (1 / tmp) * tmp___1 - (1 / tmp___2) * tmp___4
<operator>.addition 1 + tmp___0
<operator>.subtraction 1 - tmp___3
<operator>.multiplication (1 / tmp) * tmp___1
<operator>.multiplication (1 / tmp___2) * tmp___4
<operator>.division 1 / tmp
<operator>.division 1 / tmp___2
>>>PDG&39 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->16 0->17 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->28 0->29 0->30 0->31 0->33 0->34 0->35 0->36 0->37 0->38 2->1 2->23 2->29 5->1 5->1 9->1 9->37 10->1 10->28 10->33 11->1 11->1 11->35 12->1 12->38 13->1 13->1 13->34 14->1 14->1 14->36 15->1 15->1 15->20 18->1 19->1 19->1 20->1 20->1 20->18 21->9 22->10 23->1 23->11 23->11 24->12 25->13 26->1 26->1 26->14 26->14 27->1 28->1 28->23 28->23 30->1 30->26 30->26 31->1 32->1 32->1 32->15 32->15 32->27 32->27 33->1 34->1 34->30 34->30 35->1 35->1 35->32 35->32 36->1 36->1 36->32 36->32 37->1 37->35 37->35 38->1 38->36 38->36
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern int ( /* missing proto */ pow ) ( ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; int fib ( unsigned int n ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern void signal ( int sig , void * func ) ; extern double difftime ( long tv1 , long tv0 ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern int ( /* missing proto */ sqrt ) ( ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } void main ( void ) { { megaInit ( ) ; } } int fib ( unsigned int n ) { float seq ; int tmp ; int tmp___0 ; int tmp___1 ; int tmp___2 ; int tmp___3 ; int tmp___4 ; unsigned long _1_fib_next ; { { _1_fib_next = 1 ; } while ( 1 ) { switch ( _1_fib_next ) { case 1 : tmp = sqrt ( 5 ) ; tmp___0 = sqrt ( 5 ) ; tmp___1 = pow ( ( 1 + tmp___0 ) / 2 , n + 1U ) ; tmp___2 = sqrt ( 5 ) ; tmp___3 = sqrt ( 5 ) ; tmp___4 = pow ( ( 1 - tmp___3 ) / 2 , n + 1U ) ; seq = ( float ) ( ( 1 / tmp ) * tmp___1 - ( 1 / tmp___2 ) * tmp___4 ) ; { _1_fib_next = 0 ; } break ; case 0 : ; return ( ( int ) seq ) ; break ; } } } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 1 <empty>
printf printf("Input two numbers:\n")
scanf scanf("%d %d", & a, & b)
<operator>.assignment tmp = GCD(a, b)
printf printf("Greatest common divisor: %d\n", tmp)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
GCD GCD(a, b)
>>>PDG&26 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->19 0->20 0->21 0->22 0->23 0->24 0->25 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 17->1 17->1 17->25 18->1 18->1 18->19 19->1 19->1 22->1 23->1 23->1 24->22 25->1 25->1 25->17 25->18 25->18
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int ( /* missing proto */ scanf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int ( /* missing proto */ GCD ) ( ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern double log ( double x ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { int a ; int b ; int tmp ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 1 ; } while ( 1 ) { switch ( _1_main_next ) { case 1 : printf ( " \n " ) ; scanf ( " " , & a , & b ) ; tmp = GCD ( a , b ) ; printf ( " \n " , tmp ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD share_prime
METHOD_RETURN int
PARAM int a
PARAM int b
PARAM int p
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_share_prime_next = 30
LITERAL 1 while (1)
IDENTIFIER _1_share_prime_next switch(_1_share_prime_next)
LITERAL 39 <empty>
<operator>.assignment j = 0
BLOCK <empty> <empty>
LITERAL 37 <empty>
LITERAL 35 <empty>
LITERAL 34 <empty>
RETURN return (1); return (1);
LITERAL 33 <empty>
<operator>.postIncrement j ++
BLOCK <empty> <empty>
LITERAL 32 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 31 <empty>
RETURN return (0); return (0);
LITERAL 30 <empty>
<operator>.assignment faca[0] = 0
<operator>.assignment tmp = 1U
BLOCK <empty> <empty>
LITERAL 28 <empty>
LITERAL 26 <empty>
<operator>.assignment faca[tmp] = 0
<operator>.postIncrement tmp ++
BLOCK <empty> <empty>
LITERAL 25 <empty>
<operator>.assignment fai = 0
<operator>.assignment facb[0] = 0
<operator>.assignment tmp___0 = 1U
BLOCK <empty> <empty>
LITERAL 23 <empty>
LITERAL 21 <empty>
<operator>.assignment facb[tmp___0] = 0
<operator>.postIncrement tmp___0 ++
BLOCK <empty> <empty>
LITERAL 20 <empty>
<operator>.assignment fbi = 0
<operator>.assignment i = 2
BLOCK <empty> <empty>
LITERAL 18 <empty>
LITERAL 16 <empty>
LITERAL 15 <empty>
LITERAL 14 <empty>
<operator>.assignment tmp___1 = fai
<operator>.postIncrement fai ++
<operator>.assignment faca[tmp___1] = i
BLOCK <empty> <empty>
LITERAL 13 <empty>
<operator>.assignmentDivision a /= i
<operator>.assignment i = 1
BLOCK <empty> <empty>
LITERAL 12 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 11 <empty>
<operator>.assignment i = 2
BLOCK <empty> <empty>
LITERAL 9 <empty>
LITERAL 7 <empty>
LITERAL 6 <empty>
LITERAL 5 <empty>
<operator>.assignment tmp___2 = fbi
<operator>.postIncrement fbi ++
<operator>.assignment facb[tmp___2] = i
BLOCK <empty> <empty>
LITERAL 4 <empty>
<operator>.assignmentDivision b /= i
<operator>.assignment i = 1
BLOCK <empty> <empty>
LITERAL 3 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 2 <empty>
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 0 <empty>
<operator>.assignment _1_share_prime_next = 37
<operator>.lessThan j < fbi
<operator>.equals faca[i] == facb[j]
LITERAL 1 return (1);
<operator>.assignment _1_share_prime_next = 37
<operator>.assignment _1_share_prime_next = 0
LITERAL 0 return (0);
<operator>.assignment _1_share_prime_next = 28
<operator>.greaterEqualsThan tmp >= 20U
<operator>.assignment _1_share_prime_next = 28
<operator>.assignment _1_share_prime_next = 23
<operator>.greaterEqualsThan tmp___0 >= 20U
<operator>.assignment _1_share_prime_next = 23
<operator>.assignment _1_share_prime_next = 18
<operator>.lessEqualsThan i <= a
<operator>.equals a % i == 0
<operator>.greaterEqualsThan i >= p
<operator>.assignment _1_share_prime_next = 13
<operator>.assignment _1_share_prime_next = 12
<operator>.assignment _1_share_prime_next = 18
<operator>.assignment _1_share_prime_next = 9
<operator>.lessEqualsThan i <= b
<operator>.equals b % i == 0
<operator>.greaterEqualsThan i >= p
<operator>.assignment _1_share_prime_next = 4
<operator>.assignment _1_share_prime_next = 3
<operator>.assignment _1_share_prime_next = 9
<operator>.assignment _1_share_prime_next = 0
<operator>.lessThan i < fai
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_share_prime_next = 35
BLOCK <empty> <empty>
<operator>.assignment _1_share_prime_next = 34
BLOCK <empty> <empty>
<operator>.assignment _1_share_prime_next = 25
BLOCK <empty> <empty>
<operator>.assignment _1_share_prime_next = 20
BLOCK <empty> <empty>
<operator>.assignment _1_share_prime_next = 16
BLOCK <empty> <empty>
<operator>.modulo a % i
<operator>.assignment _1_share_prime_next = 15
BLOCK <empty> <empty>
<operator>.assignment _1_share_prime_next = 14
BLOCK <empty> <empty>
<operator>.assignment _1_share_prime_next = 7
BLOCK <empty> <empty>
<operator>.modulo b % i
<operator>.assignment _1_share_prime_next = 6
BLOCK <empty> <empty>
<operator>.assignment _1_share_prime_next = 5
BLOCK <empty> <empty>
<operator>.assignment _1_share_prime_next = 39
BLOCK <empty> <empty>
<operator>.assignment _1_share_prime_next = 32
<operator>.assignment _1_share_prime_next = 33
<operator>.assignment _1_share_prime_next = 26
<operator>.assignment _1_share_prime_next = 21
<operator>.assignment _1_share_prime_next = 11
<operator>.assignment _1_share_prime_next = 12
<operator>.assignment _1_share_prime_next = 13
<operator>.assignment _1_share_prime_next = 2
<operator>.assignment _1_share_prime_next = 3
<operator>.assignment _1_share_prime_next = 4
<operator>.assignment _1_share_prime_next = 31
>>>PDG&160 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 0->59 0->60 0->61 0->62 0->63 0->64 0->65 0->66 0->67 0->68 0->69 0->70 0->71 0->72 0->73 0->74 0->75 0->76 0->77 0->78 0->79 0->80 0->81 0->82 0->83 0->84 0->85 0->86 0->88 0->89 0->90 0->91 0->92 0->93 0->94 0->95 0->96 0->97 0->98 0->99 0->100 0->101 0->102 0->103 0->104 0->105 0->106 0->107 0->108 0->109 0->110 0->111 0->112 0->113 0->114 0->115 0->116 0->117 0->118 0->119 0->120 0->121 0->122 0->123 0->124 0->125 0->126 0->127 0->128 0->129 0->130 0->131 0->132 0->133 0->134 0->135 0->136 0->137 0->138 0->139 0->140 0->141 0->142 0->143 0->144 0->145 0->146 0->147 0->148 0->149 0->150 0->151 0->152 0->153 0->154 0->155 0->156 0->157 0->158 0->159 2->1 2->57 2->99 2->135 3->1 3->75 3->106 3->142 4->1 4->101 4->108 7->1 7->1 11->1 11->1 11->18 11->86 16->1 18->1 18->1 18->86 21->1 21->1 21->54 21->57 21->61 21->72 21->75 21->79 21->99 21->101 21->106 21->108 21->113 21->135 21->142 24->1 26->1 26->1 27->1 27->1 27->32 27->93 31->1 31->1 32->1 32->1 32->93 35->1 35->1 35->52 35->53 35->113 36->1 36->1 37->1 37->1 37->42 37->96 41->1 41->1 42->1 42->1 42->96 45->1 45->1 45->70 45->71 45->86 46->1 46->1 46->21 46->54 46->57 46->61 46->72 46->75 46->79 46->99 46->101 46->106 46->108 46->113 46->135 46->142 52->1 52->1 53->1 53->1 53->52 53->113 54->1 54->1 54->1 57->1 57->1 57->99 57->135 58->1 58->1 58->21 58->54 58->57 58->61 58->72 58->75 58->79 58->99 58->101 58->106 58->108 58->113 58->135 58->142 61->1 61->1 61->21 61->54 61->57 61->72 61->75 61->79 61->99 61->101 61->106 61->108 61->113 61->135 61->142 64->1 64->1 64->21 64->54 64->57 64->61 64->72 64->75 64->79 64->99 64->101 64->106 64->108 64->113 64->135 64->142 70->1 70->1 71->1 71->1 71->70 71->86 72->1 72->1 72->1 75->1 75->1 75->106 75->142 76->1 76->1 76->21 76->54 76->57 76->61 76->72 76->75 76->79 76->99 76->101 76->106 76->108 76->113 76->135 76->142 79->1 79->1 79->21 79->54 79->57 79->61 79->72 79->75 79->99 79->101 79->106 79->108 79->113 79->135 79->142 82->1 82->1 82->21 82->54 82->57 82->61 82->72 82->75 82->79 82->99 82->101 82->106 82->108 82->113 82->135 82->142 85->1 85->1 86->1 86->1 86->1 86->18 86->70 86->71 86->125 86->149 87->1 87->1 87->1 87->127 87->150 88->16 89->1 89->1 90->1 90->1 91->24 92->1 92->1 93->1 93->1 93->32 93->129 93->151 94->1 94->1 95->1 95->1 96->1 96->1 96->42 96->131 96->152 97->1 97->1 98->1 98->1 99->1 99->1 99->1 99->21 99->54 99->57 99->57 99->61 99->72 99->75 99->79 99->101 99->106 99->108 99->113 99->133 99->135 99->135 99->142 99->153 100->1 100->1 100->136 100->154 101->1 101->1 101->1 101->21 101->54 101->57 101->61 101->72 101->75 101->79 101->99 101->106 101->108 101->108 101->113 101->135 101->138 101->142 101->155 102->1 102->1 103->1 103->1 104->1 104->1 105->1 105->1 106->1 106->1 106->1 106->21 106->54 106->57 106->61 106->72 106->75 106->75 106->79 106->99 106->101 106->108 106->113 106->135 106->140 106->142 106->142 106->156 107->1 107->1 107->143 107->157 108->1 108->1 108->1 108->21 108->54 108->57 108->61 108->72 108->75 108->79 108->99 108->101 108->101 108->106 108->113 108->135 108->142 108->145 108->158 109->1 109->1 110->1 110->1 111->1 111->1 112->1 112->1 113->1 113->1 113->1 113->21 113->52 113->53 113->54 113->57 113->61 113->72 113->75 113->79 113->99 113->101 113->106 113->108 113->135 113->142 113->147 113->159 125->1 125->1 127->1 127->1 129->1 129->1 131->1 131->1 133->1 133->1 135->1 135->1 135->21 135->54 135->57 135->57 135->61 135->72 135->75 135->79 135->99 135->99 135->100 135->100 135->101 135->106 135->108 135->113 135->142 136->1 136->1 138->1 138->1 140->1 140->1 142->1 142->1 142->21 142->54 142->57 142->61 142->72 142->75 142->75 142->79 142->99 142->101 142->106 142->106 142->107 142->107 142->108 142->113 142->135 143->1 143->1 145->1 145->1 147->1 147->1 149->1 149->1 150->1 150->1 151->1 151->1 152->1 152->1 153->1 153->1 154->1 154->1 155->1 155->1 156->1 156->1 157->1 157->1 158->1 158->1 159->1 159->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; int share_prime ( int a , int b , int p ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } } int share_prime ( int a , int b , int p ) { int i ; int j ; int faca [ 20 ] ; unsigned int tmp ; int fai ; int facb [ 20 ] ; unsigned int tmp___0 ; int fbi ; int tmp___1 ; int tmp___2 ; unsigned long _1_share_prime_next ; { { _1_share_prime_next = 30 ; } while ( 1 ) { switch ( _1_share_prime_next ) { case 39 : j = 0 ; { _1_share_prime_next = 37 ; } break ; case 37 : ; if ( j < fbi ) { { _1_share_prime_next = 35 ; } } else { { _1_share_prime_next = 32 ; } } break ; case 35 : ; if ( faca [ i ] == facb [ j ] ) { { _1_share_prime_next = 34 ; } } else { { _1_share_prime_next = 33 ; } } break ; case 34 : ; return ( 1 ) ; break ; case 33 : j ++ ; { _1_share_prime_next = 37 ; } break ; case 32 : i ++ ; { _1_share_prime_next = 0 ; } break ; case 31 : ; return ( 0 ) ; break ; case 30 : faca [ 0 ] = 0 ; tmp = 1U ; { _1_share_prime_next = 28 ; } break ; case 28 : ; if ( tmp >= 20U ) { { _1_share_prime_next = 25 ; } } else { { _1_share_prime_next = 26 ; } } break ; case 26 : faca [ tmp ] = 0 ; tmp ++ ; { _1_share_prime_next = 28 ; } break ; case 25 : fai = 0 ; facb [ 0 ] = 0 ; tmp___0 = 1U ; { _1_share_prime_next = 23 ; } break ; case 23 : ; if ( tmp___0 >= 20U ) { { _1_share_prime_next = 20 ; } } else { { _1_share_prime_next = 21 ; } } break ; case 21 : facb [ tmp___0 ] = 0 ; tmp___0 ++ ; { _1_share_prime_next = 23 ; } break ; case 20 : fbi = 0 ; i = 2 ; { _1_share_prime_next = 18 ; } break ; case 18 : ; if ( i <= a ) { { _1_share_prime_next = 16 ; } } else { { _1_share_prime_next = 11 ; } } break ; case 16 : ; if ( a % i == 0 ) { { _1_share_prime_next = 15 ; } } else { { _1_share_prime_next = 12 ; } } break ; case 15 : ; if ( i >= p ) { { _1_share_prime_next = 14 ; } } else { { _1_share_prime_next = 13 ; } } break ; case 14 : tmp___1 = fai ; fai ++ ; faca [ tmp___1 ] = i ; { _1_share_prime_next = 13 ; } break ; case 13 : a /= i ; i = 1 ; { _1_share_prime_next = 12 ; } break ; case 12 : i ++ ; { _1_share_prime_next = 18 ; } break ; case 11 : i = 2 ; { _1_share_prime_next = 9 ; } break ; case 9 : ; if ( i <= b ) { { _1_share_prime_next = 7 ; } } else { { _1_share_prime_next = 2 ; } } break ; case 7 : ; if ( b % i == 0 ) { { _1_share_prime_next = 6 ; } } else { { _1_share_prime_next = 3 ; } } break ; case 6 : ; if ( i >= p ) { { _1_share_prime_next = 5 ; } } else { { _1_share_prime_next = 4 ; } } break ; case 5 : tmp___2 = fbi ; fbi ++ ; facb [ tmp___2 ] = i ; { _1_share_prime_next = 4 ; } break ; case 4 : b /= i ; i = 1 ; { _1_share_prime_next = 3 ; } break ; case 3 : i ++ ; { _1_share_prime_next = 9 ; } break ; case 2 : i = 0 ; { _1_share_prime_next = 0 ; } break ; case 0 : ; if ( i < fai ) { { _1_share_prime_next = 39 ; } } else { { _1_share_prime_next = 31 ; } } break ; } } } }
>>>Func
METHOD GCD
METHOD_RETURN int
PARAM int x
PARAM int y
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_GCD_next = 3
LITERAL 1 while (1)
IDENTIFIER _1_GCD_next switch(_1_GCD_next)
LITERAL 3 <empty>
LITERAL 2 <empty>
RETURN return (x); return (x);
LITERAL 1 <empty>
<operator>.assignment tmp = GCD(y, x % y)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (tmp); return (tmp);
<operator>.equals y == 0
IDENTIFIER x return (x);
<operator>.assignment _1_GCD_next = 0
IDENTIFIER tmp return (tmp);
BLOCK <empty> <empty>
GCD GCD(y, x % y)
<operator>.assignment _1_GCD_next = 2
BLOCK <empty> <empty>
<operator>.modulo x % y
<operator>.assignment _1_GCD_next = 1
>>>PDG&27 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->12 0->14 0->15 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 2->1 2->18 2->25 3->1 3->17 3->25 6->1 6->1 11->1 13->1 13->1 13->1 13->20 16->1 17->1 17->1 17->23 17->25 17->26 18->11 19->1 19->1 20->16 22->1 22->1 22->13 22->13 22->17 22->25 23->1 23->1 25->1 25->18 25->22 25->22 26->1 26->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; int GCD ( int x , int y ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } int GCD ( int x , int y ) { int tmp ; unsigned long _1_GCD_next ; { { _1_GCD_next = 3 ; } while ( 1 ) { switch ( _1_GCD_next ) { case 3 : ; if ( y == 0 ) { { _1_GCD_next = 2 ; } } else { { _1_GCD_next = 1 ; } } break ; case 2 : ; return ( x ) ; break ; case 1 : tmp = GCD ( y , x % y ) ; { _1_GCD_next = 0 ; } break ; case 0 : ; return ( tmp ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD display
METHOD_RETURN void
PARAM int *array
PARAM int n
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_display_next = 6
LITERAL 1 while (1)
IDENTIFIER _1_display_next switch(_1_display_next)
LITERAL 6 <empty>
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
printf printf("%d "  *(array + i))
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("\n")
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return; return;
<operator>.assignment _1_display_next = 4
<operator>.lessThan i < n
<operator>.assignment _1_display_next = 4
<operator>.assignment _1_display_next = 0
BLOCK <empty> <empty>
<operator>.assignment _1_display_next = 2
BLOCK <empty> <empty>
<operator>.addition array + i
<operator>.assignment _1_display_next = 1
>>>PDG&31 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 2->1 2->29 3->1 3->23 6->1 6->1 10->1 10->1 10->15 10->23 10->29 14->1 14->1 15->1 15->1 15->23 15->29 18->1 21->1 22->1 22->1 23->1 23->1 23->1 23->15 23->27 23->29 23->30 24->1 24->1 25->1 25->1 27->1 27->1 29->1 30->1 30->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; void display ( int * array , int n ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } void display ( int * array , int n ) { int i ; unsigned long _1_display_next ; { { _1_display_next = 6 ; } while ( 1 ) { switch ( _1_display_next ) { case 6 : i = 0 ; { _1_display_next = 4 ; } break ; case 4 : ; if ( i < n ) { { _1_display_next = 2 ; } } else { { _1_display_next = 1 ; } } break ; case 2 : printf ( " " , * ( array + i ) ) ; i ++ ; { _1_display_next = 4 ; } break ; case 1 : printf ( " \n " ) ; { _1_display_next = 0 ; } break ; case 0 : ; return ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 12
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 12 <empty>
printf printf("Enter values of eq1:")
scanf scanf("%f%f%f%f", & a1, & a2, & a3, & d1)
printf printf("Enter values of eq2:")
scanf scanf("%f%f%f%f", & b1, & b2, & b3, & d2)
printf printf("Enter values of eq3:")
scanf scanf("%f%f%f%f", & c1, & c2, & c3, & d3)
<operator>.assignment x3 = (float )0.0
<operator>.assignment x2 = x3
<operator>.assignment x1 = x2
BLOCK <empty> <empty>
LITERAL 10 <empty>
<operator>.assignment a = x1
<operator>.assignment b = x2
<operator>.assignment c = x3
<operator>.assignment x1 = ((float )1 / a1) * ((d1 - a2 * x2) - a3 * x3)
<operator>.assignment x2 = ((float )1 / b2) * ((d2 - b1 * x1) - b3 * x3)
<operator>.assignment x3 = ((float )1 / c3) * ((d3 - c1 * x1) - c2 * x2)
<operator>.assignment tmp = fabs((double )(x1 - a))
BLOCK <empty> <empty>
LITERAL 9 <empty>
LITERAL 8 <empty>
<operator>.assignment tmp___0 = fabs((double )(x2 - b))
BLOCK <empty> <empty>
LITERAL 7 <empty>
LITERAL 6 <empty>
<operator>.assignment tmp___1 = fabs((double )(x3 - c))
BLOCK <empty> <empty>
LITERAL 5 <empty>
LITERAL 1 <empty>
printf printf("x1=%f\nx2=%f\nx3=%f"  (double )x1  (double )x2  (double )x3)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 10
<operator>.assignment _1_main_next = 9
<operator>.greaterThan (double )tmp > 0.0001
<operator>.assignment _1_main_next = 7
<operator>.greaterThan (double )tmp___0 > 0.0001
<operator>.assignment _1_main_next = 5
<operator>.greaterThan (double )tmp___1 > 0.0001
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
<operator>.cast (float )0.0
<operator>.multiplication ((float )1 / a1) * ((d1 - a2 * x2) - a3 * x3)
<operator>.multiplication ((float )1 / b2) * ((d2 - b1 * x1) - b3 * x3)
<operator>.multiplication ((float )1 / c3) * ((d3 - c1 * x1) - c2 * x2)
fabs fabs((double )(x1 - a))
BLOCK <empty> <empty>
fabs fabs((double )(x2 - b))
BLOCK <empty> <empty>
fabs fabs((double )(x3 - c))
BLOCK <empty> <empty>
<operator>.cast (double )x1
<operator>.cast (double )x2
<operator>.cast (double )x3
<operator>.division (float )1 / a1
<operator>.subtraction (d1 - a2 * x2) - a3 * x3
<operator>.division (float )1 / b2
<operator>.subtraction (d2 - b1 * x1) - b3 * x3
<operator>.division (float )1 / c3
<operator>.subtraction (d3 - c1 * x1) - c2 * x2
<operator>.cast (double )(x1 - a)
<operator>.cast (double )tmp
<operator>.assignment _1_main_next = 8
BLOCK <empty> <empty>
<operator>.cast (double )(x2 - b)
<operator>.cast (double )tmp___0
<operator>.assignment _1_main_next = 6
BLOCK <empty> <empty>
<operator>.cast (double )(x3 - c)
<operator>.cast (double )tmp___1
<operator>.assignment _1_main_next = 10
BLOCK <empty> <empty>
<operator>.cast (float )1
<operator>.subtraction d1 - a2 * x2
<operator>.multiplication a3 * x3
<operator>.cast (float )1
<operator>.subtraction d2 - b1 * x1
<operator>.multiplication b3 * x3
<operator>.cast (float )1
<operator>.subtraction d3 - c1 * x1
<operator>.multiplication c2 * x2
<operator>.subtraction x1 - a
<operator>.assignment _1_main_next = 1
<operator>.subtraction x2 - b
<operator>.assignment _1_main_next = 1
<operator>.subtraction x3 - c
<operator>.assignment _1_main_next = 1
<operator>.multiplication a2 * x2
<operator>.multiplication b1 * x1
<operator>.multiplication c1 * x1
>>>PDG&107 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->34 0->35 0->36 0->38 0->39 0->40 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 0->63 0->65 0->67 0->68 0->69 0->70 0->71 0->73 0->75 0->78 0->79 0->80 0->82 0->83 0->84 0->86 0->87 0->88 0->89 0->90 0->91 0->92 0->93 0->94 0->95 0->96 0->97 0->98 0->99 0->100 0->101 0->102 0->103 0->104 0->105 0->106 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 17->1 17->1 17->1 17->1 17->71 18->1 19->1 19->1 19->1 19->1 19->105 20->1 21->1 21->1 21->1 21->1 21->106 22->1 22->1 22->23 22->29 22->45 22->70 22->91 22->102 23->1 23->1 23->24 23->28 23->45 23->69 23->100 23->104 24->1 24->1 24->1 24->27 24->45 24->68 27->1 27->98 28->1 28->1 28->100 29->1 29->1 29->102 30->1 30->1 30->105 31->1 31->1 31->97 32->1 32->1 32->1 32->29 32->45 32->70 32->91 32->102 33->1 33->1 33->1 33->51 33->78 37->1 37->1 37->1 37->53 37->82 41->1 41->1 41->1 41->55 41->86 45->1 45->1 45->1 45->1 48->1 49->1 49->1 50->1 50->1 51->1 51->1 51->79 51->99 52->1 52->1 53->1 53->1 53->83 53->101 54->1 54->1 55->1 55->1 55->87 55->103 56->1 56->1 57->48 59->1 59->1 59->30 59->30 60->1 60->1 60->31 60->31 61->1 61->1 61->32 61->32 62->1 64->1 66->1 68->1 69->1 70->1 71->1 71->17 71->59 71->59 72->1 72->1 72->59 72->59 73->1 73->60 73->60 74->1 74->1 74->60 74->60 75->1 75->1 75->61 75->61 76->1 76->1 76->61 76->61 77->1 78->1 79->1 79->1 81->1 82->1 83->1 83->1 85->1 86->1 87->1 87->1 90->1 90->1 90->72 90->72 91->1 91->72 91->72 91->94 93->1 93->1 93->74 93->74 94->1 94->74 94->74 96->1 96->1 96->76 96->76 97->1 97->1 97->28 97->45 97->69 97->76 97->76 97->100 97->104 98->1 98->1 98->27 98->33 98->33 98->45 98->62 98->62 98->68 98->77 98->77 99->1 99->1 100->1 100->1 100->28 100->37 100->37 100->45 100->64 100->64 100->69 100->81 100->81 100->104 101->1 101->1 102->1 102->1 102->29 102->41 102->41 102->45 102->66 102->66 102->70 102->85 102->85 102->91 103->1 103->1 104->1 104->90 104->90 105->1 105->19 105->93 105->93 105->106 106->1 106->21 106->96 106->96 106->98
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int ( /* missing proto */ printf ) ( ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ scanf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern int ( /* missing proto */ fabs ) ( ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { float a ; float b ; float c ; float a1 ; float a2 ; float a3 ; float b1 ; float b2 ; float b3 ; float c1 ; float c2 ; float c3 ; float d1 ; float d2 ; float d3 ; float x1 ; float x2 ; float x3 ; int tmp ; int tmp___0 ; int tmp___1 ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 12 ; } while ( 1 ) { switch ( _1_main_next ) { case 12 : printf ( " " ) ; scanf ( " " , & a1 , & a2 , & a3 , & d1 ) ; printf ( " " ) ; scanf ( " " , & b1 , & b2 , & b3 , & d2 ) ; printf ( " " ) ; scanf ( " " , & c1 , & c2 , & c3 , & d3 ) ; x3 = ( float ) 0.0 ; x2 = x3 ; x1 = x2 ; { _1_main_next = 10 ; } break ; case 10 : a = x1 ; b = x2 ; c = x3 ; x1 = ( ( float ) 1 / a1 ) * ( ( d1 - a2 * x2 ) - a3 * x3 ) ; x2 = ( ( float ) 1 / b2 ) * ( ( d2 - b1 * x1 ) - b3 * x3 ) ; x3 = ( ( float ) 1 / c3 ) * ( ( d3 - c1 * x1 ) - c2 * x2 ) ; tmp = fabs ( ( double ) ( x1 - a ) ) ; { _1_main_next = 9 ; } break ; case 9 : ; if ( ( double ) tmp > 0.0001 ) { { _1_main_next = 8 ; } } else { { _1_main_next = 1 ; } } break ; case 8 : tmp___0 = fabs ( ( double ) ( x2 - b ) ) ; { _1_main_next = 7 ; } break ; case 7 : ; if ( ( double ) tmp___0 > 0.0001 ) { { _1_main_next = 6 ; } } else { { _1_main_next = 1 ; } } break ; case 6 : tmp___1 = fabs ( ( double ) ( x3 - c ) ) ; { _1_main_next = 5 ; } break ; case 5 : ; if ( ( double ) tmp___1 > 0.0001 ) { { _1_main_next = 10 ; } } else { { _1_main_next = 1 ; } } break ; case 1 : printf ( " \n \n " , ( double ) x1 , ( double ) x2 , ( double ) x3 ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD string_nocase_compare
METHOD_RETURN int
PARAM void *string1
PARAM void *string2
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_string_nocase_compare_next = 10
LITERAL 1 while (1)
IDENTIFIER _1_string_nocase_compare_next switch(_1_string_nocase_compare_next)
LITERAL 10 <empty>
<operator>.assignment p1 = (char *)string1
<operator>.assignment p2 = (char *)string2
BLOCK <empty> <empty>
LITERAL 8 <empty>
<operator>.assignment c1 = tolower((int )*p1)
<operator>.assignment c2 = tolower((int )*p2)
BLOCK <empty> <empty>
LITERAL 7 <empty>
LITERAL 6 <empty>
LITERAL 5 <empty>
RETURN return (-1); return (-1);
LITERAL 4 <empty>
RETURN return (1); return (1);
LITERAL 3 <empty>
LITERAL 1 <empty>
<operator>.postIncrement p1 ++
<operator>.postIncrement p2 ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_string_nocase_compare_next = 8
<operator>.assignment _1_string_nocase_compare_next = 7
<operator>.notEquals c1 != c2
<operator>.lessThan c1 < c2
<operator>.minus -1
LITERAL 1 return (1);
<operator>.equals c1 == 0
<operator>.assignment _1_string_nocase_compare_next = 8
LITERAL 0 return (0);
<operator>.cast (char *)string1
<operator>.cast (char *)string2
tolower tolower((int )*p1)
tolower tolower((int )*p2)
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.cast (int )*p1
<operator>.cast (int )*p2
<operator>.assignment _1_string_nocase_compare_next = 6
BLOCK <empty> <empty>
<operator>.assignment _1_string_nocase_compare_next = 5
BLOCK <empty> <empty>
<operator>.assignment _1_string_nocase_compare_next = 0
BLOCK <empty> <empty>
<operator>.assignment _1_string_nocase_compare_next = 3
<operator>.assignment _1_string_nocase_compare_next = 4
<operator>.assignment _1_string_nocase_compare_next = 1
>>>PDG&57 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->16 0->17 0->18 0->19 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->43 0->44 0->45 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 2->1 2->10 2->39 3->1 3->11 3->40 6->1 6->1 10->1 10->1 10->1 10->25 11->1 11->1 11->1 11->26 14->1 14->1 14->1 14->32 14->33 14->36 15->1 15->1 15->1 15->32 15->33 20->1 22->1 25->1 25->1 26->1 26->1 29->1 30->1 30->1 31->1 31->1 32->1 32->1 32->1 32->33 32->33 32->36 32->48 32->54 33->1 33->1 33->1 33->32 33->32 33->36 33->50 33->55 34->1 34->20 35->22 36->1 36->1 36->32 36->33 36->52 36->56 37->1 37->1 38->29 39->1 40->1 41->1 41->14 42->1 42->15 46->1 47->1 48->1 48->1 50->1 50->1 52->1 52->1 54->1 54->1 55->1 55->1 56->1 56->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern double ceil ( double x ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; int string_nocase_compare ( void * string1 , void * string2 ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern int ( /* missing proto */ tolower ) ( ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } } int string_nocase_compare ( void * string1 , void * string2 ) { char * p1 ; char * p2 ; int c1 ; int c2 ; unsigned long _1_string_nocase_compare_next ; { { _1_string_nocase_compare_next = 10 ; } while ( 1 ) { switch ( _1_string_nocase_compare_next ) { case 10 : p1 = ( char * ) string1 ; p2 = ( char * ) string2 ; { _1_string_nocase_compare_next = 8 ; } break ; case 8 : c1 = tolower ( ( int ) * p1 ) ; c2 = tolower ( ( int ) * p2 ) ; { _1_string_nocase_compare_next = 7 ; } break ; case 7 : ; if ( c1 != c2 ) { { _1_string_nocase_compare_next = 6 ; } } else { { _1_string_nocase_compare_next = 3 ; } } break ; case 6 : ; if ( c1 < c2 ) { { _1_string_nocase_compare_next = 5 ; } } else { { _1_string_nocase_compare_next = 4 ; } } break ; case 5 : ; return ( -1 ) ; break ; case 4 : ; return ( 1 ) ; break ; case 3 : ; if ( c1 == 0 ) { { _1_string_nocase_compare_next = 0 ; } } else { { _1_string_nocase_compare_next = 1 ; } } break ; case 1 : p1 ++ ; p2 ++ ; { _1_string_nocase_compare_next = 8 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 13
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 13 <empty>
BLOCK <empty> <empty>
LITERAL 12 <empty>
LITERAL 11 <empty>
RETURN return (1); return (1);
LITERAL 10 <empty>
<operator>.assignment i = 1
<operator>.assignment decimalNumber = (long )((int )*(*(argv + 1) + 0))
<operator>.assignment quotient = decimalNumber
BLOCK <empty> <empty>
LITERAL 8 <empty>
LITERAL 6 <empty>
<operator>.assignment tmp = i
<operator>.postIncrement i ++
<operator>.assignment binaryNumber[tmp] = (int )(quotient % 2L)
<operator>.assignmentDivision quotient /= 2L
BLOCK <empty> <empty>
LITERAL 5 <empty>
printf printf("Equivalent binary value of decimal number %d: \n", decimalNumber)
<operator>.assignment j = i - 1
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 1 <empty>
printf printf("%d", binaryNumber[j])
<operator>.postDecrement j --
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 12
<operator>.lessThan argc < 2
LITERAL 1 return (1);
<operator>.assignment _1_main_next = 8
<operator>.notEquals quotient != 0L
<operator>.assignment _1_main_next = 8
<operator>.assignment _1_main_next = 3
<operator>.greaterThan j > 0
<operator>.assignment _1_main_next = 3
LITERAL 0 return (0);
BLOCK <empty> <empty>
<operator>.cast (long )((int )*(*(argv + 1) + 0))
BLOCK <empty> <empty>
<operator>.cast (int )(quotient % 2L)
<operator>.subtraction i - 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 11
BLOCK <empty> <empty>
<operator>.cast (int )*(*(argv + 1) + 0)
<operator>.assignment _1_main_next = 6
BLOCK <empty> <empty>
<operator>.modulo quotient % 2L
<operator>.assignment _1_main_next = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 10
<operator>.assignment _1_main_next = 5
<operator>.assignment _1_main_next = 0
<operator>.addition *(argv + 1) + 0
<operator>.addition argv + 1
>>>PDG&72 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->23 0->24 0->25 0->26 0->27 0->28 0->30 0->31 0->32 0->33 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->55 0->57 0->58 0->59 0->60 0->62 0->63 0->64 0->65 0->66 0->67 0->68 0->69 0->70 0->71 2->7 2->44 3->8 3->71 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 19->1 21->1 21->1 21->27 21->28 21->57 22->1 22->1 22->23 22->33 23->1 23->1 23->1 23->47 23->64 27->1 27->1 28->1 28->1 28->27 28->57 29->1 29->1 29->1 30->1 30->1 30->47 30->64 33->1 33->1 34->1 34->1 34->1 34->39 34->50 38->1 38->1 39->1 39->1 39->50 42->1 43->1 43->1 44->1 44->1 44->59 44->67 45->19 46->1 46->1 47->1 47->1 47->62 47->64 47->68 48->1 48->1 49->1 49->1 50->1 50->1 50->39 50->65 50->69 51->1 51->1 52->42 54->1 56->1 57->1 57->27 57->28 57->34 57->34 59->1 59->1 61->1 62->1 62->1 64->29 64->29 64->30 64->56 64->56 65->1 65->1 67->1 67->1 68->1 68->1 69->1 69->1 70->1 71->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern double ceil ( double x ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int argc , char * * argv , char * * _formal_envp ) { long decimalNumber ; long quotient ; int binaryNumber [ 100 ] ; int i ; int j ; int tmp ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 13 ; } while ( 1 ) { switch ( _1_main_next ) { case 13 : ; { _1_main_next = 12 ; } break ; case 12 : ; if ( argc < 2 ) { { _1_main_next = 11 ; } } else { { _1_main_next = 10 ; } } break ; case 11 : ; return ( 1 ) ; break ; case 10 : i = 1 ; decimalNumber = ( long ) ( ( int ) * ( * ( argv + 1 ) + 0 ) ) ; quotient = decimalNumber ; { _1_main_next = 8 ; } break ; case 8 : ; if ( quotient != 0L ) { { _1_main_next = 6 ; } } else { { _1_main_next = 5 ; } } break ; case 6 : tmp = i ; i ++ ; binaryNumber [ tmp ] = ( int ) ( quotient % 2L ) ; quotient /= 2L ; { _1_main_next = 8 ; } break ; case 5 : printf ( " \n " , decimalNumber ) ; j = i - 1 ; { _1_main_next = 3 ; } break ; case 3 : ; if ( j > 0 ) { { _1_main_next = 1 ; } } else { { _1_main_next = 0 ; } } break ; case 1 : printf ( " " , binaryNumber [ j ] ) ; j -- ; { _1_main_next = 3 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD has_feature
METHOD_RETURN int
PARAM char **features
PARAM char *feature
PARAM int n
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_has_feature_next = 8
LITERAL 1 while (1)
IDENTIFIER _1_has_feature_next switch(_1_has_feature_next)
LITERAL 8 <empty>
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 6 <empty>
LITERAL 4 <empty>
<operator>.assignment tmp = strcmp(*(features + i), feature)
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 2 <empty>
RETURN return (1); return (1);
LITERAL 1 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_has_feature_next = 6
<operator>.lessThan i < n
<operator>.assignment _1_has_feature_next = 3
<operator>.equals tmp == 0
LITERAL 1 return (1);
<operator>.assignment _1_has_feature_next = 6
LITERAL 0 return (0);
BLOCK <empty> <empty>
strcmp strcmp(*(features + i), feature)
BLOCK <empty> <empty>
<operator>.assignment _1_has_feature_next = 4
BLOCK <empty> <empty>
<operator>.assignment _1_has_feature_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_has_feature_next = 0
<operator>.addition features + i
<operator>.assignment _1_has_feature_next = 1
>>>PDG&42 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 2->1 2->40 3->1 3->33 4->1 4->26 7->1 7->1 11->1 11->1 11->21 11->26 11->40 15->1 15->1 15->1 15->28 19->1 21->1 21->1 21->26 21->40 24->1 25->1 25->1 26->1 26->1 26->1 26->21 26->35 26->39 26->40 27->1 27->1 28->1 28->1 28->37 28->41 29->19 30->1 30->1 31->24 33->1 33->1 33->15 33->15 35->1 35->1 37->1 37->1 39->1 39->1 40->1 40->1 41->1 41->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; int has_feature ( char * * features , char * feature , int n ) ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int ( /* missing proto */ strcmp ) ( ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int has_feature ( char * * features , char * feature , int n ) { int i ; int tmp ; unsigned long _1_has_feature_next ; { { _1_has_feature_next = 8 ; } while ( 1 ) { switch ( _1_has_feature_next ) { case 8 : i = 0 ; { _1_has_feature_next = 6 ; } break ; case 6 : ; if ( i < n ) { { _1_has_feature_next = 4 ; } } else { { _1_has_feature_next = 0 ; } } break ; case 4 : tmp = strcmp ( * ( features + i ) , feature ) ; { _1_has_feature_next = 3 ; } break ; case 3 : ; if ( tmp == 0 ) { { _1_has_feature_next = 2 ; } } else { { _1_has_feature_next = 1 ; } } break ; case 2 : ; return ( 1 ) ; break ; case 1 : i ++ ; { _1_has_feature_next = 6 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } }
>>>Func
METHOD sortArrayByParity
METHOD_RETURN int*
PARAM int *A
PARAM int ASize
PARAM int *returnSize
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_sortArrayByParity_next = 8
LITERAL 1 while (1)
IDENTIFIER _1_sortArrayByParity_next switch(_1_sortArrayByParity_next)
LITERAL 8 <empty>
<operator>.assignment tmp = malloc((unsigned long )ASize * sizeof(int ))
<operator>.assignment retArr = (int *)tmp
<operator>.assignment oddIndex = ASize - 1
<operator>.assignment evenIndex = 0
<operator>.assignment *returnSize = ASize
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 6 <empty>
LITERAL 4 <empty>
LITERAL 3 <empty>
<operator>.assignment *(retArr + evenIndex) = *(A + i)
<operator>.postIncrement evenIndex ++
BLOCK <empty> <empty>
LITERAL 2 <empty>
<operator>.assignment *(retArr + oddIndex) = *(A + i)
<operator>.postDecrement oddIndex --
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (retArr); return (retArr);
<operator>.assignment _1_sortArrayByParity_next = 6
<operator>.lessThan i < ASize
<operator>.equals *(A + i) % 2 == 0
<operator>.assignment _1_sortArrayByParity_next = 1
<operator>.assignment _1_sortArrayByParity_next = 1
<operator>.assignment _1_sortArrayByParity_next = 6
IDENTIFIER retArr return (retArr);
malloc malloc((unsigned long )ASize * sizeof(int ))
<operator>.cast (int *)tmp
<operator>.subtraction ASize - 1
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.multiplication (unsigned long )ASize * sizeof(int )
<operator>.assignment _1_sortArrayByParity_next = 4
BLOCK <empty> <empty>
<operator>.modulo *(A + i) % 2
<operator>.assignment _1_sortArrayByParity_next = 3
BLOCK <empty> <empty>
<operator>.addition retArr + evenIndex
<operator>.addition A + i
<operator>.addition retArr + oddIndex
<operator>.addition A + i
<operator>.cast (unsigned long )ASize
<operator>.sizeOf sizeof(int )
<operator>.assignment _1_sortArrayByParity_next = 0
<operator>.assignment _1_sortArrayByParity_next = 2
<operator>.addition A + i
>>>PDG&60 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->12 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->22 0->23 0->24 0->26 0->27 0->28 0->29 0->30 0->31 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->57 0->58 0->59 2->1 2->52 2->54 2->59 3->1 3->34 3->42 3->45 3->55 4->1 7->1 7->1 11->1 11->1 11->12 11->41 12->1 12->1 12->1 12->39 12->51 12->53 13->1 13->1 13->1 13->26 13->53 14->1 14->1 14->22 14->51 15->1 15->1 15->1 16->1 16->1 16->29 16->34 16->52 16->54 16->59 21->1 21->1 21->1 22->1 22->1 22->51 25->1 25->1 25->1 26->1 26->1 26->53 29->1 29->1 29->34 29->52 29->54 29->59 32->1 33->1 33->1 34->1 34->1 34->1 34->29 34->42 34->45 34->46 34->52 34->54 34->55 34->57 34->59 35->1 35->1 35->49 35->58 36->1 36->1 37->1 37->1 38->1 38->1 39->32 40->1 40->11 41->1 42->13 42->13 42->15 42->34 42->45 42->55 45->1 45->40 46->1 46->1 48->1 48->35 48->35 49->1 49->1 51->1 52->1 52->1 53->1 54->1 54->1 56->1 57->1 57->1 58->1 58->1 59->1 59->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern int ( /* missing proto */ malloc ) ( ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; int * sortArrayByParity ( int * A , int ASize , int * returnSize ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int * sortArrayByParity ( int * A , int ASize , int * returnSize ) { int * retArr ; int tmp ; int oddIndex ; int evenIndex ; int i ; unsigned long _1_sortArrayByParity_next ; { { _1_sortArrayByParity_next = 8 ; } while ( 1 ) { switch ( _1_sortArrayByParity_next ) { case 8 : tmp = malloc ( ( unsigned long ) ASize * sizeof ( int ) ) ; retArr = ( int * ) tmp ; oddIndex = ASize - 1 ; evenIndex = 0 ; * returnSize = ASize ; i = 0 ; { _1_sortArrayByParity_next = 6 ; } break ; case 6 : ; if ( i < ASize ) { { _1_sortArrayByParity_next = 4 ; } } else { { _1_sortArrayByParity_next = 0 ; } } break ; case 4 : ; if ( * ( A + i ) % 2 == 0 ) { { _1_sortArrayByParity_next = 3 ; } } else { { _1_sortArrayByParity_next = 2 ; } } break ; case 3 : * ( retArr + evenIndex ) = * ( A + i ) ; evenIndex ++ ; { _1_sortArrayByParity_next = 1 ; } break ; case 2 : * ( retArr + oddIndex ) = * ( A + i ) ; oddIndex -- ; { _1_sortArrayByParity_next = 1 ; } break ; case 1 : i ++ ; { _1_sortArrayByParity_next = 6 ; } break ; case 0 : ; return ( retArr ) ; break ; } } } } void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 6
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 6 <empty>
<operator>.assignment sum = 0
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
<operator>.assignmentPlus sum += i
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("Sum is: %d\n", sum)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 4
<operator>.lessThan i < 127
<operator>.assignment _1_main_next = 4
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
>>>PDG&38 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->21 16->25 17->1 17->1 17->21 17->22 17->30 21->1 21->1 21->25 22->1 22->1 22->21 22->30 25->1 25->1 25->21 28->1 29->1 29->1 30->1 30->1 30->21 30->22 30->35 30->37 31->1 31->1 32->1 32->1 33->28 35->1 35->1 37->1 37->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern double log ( double x ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int argc , char * * argv , char * * _formal_envp ) { int i ; int sum ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 6 ; } while ( 1 ) { switch ( _1_main_next ) { case 6 : sum = 0 ; i = 0 ; { _1_main_next = 4 ; } break ; case 4 : ; if ( i < 127 ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : sum += i ; i ++ ; { _1_main_next = 4 ; } break ; case 1 : printf ( " \n " , sum ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD BKDRHash
METHOD_RETURN unsigned int
PARAM char *str
PARAM unsigned int len
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_BKDRHash_next = 5
LITERAL 1 while (1)
IDENTIFIER _1_BKDRHash_next switch(_1_BKDRHash_next)
LITERAL 5 <empty>
<operator>.assignment seed = 131U
<operator>.assignment hash = 0U
<operator>.assignment i = 0U
<operator>.assignment i = 0U
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 1 <empty>
<operator>.assignment hash = hash * seed + (unsigned int )*str
<operator>.postIncrement str ++
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (hash); return (hash);
<operator>.assignment _1_BKDRHash_next = 3
<operator>.lessThan i < len
<operator>.assignment _1_BKDRHash_next = 3
IDENTIFIER hash return (hash);
BLOCK <empty> <empty>
<operator>.addition hash * seed + (unsigned int )*str
<operator>.assignment _1_BKDRHash_next = 1
BLOCK <empty> <empty>
<operator>.multiplication hash * seed
<operator>.cast (unsigned int )*str
<operator>.assignment _1_BKDRHash_next = 0
>>>PDG&34 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->18 0->19 0->20 0->21 0->23 0->24 0->25 0->26 0->27 0->29 0->30 0->31 0->33 2->1 2->18 3->1 3->24 6->1 6->1 10->1 10->1 10->31 11->1 11->1 11->26 11->31 13->1 13->1 13->19 13->24 17->1 17->1 17->1 17->26 17->31 18->1 18->1 19->1 19->1 19->24 22->1 23->1 23->1 24->1 24->1 24->1 24->19 24->29 24->33 25->1 25->1 26->22 28->1 28->1 29->1 29->1 31->1 31->17 31->17 31->28 31->28 32->1 33->1 33->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; unsigned int BKDRHash ( char * str , unsigned int len ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } unsigned int BKDRHash ( char * str , unsigned int len ) { unsigned int seed ; unsigned int hash ; unsigned int i ; unsigned long _1_BKDRHash_next ; { { _1_BKDRHash_next = 5 ; } while ( 1 ) { switch ( _1_BKDRHash_next ) { case 5 : seed = 131U ; hash = 0U ; i = 0U ; i = 0U ; { _1_BKDRHash_next = 3 ; } break ; case 3 : ; if ( i < len ) { { _1_BKDRHash_next = 1 ; } } else { { _1_BKDRHash_next = 0 ; } } break ; case 1 : hash = hash * seed + ( unsigned int ) * str ; str ++ ; i ++ ; { _1_BKDRHash_next = 3 ; } break ; case 0 : ; return ( hash ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD string_nocase_hash
METHOD_RETURN unsigned int
PARAM void *string
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_string_nocase_hash_next = 5
LITERAL 1 while (1)
IDENTIFIER _1_string_nocase_hash_next switch(_1_string_nocase_hash_next)
LITERAL 5 <empty>
<operator>.assignment result = 5381U
<operator>.assignment p = (unsigned char *)string
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 1 <empty>
<operator>.assignment tmp = tolower((int )*p)
<operator>.assignment result = ((result << 5) + result) + (unsigned int )tmp
<operator>.postIncrement p ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (result); return (result);
<operator>.assignment _1_string_nocase_hash_next = 3
<operator>.notEquals (int )*p != 0
<operator>.assignment _1_string_nocase_hash_next = 3
IDENTIFIER result return (result);
<operator>.cast (unsigned char *)string
BLOCK <empty> <empty>
tolower tolower((int )*p)
<operator>.addition ((result << 5) + result) + (unsigned int )tmp
<operator>.cast (int )*p
<operator>.assignment _1_string_nocase_hash_next = 1
BLOCK <empty> <empty>
<operator>.cast (int )*p
<operator>.addition (result << 5) + result
<operator>.cast (unsigned int )tmp
<operator>.assignment _1_string_nocase_hash_next = 0
<operator>.shiftLeft result << 5
>>>PDG&36 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->15 0->16 0->17 0->18 0->20 0->21 0->22 0->23 0->24 0->25 0->27 0->29 0->30 0->32 0->33 0->34 0->35 2->1 2->10 2->24 5->1 5->1 9->1 9->1 9->23 9->35 10->1 10->1 10->1 10->16 14->1 14->1 14->15 14->27 14->33 15->1 15->1 15->1 15->23 15->35 16->1 16->1 19->1 20->1 20->1 21->1 21->1 21->29 21->34 22->1 22->1 23->19 24->1 26->1 26->14 27->1 27->1 28->1 29->1 29->1 31->1 32->1 33->1 34->1 34->1 35->15 35->15 35->27 35->27 35->32 35->32
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; unsigned int string_nocase_hash ( void * string ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern int ( /* missing proto */ tolower ) ( ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; unsigned int string_nocase_hash ( void * string ) { unsigned int result ; unsigned char * p ; int tmp ; unsigned long _1_string_nocase_hash_next ; { { _1_string_nocase_hash_next = 5 ; } while ( 1 ) { switch ( _1_string_nocase_hash_next ) { case 5 : result = 5381U ; p = ( unsigned char * ) string ; { _1_string_nocase_hash_next = 3 ; } break ; case 3 : ; if ( ( int ) * p != 0 ) { { _1_string_nocase_hash_next = 1 ; } } else { { _1_string_nocase_hash_next = 0 ; } } break ; case 1 : tmp = tolower ( ( int ) * p ) ; result = ( ( result << 5 ) + result ) + ( unsigned int ) tmp ; p ++ ; { _1_string_nocase_hash_next = 3 ; } break ; case 0 : ; return ( result ) ; break ; } } } } void megaInit ( void ) { { } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 1 <empty>
test test()
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
>>>PDG&22 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 19->1 20->1 20->1 21->19
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int ( /* missing proto */ test ) ( ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern double log ( double x ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 1 ; } while ( 1 ) { switch ( _1_main_next ) { case 1 : test ( ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD min
METHOD_RETURN double
PARAM double n1
PARAM double n2
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_min_next = 3
LITERAL 1 while (1)
IDENTIFIER _1_min_next switch(_1_min_next)
LITERAL 3 <empty>
LITERAL 2 <empty>
RETURN return (n1); return (n1);
LITERAL 1 <empty>
RETURN return (n2); return (n2);
<operator>.lessThan n1 < n2
IDENTIFIER n1 return (n1);
IDENTIFIER n2 return (n2);
BLOCK <empty> <empty>
<operator>.assignment _1_min_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_min_next = 1
>>>PDG&21 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->12 0->14 0->15 0->16 0->17 0->18 0->19 0->20 2->1 2->14 2->15 3->1 3->14 3->16 6->1 6->1 11->1 13->1 14->1 14->1 14->1 14->15 14->16 14->18 14->20 15->11 16->13 18->1 18->1 20->1 20->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; double min ( double n1 , double n2 ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } double min ( double n1 , double n2 ) { unsigned long _1_min_next ; { { _1_min_next = 3 ; } while ( 1 ) { switch ( _1_min_next ) { case 3 : ; if ( n1 < n2 ) { { _1_min_next = 2 ; } } else { { _1_min_next = 1 ; } } break ; case 2 : ; return ( n1 ) ; break ; case 1 : ; return ( n2 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD max
METHOD_RETURN int
PARAM int a
PARAM int b
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_max_next = 3
LITERAL 1 while (1)
IDENTIFIER _1_max_next switch(_1_max_next)
LITERAL 3 <empty>
LITERAL 2 <empty>
<operator>.assignment tmp = a
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operator>.assignment tmp = b
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (tmp); return (tmp);
<operator>.greaterThan a > b
<operator>.assignment _1_max_next = 0
<operator>.assignment _1_max_next = 0
IDENTIFIER tmp return (tmp);
BLOCK <empty> <empty>
<operator>.assignment _1_max_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_max_next = 1
>>>PDG&26 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 2->1 2->11 2->18 3->1 3->14 3->18 6->1 6->1 11->1 11->1 11->1 11->21 14->1 14->1 14->1 14->21 17->1 18->1 18->1 18->1 18->11 18->14 18->23 18->25 19->1 19->1 20->1 20->1 21->17 23->1 23->1 25->1 25->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; int max ( int a , int b ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } int max ( int a , int b ) { int tmp ; unsigned long _1_max_next ; { { _1_max_next = 3 ; } while ( 1 ) { switch ( _1_max_next ) { case 3 : ; if ( a > b ) { { _1_max_next = 2 ; } } else { { _1_max_next = 1 ; } } break ; case 2 : tmp = a ; { _1_max_next = 0 ; } break ; case 1 : tmp = b ; { _1_max_next = 0 ; } break ; case 0 : ; return ( tmp ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 27
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 57 <empty>
<operator>.assignment weight[i] = 0
BLOCK <empty> <empty>
LITERAL 56 <empty>
<operator>.assignmentPlus tw += weight[i]
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 55 <empty>
<operator>.assignment smax = max
BLOCK <empty> <empty>
LITERAL 54 <empty>
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 52 <empty>
LITERAL 50 <empty>
<operator>.assignment score[k][i] = (double )(max - points[i]) / (double )sum
BLOCK <empty> <empty>
LITERAL 49 <empty>
LITERAL 48 <empty>
<operator>.assignment score[k][i] = (double )0
BLOCK <empty> <empty>
LITERAL 47 <empty>
<operator>.assignmentMinus fraction -= score[k][i]
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 46 <empty>
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 44 <empty>
LITERAL 42 <empty>
LITERAL 41 <empty>
<operator>.assignmentPlus score[k][i] += fraction / (double )count
BLOCK <empty> <empty>
LITERAL 40 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 39 <empty>
<operator>.postIncrement k ++
BLOCK <empty> <empty>
LITERAL 38 <empty>
<operator>.assignment k = 0
BLOCK <empty> <empty>
LITERAL 36 <empty>
LITERAL 34 <empty>
printf printf("Case #%d:", k + 1)
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 32 <empty>
LITERAL 30 <empty>
printf printf(" %lf"  score[k][i] * (double )100)
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 29 <empty>
printf printf("\n")
<operator>.postIncrement k ++
BLOCK <empty> <empty>
LITERAL 28 <empty>
RETURN return (0); return (0);
LITERAL 27 <empty>
<operator>.assignment r = scanf("%d", & t)
<operator>.assignment k = 0
BLOCK <empty> <empty>
LITERAL 25 <empty>
LITERAL 23 <empty>
<operator>.assignment r = scanf("%d", & n)
<operator>.assignment len[k] = n
<operator>.assignment sum = 0
<operator>.assignment fraction = (double )1
<operator>.assignment smax = 32767
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 21 <empty>
LITERAL 19 <empty>
<operator>.assignment r = scanf("%d", & points[i])
<operator>.assignmentPlus sum += points[i]
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 18 <empty>
<operator>.assignment tw = sum + 1
BLOCK <empty> <empty>
LITERAL 16 <empty>
LITERAL 14 <empty>
<operator>.assignment tw = 0
<operator>.assignment max = -1
<operator>.assignment count = 0
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 12 <empty>
LITERAL 10 <empty>
LITERAL 9 <empty>
LITERAL 8 <empty>
<operator>.assignment max = points[i]
<operator>.assignment maxi = i
BLOCK <empty> <empty>
LITERAL 7 <empty>
<operator>.postIncrement count ++
BLOCK <empty> <empty>
LITERAL 6 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 5 <empty>
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 1 <empty>
<operator>.assignment weight[i] = max - points[i]
BLOCK <empty> <empty>
LITERAL 0 <empty>
<operator>.assignment _1_main_next = 56
<operator>.assignment _1_main_next = 3
<operator>.assignment _1_main_next = 16
<operator>.assignment _1_main_next = 52
<operator>.lessThan i < n
<operator>.assignment _1_main_next = 49
<operator>.lessThan score[k][i] < (double )0
<operator>.assignment _1_main_next = 47
<operator>.assignment _1_main_next = 52
<operator>.assignment _1_main_next = 44
<operator>.lessThan i < n
<operator>.lessEqualsThan points[i] <= max
<operator>.assignment _1_main_next = 40
<operator>.assignment _1_main_next = 44
<operator>.assignment _1_main_next = 25
<operator>.assignment _1_main_next = 36
<operator>.lessThan k < t
<operator>.assignment _1_main_next = 32
<operator>.lessThan i < len[k]
<operator>.assignment _1_main_next = 32
<operator>.assignment _1_main_next = 36
LITERAL 0 return (0);
<operator>.assignment _1_main_next = 25
<operator>.lessThan k < t
<operator>.assignment _1_main_next = 21
<operator>.lessThan i < n
<operator>.assignment _1_main_next = 21
<operator>.assignment _1_main_next = 16
<operator>.greaterThan tw > sum
<operator>.assignment _1_main_next = 12
<operator>.lessThan i < n
<operator>.lessThan points[i] < smax
<operator>.greaterThan points[i] > max
<operator>.assignment _1_main_next = 7
<operator>.assignment _1_main_next = 6
<operator>.assignment _1_main_next = 12
<operator>.assignment _1_main_next = 3
<operator>.lessThan i < n
<operator>.assignment _1_main_next = 0
<operator>.lessThan weight[i] < 0
BLOCK <empty> <empty>
<operator>.division (double )(max - points[i]) / (double )sum
BLOCK <empty> <empty>
<operator>.cast (double )0
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.division fraction / (double )count
BLOCK <empty> <empty>
<operator>.addition k + 1
BLOCK <empty> <empty>
<operator>.multiplication score[k][i] * (double )100
scanf scanf("%d", & t)
BLOCK <empty> <empty>
scanf scanf("%d", & n)
<operator>.cast (double )1
BLOCK <empty> <empty>
scanf scanf("%d", & points[i])
<operator>.addition sum + 1
BLOCK <empty> <empty>
<operator>.minus -1
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.subtraction max - points[i]
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 50
BLOCK <empty> <empty>
<operator>.cast (double )(max - points[i])
<operator>.cast (double )sum
<operator>.cast (double )0
<operator>.assignment _1_main_next = 48
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 42
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 41
BLOCK <empty> <empty>
<operator>.cast (double )count
<operator>.assignment _1_main_next = 34
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 30
BLOCK <empty> <empty>
<operator>.cast (double )100
<operator>.assignment _1_main_next = 23
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 19
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 14
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 10
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 9
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 8
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 57
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 46
<operator>.subtraction max - points[i]
<operator>.assignment _1_main_next = 47
<operator>.assignment _1_main_next = 39
<operator>.assignment _1_main_next = 40
<operator>.assignment _1_main_next = 28
<operator>.assignment _1_main_next = 29
<operator>.assignment _1_main_next = 38
<operator>.assignment _1_main_next = 18
<operator>.assignment _1_main_next = 54
<operator>.assignment _1_main_next = 5
<operator>.assignment _1_main_next = 6
<operator>.assignment _1_main_next = 7
<operator>.assignment _1_main_next = 55
<operator>.assignment _1_main_next = 56
>>>PDG&237 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 0->59 0->60 0->61 0->62 0->63 0->64 0->65 0->66 0->67 0->68 0->69 0->70 0->71 0->72 0->73 0->75 0->76 0->77 0->78 0->80 0->81 0->82 0->83 0->84 0->85 0->86 0->87 0->89 0->90 0->91 0->92 0->93 0->94 0->95 0->96 0->97 0->99 0->100 0->101 0->102 0->103 0->104 0->105 0->107 0->108 0->109 0->110 0->111 0->112 0->113 0->114 0->115 0->116 0->117 0->118 0->119 0->121 0->122 0->123 0->124 0->125 0->126 0->127 0->128 0->129 0->130 0->131 0->132 0->133 0->134 0->135 0->136 0->137 0->138 0->139 0->140 0->141 0->142 0->143 0->144 0->145 0->146 0->147 0->148 0->149 0->150 0->151 0->152 0->153 0->154 0->155 0->156 0->157 0->158 0->159 0->160 0->161 0->162 0->163 0->164 0->165 0->166 0->167 0->168 0->169 0->170 0->171 0->172 0->173 0->174 0->175 0->176 0->177 0->178 0->180 0->181 0->182 0->183 0->184 0->185 0->186 0->187 0->188 0->189 0->190 0->192 0->193 0->194 0->195 0->196 0->197 0->198 0->199 0->200 0->201 0->202 0->203 0->204 0->205 0->206 0->207 0->208 0->209 0->210 0->211 0->212 0->213 0->214 0->215 0->216 0->217 0->218 0->219 0->220 0->221 0->222 0->223 0->224 0->225 0->226 0->227 0->228 0->229 0->230 0->231 0->232 0->233 0->234 0->235 0->236 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->19 16->162 19->1 19->1 19->1 19->151 20->1 20->1 20->38 20->49 20->65 20->90 20->107 20->113 20->127 20->133 20->141 20->148 20->153 20->160 23->1 23->1 23->1 23->154 26->1 26->1 26->20 26->38 26->49 26->65 26->90 26->107 26->113 26->127 26->133 26->141 26->148 26->153 26->160 30->1 30->1 30->1 30->37 30->46 30->129 30->173 34->1 34->1 34->1 34->37 34->46 34->129 34->173 37->1 37->1 37->1 37->169 38->1 38->1 38->20 38->49 38->65 38->90 38->107 38->113 38->127 38->133 38->141 38->148 38->153 38->160 41->1 41->1 41->20 41->38 41->49 41->65 41->90 41->107 41->113 41->127 41->133 41->141 41->148 41->153 41->160 46->1 46->1 46->1 46->37 46->129 46->173 49->1 49->1 49->20 49->38 49->65 49->90 49->107 49->113 49->127 49->133 49->141 49->148 49->153 49->160 52->1 52->1 52->59 52->69 52->139 52->146 52->171 55->1 55->1 55->52 55->59 55->69 55->139 55->146 55->171 59->1 59->1 60->1 60->1 60->20 60->38 60->49 60->65 60->90 60->107 60->113 60->127 60->133 60->141 60->148 60->153 60->160 64->1 64->1 65->1 65->1 65->20 65->38 65->49 65->90 65->107 65->113 65->127 65->133 65->141 65->148 65->153 65->160 68->1 69->1 69->1 69->52 69->59 69->139 69->146 69->171 72->1 74->1 74->1 75->1 75->1 75->52 75->59 75->69 75->139 75->146 75->171 79->1 79->1 80->1 80->1 80->1 80->141 81->1 81->1 81->89 81->93 81->151 81->164 81->180 81->192 82->1 82->1 82->1 82->37 82->169 83->1 83->1 83->154 84->1 84->1 84->20 84->38 84->49 84->65 84->90 84->107 84->113 84->127 84->133 84->141 84->148 84->153 84->160 88->1 88->1 89->1 89->1 89->1 89->93 89->151 89->164 89->180 89->192 90->1 90->1 90->20 90->38 90->49 90->65 90->107 90->113 90->127 90->133 90->141 90->148 90->153 90->160 93->1 93->1 93->1 93->19 93->151 97->1 97->1 97->19 97->151 98->1 98->1 98->1 98->23 98->134 98->155 98->187 98->223 99->1 99->1 99->110 99->169 99->200 100->1 100->1 100->20 100->38 100->49 100->65 100->90 100->107 100->113 100->127 100->133 100->141 100->148 100->153 100->160 106->1 106->1 106->1 106->23 106->134 106->155 106->187 106->223 107->1 107->1 107->1 110->1 110->1 110->169 110->200 113->1 113->1 113->20 113->38 113->49 113->65 113->90 113->107 113->127 113->133 113->141 113->148 113->153 113->160 116->1 116->1 116->20 116->38 116->49 116->65 116->90 116->107 116->113 116->127 116->133 116->141 116->148 116->153 116->160 120->1 120->1 120->1 120->19 120->162 123->1 123->1 124->1 124->1 125->1 125->1 126->1 126->1 127->1 127->1 127->1 127->20 127->38 127->49 127->65 127->80 127->90 127->107 127->113 127->133 127->133 127->141 127->148 127->148 127->153 127->153 127->160 127->160 127->176 127->189 127->222 128->1 128->1 129->1 129->1 129->1 129->37 129->46 129->173 129->194 129->224 130->1 130->1 131->1 131->1 132->1 132->1 133->1 133->1 133->1 133->20 133->38 133->49 133->65 133->80 133->90 133->107 133->113 133->127 133->127 133->141 133->148 133->148 133->153 133->153 133->160 133->160 133->176 133->196 133->225 134->1 134->1 134->1 134->23 134->89 134->106 134->154 134->155 134->155 134->179 134->187 134->187 134->198 134->223 134->223 134->226 135->1 135->1 136->1 136->1 137->1 137->1 138->1 138->1 139->1 139->1 139->1 139->52 139->59 139->69 139->146 139->146 139->171 139->174 139->201 139->227 140->1 140->1 141->1 141->1 141->1 141->20 141->38 141->49 141->65 141->90 141->107 141->113 141->127 141->133 141->148 141->153 141->160 141->203 141->228 142->1 142->1 143->1 143->1 144->72 145->1 145->1 146->1 146->1 146->1 146->52 146->59 146->69 146->139 146->139 146->171 146->174 146->206 146->229 147->1 147->1 148->1 148->1 148->1 148->20 148->38 148->49 148->65 148->80 148->90 148->107 148->113 148->127 148->127 148->133 148->133 148->141 148->153 148->153 148->160 148->160 148->176 148->208 148->230 149->1 149->1 150->1 150->1 151->1 151->1 151->1 151->19 151->89 151->93 151->164 151->180 151->192 151->210 151->231 152->1 152->1 153->1 153->1 153->1 153->20 153->38 153->49 153->65 153->80 153->90 153->107 153->113 153->127 153->127 153->133 153->133 153->141 153->148 153->148 153->160 153->160 153->176 153->212 153->232 154->1 154->1 154->1 154->89 154->106 154->134 154->155 154->179 154->187 154->214 154->223 154->233 155->1 155->1 155->1 155->23 155->89 155->106 155->134 155->134 155->154 155->179 155->187 155->187 155->216 155->223 155->223 155->234 156->1 156->1 157->1 157->1 158->1 158->1 159->1 159->1 160->1 160->1 160->1 160->20 160->38 160->49 160->65 160->80 160->90 160->107 160->113 160->127 160->127 160->133 160->133 160->141 160->148 160->148 160->153 160->153 160->176 160->218 160->235 161->1 161->1 162->1 162->1 162->19 162->220 162->236 164->1 164->1 164->30 164->30 169->1 169->1 169->37 169->46 169->46 171->1 173->1 173->1 173->37 173->46 173->64 173->64 173->129 174->1 174->74 174->139 174->146 176->1 176->79 176->80 176->127 176->133 176->148 176->153 176->160 179->1 179->88 179->89 179->106 179->134 179->154 179->155 179->187 179->223 180->1 182->98 187->1 187->1 187->23 187->89 187->106 187->120 187->120 187->134 187->134 187->154 187->155 187->155 187->179 187->223 187->223 189->1 189->1 191->1 192->1 194->1 194->1 196->1 196->1 198->1 198->1 200->1 201->1 201->1 203->1 203->1 206->1 206->1 208->1 208->1 210->1 210->1 212->1 212->1 214->1 214->1 216->1 216->1 218->1 218->1 220->1 220->1 222->1 222->1 223->1 223->1 223->23 223->89 223->106 223->134 223->134 223->154 223->155 223->155 223->164 223->164 223->179 223->187 223->187 223->191 223->191 224->1 224->1 225->1 225->1 226->1 226->1 227->1 227->1 228->1 228->1 229->1 229->1 230->1 230->1 231->1 231->1 232->1 232->1 233->1 233->1 234->1 234->1 235->1 235->1 236->1 236->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int ( /* missing proto */ scanf ) ( ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { int t ; int i ; int sum ; int max ; int k ; int n ; int r ; int weight [ 201 ] ; int tw ; int maxi ; int smax ; int count ; int points [ 201 ] ; int len [ 51 ] ; double score [ 51 ] [ 201 ] ; double fraction ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 27 ; } while ( 1 ) { switch ( _1_main_next ) { case 57 : weight [ i ] = 0 ; { _1_main_next = 56 ; } break ; case 56 : tw += weight [ i ] ; i ++ ; { _1_main_next = 3 ; } break ; case 55 : smax = max ; { _1_main_next = 16 ; } break ; case 54 : i = 0 ; { _1_main_next = 52 ; } break ; case 52 : ; if ( i < n ) { { _1_main_next = 50 ; } } else { { _1_main_next = 46 ; } } break ; case 50 : score [ k ] [ i ] = ( double ) ( max - points [ i ] ) / ( double ) sum ; { _1_main_next = 49 ; } break ; case 49 : ; if ( score [ k ] [ i ] < ( double ) 0 ) { { _1_main_next = 48 ; } } else { { _1_main_next = 47 ; } } break ; case 48 : score [ k ] [ i ] = ( double ) 0 ; { _1_main_next = 47 ; } break ; case 47 : fraction -= score [ k ] [ i ] ; i ++ ; { _1_main_next = 52 ; } break ; case 46 : i = 0 ; { _1_main_next = 44 ; } break ; case 44 : ; if ( i < n ) { { _1_main_next = 42 ; } } else { { _1_main_next = 39 ; } } break ; case 42 : ; if ( points [ i ] <= max ) { { _1_main_next = 41 ; } } else { { _1_main_next = 40 ; } } break ; case 41 : score [ k ] [ i ] += fraction / ( double ) count ; { _1_main_next = 40 ; } break ; case 40 : i ++ ; { _1_main_next = 44 ; } break ; case 39 : k ++ ; { _1_main_next = 25 ; } break ; case 38 : k = 0 ; { _1_main_next = 36 ; } break ; case 36 : ; if ( k < t ) { { _1_main_next = 34 ; } } else { { _1_main_next = 28 ; } } break ; case 34 : printf ( " " , k + 1 ) ; i = 0 ; { _1_main_next = 32 ; } break ; case 32 : ; if ( i < len [ k ] ) { { _1_main_next = 30 ; } } else { { _1_main_next = 29 ; } } break ; case 30 : printf ( " " , score [ k ] [ i ] * ( double ) 100 ) ; i ++ ; { _1_main_next = 32 ; } break ; case 29 : printf ( " \n " ) ; k ++ ; { _1_main_next = 36 ; } break ; case 28 : ; return ( 0 ) ; break ; case 27 : r = scanf ( " " , & t ) ; k = 0 ; { _1_main_next = 25 ; } break ; case 25 : ; if ( k < t ) { { _1_main_next = 23 ; } } else { { _1_main_next = 38 ; } } break ; case 23 : r = scanf ( " " , & n ) ; len [ k ] = n ; sum = 0 ; fraction = ( double ) 1 ; smax = 32767 ; i = 0 ; { _1_main_next = 21 ; } break ; case 21 : ; if ( i < n ) { { _1_main_next = 19 ; } } else { { _1_main_next = 18 ; } } break ; case 19 : r = scanf ( " " , & points [ i ] ) ; sum += points [ i ] ; i ++ ; { _1_main_next = 21 ; } break ; case 18 : tw = sum + 1 ; { _1_main_next = 16 ; } break ; case 16 : ; if ( tw > sum ) { { _1_main_next = 14 ; } } else { { _1_main_next = 54 ; } } break ; case 14 : tw = 0 ; max = -1 ; count = 0 ; i = 0 ; { _1_main_next = 12 ; } break ; case 12 : ; if ( i < n ) { { _1_main_next = 10 ; } } else { { _1_main_next = 5 ; } } break ; case 10 : ; if ( points [ i ] < smax ) { { _1_main_next = 9 ; } } else { { _1_main_next = 6 ; } } break ; case 9 : ; if ( points [ i ] > max ) { { _1_main_next = 8 ; } } else { { _1_main_next = 7 ; } } break ; case 8 : max = points [ i ] ; maxi = i ; { _1_main_next = 7 ; } break ; case 7 : count ++ ; { _1_main_next = 6 ; } break ; case 6 : i ++ ; { _1_main_next = 12 ; } break ; case 5 : i = 0 ; { _1_main_next = 3 ; } break ; case 3 : ; if ( i < n ) { { _1_main_next = 1 ; } } else { { _1_main_next = 55 ; } } break ; case 1 : weight [ i ] = max - points [ i ] ; { _1_main_next = 0 ; } break ; case 0 : ; if ( weight [ i ] < 0 ) { { _1_main_next = 57 ; } } else { { _1_main_next = 56 ; } } break ; } } } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 51
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 51 <empty>
scanf scanf("%d", & n)
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 49 <empty>
LITERAL 47 <empty>
<operator>.assignment k = 0
BLOCK <empty> <empty>
LITERAL 45 <empty>
LITERAL 43 <empty>
<operator>.assignment j = 0
BLOCK <empty> <empty>
LITERAL 41 <empty>
LITERAL 39 <empty>
<operator>.assignment matriz[k][j] = 0
<operator>.postIncrement j ++
BLOCK <empty> <empty>
LITERAL 38 <empty>
<operator>.postIncrement k ++
BLOCK <empty> <empty>
LITERAL 37 <empty>
scanf scanf("%d", & s)
getchar getchar()
<operator>.assignment j = 0
BLOCK <empty> <empty>
LITERAL 35 <empty>
LITERAL 33 <empty>
gets gets(vetor[j])
<operator>.postIncrement j ++
BLOCK <empty> <empty>
LITERAL 32 <empty>
scanf scanf("%d", & q)
getchar getchar()
<operator>.assignment j = 0
BLOCK <empty> <empty>
LITERAL 30 <empty>
LITERAL 28 <empty>
gets gets(linha)
<operator>.assignment k = 0
BLOCK <empty> <empty>
LITERAL 26 <empty>
LITERAL 24 <empty>
<operator>.assignment tmp = strcmp(linha, vetor[k])
BLOCK <empty> <empty>
LITERAL 23 <empty>
LITERAL 22 <empty>
<operator>.assignment matriz[k][j] = 1
BLOCK <empty> <empty>
LITERAL 20 <empty>
<operator>.postIncrement k ++
BLOCK <empty> <empty>
LITERAL 19 <empty>
<operator>.postIncrement j ++
BLOCK <empty> <empty>
LITERAL 18 <empty>
<operator>.assignment indice = -1
<operator>.assignment mud = -1
<operator>.assignment ant = -1
BLOCK <empty> <empty>
LITERAL 16 <empty>
LITERAL 14 <empty>
<operator>.postIncrement mud ++
<operator>.postIncrement indice ++
<operator>.assignment k = 0
BLOCK <empty> <empty>
LITERAL 12 <empty>
LITERAL 10 <empty>
<operator>.assignment a = indice
BLOCK <empty> <empty>
LITERAL 8 <empty>
LITERAL 6 <empty>
<operator>.postIncrement a ++
BLOCK <empty> <empty>
LITERAL 5 <empty>
LITERAL 4 <empty>
<operator>.assignment ant = a - 1
BLOCK <empty> <empty>
LITERAL 3 <empty>
<operator>.postIncrement k ++
BLOCK <empty> <empty>
LITERAL 2 <empty>
<operator>.assignment indice = ant
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("Case #%d: %d\n", i + 1, mud)
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 49
<operator>.lessThan i < n
<operator>.assignment _1_main_next = 45
<operator>.lessThan k < 100
<operator>.assignment _1_main_next = 41
<operator>.lessThan j < 1000
<operator>.assignment _1_main_next = 41
<operator>.assignment _1_main_next = 45
<operator>.assignment _1_main_next = 35
<operator>.lessThan j < s
<operator>.assignment _1_main_next = 35
<operator>.assignment _1_main_next = 30
<operator>.lessThan j < q
<operator>.assignment _1_main_next = 26
<operator>.lessThan k < s
<operator>.assignment _1_main_next = 23
IDENTIFIER tmp if (tmp)
<operator>.assignment _1_main_next = 19
<operator>.assignment _1_main_next = 26
<operator>.assignment _1_main_next = 30
<operator>.assignment _1_main_next = 16
<operator>.lessThan indice < q
<operator>.assignment _1_main_next = 12
<operator>.lessThan k < s
<operator>.assignment _1_main_next = 8
<operator>.notEquals matriz[k][a] != 1
<operator>.assignment _1_main_next = 8
<operator>.lessThan ant < a - 1
<operator>.assignment _1_main_next = 3
<operator>.assignment _1_main_next = 12
<operator>.assignment _1_main_next = 16
<operator>.assignment _1_main_next = 49
LITERAL 0 return (0);
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
strcmp strcmp(linha, vetor[k])
BLOCK <empty> <empty>
<operator>.minus -1
<operator>.minus -1
<operator>.minus -1
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.subtraction a - 1
<operator>.addition i + 1
<operator>.assignment _1_main_next = 47
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 43
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 39
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 33
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 28
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 24
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 20
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 14
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 10
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 6
BLOCK <empty> <empty>
<operator>.subtraction a - 1
<operator>.assignment _1_main_next = 4
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 0
<operator>.assignment _1_main_next = 37
<operator>.assignment _1_main_next = 38
<operator>.assignment _1_main_next = 32
<operator>.assignment _1_main_next = 18
<operator>.assignment _1_main_next = 19
<operator>.assignment _1_main_next = 22
<operator>.assignment _1_main_next = 1
<operator>.assignment _1_main_next = 2
<operator>.assignment _1_main_next = 5
<operator>.assignment _1_main_next = 3
>>>PDG&188 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->58 0->59 0->60 0->61 0->62 0->63 0->64 0->65 0->66 0->67 0->68 0->69 0->73 0->74 0->75 0->76 0->77 0->78 0->79 0->80 0->81 0->82 0->83 0->84 0->85 0->86 0->87 0->88 0->89 0->91 0->92 0->93 0->94 0->95 0->96 0->97 0->98 0->99 0->100 0->101 0->102 0->103 0->104 0->105 0->106 0->107 0->108 0->109 0->110 0->111 0->112 0->113 0->114 0->115 0->116 0->117 0->118 0->119 0->120 0->121 0->122 0->123 0->124 0->125 0->126 0->127 0->128 0->129 0->130 0->131 0->132 0->133 0->134 0->135 0->136 0->137 0->138 0->139 0->140 0->141 0->142 0->143 0->144 0->145 0->146 0->147 0->148 0->149 0->150 0->151 0->152 0->153 0->154 0->155 0->156 0->157 0->158 0->159 0->160 0->161 0->162 0->163 0->164 0->165 0->166 0->167 0->168 0->169 0->170 0->171 0->172 0->173 0->174 0->175 0->176 0->177 0->178 0->179 0->180 0->181 0->182 0->183 0->184 0->185 0->186 0->187 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->105 17->1 17->1 17->99 17->100 17->105 17->153 21->1 21->1 21->33 21->64 21->93 21->107 21->118 21->127 25->1 25->1 25->30 25->43 25->67 25->109 25->113 25->116 29->1 29->1 30->1 30->1 30->43 30->67 30->109 30->113 30->116 33->1 33->1 33->64 33->93 33->107 33->118 33->127 36->1 36->113 36->118 36->127 37->1 38->1 38->1 38->30 38->43 38->67 38->109 38->113 38->116 42->1 42->1 43->1 43->1 43->30 43->67 43->109 43->113 43->116 46->1 46->116 46->125 47->1 48->1 48->1 48->30 48->43 48->67 48->109 48->113 48->116 52->1 52->1 52->143 53->1 53->1 53->33 53->64 53->93 53->107 53->118 53->127 57->1 57->1 57->1 61->1 61->1 64->1 64->1 64->33 64->93 64->107 64->118 64->127 67->1 67->1 67->30 67->43 67->109 67->113 67->116 70->1 70->1 70->77 70->82 70->125 71->1 71->1 71->76 71->99 72->1 72->1 72->1 72->96 72->131 76->1 76->1 76->99 77->1 77->1 77->82 77->125 78->1 78->1 78->33 78->64 78->93 78->107 78->118 78->127 82->1 82->1 82->1 82->86 82->152 82->174 86->1 86->1 86->152 86->174 90->1 90->1 90->1 90->96 90->131 93->1 93->1 93->33 93->64 93->107 93->118 93->127 96->1 96->1 96->1 96->77 96->82 96->125 99->1 99->1 99->1 99->76 100->1 100->1 100->99 100->105 100->153 103->1 104->1 104->1 105->1 105->1 105->1 105->16 105->99 105->100 105->153 105->154 105->177 106->1 106->1 107->1 107->1 107->33 107->64 107->93 107->118 107->127 107->156 107->178 108->1 108->1 109->1 109->1 109->30 109->43 109->67 109->113 109->116 109->158 109->179 110->1 110->1 111->1 111->1 112->1 112->1 113->1 113->1 113->1 113->30 113->36 113->43 113->67 113->109 113->116 113->118 113->127 113->160 113->180 114->1 114->1 115->1 115->1 116->1 116->1 116->1 116->30 116->43 116->46 116->67 116->109 116->113 116->125 116->162 116->181 117->1 117->1 118->1 118->1 118->1 118->33 118->36 118->64 118->93 118->107 118->113 118->127 118->127 118->164 118->182 119->1 119->1 121->1 121->1 122->1 122->1 123->1 123->1 124->1 124->1 125->1 125->1 125->1 125->46 125->77 125->82 125->116 125->168 125->184 126->1 126->1 127->1 127->1 127->1 127->33 127->36 127->64 127->93 127->107 127->113 127->118 127->118 127->170 127->185 128->1 128->1 129->1 129->1 129->172 129->186 130->1 130->1 131->1 131->1 131->1 131->96 131->175 131->187 132->1 132->1 133->1 133->1 134->1 134->1 135->1 135->1 136->103 143->1 143->1 143->52 143->57 143->57 145->70 146->71 147->72 152->1 152->86 152->90 152->90 152->174 154->1 154->1 156->1 156->1 158->1 158->1 160->1 160->1 162->1 162->1 164->1 164->1 166->1 166->1 168->1 168->1 170->1 170->1 172->1 172->1 174->1 174->86 174->131 174->131 174->152 175->1 175->1 177->1 177->1 178->1 178->1 179->1 179->1 180->1 180->1 181->1 181->1 182->1 182->1 183->1 183->1 184->1 184->1 185->1 185->1 186->1 186->1 187->1 187->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern void exit ( int status ) ; extern int pthread_cond_signal ( int * cond ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; char * * _global_envp = ( char * * ) 0 ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int ( /* missing proto */ scanf ) ( ) ; extern int ( /* missing proto */ gets ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int ( /* missing proto */ strcmp ) ( ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; extern int ( /* missing proto */ getchar ) ( ) ; void megaInit ( void ) { { } } int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { int n ; int i ; int q ; int j ; int s ; int k ; int a ; int indice ; int mud ; int ant ; int matriz [ 100 ] [ 1000 ] ; char linha [ 101 ] ; char vetor [ 100 ] [ 101 ] ; int tmp ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 51 ; } while ( 1 ) { switch ( _1_main_next ) { case 51 : scanf ( " " , & n ) ; i = 0 ; { _1_main_next = 49 ; } break ; case 49 : ; if ( i < n ) { { _1_main_next = 47 ; } } else { { _1_main_next = 0 ; } } break ; case 47 : k = 0 ; { _1_main_next = 45 ; } break ; case 45 : ; if ( k < 100 ) { { _1_main_next = 43 ; } } else { { _1_main_next = 37 ; } } break ; case 43 : j = 0 ; { _1_main_next = 41 ; } break ; case 41 : ; if ( j < 1000 ) { { _1_main_next = 39 ; } } else { { _1_main_next = 38 ; } } break ; case 39 : matriz [ k ] [ j ] = 0 ; j ++ ; { _1_main_next = 41 ; } break ; case 38 : k ++ ; { _1_main_next = 45 ; } break ; case 37 : scanf ( " " , & s ) ; getchar ( ) ; j = 0 ; { _1_main_next = 35 ; } break ; case 35 : ; if ( j < s ) { { _1_main_next = 33 ; } } else { { _1_main_next = 32 ; } } break ; case 33 : gets ( vetor [ j ] ) ; j ++ ; { _1_main_next = 35 ; } break ; case 32 : scanf ( " " , & q ) ; getchar ( ) ; j = 0 ; { _1_main_next = 30 ; } break ; case 30 : ; if ( j < q ) { { _1_main_next = 28 ; } } else { { _1_main_next = 18 ; } } break ; case 28 : gets ( linha ) ; k = 0 ; { _1_main_next = 26 ; } break ; case 26 : ; if ( k < s ) { { _1_main_next = 24 ; } } else { { _1_main_next = 19 ; } } break ; case 24 : tmp = strcmp ( linha , vetor [ k ] ) ; { _1_main_next = 23 ; } break ; case 23 : ; if ( tmp ) { { _1_main_next = 20 ; } } else { { _1_main_next = 22 ; } } break ; case 22 : matriz [ k ] [ j ] = 1 ; { _1_main_next = 19 ; } break ; case 20 : k ++ ; { _1_main_next = 26 ; } break ; case 19 : j ++ ; { _1_main_next = 30 ; } break ; case 18 : indice = -1 ; mud = -1 ; ant = -1 ; { _1_main_next = 16 ; } break ; case 16 : ; if ( indice < q ) { { _1_main_next = 14 ; } } else { { _1_main_next = 1 ; } } break ; case 14 : mud ++ ; indice ++ ; k = 0 ; { _1_main_next = 12 ; } break ; case 12 : ; if ( k < s ) { { _1_main_next = 10 ; } } else { { _1_main_next = 2 ; } } break ; case 10 : a = indice ; { _1_main_next = 8 ; } break ; case 8 : ; if ( matriz [ k ] [ a ] != 1 ) { { _1_main_next = 6 ; } } else { { _1_main_next = 5 ; } } break ; case 6 : a ++ ; { _1_main_next = 8 ; } break ; case 5 : ; if ( ant < a - 1 ) { { _1_main_next = 4 ; } } else { { _1_main_next = 3 ; } } break ; case 4 : ant = a - 1 ; { _1_main_next = 3 ; } break ; case 3 : k ++ ; { _1_main_next = 12 ; } break ; case 2 : indice = ant ; { _1_main_next = 16 ; } break ; case 1 : printf ( " \n " , i + 1 , mud ) ; i ++ ; { _1_main_next = 49 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD sumk
METHOD_RETURN long
PARAM long *a
PARAM long start
PARAM long k
PARAM long n
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_sumk_next = 7
LITERAL 1 while (1)
IDENTIFIER _1_sumk_next switch(_1_sumk_next)
LITERAL 7 <empty>
<operator>.assignment sum = 0L
<operator>.assignment i = start
BLOCK <empty> <empty>
LITERAL 5 <empty>
LITERAL 4 <empty>
LITERAL 1 <empty>
<operator>.assignmentPlus sum += *(a + i)
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (sum); return (sum);
<operator>.assignment _1_sumk_next = 5
<operator>.lessThan i < n
<operator>.lessThan i < start + k
<operator>.assignment _1_sumk_next = 5
IDENTIFIER sum return (sum);
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_sumk_next = 4
BLOCK <empty> <empty>
<operator>.addition start + k
<operator>.assignment _1_sumk_next = 1
BLOCK <empty> <empty>
<operator>.addition a + i
<operator>.assignment _1_sumk_next = 0
<operator>.assignment _1_sumk_next = 0
>>>PDG&38 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 2->1 2->35 3->1 3->13 3->25 3->32 4->1 4->25 4->32 5->1 5->24 8->1 8->1 12->1 12->1 12->18 12->27 13->1 13->1 13->1 13->19 13->24 13->25 13->35 18->1 18->1 18->1 18->27 19->1 19->1 19->24 19->25 19->35 22->1 23->1 23->1 24->1 24->1 24->1 24->19 24->25 24->30 24->35 24->36 25->1 25->1 25->1 25->19 25->24 25->33 25->35 25->37 26->1 26->1 27->22 30->1 30->1 32->1 32->1 33->1 33->1 35->1 36->1 36->1 37->1 37->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; long sumk ( long * a , long start , long k , long n ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; long sumk ( long * a , long start , long k , long n ) { long sum ; long i ; unsigned long _1_sumk_next ; { { _1_sumk_next = 7 ; } while ( 1 ) { switch ( _1_sumk_next ) { case 7 : sum = 0L ; i = start ; { _1_sumk_next = 5 ; } break ; case 5 : ; if ( i < n ) { { _1_sumk_next = 4 ; } } else { { _1_sumk_next = 0 ; } } break ; case 4 : ; if ( i < start + k ) { { _1_sumk_next = 1 ; } } else { { _1_sumk_next = 0 ; } } break ; case 1 : sum += * ( a + i ) ; i ++ ; { _1_sumk_next = 5 ; } break ; case 0 : ; return ( sum ) ; break ; } } } } void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } }
>>>Func
METHOD numcmp
METHOD_RETURN int
PARAM void const   *a
PARAM void const   *b
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_numcmp_next = 0
LITERAL 1 while (1)
IDENTIFIER _1_numcmp_next switch(_1_numcmp_next)
LITERAL 0 <empty>
RETURN return (*((int *)a) - *((int *)b)); return (*((int *)a) - *((int *)b));
<operator>.subtraction *((int *)a) - *((int *)b)
<operator>.cast (int *)a
<operator>.cast (int *)b
>>>PDG&14 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->12 0->13 2->12 3->13 6->1 6->1 10->1 11->1 11->1 11->1 11->10 12->1 13->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; int numcmp ( void const * a , void const * b ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int numcmp ( void const * a , void const * b ) { unsigned long _1_numcmp_next ; { { _1_numcmp_next = 0 ; } while ( 1 ) { switch ( _1_numcmp_next ) { case 0 : ; return ( * ( ( int * ) a ) - * ( ( int * ) b ) ) ; break ; } } } } void megaInit ( void ) { { } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 4
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 4 <empty>
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 2 <empty>
printf printf("Usage: program-name argument\n")
BLOCK <empty> <empty>
LITERAL 1 <empty>
RETURN return (1); return (1);
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 3
<operator>.lessThan argc < 2
<operator>.assignment _1_main_next = 1
LITERAL 1 return (1);
LITERAL 0 return (0);
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 0
>>>PDG&34 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 2->7 2->26 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 19->1 22->1 24->1 25->1 25->1 26->1 26->1 26->31 26->33 27->1 27->1 28->22 29->24 31->1 31->1 33->1 33->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern double log ( double x ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int argc , char * * argv , char * * _formal_envp ) { int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 4 ; } while ( 1 ) { switch ( _1_main_next ) { case 4 : ; { _1_main_next = 3 ; } break ; case 3 : ; if ( argc < 2 ) { { _1_main_next = 2 ; } } else { { _1_main_next = 0 ; } } break ; case 2 : printf ( " \n " ) ; { _1_main_next = 1 ; } break ; case 1 : ; return ( 1 ) ; break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 11
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 11 <empty>
<operator>.assignment sum = 0
<operator>.assignment str = (char const   *)*(argv + 1)
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 9 <empty>
LITERAL 7 <empty>
<operator>.assignmentPlus sum += i
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 6 <empty>
<operator>.assignment t = str
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
<operator>.assignmentPlus sum += (int )*t
<operator>.postIncrement t ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("Sum is: %d\n", sum)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 9
<operator>.lessThan i < (int )*(*(argv + 1) + 0)
<operator>.assignment _1_main_next = 9
<operator>.assignment _1_main_next = 4
<operator>.assignment _1_main_next = 4
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
<operator>.cast (char const   *)*(argv + 1)
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.cast (int )*t
<operator>.cast (int )*(*(argv + 1) + 0)
<operator>.assignment _1_main_next = 7
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.addition argv + 1
<operator>.assignment _1_main_next = 6
<operator>.assignment _1_main_next = 1
<operator>.addition *(argv + 1) + 0
<operator>.addition argv + 1
<operator>.indirection *t
>>>PDG&60 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->46 0->47 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 2->7 3->8 3->54 3->58 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->22 16->30 16->34 17->1 17->1 17->1 17->26 18->1 18->1 18->22 18->23 18->39 22->1 22->1 22->30 22->34 23->1 23->1 23->22 23->39 26->1 26->1 26->1 26->31 30->1 30->1 30->1 30->22 30->34 31->1 31->1 34->1 34->1 34->22 34->30 37->1 38->1 38->1 39->1 39->1 39->1 39->22 39->23 39->50 39->55 40->1 40->1 41->1 41->1 42->1 42->1 43->1 43->1 44->37 45->1 48->1 49->1 50->1 50->1 52->1 52->1 54->1 55->1 55->1 56->1 56->1 57->1 58->1 59->52 59->56
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int argc , char * * argv , char * * _formal_envp ) { int i ; int sum ; char const * str ; register char const * t ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 11 ; } while ( 1 ) { switch ( _1_main_next ) { case 11 : sum = 0 ; str = ( char const * ) * ( argv + 1 ) ; i = 0 ; { _1_main_next = 9 ; } break ; case 9 : ; if ( i < ( int ) * ( * ( argv + 1 ) + 0 ) ) { { _1_main_next = 7 ; } } else { { _1_main_next = 6 ; } } break ; case 7 : sum += i ; i ++ ; { _1_main_next = 9 ; } break ; case 6 : t = str ; { _1_main_next = 4 ; } break ; case 4 : ; if ( * t ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : sum += ( int ) * t ; t ++ ; { _1_main_next = 4 ; } break ; case 1 : printf ( " \n " , sum ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 6
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 6 <empty>
<operator>.assignment hexa = 0L
<operator>.assignment i = 1L
printf printf("Enter the binary number: ")
scanf scanf("%ld", & binary)
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
<operator>.assignment remainder = binary % 10L
<operator>.assignmentPlus hexa += remainder * i
<operator>.assignmentMultiplication i *= 2L
<operator>.assignmentDivision binary /= 10L
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("The equivalent hexadecimal value: %lX", hexa)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 4
<operator>.notEquals binary != 0L
<operator>.assignment _1_main_next = 4
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
BLOCK <empty> <empty>
<operator>.modulo binary % 10L
<operator>.multiplication remainder * i
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
>>>PDG&44 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->24 16->29 17->1 17->1 17->40 18->1 19->1 19->26 19->34 19->39 23->1 23->1 23->40 24->1 24->1 24->1 24->29 25->1 25->1 25->40 26->1 26->1 26->19 26->34 26->39 29->1 29->1 29->24 32->1 33->1 33->1 34->1 34->1 34->19 34->39 34->41 34->43 35->1 35->1 36->1 36->1 37->32 39->23 39->23 39->26 40->1 40->24 40->24 40->25 41->1 41->1 43->1 43->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int ( /* missing proto */ scanf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern double log ( double x ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { long binary ; long hexa ; long i ; long remainder ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 6 ; } while ( 1 ) { switch ( _1_main_next ) { case 6 : hexa = 0L ; i = 1L ; printf ( " " ) ; scanf ( " " , & binary ) ; { _1_main_next = 4 ; } break ; case 4 : ; if ( binary != 0L ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : remainder = binary % 10L ; hexa += remainder * i ; i *= 2L ; binary /= 10L ; { _1_main_next = 4 ; } break ; case 1 : printf ( " " , hexa ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 6
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 6 <empty>
printf printf("Enter number of vertices: ")
scanf scanf("%d", & V)
printf printf("Enter number of edges: ")
scanf scanf("%d", & E)
createGraph createGraph(& G, V, E)
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
printf printf("\nEdge %d \nEnter source: ", i + 1)
scanf scanf("%d", & src)
printf printf("Enter destination: ")
scanf scanf("%d", & dst)
printf printf("Enter weight: ")
scanf scanf("%d", & weight)
addEdge addEdge(& G, src, dst, weight)
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("\nEnter source:")
scanf scanf("%d", & gsrc)
BellmanFord BellmanFord(& G, gsrc)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 4
<operator>.lessThan i < E
<operator>.assignment _1_main_next = 4
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
BLOCK <empty> <empty>
<operator>.addition i + 1
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
>>>PDG&51 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 17->1 17->20 18->1 19->1 19->20 19->42 20->1 20->1 20->1 20->1 20->17 20->19 20->31 20->37 20->42 21->1 21->1 21->25 21->32 21->42 21->47 25->1 25->1 26->1 26->31 27->1 28->1 28->31 29->1 30->1 30->31 31->1 31->1 31->1 31->1 31->1 31->20 31->26 31->28 31->30 31->37 32->1 32->1 32->25 32->42 32->47 35->1 36->1 36->37 37->1 37->1 37->1 37->20 37->31 37->36 40->1 41->1 41->1 42->1 42->1 42->1 42->19 42->20 42->25 42->32 42->47 42->48 42->50 43->1 43->1 44->1 44->1 45->40 48->1 48->1 50->1 50->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct Graph ; struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int ( /* missing proto */ BellmanFord ) ( ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int ( /* missing proto */ addEdge ) ( ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int ( /* missing proto */ scanf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int ( /* missing proto */ createGraph ) ( ) ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { int V ; int E ; int gsrc ; int src ; int dst ; int weight ; struct Graph G ; int i ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 6 ; } while ( 1 ) { switch ( _1_main_next ) { case 6 : printf ( " " ) ; scanf ( " " , & V ) ; printf ( " " ) ; scanf ( " " , & E ) ; createGraph ( & G , V , E ) ; i = 0 ; { _1_main_next = 4 ; } break ; case 4 : ; if ( i < E ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : printf ( " \n \n " , i + 1 ) ; scanf ( " " , & src ) ; printf ( " " ) ; scanf ( " " , & dst ) ; printf ( " " ) ; scanf ( " " , & weight ) ; addEdge ( & G , src , dst , weight ) ; i ++ ; { _1_main_next = 4 ; } break ; case 1 : printf ( " \n " ) ; scanf ( " " , & gsrc ) ; BellmanFord ( & G , gsrc ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD binarysearch1
METHOD_RETURN int
PARAM int const   *arr
PARAM int l
PARAM int r
PARAM int x
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_binarysearch1_next = 9
LITERAL 1 while (1)
IDENTIFIER _1_binarysearch1_next switch(_1_binarysearch1_next)
LITERAL 9 <empty>
LITERAL 8 <empty>
<operator>.assignment mid = l + (r - l) / 2
BLOCK <empty> <empty>
LITERAL 7 <empty>
LITERAL 6 <empty>
RETURN return (mid); return (mid);
LITERAL 5 <empty>
LITERAL 4 <empty>
<operator>.assignment tmp = binarysearch1(arr, l, mid - 1, x)
BLOCK <empty> <empty>
LITERAL 3 <empty>
RETURN return (tmp); return (tmp);
LITERAL 2 <empty>
<operator>.assignment tmp___0 = binarysearch1(arr, mid + 1, r, x)
BLOCK <empty> <empty>
LITERAL 1 <empty>
RETURN return (tmp___0); return (tmp___0);
LITERAL 0 <empty>
RETURN return (-1); return (-1);
<operator>.greaterEqualsThan r >= l
<operator>.assignment _1_binarysearch1_next = 7
<operator>.equals *(arr + mid) == (int const   )x
IDENTIFIER mid return (mid);
<operator>.greaterThan *(arr + mid) > (int const   )x
<operator>.assignment _1_binarysearch1_next = 3
IDENTIFIER tmp return (tmp);
<operator>.assignment _1_binarysearch1_next = 1
IDENTIFIER tmp___0 return (tmp___0);
<operator>.minus -1
BLOCK <empty> <empty>
<operator>.addition l + (r - l) / 2
BLOCK <empty> <empty>
BLOCK <empty> <empty>
binarysearch1 binarysearch1(arr, l, mid - 1, x)
binarysearch1 binarysearch1(arr, mid + 1, r, x)
<operator>.assignment _1_binarysearch1_next = 8
BLOCK <empty> <empty>
<operator>.division (r - l) / 2
<operator>.cast (int const   )x
<operator>.assignment _1_binarysearch1_next = 6
BLOCK <empty> <empty>
<operator>.cast (int const   )x
<operator>.assignment _1_binarysearch1_next = 4
BLOCK <empty> <empty>
<operator>.subtraction mid - 1
<operator>.addition mid + 1
<operator>.assignment _1_binarysearch1_next = 0
<operator>.subtraction r - l
<operator>.addition arr + mid
<operator>.assignment _1_binarysearch1_next = 5
<operator>.addition arr + mid
<operator>.assignment _1_binarysearch1_next = 2
>>>PDG&64 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->18 0->19 0->21 0->22 0->24 0->26 0->27 0->29 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 0->59 0->60 0->61 0->62 0->63 2->1 2->45 2->46 2->60 2->62 3->1 3->31 3->45 3->59 4->1 4->31 4->46 4->59 5->1 5->33 5->35 5->45 5->46 5->50 5->53 8->1 8->1 13->1 13->1 13->1 13->34 13->46 13->56 13->57 13->60 13->62 17->1 20->1 20->1 20->1 20->37 23->1 25->1 25->1 25->1 25->39 28->1 30->1 31->1 31->1 31->1 31->45 31->46 31->47 31->58 31->59 31->59 32->1 32->1 33->1 33->1 33->1 33->51 33->61 34->17 35->1 35->1 35->1 35->54 35->63 36->1 36->1 37->23 38->1 38->1 39->28 40->30 42->1 42->1 45->1 45->1 45->1 45->1 45->20 45->20 45->20 45->20 45->31 45->33 45->35 45->46 45->46 45->50 45->53 45->59 45->60 45->62 46->1 46->1 46->1 46->1 46->25 46->25 46->25 46->25 46->31 46->33 46->35 46->45 46->45 46->50 46->53 46->59 46->60 46->62 47->1 47->1 49->1 49->13 49->13 49->42 49->42 50->1 51->1 51->1 53->1 54->1 54->1 56->1 56->34 56->45 56->45 56->46 56->57 56->60 56->62 57->1 58->1 58->1 59->1 59->13 59->31 59->31 59->42 59->45 59->46 59->49 59->49 60->1 60->1 61->1 61->1 62->1 62->1 63->1 63->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; int binarysearch1 ( int const * arr , int l , int r , int x ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int binarysearch1 ( int const * arr , int l , int r , int x ) { int mid ; int tmp ; int tmp___0 ; unsigned long _1_binarysearch1_next ; { { _1_binarysearch1_next = 9 ; } while ( 1 ) { switch ( _1_binarysearch1_next ) { case 9 : ; if ( r >= l ) { { _1_binarysearch1_next = 8 ; } } else { { _1_binarysearch1_next = 0 ; } } break ; case 8 : mid = l + ( r - l ) / 2 ; { _1_binarysearch1_next = 7 ; } break ; case 7 : ; if ( * ( arr + mid ) == ( int const ) x ) { { _1_binarysearch1_next = 6 ; } } else { { _1_binarysearch1_next = 5 ; } } break ; case 6 : ; return ( mid ) ; break ; case 5 : ; if ( * ( arr + mid ) > ( int const ) x ) { { _1_binarysearch1_next = 4 ; } } else { { _1_binarysearch1_next = 2 ; } } break ; case 4 : tmp = binarysearch1 ( arr , l , mid - 1 , x ) ; { _1_binarysearch1_next = 3 ; } break ; case 3 : ; return ( tmp ) ; break ; case 2 : tmp___0 = binarysearch1 ( arr , mid + 1 , r , x ) ; { _1_binarysearch1_next = 1 ; } break ; case 1 : ; return ( tmp___0 ) ; break ; case 0 : ; return ( -1 ) ; break ; } } } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 4
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 4 <empty>
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 2 <empty>
RETURN return (1); return (1);
LITERAL 1 <empty>
<operator>.assignment str1 = *(argv + 1)
<operator>.assignment str2 = *(argv + 2)
stringConcat stringConcat(str1, str2)
printf printf("String after concatenation: %s\n", str1)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 3
<operator>.lessThan argc < 2
LITERAL 1 return (1);
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.addition argv + 1
<operator>.addition argv + 2
<operator>.assignment _1_main_next = 1
>>>PDG&39 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 2->7 2->29 3->8 3->36 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 19->1 21->1 21->1 21->23 22->1 22->1 22->23 23->1 23->1 23->24 24->1 24->1 27->1 28->1 28->1 29->1 29->1 29->34 29->38 30->19 31->1 31->1 32->27 34->1 34->1 37->1 38->1 38->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; char * * _global_envp = ( char * * ) 0 ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern int ( /* missing proto */ stringConcat ) ( ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int argc , char * * argv , char * * _formal_envp ) { char * str1 ; char * str2 ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 4 ; } while ( 1 ) { switch ( _1_main_next ) { case 4 : ; { _1_main_next = 3 ; } break ; case 3 : ; if ( argc < 2 ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : ; return ( 1 ) ; break ; case 1 : str1 = * ( argv + 1 ) ; str2 = * ( argv + 2 ) ; stringConcat ( str1 , str2 ) ; printf ( " \n " , str1 ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD hash
METHOD_RETURN long long
PARAM void *value
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_hash_next = 5
LITERAL 1 while (1)
IDENTIFIER _1_hash_next switch(_1_hash_next)
LITERAL 5 <empty>
<operator>.assignment str = (char *)value
<operator>.assignment a = 1
<operator>.assignment b = 0
<operator>.assignment MODADLER = 65521
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 1 <empty>
<operator>.assignment a = (a + (int )*(str + i)) % MODADLER
<operator>.assignment b = (b + a) % MODADLER
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return ((long long )((b << 16) | a)); return ((long long )((b << 16) | a));
<operator>.assignment _1_hash_next = 3
<operator>.notEquals (int )*(str + i) != 0
<operator>.assignment _1_hash_next = 3
<operator>.cast (long long )((b << 16) | a)
<operator>.cast (char *)value
BLOCK <empty> <empty>
<operator>.modulo (a + (int )*(str + i)) % MODADLER
<operator>.modulo (b + a) % MODADLER
<operator>.cast (int )*(str + i)
<operator>.assignment _1_hash_next = 1
BLOCK <empty> <empty>
<operator>.addition a + (int )*(str + i)
<operator>.addition b + a
<operator>.or (b << 16) | a
<operator>.assignment _1_hash_next = 0
<operator>.cast (int )*(str + i)
<operator>.shiftLeft b << 16
<operator>.addition str + i
<operator>.addition str + i
>>>PDG&42 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->19 0->20 0->21 0->23 0->24 0->25 0->27 0->28 0->29 0->30 0->32 0->33 0->34 0->35 0->36 0->37 0->39 0->40 0->41 2->1 2->9 2->27 5->1 5->1 9->1 9->1 9->1 9->40 9->41 10->1 10->29 10->34 10->36 11->1 11->30 11->35 11->39 12->1 12->1 12->29 13->1 13->1 13->19 13->40 13->41 17->1 17->1 17->29 17->30 17->34 17->35 17->36 18->1 18->1 18->30 18->35 18->39 19->1 19->1 19->40 19->41 22->1 23->1 23->1 24->1 24->1 24->32 24->37 25->1 25->1 26->1 26->1 26->22 27->1 29->1 29->17 29->17 29->30 30->1 30->1 30->18 30->18 30->29 31->1 32->1 32->1 34->1 36->1 36->1 36->26 36->26 37->1 37->1 38->1 39->1 39->36 39->36 40->1 40->1 41->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; long long hash ( void * value ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } long long hash ( void * value ) { char * str ; int a ; int b ; int MODADLER ; int i ; unsigned long _1_hash_next ; { { _1_hash_next = 5 ; } while ( 1 ) { switch ( _1_hash_next ) { case 5 : str = ( char * ) value ; a = 1 ; b = 0 ; MODADLER = 65521 ; i = 0 ; { _1_hash_next = 3 ; } break ; case 3 : ; if ( ( int ) * ( str + i ) != 0 ) { { _1_hash_next = 1 ; } } else { { _1_hash_next = 0 ; } } break ; case 1 : a = ( a + ( int ) * ( str + i ) ) % MODADLER ; b = ( b + a ) % MODADLER ; i ++ ; { _1_hash_next = 3 ; } break ; case 0 : ; return ( ( long long ) ( ( b << 16 ) | a ) ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 11
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 11 <empty>
<operator>.assignment sum = 0
<operator>.assignment str = (char const   *)*(argv + 1)
<operator>.assignment s = str
BLOCK <empty> <empty>
LITERAL 9 <empty>
LITERAL 7 <empty>
<operator>.assignment t = str
BLOCK <empty> <empty>
LITERAL 5 <empty>
LITERAL 3 <empty>
<operator>.assignmentPlus sum += (int )*t
<operator>.postIncrement t ++
BLOCK <empty> <empty>
LITERAL 2 <empty>
<operator>.postIncrement s ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("Sum is: %d\n", sum)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 9
<operator>.assignment _1_main_next = 5
<operator>.assignment _1_main_next = 5
<operator>.assignment _1_main_next = 9
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
<operator>.cast (char const   *)*(argv + 1)
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.cast (int )*t
<operator>.assignment _1_main_next = 7
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 3
BLOCK <empty> <empty>
<operator>.addition argv + 1
<operator>.assignment _1_main_next = 1
<operator>.assignment _1_main_next = 2
<operator>.indirection *s
<operator>.indirection *t
>>>PDG&56 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->44 0->45 0->47 0->48 0->49 0->50 0->51 0->52 0->53 2->7 3->8 3->51 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->26 16->33 17->1 17->1 17->18 17->22 18->1 18->1 18->1 18->30 22->1 22->1 22->1 22->27 26->1 26->1 26->1 26->33 27->1 27->1 30->1 30->1 33->1 33->1 33->26 36->1 37->1 37->1 38->1 38->1 39->1 39->1 40->1 40->1 41->1 41->1 42->36 43->1 46->1 47->1 47->1 49->1 49->1 51->1 52->1 52->1 53->1 53->1 54->47 54->52 55->49 55->53
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int argc , char * * argv , char * * _formal_envp ) { int sum ; char const * str ; register char const * s ; register char const * t ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 11 ; } while ( 1 ) { switch ( _1_main_next ) { case 11 : sum = 0 ; str = ( char const * ) * ( argv + 1 ) ; s = str ; { _1_main_next = 9 ; } break ; case 9 : ; if ( * s ) { { _1_main_next = 7 ; } } else { { _1_main_next = 1 ; } } break ; case 7 : t = str ; { _1_main_next = 5 ; } break ; case 5 : ; if ( * t ) { { _1_main_next = 3 ; } } else { { _1_main_next = 2 ; } } break ; case 3 : sum += ( int ) * t ; t ++ ; { _1_main_next = 5 ; } break ; case 2 : s ++ ; { _1_main_next = 9 ; } break ; case 1 : printf ( " \n " , sum ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 1 <empty>
test_adler32 test_adler32()
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
>>>PDG&22 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 19->1 20->1 20->1 21->19
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int ( /* missing proto */ test_adler32 ) ( ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern double log ( double x ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 1 ; } while ( 1 ) { switch ( _1_main_next ) { case 1 : test_adler32 ( ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD stringCompare
METHOD_RETURN int
PARAM char *str1
PARAM char *str2
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_stringCompare_next = 17
LITERAL 1 while (1)
IDENTIFIER _1_stringCompare_next switch(_1_stringCompare_next)
LITERAL 17 <empty>
<operator>.assignment i = 0
<operator>.assignment flag = 0
BLOCK <empty> <empty>
LITERAL 15 <empty>
LITERAL 14 <empty>
LITERAL 11 <empty>
LITERAL 10 <empty>
<operator>.assignment flag = 1
BLOCK <empty> <empty>
LITERAL 8 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 7 <empty>
LITERAL 6 <empty>
LITERAL 5 <empty>
LITERAL 4 <empty>
RETURN return (1); return (1);
LITERAL 3 <empty>
RETURN return (0); return (0);
LITERAL 2 <empty>
RETURN return (0); return (0);
LITERAL 1 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_stringCompare_next = 15
<operator>.notEquals (int )*(str1 + i) != 0
<operator>.notEquals (int )*(str2 + i) != 0
<operator>.notEquals (int )*(str1 + i) != (int )*(str2 + i)
<operator>.assignment _1_stringCompare_next = 7
<operator>.assignment _1_stringCompare_next = 15
<operator>.equals flag == 0
<operator>.equals (int )*(str1 + i) == 0
<operator>.equals (int )*(str2 + i) == 0
LITERAL 1 return (1);
LITERAL 0 return (0);
LITERAL 0 return (0);
LITERAL 0 return (0);
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.cast (int )*(str1 + i)
<operator>.assignment _1_stringCompare_next = 14
BLOCK <empty> <empty>
<operator>.cast (int )*(str2 + i)
<operator>.assignment _1_stringCompare_next = 11
BLOCK <empty> <empty>
<operator>.cast (int )*(str1 + i)
<operator>.cast (int )*(str2 + i)
<operator>.assignment _1_stringCompare_next = 10
BLOCK <empty> <empty>
<operator>.assignment _1_stringCompare_next = 6
BLOCK <empty> <empty>
<operator>.cast (int )*(str1 + i)
<operator>.assignment _1_stringCompare_next = 5
BLOCK <empty> <empty>
<operator>.cast (int )*(str2 + i)
<operator>.assignment _1_stringCompare_next = 4
BLOCK <empty> <empty>
<operator>.assignment _1_stringCompare_next = 7
<operator>.assignment _1_stringCompare_next = 7
<operator>.assignment _1_stringCompare_next = 8
<operator>.assignment _1_stringCompare_next = 1
<operator>.assignment _1_stringCompare_next = 2
<operator>.assignment _1_stringCompare_next = 3
<operator>.addition str1 + i
<operator>.addition str2 + i
<operator>.addition str1 + i
<operator>.addition str2 + i
<operator>.addition str1 + i
<operator>.addition str2 + i
>>>PDG&82 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->53 0->54 0->56 0->57 0->60 0->61 0->62 0->63 0->65 0->66 0->68 0->69 0->70 0->71 0->72 0->73 0->74 0->75 0->76 0->77 0->78 0->79 0->80 0->81 2->1 2->76 2->78 2->80 3->1 3->77 3->79 3->81 6->1 6->1 10->1 10->1 10->20 10->76 10->77 10->78 10->79 10->80 10->81 11->1 11->1 11->39 17->1 17->1 17->39 20->1 20->1 20->76 20->77 20->78 20->79 20->80 20->81 26->1 28->1 30->1 32->1 33->1 33->1 34->1 34->1 34->53 34->70 35->1 35->1 35->56 35->71 36->1 36->1 36->1 36->60 36->72 37->1 37->1 38->1 38->1 39->1 39->1 39->62 39->73 40->1 40->1 40->65 40->74 41->1 41->1 41->68 41->75 42->26 43->28 44->30 45->32 52->1 53->1 53->1 55->1 56->1 56->1 58->1 59->1 60->1 60->1 62->1 62->1 64->1 65->1 65->1 67->1 68->1 68->1 70->1 70->1 71->1 71->1 72->1 72->1 73->1 73->1 74->1 74->1 75->1 75->1 76->1 76->1 77->1 77->1 78->1 79->1 79->1 80->1 80->1 81->1 81->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; int stringCompare ( char * str1 , char * str2 ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } int stringCompare ( char * str1 , char * str2 ) { int i ; int flag ; unsigned long _1_stringCompare_next ; { { _1_stringCompare_next = 17 ; } while ( 1 ) { switch ( _1_stringCompare_next ) { case 17 : i = 0 ; flag = 0 ; { _1_stringCompare_next = 15 ; } break ; case 15 : ; if ( ( int ) * ( str1 + i ) != 0 ) { { _1_stringCompare_next = 14 ; } } else { { _1_stringCompare_next = 7 ; } } break ; case 14 : ; if ( ( int ) * ( str2 + i ) != 0 ) { { _1_stringCompare_next = 11 ; } } else { { _1_stringCompare_next = 7 ; } } break ; case 11 : ; if ( ( int ) * ( str1 + i ) != ( int ) * ( str2 + i ) ) { { _1_stringCompare_next = 10 ; } } else { { _1_stringCompare_next = 8 ; } } break ; case 10 : flag = 1 ; { _1_stringCompare_next = 7 ; } break ; case 8 : i ++ ; { _1_stringCompare_next = 15 ; } break ; case 7 : ; if ( flag == 0 ) { { _1_stringCompare_next = 6 ; } } else { { _1_stringCompare_next = 1 ; } } break ; case 6 : ; if ( ( int ) * ( str1 + i ) == 0 ) { { _1_stringCompare_next = 5 ; } } else { { _1_stringCompare_next = 2 ; } } break ; case 5 : ; if ( ( int ) * ( str2 + i ) == 0 ) { { _1_stringCompare_next = 4 ; } } else { { _1_stringCompare_next = 3 ; } } break ; case 4 : ; return ( 1 ) ; break ; case 3 : ; return ( 0 ) ; break ; case 2 : ; return ( 0 ) ; break ; case 1 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD maxSubArray
METHOD_RETURN int
PARAM int *nums
PARAM int numsSize
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_maxSubArray_next = 5
LITERAL 1 while (1)
IDENTIFIER _1_maxSubArray_next switch(_1_maxSubArray_next)
LITERAL 5 <empty>
<operator>.assignment maxSoFar = *(nums + 0)
<operator>.assignment maxEndingHere = *(nums + 0)
<operator>.assignment i = 1
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 1 <empty>
<operator>.assignment maxEndingHere = maxcmp(maxEndingHere + *(nums + i)  *(nums + i))
<operator>.assignment maxSoFar = maxcmp(maxSoFar, maxEndingHere)
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (maxSoFar); return (maxSoFar);
<operator>.assignment _1_maxSubArray_next = 3
<operator>.lessThan i < numsSize
<operator>.assignment _1_maxSubArray_next = 3
IDENTIFIER maxSoFar return (maxSoFar);
BLOCK <empty> <empty>
maxcmp maxcmp(maxEndingHere + *(nums + i)  *(nums + i))
maxcmp maxcmp(maxSoFar, maxEndingHere)
<operator>.addition nums + 0
<operator>.addition nums + 0
<operator>.assignment _1_maxSubArray_next = 1
BLOCK <empty> <empty>
<operator>.addition maxEndingHere + *(nums + i)
<operator>.assignment _1_maxSubArray_next = 0
<operator>.addition nums + i
<operator>.addition nums + i
>>>PDG&37 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->12 0->13 0->14 0->15 0->18 0->19 0->20 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 2->1 2->29 2->35 2->36 3->1 3->23 6->1 6->1 10->1 10->1 10->25 10->28 11->1 11->1 11->1 11->27 11->33 12->1 12->1 12->18 12->23 12->35 12->36 16->1 16->1 16->28 17->1 17->1 17->1 17->25 17->28 18->1 18->1 18->23 18->35 18->36 21->1 22->1 22->1 23->1 23->1 23->1 23->18 23->31 23->34 23->35 23->36 24->1 24->1 25->21 27->1 27->1 27->16 27->16 28->1 28->17 28->17 28->27 28->33 30->1 31->1 31->1 34->1 34->1 35->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; int maxSubArray ( int * nums , int numsSize ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern int ( /* missing proto */ maxcmp ) ( ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int maxSubArray ( int * nums , int numsSize ) { int maxSoFar ; int maxEndingHere ; int i ; unsigned long _1_maxSubArray_next ; { { _1_maxSubArray_next = 5 ; } while ( 1 ) { switch ( _1_maxSubArray_next ) { case 5 : maxSoFar = * ( nums + 0 ) ; maxEndingHere = * ( nums + 0 ) ; i = 1 ; { _1_maxSubArray_next = 3 ; } break ; case 3 : ; if ( i < numsSize ) { { _1_maxSubArray_next = 1 ; } } else { { _1_maxSubArray_next = 0 ; } } break ; case 1 : maxEndingHere = maxcmp ( maxEndingHere + * ( nums + i ) , * ( nums + i ) ) ; maxSoFar = maxcmp ( maxSoFar , maxEndingHere ) ; i ++ ; { _1_maxSubArray_next = 3 ; } break ; case 0 : ; return ( maxSoFar ) ; break ; } } } } void megaInit ( void ) { { } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD ways
METHOD_RETURN int
PARAM int n
PARAM int *a
PARAM int k
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_ways_next = 9
LITERAL 1 while (1)
IDENTIFIER _1_ways_next switch(_1_ways_next)
LITERAL 9 <empty>
LITERAL 8 <empty>
RETURN return (0); return (0);
LITERAL 7 <empty>
LITERAL 6 <empty>
RETURN return (0); return (0);
LITERAL 5 <empty>
LITERAL 4 <empty>
RETURN return (1); return (1);
LITERAL 3 <empty>
LITERAL 2 <empty>
RETURN return (0); return (0);
LITERAL 1 <empty>
<operator>.assignment tmp = ways(n, a, k - 1)
<operator>.assignment tmp___0 = ways(n - *(a + (k - 1)), a, k)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (tmp + tmp___0); return (tmp + tmp___0);
<operator>.lessThan n < 0
LITERAL 0 return (0);
<operator>.lessThan k < 0
LITERAL 0 return (0);
<operator>.equals n == 0
LITERAL 1 return (1);
<operator>.equals k == 0
LITERAL 0 return (0);
<operator>.assignment _1_ways_next = 0
<operator>.addition tmp + tmp___0
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
ways ways(n, a, k - 1)
ways ways(n - *(a + (k - 1)), a, k)
<operator>.assignment _1_ways_next = 8
BLOCK <empty> <empty>
<operator>.assignment _1_ways_next = 6
BLOCK <empty> <empty>
<operator>.assignment _1_ways_next = 4
BLOCK <empty> <empty>
<operator>.assignment _1_ways_next = 2
BLOCK <empty> <empty>
<operator>.subtraction k - 1
<operator>.subtraction n - *(a + (k - 1))
<operator>.assignment _1_ways_next = 7
<operator>.assignment _1_ways_next = 5
<operator>.assignment _1_ways_next = 3
<operator>.assignment _1_ways_next = 1
<operator>.addition a + (k - 1)
<operator>.subtraction k - 1
>>>PDG&60 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->25 0->26 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 0->59 2->1 2->28 2->32 2->42 3->1 3->42 4->1 4->30 4->34 4->52 7->1 7->1 12->1 15->1 18->1 21->1 23->1 23->1 23->1 23->37 24->1 24->1 24->1 24->37 27->1 28->1 28->1 28->32 28->42 28->44 28->54 29->12 30->1 30->1 30->34 30->46 30->52 30->55 31->15 32->1 32->1 32->28 32->42 32->48 32->56 33->18 34->1 34->1 34->30 34->50 34->52 34->57 35->21 36->1 36->1 37->27 42->23 42->23 42->23 42->43 42->53 42->58 43->1 43->1 43->1 43->24 43->24 43->24 43->30 43->34 43->42 43->52 44->1 44->1 46->1 46->1 48->1 48->1 50->1 50->1 52->42 52->42 52->59 53->1 53->1 53->28 53->32 53->42 53->43 53->43 54->1 54->1 55->1 55->1 56->1 56->1 57->1 57->1 58->1 59->43 59->58 59->58
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; int ways ( int n , int * a , int k ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } int ways ( int n , int * a , int k ) { int tmp ; int tmp___0 ; unsigned long _1_ways_next ; { { _1_ways_next = 9 ; } while ( 1 ) { switch ( _1_ways_next ) { case 9 : ; if ( n < 0 ) { { _1_ways_next = 8 ; } } else { { _1_ways_next = 7 ; } } break ; case 8 : ; return ( 0 ) ; break ; case 7 : ; if ( k < 0 ) { { _1_ways_next = 6 ; } } else { { _1_ways_next = 5 ; } } break ; case 6 : ; return ( 0 ) ; break ; case 5 : ; if ( n == 0 ) { { _1_ways_next = 4 ; } } else { { _1_ways_next = 3 ; } } break ; case 4 : ; return ( 1 ) ; break ; case 3 : ; if ( k == 0 ) { { _1_ways_next = 2 ; } } else { { _1_ways_next = 1 ; } } break ; case 2 : ; return ( 0 ) ; break ; case 1 : tmp = ways ( n , a , k - 1 ) ; tmp___0 = ways ( n - * ( a + ( k - 1 ) ) , a , k ) ; { _1_ways_next = 0 ; } break ; case 0 : ; return ( tmp + tmp___0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD heapsort
METHOD_RETURN void
PARAM int *a
PARAM int n
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_heapsort_next = 5
LITERAL 1 while (1)
IDENTIFIER _1_heapsort_next switch(_1_heapsort_next)
LITERAL 5 <empty>
<operator>.assignment i = n
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 1 <empty>
<operator>.assignment temp = *(a + i)
<operator>.assignment *(a + i) = *(a + 1)
<operator>.assignment *(a + 1) = temp
max_heapify max_heapify(a, 1, i - 1)
<operator>.postDecrement i --
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return; return;
<operator>.assignment _1_heapsort_next = 3
<operator>.greaterEqualsThan i >= 2
<operator>.assignment _1_heapsort_next = 3
BLOCK <empty> <empty>
<operator>.subtraction i - 1
<operator>.assignment _1_heapsort_next = 1
BLOCK <empty> <empty>
<operator>.addition a + i
<operator>.addition a + i
<operator>.addition a + 1
<operator>.addition a + 1
<operator>.assignment _1_heapsort_next = 0
>>>PDG&34 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 2->1 2->17 2->29 2->30 2->31 2->32 3->1 3->10 6->1 6->1 10->1 10->1 10->1 10->23 10->26 10->29 10->30 14->1 14->16 15->1 15->1 16->1 16->1 16->1 17->1 17->1 17->1 17->29 17->30 17->31 17->32 18->1 18->1 18->23 18->26 18->29 18->30 21->1 22->1 22->1 23->1 23->1 23->26 23->27 23->29 23->30 23->33 24->1 24->1 26->17 26->17 26->18 27->1 27->1 33->1 33->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern int ( /* missing proto */ max_heapify ) ( ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; void heapsort ( int * a , int n ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void heapsort ( int * a , int n ) { int i ; int temp ; unsigned long _1_heapsort_next ; { { _1_heapsort_next = 5 ; } while ( 1 ) { switch ( _1_heapsort_next ) { case 5 : i = n ; { _1_heapsort_next = 3 ; } break ; case 3 : ; if ( i >= 2 ) { { _1_heapsort_next = 1 ; } } else { { _1_heapsort_next = 0 ; } } break ; case 1 : temp = * ( a + i ) ; * ( a + i ) = * ( a + 1 ) ; * ( a + 1 ) = temp ; max_heapify ( a , 1 , i - 1 ) ; i -- ; { _1_heapsort_next = 3 ; } break ; case 0 : ; return ; break ; } } } } void megaInit ( void ) { { } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 10
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 10 <empty>
<operator>.assignment sum = 0
BLOCK <empty> <empty>
LITERAL 9 <empty>
LITERAL 8 <empty>
printf printf("Usage: program-name char\n")
BLOCK <empty> <empty>
LITERAL 7 <empty>
RETURN return (1); return (1);
LITERAL 6 <empty>
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
<operator>.assignmentPlus sum += i
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("Sum is: %d\n", sum)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 9
<operator>.lessThan argc < 2
<operator>.assignment _1_main_next = 7
LITERAL 1 return (1);
<operator>.assignment _1_main_next = 4
<operator>.lessThan i < argc
<operator>.assignment _1_main_next = 4
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 8
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 6
<operator>.assignment _1_main_next = 1
>>>PDG&54 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 2->7 2->38 2->42 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->29 16->33 20->1 23->1 25->1 25->1 25->29 25->30 25->42 29->1 29->1 29->33 30->1 30->1 30->29 30->42 33->1 33->1 33->29 36->1 37->1 37->1 38->1 38->1 38->42 38->48 38->52 39->1 39->1 40->23 41->1 41->1 42->1 42->1 42->1 42->29 42->30 42->38 42->50 42->53 43->1 43->1 44->1 44->1 45->36 48->1 48->1 50->1 50->1 52->1 52->1 53->1 53->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int argc , char * * argv , char * * _formal_envp ) { int i ; int sum ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 10 ; } while ( 1 ) { switch ( _1_main_next ) { case 10 : sum = 0 ; { _1_main_next = 9 ; } break ; case 9 : ; if ( argc < 2 ) { { _1_main_next = 8 ; } } else { { _1_main_next = 6 ; } } break ; case 8 : printf ( " \n " ) ; { _1_main_next = 7 ; } break ; case 7 : ; return ( 1 ) ; break ; case 6 : i = 0 ; { _1_main_next = 4 ; } break ; case 4 : ; if ( i < argc ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : sum += i ; i ++ ; { _1_main_next = 4 ; } break ; case 1 : printf ( " \n " , sum ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 7
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 7 <empty>
BLOCK <empty> <empty>
LITERAL 6 <empty>
LITERAL 5 <empty>
RETURN return (1); return (1);
LITERAL 4 <empty>
<operator>.assignment str1 = *(argv + 1)
<operator>.assignment str2 = *(argv + 2)
<operator>.assignment compare = stringCompare(str1, str2)
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 2 <empty>
printf printf("Both strings are equal.")
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("Both strings are not equal")
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 6
<operator>.lessThan argc < 2
LITERAL 1 return (1);
<operator>.assignment _1_main_next = 3
<operator>.equals compare == 1
<operator>.assignment _1_main_next = 0
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
BLOCK <empty> <empty>
stringCompare stringCompare(str1, str2)
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 5
BLOCK <empty> <empty>
<operator>.addition argv + 1
<operator>.addition argv + 2
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 4
<operator>.assignment _1_main_next = 1
>>>PDG&53 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 2->7 2->35 3->8 3->47 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 19->1 21->1 21->1 21->43 22->1 22->1 22->43 23->1 23->1 23->1 23->38 27->1 30->1 33->1 34->1 34->1 35->1 35->1 35->45 35->51 36->19 37->1 37->1 38->1 38->1 38->49 38->52 39->1 39->1 40->1 40->1 41->33 43->1 43->1 43->23 43->23 45->1 45->1 48->1 49->1 49->1 51->1 51->1 52->1 52->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int ( /* missing proto */ stringCompare ) ( ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern double ceil ( double x ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int argc , char * * argv , char * * _formal_envp ) { int compare ; char * str1 ; char * str2 ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 7 ; } while ( 1 ) { switch ( _1_main_next ) { case 7 : ; { _1_main_next = 6 ; } break ; case 6 : ; if ( argc < 2 ) { { _1_main_next = 5 ; } } else { { _1_main_next = 4 ; } } break ; case 5 : ; return ( 1 ) ; break ; case 4 : str1 = * ( argv + 1 ) ; str2 = * ( argv + 2 ) ; compare = stringCompare ( str1 , str2 ) ; { _1_main_next = 3 ; } break ; case 3 : ; if ( compare == 1 ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : printf ( " " ) ; { _1_main_next = 0 ; } break ; case 1 : printf ( " " ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 35
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 35 <empty>
scanf scanf("%d", & e)
<operator>.assignment f = 1
BLOCK <empty> <empty>
LITERAL 33 <empty>
LITERAL 31 <empty>
scanf scanf("%d", & c)
<operator>.assignment a = 0
BLOCK <empty> <empty>
LITERAL 29 <empty>
LITERAL 27 <empty>
scanf scanf("%d", & b)
<operator>.assignment r1[b - 1] = a / 4
<operator>.postIncrement a ++
BLOCK <empty> <empty>
LITERAL 26 <empty>
scanf scanf("%d", & d)
<operator>.assignment a = 0
BLOCK <empty> <empty>
LITERAL 24 <empty>
LITERAL 22 <empty>
scanf scanf("%d", & b)
<operator>.assignment r2[b - 1] = a / 4
<operator>.postIncrement a ++
BLOCK <empty> <empty>
LITERAL 21 <empty>
<operator>.postDecrement c --
<operator>.postDecrement d --
<operator>.assignment b = -1
<operator>.assignment a = 0
BLOCK <empty> <empty>
LITERAL 19 <empty>
LITERAL 18 <empty>
LITERAL 15 <empty>
LITERAL 14 <empty>
LITERAL 13 <empty>
LITERAL 12 <empty>
<operator>.assignment b = -2
BLOCK <empty> <empty>
LITERAL 11 <empty>
LITERAL 10 <empty>
<operator>.assignment b = a
BLOCK <empty> <empty>
LITERAL 9 <empty>
<operator>.postIncrement a ++
BLOCK <empty> <empty>
LITERAL 8 <empty>
printf printf("Case #%d: ", f)
BLOCK <empty> <empty>
LITERAL 7 <empty>
LITERAL 6 <empty>
puts puts("Volunteer cheated!")
BLOCK <empty> <empty>
LITERAL 5 <empty>
LITERAL 4 <empty>
puts puts("Bad magician!")
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 2 <empty>
printf printf("%d\n", b + 1)
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operator>.postIncrement f ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 33
<operator>.lessEqualsThan f <= e
<operator>.assignment _1_main_next = 29
<operator>.lessThan a < 16
<operator>.assignment _1_main_next = 29
<operator>.assignment _1_main_next = 24
<operator>.lessThan a < 16
<operator>.assignment _1_main_next = 24
<operator>.assignment _1_main_next = 19
<operator>.lessThan a < 16
<operator>.notEquals b != -2
<operator>.equals r1[a] == c
<operator>.equals r2[a] == d
<operator>.greaterEqualsThan b >= 0
<operator>.assignment _1_main_next = 11
<operator>.equals b == -1
<operator>.assignment _1_main_next = 9
<operator>.assignment _1_main_next = 19
<operator>.assignment _1_main_next = 7
<operator>.equals b == -1
<operator>.assignment _1_main_next = 5
<operator>.equals b == -2
<operator>.assignment _1_main_next = 3
<operator>.greaterEqualsThan b >= 0
<operator>.assignment _1_main_next = 1
<operator>.assignment _1_main_next = 33
LITERAL 0 return (0);
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.division a / 4
BLOCK <empty> <empty>
<operator>.division a / 4
<operator>.minus -1
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.minus -2
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.addition b + 1
<operator>.assignment _1_main_next = 31
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 27
BLOCK <empty> <empty>
<operator>.subtraction b - 1
<operator>.assignment _1_main_next = 22
BLOCK <empty> <empty>
<operator>.subtraction b - 1
<operator>.assignment _1_main_next = 18
BLOCK <empty> <empty>
<operator>.minus -2
<operator>.assignment _1_main_next = 15
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 14
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 13
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 12
BLOCK <empty> <empty>
<operator>.minus -1
<operator>.assignment _1_main_next = 10
BLOCK <empty> <empty>
<operator>.minus -1
<operator>.assignment _1_main_next = 6
BLOCK <empty> <empty>
<operator>.minus -2
<operator>.assignment _1_main_next = 4
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 0
<operator>.assignment _1_main_next = 26
<operator>.assignment _1_main_next = 21
<operator>.assignment _1_main_next = 8
<operator>.assignment _1_main_next = 8
<operator>.assignment _1_main_next = 9
<operator>.assignment _1_main_next = 9
<operator>.assignment _1_main_next = 11
<operator>.assignment _1_main_next = 9
<operator>.assignment _1_main_next = 5
<operator>.assignment _1_main_next = 3
<operator>.assignment _1_main_next = 1
>>>PDG&167 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->38 0->39 0->40 0->41 0->42 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->53 0->54 0->55 0->56 0->57 0->58 0->59 0->60 0->61 0->62 0->63 0->64 0->65 0->66 0->67 0->68 0->69 0->70 0->71 0->72 0->73 0->74 0->75 0->76 0->77 0->78 0->79 0->80 0->81 0->82 0->83 0->84 0->85 0->86 0->87 0->88 0->89 0->90 0->91 0->92 0->93 0->94 0->95 0->96 0->97 0->98 0->99 0->100 0->101 0->102 0->103 0->104 0->105 0->106 0->107 0->108 0->109 0->110 0->111 0->112 0->113 0->114 0->115 0->116 0->117 0->118 0->119 0->120 0->121 0->122 0->123 0->124 0->125 0->126 0->127 0->128 0->129 0->130 0->131 0->132 0->133 0->134 0->135 0->136 0->137 0->138 0->139 0->140 0->141 0->142 0->143 0->144 0->145 0->146 0->147 0->148 0->149 0->150 0->151 0->152 0->153 0->154 0->155 0->156 0->157 0->158 0->159 0->160 0->161 0->162 0->163 0->164 0->165 0->166 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->82 17->1 17->1 17->62 17->77 17->82 21->1 21->41 21->92 22->1 22->1 22->56 22->59 22->84 22->87 22->90 22->110 22->112 26->1 26->36 26->74 26->91 26->94 26->96 26->100 26->102 26->104 26->124 26->129 26->132 27->1 27->1 27->1 28->1 28->1 28->56 28->59 28->84 28->87 28->90 28->110 28->112 31->1 31->42 31->93 32->1 32->1 32->56 32->59 32->84 32->87 32->90 32->110 32->112 36->1 36->26 36->74 36->91 36->94 36->96 36->100 36->102 36->104 36->124 36->129 36->132 37->1 37->1 37->1 38->1 38->1 38->56 38->59 38->84 38->87 38->90 38->110 38->112 41->1 41->1 41->21 41->92 42->1 42->1 42->31 42->93 43->1 43->1 43->1 43->26 43->36 43->74 43->91 43->94 43->96 43->100 43->102 43->104 43->124 43->129 43->132 44->1 44->1 44->56 44->59 44->84 44->87 44->90 44->110 44->112 52->1 52->1 52->1 52->26 52->36 52->74 52->91 52->94 52->96 52->100 52->102 52->104 52->124 52->129 52->132 56->1 56->1 56->1 56->26 56->36 56->74 56->91 56->94 56->96 56->100 56->102 56->104 56->124 56->129 56->132 59->1 59->1 59->56 59->84 59->87 59->90 59->110 59->112 62->1 62->1 62->77 62->82 66->1 70->1 74->1 74->1 77->1 77->1 77->62 77->82 80->1 81->1 81->1 82->1 82->1 82->1 82->16 82->62 82->77 82->125 82->155 83->1 83->1 84->1 84->1 84->56 84->59 84->87 84->90 84->110 84->112 84->127 84->156 85->1 85->1 86->1 86->1 87->1 87->1 87->56 87->59 87->84 87->90 87->110 87->112 87->130 87->157 88->1 88->1 89->1 89->1 90->1 90->1 90->56 90->59 90->84 90->87 90->110 90->112 90->133 90->158 91->1 91->1 91->1 91->26 91->36 91->74 91->94 91->96 91->100 91->102 91->104 91->124 91->129 91->132 91->136 91->159 92->1 92->1 92->1 92->21 92->41 92->138 92->160 93->1 93->1 93->1 93->31 93->42 93->140 93->161 94->1 94->1 94->26 94->36 94->74 94->91 94->96 94->100 94->102 94->104 94->124 94->129 94->132 94->142 94->162 95->1 95->1 96->1 96->1 96->1 96->26 96->36 96->74 96->91 96->94 96->100 96->102 96->104 96->124 96->129 96->132 96->145 96->163 97->1 97->1 98->1 98->1 99->1 99->1 100->1 100->1 100->1 100->26 100->36 100->74 100->91 100->94 100->96 100->102 100->104 100->124 100->129 100->132 100->148 100->164 101->1 101->1 102->1 102->1 102->1 102->26 102->36 102->74 102->91 102->94 102->96 102->100 102->104 102->124 102->129 102->132 102->151 102->165 103->1 103->1 104->1 104->1 104->26 104->36 104->74 104->91 104->94 104->96 104->100 104->102 104->124 104->129 104->132 104->153 104->166 105->1 105->1 106->1 106->1 107->80 110->27 110->27 110->28 112->37 112->37 112->38 113->43 119->52 124->1 125->1 125->1 127->1 127->1 129->1 129->26 129->36 129->74 129->91 129->94 129->96 129->100 129->102 129->104 129->124 129->132 130->1 130->1 132->1 132->26 132->36 132->74 132->91 132->94 132->96 132->100 132->102 132->104 132->124 132->129 133->1 133->1 135->91 136->1 136->1 138->1 138->1 140->1 140->1 142->1 142->1 144->96 145->1 145->1 147->100 148->1 148->1 150->102 151->1 151->1 153->1 153->1 155->1 155->1 156->1 156->1 157->1 157->1 158->1 158->1 159->1 159->1 160->1 160->1 161->1 161->1 162->1 162->1 163->1 163->1 164->1 164->1 165->1 165->1 166->1 166->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern void exit ( int status ) ; extern int pthread_cond_signal ( int * cond ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int ( /* missing proto */ puts ) ( ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int ( /* missing proto */ scanf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int argc , char * * argv , char * * _formal_envp ) { int a ; int b ; int c ; int d ; int e ; int f ; int r1 [ 16 ] ; int r2 [ 16 ] ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 35 ; } while ( 1 ) { switch ( _1_main_next ) { case 35 : scanf ( " " , & e ) ; f = 1 ; { _1_main_next = 33 ; } break ; case 33 : ; if ( f <= e ) { { _1_main_next = 31 ; } } else { { _1_main_next = 0 ; } } break ; case 31 : scanf ( " " , & c ) ; a = 0 ; { _1_main_next = 29 ; } break ; case 29 : ; if ( a < 16 ) { { _1_main_next = 27 ; } } else { { _1_main_next = 26 ; } } break ; case 27 : scanf ( " " , & b ) ; r1 [ b - 1 ] = a / 4 ; a ++ ; { _1_main_next = 29 ; } break ; case 26 : scanf ( " " , & d ) ; a = 0 ; { _1_main_next = 24 ; } break ; case 24 : ; if ( a < 16 ) { { _1_main_next = 22 ; } } else { { _1_main_next = 21 ; } } break ; case 22 : scanf ( " " , & b ) ; r2 [ b - 1 ] = a / 4 ; a ++ ; { _1_main_next = 24 ; } break ; case 21 : c -- ; d -- ; b = -1 ; a = 0 ; { _1_main_next = 19 ; } break ; case 19 : ; if ( a < 16 ) { { _1_main_next = 18 ; } } else { { _1_main_next = 8 ; } } break ; case 18 : ; if ( b != -2 ) { { _1_main_next = 15 ; } } else { { _1_main_next = 8 ; } } break ; case 15 : ; if ( r1 [ a ] == c ) { { _1_main_next = 14 ; } } else { { _1_main_next = 9 ; } } break ; case 14 : ; if ( r2 [ a ] == d ) { { _1_main_next = 13 ; } } else { { _1_main_next = 9 ; } } break ; case 13 : ; if ( b >= 0 ) { { _1_main_next = 12 ; } } else { { _1_main_next = 11 ; } } break ; case 12 : b = -2 ; { _1_main_next = 11 ; } break ; case 11 : ; if ( b == -1 ) { { _1_main_next = 10 ; } } else { { _1_main_next = 9 ; } } break ; case 10 : b = a ; { _1_main_next = 9 ; } break ; case 9 : a ++ ; { _1_main_next = 19 ; } break ; case 8 : printf ( " " , f ) ; { _1_main_next = 7 ; } break ; case 7 : ; if ( b == -1 ) { { _1_main_next = 6 ; } } else { { _1_main_next = 5 ; } } break ; case 6 : puts ( " " ) ; { _1_main_next = 5 ; } break ; case 5 : ; if ( b == -2 ) { { _1_main_next = 4 ; } } else { { _1_main_next = 3 ; } } break ; case 4 : puts ( " " ) ; { _1_main_next = 3 ; } break ; case 3 : ; if ( b >= 0 ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : printf ( " \n " , b + 1 ) ; { _1_main_next = 1 ; } break ; case 1 : f ++ ; { _1_main_next = 33 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD max
METHOD_RETURN int
PARAM int a
PARAM int b
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_max_next = 3
LITERAL 1 while (1)
IDENTIFIER _1_max_next switch(_1_max_next)
LITERAL 3 <empty>
LITERAL 2 <empty>
<operator>.assignment tmp = a
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operator>.assignment tmp = b
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (tmp); return (tmp);
<operator>.greaterThan a > b
<operator>.assignment _1_max_next = 0
<operator>.assignment _1_max_next = 0
IDENTIFIER tmp return (tmp);
BLOCK <empty> <empty>
<operator>.assignment _1_max_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_max_next = 1
>>>PDG&26 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 2->1 2->11 2->18 3->1 3->14 3->18 6->1 6->1 11->1 11->1 11->1 11->21 14->1 14->1 14->1 14->21 17->1 18->1 18->1 18->1 18->11 18->14 18->23 18->25 19->1 19->1 20->1 20->1 21->17 23->1 23->1 25->1 25->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; int max ( int a , int b ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } int max ( int a , int b ) { int tmp ; unsigned long _1_max_next ; { { _1_max_next = 3 ; } while ( 1 ) { switch ( _1_max_next ) { case 3 : ; if ( a > b ) { { _1_max_next = 2 ; } } else { { _1_max_next = 1 ; } } break ; case 2 : tmp = a ; { _1_max_next = 0 ; } break ; case 1 : tmp = b ; { _1_max_next = 0 ; } break ; case 0 : ; return ( tmp ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD compare_desc
METHOD_RETURN int
PARAM void const   *x1
PARAM void const   *x2
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_compare_desc_next = 7
LITERAL 1 while (1)
IDENTIFIER _1_compare_desc_next switch(_1_compare_desc_next)
LITERAL 7 <empty>
<operator>.assignment t1 = *((int *)x1)
<operator>.assignment t2 = *((int *)x2)
BLOCK <empty> <empty>
LITERAL 6 <empty>
LITERAL 5 <empty>
RETURN return (-1); return (-1);
LITERAL 4 <empty>
LITERAL 3 <empty>
RETURN return (1); return (1);
LITERAL 2 <empty>
LITERAL 1 <empty>
RETURN return (0); return (0);
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_compare_desc_next = 6
<operator>.greaterThan t1 > t2
<operator>.minus -1
<operator>.lessThan t1 < t2
LITERAL 1 return (1);
<operator>.equals t1 == t2
LITERAL 0 return (0);
LITERAL 0 return (0);
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.cast (int *)x1
<operator>.cast (int *)x2
<operator>.assignment _1_compare_desc_next = 5
BLOCK <empty> <empty>
<operator>.assignment _1_compare_desc_next = 3
BLOCK <empty> <empty>
<operator>.assignment _1_compare_desc_next = 1
BLOCK <empty> <empty>
<operator>.assignment _1_compare_desc_next = 4
<operator>.assignment _1_compare_desc_next = 2
<operator>.assignment _1_compare_desc_next = 0
>>>PDG&46 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->12 0->13 0->14 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 2->1 2->35 3->1 3->36 6->1 6->1 10->1 10->1 10->1 10->25 10->27 10->29 11->1 11->1 11->1 11->25 11->27 11->29 15->1 18->1 21->1 23->1 24->1 24->1 25->1 25->1 25->1 25->27 25->27 25->29 25->29 25->37 25->43 26->1 26->15 27->1 27->1 27->1 27->25 27->25 27->29 27->29 27->39 27->44 28->18 29->1 29->1 29->1 29->25 29->25 29->27 29->27 29->41 29->45 30->21 31->23 35->1 36->1 37->1 37->1 39->1 39->1 41->1 41->1 43->1 43->1 44->1 44->1 45->1 45->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; int compare_desc ( void const * x1 , void const * x2 ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int compare_desc ( void const * x1 , void const * x2 ) { int t1 ; int t2 ; unsigned long _1_compare_desc_next ; { { _1_compare_desc_next = 7 ; } while ( 1 ) { switch ( _1_compare_desc_next ) { case 7 : t1 = * ( ( int * ) x1 ) ; t2 = * ( ( int * ) x2 ) ; { _1_compare_desc_next = 6 ; } break ; case 6 : ; if ( t1 > t2 ) { { _1_compare_desc_next = 5 ; } } else { { _1_compare_desc_next = 4 ; } } break ; case 5 : ; return ( -1 ) ; break ; case 4 : ; if ( t1 < t2 ) { { _1_compare_desc_next = 3 ; } } else { { _1_compare_desc_next = 2 ; } } break ; case 3 : ; return ( 1 ) ; break ; case 2 : ; if ( t1 == t2 ) { { _1_compare_desc_next = 1 ; } } else { { _1_compare_desc_next = 0 ; } } break ; case 1 : ; return ( 0 ) ; break ; case 0 : ; return ( 0 ) ; break ; } } } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 6
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 6 <empty>
<operator>.assignment size = 6
<operator>.assignment tmp = malloc((unsigned long )size * sizeof(int ))
<operator>.assignment numbers = (int *)tmp
printf printf("Insert %d unsorted numbers: \n", size)
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
scanf scanf("%d", numbers + i)
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("Initial array: ")
display display(numbers, size)
sort sort(numbers, size)
printf printf("Sorted array: ")
display display(numbers, size)
free free(numbers)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 4
<operator>.lessThan i < size
<operator>.assignment _1_main_next = 4
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
malloc malloc((unsigned long )size * sizeof(int ))
<operator>.cast (int *)tmp
BLOCK <empty> <empty>
<operator>.addition numbers + i
<operator>.multiplication (unsigned long )size * sizeof(int )
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.cast (unsigned long )size
<operator>.sizeOf sizeof(int )
<operator>.assignment _1_main_next = 1
>>>PDG&52 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->51 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->19 16->46 16->49 17->1 17->1 17->18 17->43 18->1 18->1 18->1 18->24 18->29 18->45 19->1 19->1 19->29 19->38 20->1 20->1 20->24 20->25 20->38 20->45 24->1 25->1 25->1 25->24 25->38 25->45 28->1 29->30 29->30 30->1 30->32 30->32 31->1 32->1 32->1 32->29 32->33 32->38 33->1 33->24 33->29 33->45 36->1 37->1 37->1 38->1 38->1 38->1 38->24 38->25 38->29 38->45 38->47 38->51 39->1 39->1 40->1 40->1 41->36 42->1 42->17 43->1 45->1 46->1 46->42 47->1 47->1 50->1 51->1 51->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int ( /* missing proto */ sort ) ( ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern int ( /* missing proto */ malloc ) ( ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern double ceil ( double x ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern int ( /* missing proto */ free ) ( ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int ( /* missing proto */ scanf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int ( /* missing proto */ display ) ( ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { int size ; int i ; int * numbers ; int tmp ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 6 ; } while ( 1 ) { switch ( _1_main_next ) { case 6 : size = 6 ; tmp = malloc ( ( unsigned long ) size * sizeof ( int ) ) ; numbers = ( int * ) tmp ; printf ( " \n " , size ) ; i = 0 ; { _1_main_next = 4 ; } break ; case 4 : ; if ( i < size ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : scanf ( " " , numbers + i ) ; i ++ ; { _1_main_next = 4 ; } break ; case 1 : printf ( " " ) ; display ( numbers , size ) ; sort ( numbers , size ) ; printf ( " " ) ; display ( numbers , size ) ; free ( numbers ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 4
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 4 <empty>
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 2 <empty>
RETURN return (1); return (1);
LITERAL 1 <empty>
<operator>.assignment n1 = (int )*(*(argv + 1) + 0)
<operator>.assignment n2 = (int )*(*(argv + 2) + 0)
<operator>.assignment gcd = findgcd(n1, n2)
printf printf("GCD of %d and %d is: %d\n", n1, n2, gcd)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 3
<operator>.lessThan argc < 3
LITERAL 1 return (1);
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
BLOCK <empty> <empty>
<operator>.cast (int )*(*(argv + 1) + 0)
<operator>.cast (int )*(*(argv + 2) + 0)
findgcd findgcd(n1, n2)
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
<operator>.addition *(argv + 1) + 0
<operator>.addition *(argv + 2) + 0
<operator>.addition argv + 1
<operator>.addition argv + 2
>>>PDG&44 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 2->7 2->29 3->8 3->42 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 19->1 21->1 21->1 21->36 22->1 22->1 22->36 23->1 23->1 23->24 24->1 24->1 24->1 24->1 27->1 28->1 28->1 29->1 29->1 29->37 29->39 30->19 31->1 31->1 32->27 34->1 35->1 36->23 36->23 36->24 36->24 37->1 37->1 39->1 39->1 40->1 41->1 43->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; char * * _global_envp = ( char * * ) 0 ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern int ( /* missing proto */ findgcd ) ( ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int argc , char * * argv , char * * _formal_envp ) { int n1 ; int n2 ; int gcd ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 4 ; } while ( 1 ) { switch ( _1_main_next ) { case 4 : ; { _1_main_next = 3 ; } break ; case 3 : ; if ( argc < 3 ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : ; return ( 1 ) ; break ; case 1 : n1 = ( int ) * ( * ( argv + 1 ) + 0 ) ; n2 = ( int ) * ( * ( argv + 2 ) + 0 ) ; gcd = findgcd ( n1 , n2 ) ; printf ( " \n " , n1 , n2 , gcd ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD test_crc32
METHOD_RETURN void
PARAM void
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_test_crc32_next = 1
LITERAL 1 while (1)
IDENTIFIER _1_test_crc32_next switch(_1_test_crc32_next)
LITERAL 1 <empty>
<operator>.assignment tmp = crc32("Hello World")
assert assert(tmp == 1243066710)
<operator>.assignment tmp___0 = crc32("Hello World!")
assert assert(tmp___0 == 472456355)
<operator>.assignment tmp___1 = crc32("Hello world")
assert assert((long )tmp___1 == 2346098258L)
<operator>.assignment tmp___2 = crc32("Hello world!")
assert assert(tmp___2 == 461707669)
printf printf("Tests passed\n")
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return; return;
<operator>.assignment _1_test_crc32_next = 0
crc32 crc32("Hello World")
<operator>.equals tmp == 1243066710
crc32 crc32("Hello World!")
<operator>.equals tmp___0 == 472456355
crc32 crc32("Hello world")
<operator>.equals (long )tmp___1 == 2346098258L
crc32 crc32("Hello world!")
<operator>.equals tmp___2 == 461707669
<operator>.cast (long )tmp___1
>>>PDG&31 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 2->1 5->1 5->1 9->1 9->1 9->23 10->1 10->1 11->1 11->1 11->25 12->1 12->1 13->1 13->1 13->27 13->30 14->1 14->1 15->1 15->1 15->29 16->1 16->1 17->1 20->1 21->1 21->1 22->9 23->1 23->10 23->10 24->11 25->1 25->12 25->12 26->13 27->1 27->14 27->14 28->15 29->1 29->16 29->16 30->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int ( /* missing proto */ assert ) ( ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int ( /* missing proto */ crc32 ) ( ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; void test_crc32 ( void ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void test_crc32 ( void ) { int tmp ; int tmp___0 ; int tmp___1 ; int tmp___2 ; unsigned long _1_test_crc32_next ; { { _1_test_crc32_next = 1 ; } while ( 1 ) { switch ( _1_test_crc32_next ) { case 1 : tmp = crc32 ( " " ) ; assert ( tmp == 1243066710 ) ; tmp___0 = crc32 ( " " ) ; assert ( tmp___0 == 472456355 ) ; tmp___1 = crc32 ( " " ) ; assert ( ( long ) tmp___1 == 2346098258L ) ; tmp___2 = crc32 ( " " ) ; assert ( tmp___2 == 461707669 ) ; printf ( " \n " ) ; { _1_test_crc32_next = 0 ; } break ; case 0 : ; return ; break ; } } } } void megaInit ( void ) { { } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD display
METHOD_RETURN void
PARAM int *arr
PARAM int n
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_display_next = 6
LITERAL 1 while (1)
IDENTIFIER _1_display_next switch(_1_display_next)
LITERAL 6 <empty>
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
printf printf("%d "  *(arr + i))
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("\n")
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return; return;
<operator>.assignment _1_display_next = 4
<operator>.lessThan i < n
<operator>.assignment _1_display_next = 4
<operator>.assignment _1_display_next = 0
BLOCK <empty> <empty>
<operator>.assignment _1_display_next = 2
BLOCK <empty> <empty>
<operator>.addition arr + i
<operator>.assignment _1_display_next = 1
>>>PDG&31 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 2->1 2->29 3->1 3->23 6->1 6->1 10->1 10->1 10->15 10->23 10->29 14->1 14->1 15->1 15->1 15->23 15->29 18->1 21->1 22->1 22->1 23->1 23->1 23->1 23->15 23->27 23->29 23->30 24->1 24->1 25->1 25->1 27->1 27->1 29->1 30->1 30->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; void display ( int * arr , int n ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } void display ( int * arr , int n ) { int i ; unsigned long _1_display_next ; { { _1_display_next = 6 ; } while ( 1 ) { switch ( _1_display_next ) { case 6 : i = 0 ; { _1_display_next = 4 ; } break ; case 4 : ; if ( i < n ) { { _1_display_next = 2 ; } } else { { _1_display_next = 1 ; } } break ; case 2 : printf ( " " , * ( arr + i ) ) ; i ++ ; { _1_display_next = 4 ; } break ; case 1 : printf ( " \n " ) ; { _1_display_next = 0 ; } break ; case 0 : ; return ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD decimal_to_octal
METHOD_RETURN int
PARAM int decimal
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_decimal_to_octal_next = 8
LITERAL 1 while (1)
IDENTIFIER _1_decimal_to_octal_next switch(_1_decimal_to_octal_next)
LITERAL 8 <empty>
LITERAL 7 <empty>
LITERAL 6 <empty>
RETURN return (decimal); return (decimal);
LITERAL 4 <empty>
LITERAL 3 <empty>
RETURN return (0); return (0);
LITERAL 2 <empty>
<operator>.assignment tmp = decimal_to_octal(decimal / 8)
BLOCK <empty> <empty>
LITERAL 1 <empty>
RETURN return (tmp * 10 + decimal % 8); return (tmp * 10 + decimal % 8);
<operator>.lessThan decimal < 8
<operator>.greaterThan decimal > 0
IDENTIFIER decimal return (decimal);
<operator>.equals decimal == 0
LITERAL 0 return (0);
<operator>.assignment _1_decimal_to_octal_next = 1
<operator>.addition tmp * 10 + decimal % 8
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
decimal_to_octal decimal_to_octal(decimal / 8)
<operator>.assignment _1_decimal_to_octal_next = 7
BLOCK <empty> <empty>
<operator>.assignment _1_decimal_to_octal_next = 6
BLOCK <empty> <empty>
<operator>.assignment _1_decimal_to_octal_next = 3
BLOCK <empty> <empty>
<operator>.division decimal / 8
<operator>.multiplication tmp * 10
<operator>.modulo decimal % 8
<operator>.assignment _1_decimal_to_octal_next = 4
<operator>.assignment _1_decimal_to_octal_next = 4
<operator>.assignment _1_decimal_to_octal_next = 2
>>>PDG&43 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->12 0->13 0->14 0->15 0->17 0->18 0->20 0->21 0->22 0->23 0->24 0->25 0->27 0->28 0->29 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 2->1 2->20 2->21 2->22 2->23 2->37 2->39 5->1 5->1 11->1 14->1 16->1 16->1 16->1 16->38 19->1 20->1 20->1 20->21 20->22 20->23 20->31 20->37 20->39 20->40 21->1 21->1 21->20 21->22 21->23 21->33 21->37 21->39 21->41 22->11 23->1 23->1 23->20 23->21 23->22 23->35 23->37 23->39 23->42 24->14 25->1 25->1 26->19 30->1 30->16 31->1 31->1 33->1 33->1 35->1 35->1 37->1 37->20 37->21 37->22 37->23 37->30 37->30 37->39 38->26 38->26 39->26 39->26 40->1 40->1 41->1 41->1 42->1 42->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; int decimal_to_octal ( int decimal ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int decimal_to_octal ( int decimal ) { int tmp ; unsigned long _1_decimal_to_octal_next ; { { _1_decimal_to_octal_next = 8 ; } while ( 1 ) { switch ( _1_decimal_to_octal_next ) { case 8 : ; if ( decimal < 8 ) { { _1_decimal_to_octal_next = 7 ; } } else { { _1_decimal_to_octal_next = 4 ; } } break ; case 7 : ; if ( decimal > 0 ) { { _1_decimal_to_octal_next = 6 ; } } else { { _1_decimal_to_octal_next = 4 ; } } break ; case 6 : ; return ( decimal ) ; break ; case 4 : _L : /* CIL Label */ ; if ( decimal == 0 ) { { _1_decimal_to_octal_next = 3 ; } } else { { _1_decimal_to_octal_next = 2 ; } } break ; case 3 : ; return ( 0 ) ; break ; case 2 : tmp = decimal_to_octal ( decimal / 8 ) ; { _1_decimal_to_octal_next = 1 ; } break ; case 1 : ; return ( tmp * 10 + decimal % 8 ) ; break ; } } } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD pointer_hash
METHOD_RETURN unsigned int
PARAM void *location
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_pointer_hash_next = 0
LITERAL 1 while (1)
IDENTIFIER _1_pointer_hash_next switch(_1_pointer_hash_next)
LITERAL 0 <empty>
RETURN return ((unsigned int )((unsigned long )location)); return ((unsigned int )((unsigned long )location));
<operator>.cast (unsigned int )((unsigned long )location)
<operator>.cast (unsigned long )location
>>>PDG&12 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->10 0->11 2->10 2->11 5->1 5->1 9->1 10->1 10->1 10->9 11->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; unsigned int pointer_hash ( void * location ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; unsigned int pointer_hash ( void * location ) { unsigned long _1_pointer_hash_next ; { { _1_pointer_hash_next = 0 ; } while ( 1 ) { switch ( _1_pointer_hash_next ) { case 0 : ; return ( ( unsigned int ) ( ( unsigned long ) location ) ) ; break ; } } } } void megaInit ( void ) { { } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD DEKHash
METHOD_RETURN unsigned int
PARAM char *str
PARAM unsigned int len
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_DEKHash_next = 5
LITERAL 1 while (1)
IDENTIFIER _1_DEKHash_next switch(_1_DEKHash_next)
LITERAL 5 <empty>
<operator>.assignment hash = len
<operator>.assignment i = 0U
<operator>.assignment i = 0U
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 1 <empty>
<operator>.assignment hash = ((hash << 5) ^ (hash >> 27)) ^ (unsigned int )*str
<operator>.postIncrement str ++
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (hash); return (hash);
<operator>.assignment _1_DEKHash_next = 3
<operator>.lessThan i < len
<operator>.assignment _1_DEKHash_next = 3
IDENTIFIER hash return (hash);
BLOCK <empty> <empty>
<operator>.xor ((hash << 5) ^ (hash >> 27)) ^ (unsigned int )*str
<operator>.assignment _1_DEKHash_next = 1
BLOCK <empty> <empty>
<operator>.xor (hash << 5) ^ (hash >> 27)
<operator>.cast (unsigned int )*str
<operator>.assignment _1_DEKHash_next = 0
<operator>.shiftLeft hash << 5
<operator>.arithmeticShiftRight hash >> 27
>>>PDG&35 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->17 0->18 0->19 0->20 0->22 0->23 0->24 0->25 0->26 0->28 0->29 0->32 0->33 0->34 2->1 2->17 3->1 3->10 3->23 6->1 6->1 10->1 10->1 10->1 10->25 10->33 12->1 12->1 12->18 12->23 16->1 16->1 16->1 16->25 16->33 17->1 17->1 18->1 18->1 18->23 21->1 22->1 22->1 23->1 23->1 23->1 23->10 23->18 23->28 23->32 24->1 24->1 25->21 27->1 27->1 27->16 27->16 28->1 28->1 30->1 30->1 30->27 30->27 31->1 32->1 32->1 33->30 33->30 33->34 34->30 34->30
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; unsigned int DEKHash ( char * str , unsigned int len ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } unsigned int DEKHash ( char * str , unsigned int len ) { unsigned int hash ; unsigned int i ; unsigned long _1_DEKHash_next ; { { _1_DEKHash_next = 5 ; } while ( 1 ) { switch ( _1_DEKHash_next ) { case 5 : hash = len ; i = 0U ; i = 0U ; { _1_DEKHash_next = 3 ; } break ; case 3 : ; if ( i < len ) { { _1_DEKHash_next = 1 ; } } else { { _1_DEKHash_next = 0 ; } } break ; case 1 : hash = ( ( hash << 5 ) ^ ( hash >> 27 ) ) ^ ( unsigned int ) * str ; str ++ ; i ++ ; { _1_DEKHash_next = 3 ; } break ; case 0 : ; return ( hash ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD test_xor8
METHOD_RETURN void
PARAM void
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_test_xor8_next = 1
LITERAL 1 while (1)
IDENTIFIER _1_test_xor8_next switch(_1_test_xor8_next)
LITERAL 1 <empty>
<operator>.assignment tmp = xor8("Hello World")
assert assert(tmp == 228)
<operator>.assignment tmp___0 = xor8("Hello World!")
assert assert(tmp___0 == 195)
<operator>.assignment tmp___1 = xor8("Hello world")
assert assert(tmp___1 == 196)
<operator>.assignment tmp___2 = xor8("Hello world!")
assert assert(tmp___2 == 163)
printf printf("Tests passed\n")
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return; return;
<operator>.assignment _1_test_xor8_next = 0
xor8 xor8("Hello World")
<operator>.equals tmp == 228
xor8 xor8("Hello World!")
<operator>.equals tmp___0 == 195
xor8 xor8("Hello world")
<operator>.equals tmp___1 == 196
xor8 xor8("Hello world!")
<operator>.equals tmp___2 == 163
>>>PDG&30 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 2->1 5->1 5->1 9->1 9->1 9->23 10->1 10->1 11->1 11->1 11->25 12->1 12->1 13->1 13->1 13->27 14->1 14->1 15->1 15->1 15->29 16->1 16->1 17->1 20->1 21->1 21->1 22->9 23->1 23->10 23->10 24->11 25->1 25->12 25->12 26->13 27->1 27->14 27->14 28->15 29->1 29->16 29->16
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int ( /* missing proto */ assert ) ( ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int ( /* missing proto */ xor8 ) ( ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; void test_xor8 ( void ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void test_xor8 ( void ) { int tmp ; int tmp___0 ; int tmp___1 ; int tmp___2 ; unsigned long _1_test_xor8_next ; { { _1_test_xor8_next = 1 ; } while ( 1 ) { switch ( _1_test_xor8_next ) { case 1 : tmp = xor8 ( " " ) ; assert ( tmp == 228 ) ; tmp___0 = xor8 ( " " ) ; assert ( tmp___0 == 195 ) ; tmp___1 = xor8 ( " " ) ; assert ( tmp___1 == 196 ) ; tmp___2 = xor8 ( " " ) ; assert ( tmp___2 == 163 ) ; printf ( " \n " ) ; { _1_test_xor8_next = 0 ; } break ; case 0 : ; return ; break ; } } } } void megaInit ( void ) { { } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD findTheDifference
METHOD_RETURN char
PARAM char *s
PARAM char *t
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_findTheDifference_next = 12
LITERAL 1 while (1)
IDENTIFIER _1_findTheDifference_next switch(_1_findTheDifference_next)
LITERAL 12 <empty>
<operator>.assignment sum1 = 0
<operator>.assignment sum2 = 0
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 10 <empty>
<operator>.assignment tmp = strlen(s)
BLOCK <empty> <empty>
LITERAL 9 <empty>
LITERAL 7 <empty>
<operator>.assignmentPlus sum1 += (int )*(s + i)
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 6 <empty>
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 4 <empty>
<operator>.assignment tmp___0 = strlen(t)
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 1 <empty>
<operator>.assignmentPlus sum2 += (int )*(t + i)
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return ((char )(sum2 - sum1)); return ((char )(sum2 - sum1));
<operator>.assignment _1_findTheDifference_next = 10
<operator>.assignment _1_findTheDifference_next = 9
<operator>.lessThan i < tmp
<operator>.assignment _1_findTheDifference_next = 10
<operator>.assignment _1_findTheDifference_next = 4
<operator>.assignment _1_findTheDifference_next = 3
<operator>.lessThan i < tmp___0
<operator>.assignment _1_findTheDifference_next = 4
<operator>.cast (char )(sum2 - sum1)
strlen strlen(s)
BLOCK <empty> <empty>
<operator>.cast (int )*(s + i)
strlen strlen(t)
BLOCK <empty> <empty>
<operator>.cast (int )*(t + i)
<operator>.assignment _1_findTheDifference_next = 7
BLOCK <empty> <empty>
<operator>.assignment _1_findTheDifference_next = 1
BLOCK <empty> <empty>
<operator>.subtraction sum2 - sum1
<operator>.assignment _1_findTheDifference_next = 6
<operator>.addition s + i
<operator>.assignment _1_findTheDifference_next = 0
<operator>.addition t + i
>>>PDG&59 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->44 0->45 0->47 0->48 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 2->1 2->44 2->56 3->1 3->47 3->58 6->1 6->1 10->1 10->19 10->54 11->1 11->30 11->54 12->1 12->1 12->20 12->31 12->37 12->41 12->56 12->58 15->1 15->1 15->1 15->37 19->1 19->1 19->54 20->1 20->1 20->31 20->37 20->41 20->56 20->58 23->1 23->1 23->20 23->31 23->37 23->41 23->56 23->58 26->1 26->1 26->1 26->41 30->1 30->1 30->54 31->1 31->1 31->20 31->37 31->41 31->56 31->58 34->1 35->1 35->1 36->1 36->1 37->1 37->1 37->1 37->20 37->31 37->41 37->50 37->55 37->56 37->58 38->1 38->1 39->1 39->1 40->1 40->1 41->1 41->1 41->1 41->20 41->31 41->37 41->52 41->56 41->57 41->58 42->1 42->1 43->1 43->1 43->34 44->1 44->15 44->56 46->1 47->1 47->26 47->58 49->1 50->1 50->1 52->1 52->1 54->1 54->1 54->43 54->43 55->1 55->1 56->1 57->1 57->1 58->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern int ( /* missing proto */ strlen ) ( ) ; void main ( void ) ; char findTheDifference ( char * s , char * t ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; char findTheDifference ( char * s , char * t ) { int sum1 ; int sum2 ; int i ; int tmp ; int tmp___0 ; unsigned long _1_findTheDifference_next ; { { _1_findTheDifference_next = 12 ; } while ( 1 ) { switch ( _1_findTheDifference_next ) { case 12 : sum1 = 0 ; sum2 = 0 ; i = 0 ; { _1_findTheDifference_next = 10 ; } break ; case 10 : tmp = strlen ( s ) ; { _1_findTheDifference_next = 9 ; } break ; case 9 : ; if ( i < tmp ) { { _1_findTheDifference_next = 7 ; } } else { { _1_findTheDifference_next = 6 ; } } break ; case 7 : sum1 += ( int ) * ( s + i ) ; i ++ ; { _1_findTheDifference_next = 10 ; } break ; case 6 : i = 0 ; { _1_findTheDifference_next = 4 ; } break ; case 4 : tmp___0 = strlen ( t ) ; { _1_findTheDifference_next = 3 ; } break ; case 3 : ; if ( i < tmp___0 ) { { _1_findTheDifference_next = 1 ; } } else { { _1_findTheDifference_next = 0 ; } } break ; case 1 : sum2 += ( int ) * ( t + i ) ; i ++ ; { _1_findTheDifference_next = 4 ; } break ; case 0 : ; return ( ( char ) ( sum2 - sum1 ) ) ; break ; } } } } void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char const   **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 6
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 6 <empty>
printf printf("Enter size of array:\n")
scanf scanf("%d", & n)
printf printf("Enter the elements of the array\n")
<operator>.assignment tmp = malloc((unsigned long )n * sizeof(int ))
<operator>.assignment arr = (int *)tmp
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
scanf scanf("%d", arr + i)
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("Original array: ")
display display(arr, n)
bead_sort bead_sort(arr, n)
printf printf("Sorted array: ")
display display(arr, n)
free free(arr)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 4
<operator>.lessThan i < n
<operator>.assignment _1_main_next = 4
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
malloc malloc((unsigned long )n * sizeof(int ))
<operator>.cast (int *)tmp
BLOCK <empty> <empty>
<operator>.addition arr + i
<operator>.multiplication (unsigned long )n * sizeof(int )
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.cast (unsigned long )n
<operator>.sizeOf sizeof(int )
<operator>.assignment _1_main_next = 1
>>>PDG&53 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->52 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 17->1 17->30 17->31 17->33 17->39 17->47 17->50 18->1 19->1 19->1 19->20 19->44 20->1 20->1 20->1 20->25 20->30 20->46 21->1 21->1 21->25 21->26 21->39 21->46 25->1 26->1 26->1 26->25 26->39 26->46 29->1 30->31 30->31 31->1 31->33 31->33 32->1 33->1 33->1 33->17 33->30 33->34 33->39 33->47 33->50 34->1 34->25 34->30 34->46 37->1 38->1 38->1 39->1 39->1 39->1 39->17 39->25 39->26 39->30 39->46 39->47 39->48 39->50 39->52 40->1 40->1 41->1 41->1 42->37 43->1 43->19 44->1 46->1 47->1 47->43 48->1 48->1 50->1 51->1 52->1 52->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern int ( /* missing proto */ malloc ) ( ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int ( /* missing proto */ bead_sort ) ( ) ; extern double ceil ( double x ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern int ( /* missing proto */ free ) ( ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char const * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int ( /* missing proto */ scanf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int ( /* missing proto */ display ) ( ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int argc , char const * * argv , char * * _formal_envp ) { int n ; int i ; int * arr ; int tmp ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 6 ; } while ( 1 ) { switch ( _1_main_next ) { case 6 : printf ( " \n " ) ; scanf ( " " , & n ) ; printf ( " \n " ) ; tmp = malloc ( ( unsigned long ) n * sizeof ( int ) ) ; arr = ( int * ) tmp ; i = 0 ; { _1_main_next = 4 ; } break ; case 4 : ; if ( i < n ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : scanf ( " " , arr + i ) ; i ++ ; { _1_main_next = 4 ; } break ; case 1 : printf ( " " ) ; display ( arr , n ) ; bead_sort ( arr , n ) ; printf ( " " ) ; display ( arr , n ) ; free ( arr ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 22
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 22 <empty>
BLOCK <empty> <empty>
LITERAL 21 <empty>
LITERAL 20 <empty>
RETURN return (1); return (1);
LITERAL 19 <empty>
<operator>.assignment c = 0
<operator>.assignment i = 1
BLOCK <empty> <empty>
LITERAL 17 <empty>
LITERAL 15 <empty>
<operator>.assignment a[i - 1] = (int )*(*(argv + i) + 0)
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 14 <empty>
<operator>.assignment m = (int )*(*(argv + (argc - 1)) + 0)
<operator>.assignment l = 0
<operator>.assignment u = argc - 2
BLOCK <empty> <empty>
LITERAL 12 <empty>
LITERAL 10 <empty>
<operator>.assignment mid = (l + u) / 2
BLOCK <empty> <empty>
LITERAL 9 <empty>
LITERAL 8 <empty>
<operator>.assignment c = 1
BLOCK <empty> <empty>
LITERAL 6 <empty>
LITERAL 5 <empty>
<operator>.assignment u = mid - 1
BLOCK <empty> <empty>
LITERAL 4 <empty>
<operator>.assignment l = mid + 1
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 2 <empty>
printf printf("The number is not found.\n")
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("The number is found.\n")
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 21
<operator>.lessThan argc < 12
LITERAL 1 return (1);
<operator>.assignment _1_main_next = 17
<operator>.lessThan i < argc - 1
<operator>.assignment _1_main_next = 17
<operator>.assignment _1_main_next = 12
<operator>.lessEqualsThan l <= u
<operator>.assignment _1_main_next = 9
<operator>.equals m == a[mid]
<operator>.assignment _1_main_next = 3
<operator>.lessThan m < a[mid]
<operator>.assignment _1_main_next = 12
<operator>.assignment _1_main_next = 12
<operator>.equals c == 0
<operator>.assignment _1_main_next = 0
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.cast (int )*(*(argv + i) + 0)
<operator>.cast (int )*(*(argv + (argc - 1)) + 0)
<operator>.subtraction argc - 2
BLOCK <empty> <empty>
<operator>.division (l + u) / 2
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.subtraction mid - 1
<operator>.addition mid + 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 20
BLOCK <empty> <empty>
<operator>.subtraction argc - 1
<operator>.assignment _1_main_next = 15
BLOCK <empty> <empty>
<operator>.subtraction i - 1
<operator>.assignment _1_main_next = 10
BLOCK <empty> <empty>
<operator>.addition l + u
<operator>.assignment _1_main_next = 8
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 5
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 19
<operator>.assignment _1_main_next = 14
<operator>.addition *(argv + i) + 0
<operator>.addition *(argv + (argc - 1)) + 0
<operator>.assignment _1_main_next = 3
<operator>.assignment _1_main_next = 6
<operator>.assignment _1_main_next = 4
<operator>.assignment _1_main_next = 1
<operator>.addition argv + i
<operator>.addition argv + (argc - 1)
<operator>.subtraction argc - 1
>>>PDG&114 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->27 0->28 0->29 0->31 0->33 0->34 0->35 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 0->59 0->60 0->61 0->62 0->63 0->64 0->65 0->66 0->67 0->68 0->69 0->70 0->71 0->72 0->73 0->74 0->75 0->76 0->77 0->80 0->81 0->82 0->83 0->84 0->85 0->86 0->87 0->88 0->89 0->90 0->91 0->92 0->93 0->94 0->95 0->96 0->97 0->98 0->99 0->100 0->101 0->102 0->103 0->104 0->105 0->106 0->107 0->108 0->109 0->110 0->111 0->112 0->113 2->7 2->59 2->90 2->113 3->8 3->111 3->112 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 19->1 21->1 21->1 21->72 22->1 22->1 22->62 22->93 26->1 26->1 26->1 27->1 27->1 27->62 27->93 30->1 30->1 30->1 30->67 30->69 31->1 31->1 31->65 31->82 31->96 32->1 32->1 32->1 32->65 32->82 32->96 36->1 36->1 36->1 36->47 36->85 36->86 40->1 40->1 40->72 44->1 44->1 44->1 44->65 44->82 44->96 47->1 47->1 47->1 47->65 47->82 47->96 51->1 54->1 57->1 58->1 58->1 59->1 59->1 59->88 59->90 59->103 59->113 60->19 61->1 61->1 62->1 62->1 62->1 62->91 62->93 62->104 63->1 63->1 64->1 64->1 65->1 65->1 65->1 65->82 65->82 65->94 65->96 65->96 65->107 66->1 66->1 67->1 67->1 67->1 67->69 67->69 67->97 67->108 68->1 68->1 69->1 69->1 69->1 69->67 69->67 69->99 69->109 70->1 70->1 71->1 71->1 72->1 72->1 72->101 72->110 73->1 73->1 74->1 74->1 75->57 78->1 79->1 80->1 80->32 80->32 80->59 80->90 80->113 82->1 82->36 82->36 85->1 85->44 85->44 85->47 85->86 86->1 88->1 88->1 90->1 90->59 90->62 90->62 90->113 91->1 91->1 93->27 93->111 94->1 94->1 96->1 96->1 97->1 97->1 99->1 99->1 101->1 101->1 103->1 103->1 104->1 104->1 105->1 106->1 107->1 107->1 108->1 108->1 109->1 109->1 110->1 110->1 111->1 112->1 112->1 113->80 113->112 113->112
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int unlink ( char const * filename ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int argc , char * * argv , char * * _formal_envp ) { int a [ 10 ] ; int i ; int m ; int c ; int l ; int u ; int mid ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 22 ; } while ( 1 ) { switch ( _1_main_next ) { case 22 : ; { _1_main_next = 21 ; } break ; case 21 : ; if ( argc < 12 ) { { _1_main_next = 20 ; } } else { { _1_main_next = 19 ; } } break ; case 20 : ; return ( 1 ) ; break ; case 19 : c = 0 ; i = 1 ; { _1_main_next = 17 ; } break ; case 17 : ; if ( i < argc - 1 ) { { _1_main_next = 15 ; } } else { { _1_main_next = 14 ; } } break ; case 15 : a [ i - 1 ] = ( int ) * ( * ( argv + i ) + 0 ) ; i ++ ; { _1_main_next = 17 ; } break ; case 14 : m = ( int ) * ( * ( argv + ( argc - 1 ) ) + 0 ) ; l = 0 ; u = argc - 2 ; { _1_main_next = 12 ; } break ; case 12 : ; if ( l <= u ) { { _1_main_next = 10 ; } } else { { _1_main_next = 3 ; } } break ; case 10 : mid = ( l + u ) / 2 ; { _1_main_next = 9 ; } break ; case 9 : ; if ( m == a [ mid ] ) { { _1_main_next = 8 ; } } else { { _1_main_next = 6 ; } } break ; case 8 : c = 1 ; { _1_main_next = 3 ; } break ; case 6 : ; if ( m < a [ mid ] ) { { _1_main_next = 5 ; } } else { { _1_main_next = 4 ; } } break ; case 5 : u = mid - 1 ; { _1_main_next = 12 ; } break ; case 4 : l = mid + 1 ; { _1_main_next = 12 ; } break ; case 3 : ; if ( c == 0 ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : printf ( " \n " ) ; { _1_main_next = 0 ; } break ; case 1 : printf ( " \n " ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD moveZeroes
METHOD_RETURN void
PARAM int *nums
PARAM int numsSize
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_moveZeroes_next = 11
LITERAL 1 while (1)
IDENTIFIER _1_moveZeroes_next switch(_1_moveZeroes_next)
LITERAL 11 <empty>
<operator>.assignment i = 0
<operator>.assignment start = 0
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 9 <empty>
LITERAL 7 <empty>
LITERAL 6 <empty>
<operator>.assignment tmp = start
<operator>.postIncrement start ++
<operator>.assignment *(nums + tmp) = *(nums + i)
BLOCK <empty> <empty>
LITERAL 5 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 1 <empty>
<operator>.assignment *(nums + start) = 0
<operator>.postIncrement start ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return; return;
<operator>.assignment _1_moveZeroes_next = 9
<operator>.lessThan i < numsSize
<operator>.assignment _1_moveZeroes_next = 5
<operator>.assignment _1_moveZeroes_next = 9
<operator>.lessThan start < numsSize
<operator>.assignment _1_moveZeroes_next = 3
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_moveZeroes_next = 7
BLOCK <empty> <empty>
<operator>.addition nums + i
<operator>.assignment _1_moveZeroes_next = 6
BLOCK <empty> <empty>
<operator>.addition nums + tmp
<operator>.addition nums + i
<operator>.assignment _1_moveZeroes_next = 1
BLOCK <empty> <empty>
<operator>.addition nums + start
<operator>.assignment _1_moveZeroes_next = 3
<operator>.assignment _1_moveZeroes_next = 5
<operator>.assignment _1_moveZeroes_next = 0
<operator>.indirection *(nums + i)
>>>PDG&54 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 2->1 2->42 2->45 2->46 2->49 3->1 3->32 3->35 6->1 6->1 11->1 11->1 11->17 11->18 11->27 11->35 11->49 12->1 12->1 12->22 12->32 12->42 12->46 17->1 17->45 18->1 18->1 18->17 18->27 18->35 18->49 19->1 19->1 19->1 22->1 22->1 22->32 22->42 22->46 26->1 26->1 27->1 27->1 27->17 27->18 27->35 27->49 30->1 31->1 31->1 32->1 32->1 32->1 32->22 32->35 32->40 32->42 32->46 32->50 33->1 33->1 34->1 34->1 35->1 35->1 35->1 35->17 35->18 35->27 35->32 35->47 35->49 35->52 36->1 36->1 40->1 40->1 42->1 42->1 43->1 43->1 45->1 46->1 46->1 47->1 47->1 49->1 50->1 50->1 51->1 51->1 52->1 52->1 53->43 53->51
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; void moveZeroes ( int * nums , int numsSize ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } void moveZeroes ( int * nums , int numsSize ) { int i ; int start ; int tmp ; unsigned long _1_moveZeroes_next ; { { _1_moveZeroes_next = 11 ; } while ( 1 ) { switch ( _1_moveZeroes_next ) { case 11 : i = 0 ; start = 0 ; i = 0 ; { _1_moveZeroes_next = 9 ; } break ; case 9 : ; if ( i < numsSize ) { { _1_moveZeroes_next = 7 ; } } else { { _1_moveZeroes_next = 3 ; } } break ; case 7 : ; if ( * ( nums + i ) ) { { _1_moveZeroes_next = 6 ; } } else { { _1_moveZeroes_next = 5 ; } } break ; case 6 : tmp = start ; start ++ ; * ( nums + tmp ) = * ( nums + i ) ; { _1_moveZeroes_next = 5 ; } break ; case 5 : i ++ ; { _1_moveZeroes_next = 9 ; } break ; case 3 : ; if ( start < numsSize ) { { _1_moveZeroes_next = 1 ; } } else { { _1_moveZeroes_next = 0 ; } } break ; case 1 : * ( nums + start ) = 0 ; start ++ ; { _1_moveZeroes_next = 3 ; } break ; case 0 : ; return ; break ; } } } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD fib
METHOD_RETURN int
PARAM int n
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_fib_next = 8
LITERAL 1 while (1)
IDENTIFIER _1_fib_next switch(_1_fib_next)
LITERAL 8 <empty>
LITERAL 7 <empty>
printf printf("\nNo Such term !\n")
exit exit(0)
BLOCK <empty> <empty>
LITERAL 6 <empty>
<operator>.assignment tmp = malloc((unsigned long )(n + 2) * sizeof(int ))
<operator>.assignment f = (int *)tmp
<operator>.assignment *(f + 0) = 0
<operator>.assignment *(f + 1) = 1
<operator>.assignment i = 2
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
<operator>.assignment *(f + i) = *(f + (i - 1)) + *(f + (i - 2))
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operator>.assignment out = *(f + n)
free free(f)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (out); return (out);
<operator>.lessThan n < 0
<operator>.assignment _1_fib_next = 6
<operator>.assignment _1_fib_next = 4
<operator>.lessEqualsThan i <= n
<operator>.assignment _1_fib_next = 4
<operator>.assignment _1_fib_next = 0
IDENTIFIER out return (out);
BLOCK <empty> <empty>
malloc malloc((unsigned long )(n + 2) * sizeof(int ))
<operator>.cast (int *)tmp
BLOCK <empty> <empty>
<operator>.addition *(f + (i - 1)) + *(f + (i - 2))
<operator>.assignment _1_fib_next = 7
BLOCK <empty> <empty>
<operator>.multiplication (unsigned long )(n + 2) * sizeof(int )
<operator>.addition f + 0
<operator>.addition f + 1
<operator>.assignment _1_fib_next = 2
BLOCK <empty> <empty>
<operator>.addition f + i
<operator>.addition f + n
<operator>.assignment _1_fib_next = 6
<operator>.cast (unsigned long )(n + 2)
<operator>.sizeOf sizeof(int )
<operator>.assignment _1_fib_next = 1
<operator>.addition f + (i - 1)
<operator>.addition f + (i - 2)
<operator>.addition n + 2
<operator>.subtraction i - 1
<operator>.subtraction i - 2
>>>PDG&61 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->23 0->24 0->25 0->27 0->28 0->29 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->40 0->41 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->55 0->56 0->57 0->58 0->59 0->60 2->1 2->31 2->34 2->45 2->51 2->53 2->58 5->1 5->1 10->1 14->1 14->1 14->15 14->40 15->1 15->1 15->27 15->46 15->47 15->50 15->51 15->56 15->57 16->1 16->1 17->1 17->1 18->1 18->1 18->34 18->50 18->59 22->1 22->1 22->1 23->1 23->1 23->34 23->50 23->59 26->1 26->1 26->1 26->37 27->1 27->50 27->51 27->56 27->57 30->1 31->1 31->1 31->34 31->43 31->45 31->51 31->52 31->53 31->58 32->1 32->1 33->1 33->1 34->1 34->1 34->1 34->31 34->45 34->48 34->50 34->51 34->53 34->55 34->58 34->59 35->1 35->1 36->1 36->1 37->30 39->1 39->14 40->1 42->1 42->1 43->1 43->1 45->1 45->39 47->1 48->1 48->1 51->1 52->1 52->1 53->1 54->1 55->1 55->1 56->1 57->1 57->1 58->1 59->56 59->56 59->60 60->23 60->57 60->57
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern int ( /* missing proto */ exit ) ( ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern int ( /* missing proto */ malloc ) ( ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern int ( /* missing proto */ free ) ( ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; int fib ( int n ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int fib ( int n ) { int * f ; int tmp ; int i ; int out ; unsigned long _1_fib_next ; { { _1_fib_next = 8 ; } while ( 1 ) { switch ( _1_fib_next ) { case 8 : ; if ( n < 0 ) { { _1_fib_next = 7 ; } } else { { _1_fib_next = 6 ; } } break ; case 7 : printf ( " \n \n " ) ; exit ( 0 ) ; { _1_fib_next = 6 ; } break ; case 6 : tmp = malloc ( ( unsigned long ) ( n + 2 ) * sizeof ( int ) ) ; f = ( int * ) tmp ; * ( f + 0 ) = 0 ; * ( f + 1 ) = 1 ; i = 2 ; { _1_fib_next = 4 ; } break ; case 4 : ; if ( i <= n ) { { _1_fib_next = 2 ; } } else { { _1_fib_next = 1 ; } } break ; case 2 : * ( f + i ) = * ( f + ( i - 1 ) ) + * ( f + ( i - 2 ) ) ; i ++ ; { _1_fib_next = 4 ; } break ; case 1 : out = * ( f + n ) ; free ( f ) ; { _1_fib_next = 0 ; } break ; case 0 : ; return ( out ) ; break ; } } } } void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 12
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 12 <empty>
createqueue createqueue()
BLOCK <empty> <empty>
LITERAL 10 <empty>
printf printf("\n\n  Menu: \n")
printf printf("1:Insert \n")
printf printf("2:Remove \n")
printf printf("3:exit \n")
printf printf("Enter your choice: ")
scanf scanf("%d", & ch)
BLOCK <empty> <empty>
LITERAL 9 <empty>
LITERAL 8 <empty>
printf printf("Enter element to be inserted: ")
scanf scanf("%d", & x)
insert insert(x)
show show()
BLOCK <empty> <empty>
LITERAL 6 <empty>
<operator>.assignment x = removes()
printf printf("Element removed is: %d\n", x)
show show()
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 1 <empty>
destroyqueue destroyqueue()
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 10
<operator>.assignment _1_main_next = 9
IDENTIFIER ch switch(ch)
<operator>.assignment _1_main_next = 3
<operator>.assignment _1_main_next = 3
<operator>.notEquals ch != 3
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
LITERAL 1 <empty>
BLOCK <empty> <empty>
LITERAL 2 <empty>
BLOCK <empty> <empty>
LITERAL 3 <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 8
<operator>.assignment _1_main_next = 6
<operator>.assignment _1_main_next = 3
<operator>.assignment _1_main_next = 3
<operator>.assignment _1_main_next = 10
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
>>>PDG&67 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 0->59 0->60 0->61 0->62 0->63 0->64 0->65 0->66 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 19->1 20->1 21->1 22->1 23->1 24->1 24->49 28->1 29->1 29->30 29->35 30->1 30->1 30->29 31->1 34->1 34->1 34->35 35->1 35->1 35->29 35->30 36->1 40->1 43->1 44->1 44->1 45->1 45->1 47->1 47->1 48->1 48->1 49->1 49->1 49->24 49->64 49->66 50->1 50->1 51->43 60->1 60->1 61->1 61->1 62->1 62->1 63->1 63->1 64->1 64->1 66->1 66->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int unlink ( char const * filename ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; char * * _global_envp = ( char * * ) 0 ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int ( /* missing proto */ scanf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern int ( /* missing proto */ insert ) ( ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern int ( /* missing proto */ destroyqueue ) ( ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ createqueue ) ( ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int ( /* missing proto */ removes ) ( ) ; extern double sqrt ( double x ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern int ( /* missing proto */ show ) ( ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { int x ; int ch ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 12 ; } while ( 1 ) { switch ( _1_main_next ) { case 12 : createqueue ( ) ; { _1_main_next = 10 ; } break ; case 10 : printf ( " \n \n \n " ) ; printf ( " \n " ) ; printf ( " \n " ) ; printf ( " \n " ) ; printf ( " " ) ; scanf ( " " , & ch ) ; { _1_main_next = 9 ; } break ; case 9 : ; switch ( ch ) { case 1 : { _1_main_next = 8 ; } break ; case 2 : { _1_main_next = 6 ; } break ; case 3 : { _1_main_next = 3 ; } break ; default : { _1_main_next = 3 ; } break ; } break ; case 8 : printf ( " " ) ; scanf ( " " , & x ) ; insert ( x ) ; show ( ) ; { _1_main_next = 3 ; } break ; case 6 : x = removes ( ) ; printf ( " \n " , x ) ; show ( ) ; { _1_main_next = 3 ; } break ; case 3 : ; if ( ch != 3 ) { { _1_main_next = 10 ; } } else { { _1_main_next = 1 ; } } break ; case 1 : destroyqueue ( ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 7
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 7 <empty>
<operator>.assignment c = (unsigned char )*(*(argv + 1) + 0)
BLOCK <empty> <empty>
LITERAL 6 <empty>
LITERAL 5 <empty>
printf printf("if-1-win ")
BLOCK <empty> <empty>
LITERAL 4 <empty>
printf printf("if-1-lose ")
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 2 <empty>
printf printf("if-2-win\n")
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("if-2-lose\n")
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 6
<operator>.greaterThan (int )c > 85
<operator>.assignment _1_main_next = 3
<operator>.assignment _1_main_next = 3
<operator>.lessThan (int )c < 170
<operator>.assignment _1_main_next = 0
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
<operator>.cast (unsigned char )*(*(argv + 1) + 0)
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.cast (int )c
<operator>.assignment _1_main_next = 5
BLOCK <empty> <empty>
<operator>.cast (int )c
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.addition *(argv + 1) + 0
<operator>.assignment _1_main_next = 4
<operator>.assignment _1_main_next = 1
<operator>.addition argv + 1
>>>PDG&55 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 2->7 3->8 3->54 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->1 16->35 16->38 16->45 16->48 20->1 23->1 27->1 30->1 33->1 34->1 34->1 35->1 35->1 35->46 35->52 36->1 36->1 37->1 37->1 38->1 38->1 38->49 38->53 39->1 39->1 40->1 40->1 41->33 42->1 45->1 46->1 46->1 48->1 49->1 49->1 51->1 52->1 52->1 53->1 53->1 54->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int argc , char * * argv , char * * _formal_envp ) { unsigned char c ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 7 ; } while ( 1 ) { switch ( _1_main_next ) { case 7 : c = ( unsigned char ) * ( * ( argv + 1 ) + 0 ) ; { _1_main_next = 6 ; } break ; case 6 : ; if ( ( int ) c > 85 ) { { _1_main_next = 5 ; } } else { { _1_main_next = 4 ; } } break ; case 5 : printf ( " " ) ; { _1_main_next = 3 ; } break ; case 4 : printf ( " " ) ; { _1_main_next = 3 ; } break ; case 3 : ; if ( ( int ) c < 170 ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : printf ( " \n " ) ; { _1_main_next = 0 ; } break ; case 1 : printf ( " \n " ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD int_equal
METHOD_RETURN int
PARAM void *vlocation1
PARAM void *vlocation2
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_int_equal_next = 1
LITERAL 1 while (1)
IDENTIFIER _1_int_equal_next switch(_1_int_equal_next)
LITERAL 1 <empty>
<operator>.assignment location1 = (int *)vlocation1
<operator>.assignment location2 = (int *)vlocation2
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (*location1 == *location2); return (*location1 == *location2);
<operator>.assignment _1_int_equal_next = 0
<operator>.equals *location1 == *location2
<operator>.cast (int *)vlocation1
<operator>.cast (int *)vlocation2
>>>PDG&19 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->15 0->17 0->18 2->1 2->10 2->17 3->1 3->11 3->18 6->1 6->1 10->1 10->1 10->1 11->1 11->1 11->1 14->1 15->1 15->1 16->1 16->1 16->1 16->14 17->1 18->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; int int_equal ( void * vlocation1 , void * vlocation2 ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int int_equal ( void * vlocation1 , void * vlocation2 ) { int * location1 ; int * location2 ; unsigned long _1_int_equal_next ; { { _1_int_equal_next = 1 ; } while ( 1 ) { switch ( _1_int_equal_next ) { case 1 : location1 = ( int * ) vlocation1 ; location2 = ( int * ) vlocation2 ; { _1_int_equal_next = 0 ; } break ; case 0 : ; return ( * location1 == * location2 ) ; break ; } } } } void megaInit ( void ) { { } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD adaline_activation
METHOD_RETURN int
PARAM double x
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_adaline_activation_next = 3
LITERAL 1 while (1)
IDENTIFIER _1_adaline_activation_next switch(_1_adaline_activation_next)
LITERAL 3 <empty>
LITERAL 2 <empty>
<operator>.assignment tmp = 1
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operator>.assignment tmp = -1
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (tmp); return (tmp);
<operator>.greaterThan x > (double )0
<operator>.assignment _1_adaline_activation_next = 0
<operator>.assignment _1_adaline_activation_next = 0
IDENTIFIER tmp return (tmp);
BLOCK <empty> <empty>
<operator>.minus -1
<operator>.cast (double )0
<operator>.assignment _1_adaline_activation_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_adaline_activation_next = 1
>>>PDG&27 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->14 0->15 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 2->1 2->17 5->1 5->1 10->1 10->1 10->20 13->1 13->1 13->1 13->20 16->1 17->1 17->1 17->1 17->24 17->26 18->1 18->1 19->1 19->1 20->16 22->13 24->1 24->1 26->1 26->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; int adaline_activation ( double x ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } int adaline_activation ( double x ) { int tmp ; unsigned long _1_adaline_activation_next ; { { _1_adaline_activation_next = 3 ; } while ( 1 ) { switch ( _1_adaline_activation_next ) { case 3 : ; if ( x > ( double ) 0 ) { { _1_adaline_activation_next = 2 ; } } else { { _1_adaline_activation_next = 1 ; } } break ; case 2 : tmp = 1 ; { _1_adaline_activation_next = 0 ; } break ; case 1 : tmp = -1 ; { _1_adaline_activation_next = 0 ; } break ; case 0 : ; return ( tmp ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD display
METHOD_RETURN void
PARAM int const   *arr
PARAM int n
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_display_next = 6
LITERAL 1 while (1)
IDENTIFIER _1_display_next switch(_1_display_next)
LITERAL 6 <empty>
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
printf printf("%d "  *(arr + i))
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("\n")
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return; return;
<operator>.assignment _1_display_next = 4
<operator>.lessThan i < n
<operator>.assignment _1_display_next = 4
<operator>.assignment _1_display_next = 0
BLOCK <empty> <empty>
<operator>.assignment _1_display_next = 2
BLOCK <empty> <empty>
<operator>.addition arr + i
<operator>.assignment _1_display_next = 1
>>>PDG&31 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 2->1 2->29 3->1 3->23 6->1 6->1 10->1 10->1 10->15 10->23 10->29 14->1 14->1 15->1 15->1 15->23 15->29 18->1 21->1 22->1 22->1 23->1 23->1 23->1 23->15 23->27 23->29 23->30 24->1 24->1 25->1 25->1 27->1 27->1 29->1 30->1 30->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; void display ( int const * arr , int n ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } void display ( int const * arr , int n ) { int i ; unsigned long _1_display_next ; { { _1_display_next = 6 ; } while ( 1 ) { switch ( _1_display_next ) { case 6 : i = 0 ; { _1_display_next = 4 ; } break ; case 4 : ; if ( i < n ) { { _1_display_next = 2 ; } } else { { _1_display_next = 1 ; } } break ; case 2 : printf ( " " , * ( arr + i ) ) ; i ++ ; { _1_display_next = 4 ; } break ; case 1 : printf ( " \n " ) ; { _1_display_next = 0 ; } break ; case 0 : ; return ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD missingNumber
METHOD_RETURN int
PARAM int *nums
PARAM int numsSize
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_missingNumber_next = 5
LITERAL 1 while (1)
IDENTIFIER _1_missingNumber_next switch(_1_missingNumber_next)
LITERAL 5 <empty>
<operator>.assignment actual_sum = 0
<operator>.assignment sum = 0
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 1 <empty>
<operator>.assignmentPlus sum += *(nums + i)
<operator>.assignmentPlus actual_sum += i
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return ((actual_sum + numsSize) - sum); return ((actual_sum + numsSize) - sum);
<operator>.assignment _1_missingNumber_next = 3
<operator>.lessThan i < numsSize
<operator>.assignment _1_missingNumber_next = 3
<operator>.subtraction (actual_sum + numsSize) - sum
BLOCK <empty> <empty>
<operator>.assignment _1_missingNumber_next = 1
BLOCK <empty> <empty>
<operator>.addition nums + i
<operator>.addition actual_sum + numsSize
<operator>.assignment _1_missingNumber_next = 0
>>>PDG&32 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 2->1 2->29 3->23 3->25 3->30 6->1 6->1 10->1 10->17 10->25 10->30 11->1 11->16 11->25 12->1 12->1 12->17 12->18 12->23 12->29 16->1 16->1 16->25 17->1 17->25 17->30 18->1 18->1 18->17 18->23 18->29 21->1 22->1 22->1 23->1 23->1 23->17 23->18 23->25 23->27 23->29 23->30 23->31 24->1 24->1 25->1 25->1 25->1 25->21 27->1 27->1 29->1 30->1 30->1 31->1 31->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; int missingNumber ( int * nums , int numsSize ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } int missingNumber ( int * nums , int numsSize ) { int i ; int actual_sum ; int sum ; unsigned long _1_missingNumber_next ; { { _1_missingNumber_next = 5 ; } while ( 1 ) { switch ( _1_missingNumber_next ) { case 5 : actual_sum = 0 ; sum = 0 ; i = 0 ; { _1_missingNumber_next = 3 ; } break ; case 3 : ; if ( i < numsSize ) { { _1_missingNumber_next = 1 ; } } else { { _1_missingNumber_next = 0 ; } } break ; case 1 : sum += * ( nums + i ) ; actual_sum += i ; i ++ ; { _1_missingNumber_next = 3 ; } break ; case 0 : ; return ( ( actual_sum + numsSize ) - sum ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD string_compare
METHOD_RETURN int
PARAM void *string1
PARAM void *string2
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_string_compare_next = 6
LITERAL 1 while (1)
IDENTIFIER _1_string_compare_next switch(_1_string_compare_next)
LITERAL 6 <empty>
<operator>.assignment result = strcmp((char *)string1  (char *)string2)
BLOCK <empty> <empty>
LITERAL 5 <empty>
LITERAL 4 <empty>
RETURN return (-1); return (-1);
LITERAL 3 <empty>
LITERAL 2 <empty>
RETURN return (1); return (1);
LITERAL 1 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_string_compare_next = 5
<operator>.lessThan result < 0
<operator>.minus -1
<operator>.greaterThan result > 0
LITERAL 1 return (1);
LITERAL 0 return (0);
strcmp strcmp((char *)string1  (char *)string2)
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.cast (char *)string1
<operator>.cast (char *)string2
<operator>.assignment _1_string_compare_next = 4
BLOCK <empty> <empty>
<operator>.assignment _1_string_compare_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_string_compare_next = 3
<operator>.assignment _1_string_compare_next = 1
>>>PDG&37 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->11 0->12 0->13 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 2->1 2->26 2->29 3->1 3->26 3->30 6->1 6->1 10->1 10->1 10->1 10->21 10->23 14->1 17->1 19->1 20->1 20->1 21->1 21->1 21->23 21->31 21->35 22->1 22->14 23->1 23->1 23->21 23->33 23->36 24->17 25->19 26->1 26->1 26->10 26->10 29->1 30->1 31->1 31->1 33->1 33->1 35->1 35->1 36->1 36->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; int string_compare ( void * string1 , void * string2 ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int ( /* missing proto */ strcmp ) ( ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int string_compare ( void * string1 , void * string2 ) { int result ; unsigned long _1_string_compare_next ; { { _1_string_compare_next = 6 ; } while ( 1 ) { switch ( _1_string_compare_next ) { case 6 : result = strcmp ( ( char * ) string1 , ( char * ) string2 ) ; { _1_string_compare_next = 5 ; } break ; case 5 : ; if ( result < 0 ) { { _1_string_compare_next = 4 ; } } else { { _1_string_compare_next = 3 ; } } break ; case 4 : ; return ( -1 ) ; break ; case 3 : ; if ( result > 0 ) { { _1_string_compare_next = 2 ; } } else { { _1_string_compare_next = 1 ; } } break ; case 2 : ; return ( 1 ) ; break ; case 1 : ; return ( 0 ) ; break ; } } } } void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 1 <empty>
test test()
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
>>>PDG&22 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 19->1 20->1 20->1 21->19
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int ( /* missing proto */ test ) ( ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern double log ( double x ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 1 ; } while ( 1 ) { switch ( _1_main_next ) { case 1 : test ( ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD generate
METHOD_RETURN int**
PARAM int numRows
PARAM int *returnSize
PARAM int **returnColumnSizes
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_generate_next = 15
LITERAL 1 while (1)
IDENTIFIER _1_generate_next switch(_1_generate_next)
LITERAL 15 <empty>
<operator>.assignment *returnSize = numRows
<operator>.assignment tmp = malloc((unsigned long )numRows * sizeof(int *))
<operator>.assignment ans = (int **)tmp
<operator>.assignment tmp___0 = malloc((unsigned long )numRows * sizeof(int ))
<operator>.assignment *returnColumnSizes = (int *)tmp___0
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 13 <empty>
LITERAL 11 <empty>
<operator>.assignment *(*returnColumnSizes + i) = i + 1
<operator>.assignment tmp___1 = malloc((unsigned long )(i + 1) * sizeof(int ))
<operator>.assignment *(ans + i) = (int *)tmp___1
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 10 <empty>
<operator>.assignment *(*(ans + 0) + 0) = 1
<operator>.assignment i___0 = 1
BLOCK <empty> <empty>
LITERAL 8 <empty>
LITERAL 6 <empty>
<operator>.assignment *(*(ans + i___0) + 0) = 1
<operator>.assignment j = 1
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
<operator>.assignment *(*(ans + i___0) + j) = *(*(ans + (i___0 - 1)) + (j - 1)) + *(*(ans + (i___0 - 1)) + j)
<operator>.postIncrement j ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operator>.assignment *(*(ans + i___0) + i___0) = 1
<operator>.postIncrement i___0 ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (ans); return (ans);
<operator>.assignment _1_generate_next = 13
<operator>.lessThan i < numRows
<operator>.assignment _1_generate_next = 13
<operator>.assignment _1_generate_next = 8
<operator>.lessThan i___0 < numRows
<operator>.assignment _1_generate_next = 4
<operator>.lessThan j < i___0
<operator>.assignment _1_generate_next = 4
<operator>.assignment _1_generate_next = 8
IDENTIFIER ans return (ans);
malloc malloc((unsigned long )numRows * sizeof(int *))
<operator>.cast (int **)tmp
malloc malloc((unsigned long )numRows * sizeof(int ))
<operator>.cast (int *)tmp___0
BLOCK <empty> <empty>
<operator>.addition i + 1
malloc malloc((unsigned long )(i + 1) * sizeof(int ))
<operator>.cast (int *)tmp___1
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.addition *(*(ans + (i___0 - 1)) + (j - 1)) + *(*(ans + (i___0 - 1)) + j)
<operator>.multiplication (unsigned long )numRows * sizeof(int *)
<operator>.multiplication (unsigned long )numRows * sizeof(int )
<operator>.assignment _1_generate_next = 11
BLOCK <empty> <empty>
<operator>.addition *returnColumnSizes + i
<operator>.multiplication (unsigned long )(i + 1) * sizeof(int )
<operator>.addition ans + i
<operator>.addition *(ans + 0) + 0
<operator>.assignment _1_generate_next = 6
BLOCK <empty> <empty>
<operator>.addition *(ans + i___0) + 0
<operator>.assignment _1_generate_next = 2
BLOCK <empty> <empty>
<operator>.addition *(ans + i___0) + j
<operator>.addition *(ans + i___0) + i___0
<operator>.cast (unsigned long )numRows
<operator>.cast (unsigned long )numRows
<operator>.sizeOf sizeof(int )
<operator>.assignment _1_generate_next = 10
<operator>.cast (unsigned long )(i + 1)
<operator>.sizeOf sizeof(int )
<operator>.assignment _1_generate_next = 0
<operator>.assignment _1_generate_next = 1
<operator>.addition *(ans + (i___0 - 1)) + (j - 1)
<operator>.addition *(ans + (i___0 - 1)) + j
<operator>.addition i + 1
<operator>.addition ans + 0
<operator>.addition ans + i___0
<operator>.addition ans + i___0
<operator>.subtraction j - 1
<operator>.addition ans + i___0
<operator>.addition ans + (i___0 - 1)
<operator>.addition ans + (i___0 - 1)
<operator>.subtraction i___0 - 1
<operator>.subtraction i___0 - 1
>>>PDG&101 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->13 0->15 0->16 0->17 0->18 0->19 0->20 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->56 0->58 0->59 0->60 0->62 0->63 0->64 0->66 0->67 0->68 0->69 0->70 0->71 0->72 0->73 0->74 0->75 0->76 0->77 0->78 0->79 0->80 0->81 0->82 0->84 0->85 0->87 0->88 0->90 0->91 0->92 0->93 0->94 0->95 0->96 0->97 0->98 0->99 0->100 2->1 2->11 2->46 2->49 3->1 4->1 7->1 7->1 11->1 11->1 12->1 12->1 12->13 12->56 13->1 13->1 13->1 13->54 13->72 13->92 13->93 13->94 13->96 13->97 13->98 14->1 14->1 14->15 14->58 15->1 15->1 15->1 15->70 16->1 16->1 16->20 16->23 16->46 16->60 16->70 16->71 16->72 16->85 16->91 20->1 20->1 21->1 21->1 21->22 21->62 22->1 22->1 22->1 23->1 23->1 23->20 23->46 23->60 23->70 23->71 23->72 23->85 23->91 26->1 26->1 27->1 27->1 27->41 27->49 27->51 27->80 27->93 27->94 27->96 27->99 31->1 31->1 32->1 32->1 32->51 32->79 32->95 36->1 36->1 36->1 37->1 37->1 37->51 37->79 37->95 40->1 40->1 41->1 41->1 41->49 41->51 41->80 41->93 41->94 41->96 41->99 44->1 45->1 45->1 46->1 46->1 46->1 46->11 46->20 46->23 46->49 46->60 46->68 46->70 46->71 46->72 46->84 46->85 46->91 47->1 47->1 48->1 48->1 49->1 49->1 49->1 49->11 49->41 49->46 49->51 49->74 49->80 49->87 49->93 49->94 49->96 49->99 50->1 50->1 51->1 51->1 51->1 51->41 51->49 51->77 51->79 51->80 51->88 51->93 51->94 51->95 51->96 51->99 52->1 52->1 53->1 53->1 54->44 55->1 55->12 56->1 57->1 57->14 58->1 61->1 61->21 62->1 65->1 65->1 66->55 67->1 67->57 68->1 68->1 70->1 71->1 71->61 72->1 73->1 74->1 74->1 76->1 77->1 77->1 79->1 80->1 82->1 83->1 84->1 84->1 85->1 86->1 87->1 87->1 88->1 88->1 89->1 90->1 92->1 93->1 93->1 95->37 95->89 95->89 95->90 96->1 98->1 98->1 99->97 99->97 99->100 100->1 100->41 100->49 100->51 100->80 100->93 100->94 100->96 100->98 100->98 100->99
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern int ( /* missing proto */ malloc ) ( ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; int * * generate ( int numRows , int * returnSize , int * * returnColumnSizes ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int * * generate ( int numRows , int * returnSize , int * * returnColumnSizes ) { int * * ans ; int tmp ; int tmp___0 ; int i ; int tmp___1 ; int i___0 ; int j ; unsigned long _1_generate_next ; { { _1_generate_next = 15 ; } while ( 1 ) { switch ( _1_generate_next ) { case 15 : * returnSize = numRows ; tmp = malloc ( ( unsigned long ) numRows * sizeof ( int * ) ) ; ans = ( int * * ) tmp ; tmp___0 = malloc ( ( unsigned long ) numRows * sizeof ( int ) ) ; * returnColumnSizes = ( int * ) tmp___0 ; i = 0 ; { _1_generate_next = 13 ; } break ; case 13 : ; if ( i < numRows ) { { _1_generate_next = 11 ; } } else { { _1_generate_next = 10 ; } } break ; case 11 : * ( * returnColumnSizes + i ) = i + 1 ; tmp___1 = malloc ( ( unsigned long ) ( i + 1 ) * sizeof ( int ) ) ; * ( ans + i ) = ( int * ) tmp___1 ; i ++ ; { _1_generate_next = 13 ; } break ; case 10 : * ( * ( ans + 0 ) + 0 ) = 1 ; i___0 = 1 ; { _1_generate_next = 8 ; } break ; case 8 : ; if ( i___0 < numRows ) { { _1_generate_next = 6 ; } } else { { _1_generate_next = 0 ; } } break ; case 6 : * ( * ( ans + i___0 ) + 0 ) = 1 ; j = 1 ; { _1_generate_next = 4 ; } break ; case 4 : ; if ( j < i___0 ) { { _1_generate_next = 2 ; } } else { { _1_generate_next = 1 ; } } break ; case 2 : * ( * ( ans + i___0 ) + j ) = * ( * ( ans + ( i___0 - 1 ) ) + ( j - 1 ) ) + * ( * ( ans + ( i___0 - 1 ) ) + j ) ; j ++ ; { _1_generate_next = 4 ; } break ; case 1 : * ( * ( ans + i___0 ) + i___0 ) = 1 ; i___0 ++ ; { _1_generate_next = 8 ; } break ; case 0 : ; return ( ans ) ; break ; } } } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD cmpval
METHOD_RETURN int
PARAM void const   *a
PARAM void const   *b
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_cmpval_next = 0
LITERAL 1 while (1)
IDENTIFIER _1_cmpval_next switch(_1_cmpval_next)
LITERAL 0 <empty>
RETURN return (*((int *)a) - *((int *)b)); return (*((int *)a) - *((int *)b));
<operator>.subtraction *((int *)a) - *((int *)b)
<operator>.cast (int *)a
<operator>.cast (int *)b
>>>PDG&14 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->12 0->13 2->12 3->13 6->1 6->1 10->1 11->1 11->1 11->1 11->10 12->1 13->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; int cmpval ( void const * a , void const * b ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int cmpval ( void const * a , void const * b ) { unsigned long _1_cmpval_next ; { { _1_cmpval_next = 0 ; } while ( 1 ) { switch ( _1_cmpval_next ) { case 0 : ; return ( * ( ( int * ) a ) - * ( ( int * ) b ) ) ; break ; } } } } void megaInit ( void ) { { } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD singleNumber
METHOD_RETURN int
PARAM int *nums
PARAM int numsSize
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_singleNumber_next = 5
LITERAL 1 while (1)
IDENTIFIER _1_singleNumber_next switch(_1_singleNumber_next)
LITERAL 5 <empty>
<operator>.assignment result = 0
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 1 <empty>
<operators>.assignmentXor result ^= *(nums + i)
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (result); return (result);
<operator>.assignment _1_singleNumber_next = 3
<operator>.lessThan i < numsSize
<operator>.assignment _1_singleNumber_next = 3
IDENTIFIER result return (result);
BLOCK <empty> <empty>
<operator>.assignment _1_singleNumber_next = 1
BLOCK <empty> <empty>
<operator>.addition nums + i
<operator>.assignment _1_singleNumber_next = 0
>>>PDG&29 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 2->1 2->27 3->1 3->21 6->1 6->1 10->1 10->1 10->15 10->23 11->1 11->1 11->16 11->21 11->27 15->1 15->1 15->23 16->1 16->1 16->21 16->27 19->1 20->1 20->1 21->1 21->1 21->1 21->16 21->25 21->27 21->28 22->1 22->1 23->19 25->1 25->1 27->1 28->1 28->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; int singleNumber ( int * nums , int numsSize ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } int singleNumber ( int * nums , int numsSize ) { int i ; int result ; unsigned long _1_singleNumber_next ; { { _1_singleNumber_next = 5 ; } while ( 1 ) { switch ( _1_singleNumber_next ) { case 5 : result = 0 ; i = 0 ; { _1_singleNumber_next = 3 ; } break ; case 3 : ; if ( i < numsSize ) { { _1_singleNumber_next = 1 ; } } else { { _1_singleNumber_next = 0 ; } } break ; case 1 : result ^= * ( nums + i ) ; i ++ ; { _1_singleNumber_next = 3 ; } break ; case 0 : ; return ( result ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD duplicateZeros
METHOD_RETURN void
PARAM int *arr
PARAM int arrSize
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_duplicateZeros_next = 15
LITERAL 1 while (1)
IDENTIFIER _1_duplicateZeros_next switch(_1_duplicateZeros_next)
LITERAL 15 <empty>
<operator>.assignment start = 0
<operator>.assignment tmp___0 = malloc((unsigned long )arrSize * sizeof(int ))
<operator>.assignment tmp = (int *)tmp___0
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 13 <empty>
LITERAL 11 <empty>
<operator>.assignment *(tmp + i) = *(arr + i)
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 10 <empty>
<operator>.assignment i = 0
<operator>.assignment start = 0
BLOCK <empty> <empty>
LITERAL 8 <empty>
LITERAL 6 <empty>
<operator>.assignment *(arr + start) = *(tmp + i)
BLOCK <empty> <empty>
LITERAL 5 <empty>
LITERAL 4 <empty>
<operator>.postIncrement start ++
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 2 <empty>
<operator>.assignment *(arr + start) = 0
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operator>.postIncrement i ++
<operator>.postIncrement start ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return; return;
<operator>.assignment _1_duplicateZeros_next = 13
<operator>.lessThan i < arrSize
<operator>.assignment _1_duplicateZeros_next = 13
<operator>.assignment _1_duplicateZeros_next = 8
<operator>.lessThan start < arrSize
<operator>.assignment _1_duplicateZeros_next = 5
<operator>.equals *(tmp + i) == 0
<operator>.assignment _1_duplicateZeros_next = 3
<operator>.lessThan start < arrSize
<operator>.assignment _1_duplicateZeros_next = 1
<operator>.assignment _1_duplicateZeros_next = 8
malloc malloc((unsigned long )arrSize * sizeof(int ))
<operator>.cast (int *)tmp___0
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.multiplication (unsigned long )arrSize * sizeof(int )
<operator>.assignment _1_duplicateZeros_next = 11
BLOCK <empty> <empty>
<operator>.addition tmp + i
<operator>.addition arr + i
<operator>.assignment _1_duplicateZeros_next = 6
BLOCK <empty> <empty>
<operator>.addition arr + start
<operator>.addition tmp + i
<operator>.assignment _1_duplicateZeros_next = 4
BLOCK <empty> <empty>
<operator>.assignment _1_duplicateZeros_next = 2
BLOCK <empty> <empty>
<operator>.addition arr + start
<operator>.cast (unsigned long )arrSize
<operator>.sizeOf sizeof(int )
<operator>.assignment _1_duplicateZeros_next = 10
<operator>.assignment _1_duplicateZeros_next = 0
<operator>.addition tmp + i
<operator>.assignment _1_duplicateZeros_next = 1
<operator>.assignment _1_duplicateZeros_next = 1
>>>PDG&80 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->12 0->13 0->14 0->15 0->16 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->54 0->55 0->56 0->57 0->58 0->59 0->60 0->61 0->62 0->63 0->64 0->65 0->66 0->67 0->68 0->69 0->70 0->71 0->72 0->73 0->75 0->76 0->77 0->78 0->79 2->1 2->63 2->66 2->72 3->1 3->43 3->46 3->50 3->59 3->73 6->1 6->1 10->1 10->1 10->30 10->38 10->46 10->50 10->66 10->72 11->1 11->1 11->12 11->54 12->1 12->1 12->1 12->62 12->67 12->77 13->1 13->1 13->18 13->37 13->43 13->62 13->63 13->67 13->77 17->1 17->1 17->1 18->1 18->1 18->37 18->43 18->62 18->63 18->67 18->77 21->1 21->1 21->18 21->37 21->43 21->62 21->63 21->67 21->77 22->1 22->1 22->30 22->38 22->46 22->50 22->66 22->72 26->1 26->1 26->1 30->1 30->1 30->38 30->46 30->50 30->66 30->72 34->1 34->1 37->1 37->1 37->18 37->43 37->62 37->63 37->67 37->77 38->1 38->1 38->30 38->46 38->50 38->66 38->72 41->1 42->1 42->1 43->1 43->1 43->1 43->18 43->37 43->46 43->50 43->59 43->60 43->62 43->63 43->67 43->73 43->75 43->77 44->1 44->1 45->1 45->1 46->1 46->1 46->1 46->30 46->38 46->43 46->50 46->50 46->59 46->64 46->66 46->72 46->73 46->76 47->1 47->1 48->1 48->1 48->68 48->78 49->1 49->1 50->1 50->1 50->1 50->30 50->38 50->43 50->46 50->46 50->59 50->66 50->70 50->72 50->73 50->79 51->1 51->1 52->1 52->1 53->1 53->11 54->1 59->1 59->53 60->1 60->1 62->1 63->1 64->1 64->1 66->1 66->1 67->1 67->1 68->1 68->1 70->1 70->1 72->1 72->1 73->1 74->1 75->1 75->1 76->1 76->1 77->1 77->1 78->1 78->1 79->1 79->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; void duplicateZeros ( int * arr , int arrSize ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern int ( /* missing proto */ malloc ) ( ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } void duplicateZeros ( int * arr , int arrSize ) { int i ; int start ; int * tmp ; int tmp___0 ; unsigned long _1_duplicateZeros_next ; { { _1_duplicateZeros_next = 15 ; } while ( 1 ) { switch ( _1_duplicateZeros_next ) { case 15 : start = 0 ; tmp___0 = malloc ( ( unsigned long ) arrSize * sizeof ( int ) ) ; tmp = ( int * ) tmp___0 ; i = 0 ; { _1_duplicateZeros_next = 13 ; } break ; case 13 : ; if ( i < arrSize ) { { _1_duplicateZeros_next = 11 ; } } else { { _1_duplicateZeros_next = 10 ; } } break ; case 11 : * ( tmp + i ) = * ( arr + i ) ; i ++ ; { _1_duplicateZeros_next = 13 ; } break ; case 10 : i = 0 ; start = 0 ; { _1_duplicateZeros_next = 8 ; } break ; case 8 : ; if ( start < arrSize ) { { _1_duplicateZeros_next = 6 ; } } else { { _1_duplicateZeros_next = 0 ; } } break ; case 6 : * ( arr + start ) = * ( tmp + i ) ; { _1_duplicateZeros_next = 5 ; } break ; case 5 : ; if ( * ( tmp + i ) == 0 ) { { _1_duplicateZeros_next = 4 ; } } else { { _1_duplicateZeros_next = 1 ; } } break ; case 4 : start ++ ; { _1_duplicateZeros_next = 3 ; } break ; case 3 : ; if ( start < arrSize ) { { _1_duplicateZeros_next = 2 ; } } else { { _1_duplicateZeros_next = 1 ; } } break ; case 2 : * ( arr + start ) = 0 ; { _1_duplicateZeros_next = 1 ; } break ; case 1 : i ++ ; start ++ ; { _1_duplicateZeros_next = 8 ; } break ; case 0 : ; return ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD DJBHash
METHOD_RETURN unsigned int
PARAM char *str
PARAM unsigned int len
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_DJBHash_next = 5
LITERAL 1 while (1)
IDENTIFIER _1_DJBHash_next switch(_1_DJBHash_next)
LITERAL 5 <empty>
<operator>.assignment hash = 5381U
<operator>.assignment i = 0U
<operator>.assignment i = 0U
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 1 <empty>
<operator>.assignment hash = ((hash << 5) + hash) + (unsigned int )*str
<operator>.postIncrement str ++
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (hash); return (hash);
<operator>.assignment _1_DJBHash_next = 3
<operator>.lessThan i < len
<operator>.assignment _1_DJBHash_next = 3
IDENTIFIER hash return (hash);
BLOCK <empty> <empty>
<operator>.addition ((hash << 5) + hash) + (unsigned int )*str
<operator>.assignment _1_DJBHash_next = 1
BLOCK <empty> <empty>
<operator>.addition (hash << 5) + hash
<operator>.cast (unsigned int )*str
<operator>.assignment _1_DJBHash_next = 0
<operator>.shiftLeft hash << 5
>>>PDG&34 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->32 0->33 2->1 2->17 3->1 3->23 6->1 6->1 10->1 10->1 10->25 10->33 12->1 12->1 12->18 12->23 16->1 16->1 16->1 16->25 16->33 17->1 17->1 18->1 18->1 18->23 21->1 22->1 22->1 23->1 23->1 23->1 23->18 23->28 23->32 24->1 24->1 25->21 27->1 27->1 28->1 28->1 30->1 31->1 32->1 32->1 33->16 33->16 33->27 33->27 33->30 33->30
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; unsigned int DJBHash ( char * str , unsigned int len ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } unsigned int DJBHash ( char * str , unsigned int len ) { unsigned int hash ; unsigned int i ; unsigned long _1_DJBHash_next ; { { _1_DJBHash_next = 5 ; } while ( 1 ) { switch ( _1_DJBHash_next ) { case 5 : hash = 5381U ; i = 0U ; i = 0U ; { _1_DJBHash_next = 3 ; } break ; case 3 : ; if ( i < len ) { { _1_DJBHash_next = 1 ; } } else { { _1_DJBHash_next = 0 ; } } break ; case 1 : hash = ( ( hash << 5 ) + hash ) + ( unsigned int ) * str ; str ++ ; i ++ ; { _1_DJBHash_next = 3 ; } break ; case 0 : ; return ( hash ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 11
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 11 <empty>
<operator>.assignment sum = 0
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 9 <empty>
LITERAL 7 <empty>
<operator>.assignmentPlus sum += i
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 6 <empty>
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
<operator>.assignmentPlus sum += i
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("Sum is: %d\n", sum)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 9
<operator>.lessThan i < 127
<operator>.assignment _1_main_next = 9
<operator>.assignment _1_main_next = 4
<operator>.lessThan i < (int )*(*(argv + 1) + 0)
<operator>.assignment _1_main_next = 4
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 7
BLOCK <empty> <empty>
<operator>.cast (int )*(*(argv + 1) + 0)
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 6
<operator>.assignment _1_main_next = 1
<operator>.addition *(argv + 1) + 0
<operator>.addition argv + 1
>>>PDG&56 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->50 0->51 0->52 0->53 0->54 0->55 2->7 3->8 3->55 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->21 16->29 16->33 17->1 17->1 17->21 17->22 17->29 17->30 17->38 17->41 21->1 21->1 21->29 21->33 22->1 22->1 22->21 22->29 22->30 22->38 22->41 25->1 25->1 25->21 25->22 25->29 25->30 25->38 25->41 29->1 29->1 29->21 29->33 30->1 30->1 30->21 30->22 30->29 30->38 30->41 33->1 33->1 33->21 33->29 36->1 37->1 37->1 38->1 38->1 38->21 38->22 38->29 38->30 38->41 38->47 38->52 39->1 39->1 40->1 40->1 41->1 41->1 41->1 41->21 41->22 41->29 41->30 41->38 41->50 41->53 42->1 42->1 43->1 43->1 44->36 47->1 47->1 49->1 50->1 50->1 52->1 52->1 53->1 53->1 54->1 55->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int argc , char * * argv , char * * _formal_envp ) { int i ; int sum ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 11 ; } while ( 1 ) { switch ( _1_main_next ) { case 11 : sum = 0 ; i = 0 ; { _1_main_next = 9 ; } break ; case 9 : ; if ( i < 127 ) { { _1_main_next = 7 ; } } else { { _1_main_next = 6 ; } } break ; case 7 : sum += i ; i ++ ; { _1_main_next = 9 ; } break ; case 6 : i = 0 ; { _1_main_next = 4 ; } break ; case 4 : ; if ( i < ( int ) * ( * ( argv + 1 ) + 0 ) ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : sum += i ; i ++ ; { _1_main_next = 4 ; } break ; case 1 : printf ( " \n " , sum ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 5
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 5 <empty>
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 3 <empty>
<operator>.assignment number = atoi(*(argv + 1))
BLOCK <empty> <empty>
LITERAL 2 <empty>
printf printf("Enter the value of n(n starts from 0 ): ")
scanf scanf("%d", & number)
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operator>.assignment tmp = fib(number)
printf printf("The nth term is : %d \n", tmp)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 4
<operator>.equals argc == 2
<operator>.assignment _1_main_next = 1
<operator>.assignment _1_main_next = 1
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
BLOCK <empty> <empty>
atoi atoi(*(argv + 1))
fib fib(number)
<operator>.assignment _1_main_next = 3
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 2
<operator>.addition argv + 1
>>>PDG&44 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->20 0->21 0->22 0->23 0->24 0->25 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->39 0->40 0->41 0->42 0->43 2->7 2->32 3->8 3->43 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 19->1 19->1 19->1 19->23 19->39 22->1 23->1 23->39 26->1 26->1 26->27 27->1 27->1 30->1 31->1 31->1 32->1 32->1 32->40 32->42 33->1 33->1 34->1 34->1 35->1 35->1 36->30 38->1 38->19 39->1 39->23 39->26 40->1 40->1 42->1 42->1 43->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int ( /* missing proto */ atoi ) ( ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; char * * _global_envp = ( char * * ) 0 ; void megaInit ( void ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int ( /* missing proto */ fib ) ( ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ scanf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int argc , char * * argv , char * * _formal_envp ) { int number ; int tmp ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 5 ; } while ( 1 ) { switch ( _1_main_next ) { case 5 : ; { _1_main_next = 4 ; } break ; case 4 : ; if ( argc == 2 ) { { _1_main_next = 3 ; } } else { { _1_main_next = 2 ; } } break ; case 3 : number = atoi ( * ( argv + 1 ) ) ; { _1_main_next = 1 ; } break ; case 2 : printf ( " " ) ; scanf ( " " , & number ) ; { _1_main_next = 1 ; } break ; case 1 : tmp = fib ( number ) ; printf ( " \n " , tmp ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD init
METHOD_RETURN void
PARAM char *src
PARAM char *dest
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_init_next = 6
LITERAL 1 while (1)
IDENTIFIER _1_init_next switch(_1_init_next)
LITERAL 6 <empty>
<operator>.assignment tmp = strlen(src)
<operator>.assignment i = tmp - 1
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
<operator>.assignment *(dest + i) = *(src + i)
<operator>.postDecrement i --
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operator>.assignment tmp___0 = strlen(src)
<operator>.assignment *(dest + tmp___0) = (char )'\000'
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return; return;
<operator>.assignment _1_init_next = 4
<operator>.greaterEqualsThan i >= 0
<operator>.assignment _1_init_next = 4
<operator>.assignment _1_init_next = 0
strlen strlen(src)
<operator>.subtraction tmp - 1
BLOCK <empty> <empty>
strlen strlen(src)
<operator>.cast (char )'\000'
<operator>.assignment _1_init_next = 2
BLOCK <empty> <empty>
<operator>.addition dest + i
<operator>.addition src + i
<operator>.addition dest + tmp___0
<operator>.assignment _1_init_next = 1
>>>PDG&39 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->12 0->13 0->14 0->16 0->17 0->18 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 2->1 2->28 2->31 2->36 3->1 3->35 3->37 6->1 6->1 10->1 10->1 10->29 11->1 11->1 11->1 11->16 11->25 11->35 11->36 15->1 15->1 15->1 16->1 16->1 16->25 16->35 16->36 19->1 19->1 19->37 20->1 20->1 20->1 23->1 24->1 24->1 25->1 25->1 25->16 25->33 25->35 25->36 25->38 26->1 26->1 27->1 27->1 28->1 28->10 28->31 28->36 29->1 29->11 29->11 31->1 31->19 31->28 31->36 33->1 33->1 35->1 36->1 37->1 37->1 38->1 38->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern int ( /* missing proto */ strlen ) ( ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; void init ( char * src , char * dest ) ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } void init ( char * src , char * dest ) { int i ; int tmp ; int tmp___0 ; unsigned long _1_init_next ; { { _1_init_next = 6 ; } while ( 1 ) { switch ( _1_init_next ) { case 6 : tmp = strlen ( src ) ; i = tmp - 1 ; { _1_init_next = 4 ; } break ; case 4 : ; if ( i >= 0 ) { { _1_init_next = 2 ; } } else { { _1_init_next = 1 ; } } break ; case 2 : * ( dest + i ) = * ( src + i ) ; i -- ; { _1_init_next = 4 ; } break ; case 1 : tmp___0 = strlen ( src ) ; * ( dest + tmp___0 ) = ( char ) ' \000 ' ; { _1_init_next = 0 ; } break ; case 0 : ; return ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 35
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 35 <empty>
scanf scanf("%d", & t)
<operator>.assignment ti = 1
BLOCK <empty> <empty>
LITERAL 33 <empty>
LITERAL 31 <empty>
scanf scanf("%d", & n)
<operator>.assignment sum = 0
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 29 <empty>
LITERAL 27 <empty>
scanf scanf("%d", & s[i])
<operator>.assignmentPlus sum += s[i]
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 26 <empty>
<operator>.assignment maeflg = 0
<operator>.assignment pass = n
<operator>.assignment num = ((long double )2 * (long double )sum) / (long double )n
BLOCK <empty> <empty>
LITERAL 24 <empty>
<operator>.assignment k = 0
<operator>.assignment flg = k
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 22 <empty>
LITERAL 20 <empty>
LITERAL 19 <empty>
<operator>.postIncrement flg ++
<operator>.assignmentPlus k += s[i]
BLOCK <empty> <empty>
LITERAL 18 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 17 <empty>
LITERAL 15 <empty>
<operator>.assignment maeflg = flg
<operator>.assignment pass = n - flg
<operator>.assignment num = (long double )(2 * sum - k) / (long double )pass
BLOCK <empty> <empty>
LITERAL 14 <empty>
<operator>.assignment tmp = (long double )(100.0 / (double )sum)
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 12 <empty>
LITERAL 10 <empty>
LITERAL 9 <empty>
<operator>.assignment ans[i] = tmp * (num - (long double )s[i])
BLOCK <empty> <empty>
LITERAL 8 <empty>
<operator>.assignment ans[i] = (long double )0
BLOCK <empty> <empty>
LITERAL 7 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 6 <empty>
printf printf("Case #%d:", ti)
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
<operator>.assignment tmp___0 = MAX(ans[i], 0)
printf printf(" %Lf", tmp___0)
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
putchar putchar('\n')
<operator>.postIncrement ti ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 33
<operator>.lessEqualsThan ti <= t
<operator>.assignment _1_main_next = 29
<operator>.lessThan i < n
<operator>.assignment _1_main_next = 29
<operator>.assignment _1_main_next = 24
<operator>.assignment _1_main_next = 22
<operator>.lessThan i < n
<operator>.greaterEqualsThan (long double )s[i] >= num
<operator>.assignment _1_main_next = 18
<operator>.assignment _1_main_next = 22
<operator>.equals flg == maeflg
<operator>.assignment _1_main_next = 24
<operator>.assignment _1_main_next = 12
<operator>.lessThan i < n
<operator>.lessThan (long double )s[i] < num
<operator>.assignment _1_main_next = 7
<operator>.assignment _1_main_next = 7
<operator>.assignment _1_main_next = 12
<operator>.assignment _1_main_next = 4
<operator>.lessThan i < n
<operator>.assignment _1_main_next = 4
<operator>.assignment _1_main_next = 33
LITERAL 0 return (0);
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.division ((long double )2 * (long double )sum) / (long double )n
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.subtraction n - flg
<operator>.division (long double )(2 * sum - k) / (long double )pass
<operator>.cast (long double )(100.0 / (double )sum)
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.multiplication tmp * (num - (long double )s[i])
<operator>.cast (long double )0
BLOCK <empty> <empty>
MAX MAX(ans[i], 0)
<operator>.assignment _1_main_next = 31
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 27
BLOCK <empty> <empty>
<operator>.multiplication (long double )2 * (long double )sum
<operator>.cast (long double )n
<operator>.assignment _1_main_next = 20
BLOCK <empty> <empty>
<operator>.cast (long double )s[i]
<operator>.assignment _1_main_next = 19
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 14
BLOCK <empty> <empty>
<operator>.cast (long double )(2 * sum - k)
<operator>.cast (long double )pass
<operator>.division 100.0 / (double )sum
<operator>.assignment _1_main_next = 10
BLOCK <empty> <empty>
<operator>.cast (long double )s[i]
<operator>.assignment _1_main_next = 9
BLOCK <empty> <empty>
<operator>.subtraction num - (long double )s[i]
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 0
<operator>.assignment _1_main_next = 26
<operator>.cast (long double )2
<operator>.cast (long double )sum
<operator>.assignment _1_main_next = 17
<operator>.assignment _1_main_next = 18
<operator>.assignment _1_main_next = 15
<operator>.subtraction 2 * sum - k
<operator>.cast (double )sum
<operator>.assignment _1_main_next = 6
<operator>.assignment _1_main_next = 8
<operator>.cast (long double )s[i]
<operator>.assignment _1_main_next = 1
<operator>.multiplication 2 * sum
>>>PDG&164 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->28 0->29 0->30 0->31 0->32 0->33 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->55 0->56 0->58 0->59 0->60 0->61 0->62 0->64 0->65 0->66 0->67 0->68 0->69 0->70 0->71 0->72 0->73 0->74 0->75 0->76 0->78 0->79 0->80 0->81 0->82 0->83 0->84 0->85 0->86 0->87 0->88 0->89 0->90 0->91 0->92 0->93 0->94 0->95 0->96 0->97 0->98 0->99 0->100 0->101 0->102 0->103 0->104 0->105 0->106 0->107 0->108 0->109 0->110 0->111 0->112 0->113 0->114 0->115 0->116 0->117 0->118 0->120 0->121 0->122 0->123 0->124 0->125 0->126 0->127 0->128 0->129 0->130 0->131 0->132 0->133 0->135 0->136 0->137 0->138 0->140 0->141 0->142 0->143 0->145 0->146 0->147 0->148 0->149 0->150 0->151 0->152 0->153 0->154 0->155 0->156 0->157 0->158 0->159 0->160 0->162 0->163 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->88 17->1 17->1 17->72 17->83 17->88 21->1 21->33 21->90 21->94 21->101 21->107 21->113 21->117 21->131 22->1 22->1 22->28 22->130 22->141 22->153 22->158 22->163 23->1 23->1 23->29 23->48 23->69 23->79 23->90 23->94 23->101 23->107 27->1 27->28 27->45 27->95 27->102 27->134 27->144 27->147 27->161 28->1 28->1 28->1 28->130 28->141 28->153 28->158 28->163 29->1 29->1 29->48 29->69 29->79 29->90 29->94 29->101 29->107 32->1 32->1 32->98 33->1 33->1 34->1 34->1 34->1 34->95 34->102 34->147 37->1 37->38 37->45 37->157 38->1 38->1 38->1 38->44 38->52 38->98 38->117 39->1 39->1 39->29 39->48 39->69 39->79 39->90 39->94 39->101 39->107 44->1 44->1 44->52 44->98 44->117 45->1 45->1 45->1 45->157 48->1 48->1 48->29 48->69 48->79 48->90 48->94 48->101 48->107 52->1 52->1 52->98 53->1 53->1 53->118 53->140 54->1 54->1 54->1 54->95 54->102 54->147 57->1 57->1 57->1 57->122 58->1 58->1 58->29 58->48 58->69 58->79 58->90 58->94 58->101 58->107 63->1 63->1 63->1 63->125 66->1 66->1 66->1 66->125 69->1 69->1 69->29 69->48 69->79 69->90 69->94 69->101 69->107 72->1 72->1 72->83 72->88 73->1 73->1 73->29 73->48 73->69 73->79 73->90 73->94 73->101 73->107 77->1 77->1 77->78 78->1 78->1 79->1 79->1 79->29 79->48 79->69 79->90 79->94 79->101 79->107 82->1 83->1 83->1 83->72 83->88 86->1 87->1 87->1 88->1 88->1 88->1 88->16 88->72 88->83 88->126 88->150 89->1 89->1 90->1 90->1 90->1 90->21 90->29 90->33 90->48 90->69 90->79 90->94 90->94 90->101 90->101 90->107 90->107 90->117 90->128 90->151 91->1 91->1 92->1 92->1 93->1 93->1 94->1 94->1 94->1 94->21 94->29 94->33 94->48 94->69 94->79 94->90 94->90 94->101 94->101 94->107 94->107 94->117 94->132 94->154 95->1 95->1 95->1 95->102 95->135 95->147 95->155 96->1 96->1 97->1 97->1 98->1 98->1 98->1 98->44 98->52 98->117 98->137 98->156 99->1 99->1 100->1 100->1 101->1 101->1 101->1 101->21 101->29 101->33 101->48 101->69 101->79 101->90 101->90 101->94 101->94 101->107 101->107 101->117 101->142 101->159 102->1 102->1 102->1 102->95 102->145 102->147 102->160 103->1 103->1 104->1 104->1 105->1 105->1 106->1 106->1 107->1 107->1 107->1 107->21 107->29 107->33 107->48 107->69 107->79 107->90 107->90 107->94 107->94 107->101 107->101 107->117 107->148 107->162 108->1 108->1 109->1 109->1 110->86 113->1 113->1 113->34 113->34 117->1 117->1 117->21 117->33 117->44 117->52 117->53 117->53 117->90 117->94 117->98 117->101 117->107 118->1 118->1 118->54 118->54 119->1 122->1 122->1 122->63 122->63 125->1 125->77 125->77 126->1 126->1 128->1 128->1 130->1 130->1 130->113 130->113 131->1 132->1 132->1 134->1 135->1 135->1 137->1 137->1 139->1 140->1 141->1 141->57 141->57 141->119 141->119 142->1 142->1 144->1 145->1 145->1 147->1 147->1 147->95 147->102 147->122 147->122 148->1 148->1 150->1 150->1 151->1 151->1 153->1 154->1 154->1 155->1 155->1 156->1 156->1 157->1 157->1 157->45 157->118 157->118 157->139 157->139 158->1 159->1 159->1 160->1 160->1 161->1 162->1 162->1 163->1 163->28 163->130 163->141 163->153 163->157 163->157 163->158
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int ( /* missing proto */ putchar ) ( ) ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int unlink ( char const * filename ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern double ceil ( double x ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; char * * _global_envp = ( char * * ) 0 ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int ( /* missing proto */ scanf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern int ( /* missing proto */ MAX ) ( ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { int t ; int ti ; int i ; int k ; int n ; int s [ 200 ] ; int sum ; int pass ; int flg ; int maeflg ; long double ans [ 200 ] ; long double tmp ; long double num ; int tmp___0 ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 35 ; } while ( 1 ) { switch ( _1_main_next ) { case 35 : scanf ( " " , & t ) ; ti = 1 ; { _1_main_next = 33 ; } break ; case 33 : ; if ( ti <= t ) { { _1_main_next = 31 ; } } else { { _1_main_next = 0 ; } } break ; case 31 : scanf ( " " , & n ) ; sum = 0 ; i = 0 ; { _1_main_next = 29 ; } break ; case 29 : ; if ( i < n ) { { _1_main_next = 27 ; } } else { { _1_main_next = 26 ; } } break ; case 27 : scanf ( " " , & s [ i ] ) ; sum += s [ i ] ; i ++ ; { _1_main_next = 29 ; } break ; case 26 : maeflg = 0 ; pass = n ; num = ( ( long double ) 2 * ( long double ) sum ) / ( long double ) n ; { _1_main_next = 24 ; } break ; case 24 : k = 0 ; flg = k ; i = 0 ; { _1_main_next = 22 ; } break ; case 22 : ; if ( i < n ) { { _1_main_next = 20 ; } } else { { _1_main_next = 17 ; } } break ; case 20 : ; if ( ( long double ) s [ i ] >= num ) { { _1_main_next = 19 ; } } else { { _1_main_next = 18 ; } } break ; case 19 : flg ++ ; k += s [ i ] ; { _1_main_next = 18 ; } break ; case 18 : i ++ ; { _1_main_next = 22 ; } break ; case 17 : ; if ( flg == maeflg ) { { _1_main_next = 14 ; } } else { { _1_main_next = 15 ; } } break ; case 15 : maeflg = flg ; pass = n - flg ; num = ( long double ) ( 2 * sum - k ) / ( long double ) pass ; { _1_main_next = 24 ; } break ; case 14 : tmp = ( long double ) ( 100.0 / ( double ) sum ) ; i = 0 ; { _1_main_next = 12 ; } break ; case 12 : ; if ( i < n ) { { _1_main_next = 10 ; } } else { { _1_main_next = 6 ; } } break ; case 10 : ; if ( ( long double ) s [ i ] < num ) { { _1_main_next = 9 ; } } else { { _1_main_next = 8 ; } } break ; case 9 : ans [ i ] = tmp * ( num - ( long double ) s [ i ] ) ; { _1_main_next = 7 ; } break ; case 8 : ans [ i ] = ( long double ) 0 ; { _1_main_next = 7 ; } break ; case 7 : i ++ ; { _1_main_next = 12 ; } break ; case 6 : printf ( " " , ti ) ; i = 0 ; { _1_main_next = 4 ; } break ; case 4 : ; if ( i < n ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : tmp___0 = MAX ( ans [ i ] , 0 ) ; printf ( " " , tmp___0 ) ; i ++ ; { _1_main_next = 4 ; } break ; case 1 : putchar ( ' \n ' ) ; ti ++ ; { _1_main_next = 33 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD test_djb2
METHOD_RETURN void
PARAM void
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_test_djb2_next = 1
LITERAL 1 while (1)
IDENTIFIER _1_test_djb2_next switch(_1_test_djb2_next)
LITERAL 1 <empty>
<operator>.assignment tmp = djb2("Hello World")
assert assert((unsigned long )tmp == 0xbfe6210387781081UL)
<operator>.assignment tmp___0 = djb2("Hello World!")
assert assert((unsigned long )tmp___0 == 0xbcaa4174767a20c2UL)
<operator>.assignment tmp___1 = djb2("Hello world")
assert assert((unsigned long )tmp___1 == 0xbfe6210389bb20a1UL)
<operator>.assignment tmp___2 = djb2("Hello world!")
assert assert((unsigned long )tmp___2 == 0xbcaa4174c11f34e2UL)
printf printf("Tests passed\n")
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return; return;
<operator>.assignment _1_test_djb2_next = 0
djb2 djb2("Hello World")
<operator>.equals (unsigned long )tmp == 0xbfe6210387781081UL
djb2 djb2("Hello World!")
<operator>.equals (unsigned long )tmp___0 == 0xbcaa4174767a20c2UL
djb2 djb2("Hello world")
<operator>.equals (unsigned long )tmp___1 == 0xbfe6210389bb20a1UL
djb2 djb2("Hello world!")
<operator>.equals (unsigned long )tmp___2 == 0xbcaa4174c11f34e2UL
<operator>.cast (unsigned long )tmp
<operator>.cast (unsigned long )tmp___0
<operator>.cast (unsigned long )tmp___1
<operator>.cast (unsigned long )tmp___2
>>>PDG&34 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 2->1 5->1 5->1 9->1 9->1 9->23 9->30 10->1 10->1 11->1 11->1 11->25 11->31 12->1 12->1 13->1 13->1 13->27 13->32 14->1 14->1 15->1 15->1 15->29 15->33 16->1 16->1 17->1 20->1 21->1 21->1 22->9 23->1 23->10 23->10 24->11 25->1 25->12 25->12 26->13 27->1 27->14 27->14 28->15 29->1 29->16 29->16 30->1 31->1 32->1 33->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int ( /* missing proto */ assert ) ( ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int ( /* missing proto */ djb2 ) ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; void test_djb2 ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void test_djb2 ( void ) { int tmp ; int tmp___0 ; int tmp___1 ; int tmp___2 ; unsigned long _1_test_djb2_next ; { { _1_test_djb2_next = 1 ; } while ( 1 ) { switch ( _1_test_djb2_next ) { case 1 : tmp = djb2 ( " " ) ; assert ( ( unsigned long ) tmp == 0xbfe6210387781081UL ) ; tmp___0 = djb2 ( " " ) ; assert ( ( unsigned long ) tmp___0 == 0xbcaa4174767a20c2UL ) ; tmp___1 = djb2 ( " " ) ; assert ( ( unsigned long ) tmp___1 == 0xbfe6210389bb20a1UL ) ; tmp___2 = djb2 ( " " ) ; assert ( ( unsigned long ) tmp___2 == 0xbcaa4174c11f34e2UL ) ; printf ( " \n " ) ; { _1_test_djb2_next = 0 ; } break ; case 0 : ; return ; break ; } } } } void megaInit ( void ) { { } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD binaryAddition
METHOD_RETURN int
PARAM int binary1
PARAM int binary2
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_binaryAddition_next = 13
LITERAL 1 while (1)
IDENTIFIER _1_binaryAddition_next switch(_1_binaryAddition_next)
LITERAL 13 <empty>
<operator>.assignment i = 0
<operator>.assignment remainder = 0
<operator>.assignment binarySum = 0
BLOCK <empty> <empty>
LITERAL 11 <empty>
LITERAL 10 <empty>
LITERAL 8 <empty>
<operator>.assignment tmp = i
<operator>.postIncrement i ++
<operator>.assignment sum[tmp] = ((binary1 % 10 + binary2 % 10) + remainder) % 2
<operator>.assignment remainder = ((binary1 % 10 + binary2 % 10) + remainder) / 2
<operator>.assignmentDivision binary1 /= 10
<operator>.assignmentDivision binary2 /= 10
BLOCK <empty> <empty>
LITERAL 7 <empty>
LITERAL 6 <empty>
<operator>.assignment tmp___0 = i
<operator>.postIncrement i ++
<operator>.assignment sum[tmp___0] = remainder
BLOCK <empty> <empty>
LITERAL 5 <empty>
<operator>.postDecrement i --
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 1 <empty>
<operator>.assignment tmp___1 = i
<operator>.postDecrement i --
<operator>.assignment binarySum = binarySum * 10 + sum[tmp___1]
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (binarySum); return (binarySum);
<operator>.assignment _1_binaryAddition_next = 11
<operator>.notEquals binary1 != 0
<operator>.notEquals binary2 != 0
<operator>.assignment _1_binaryAddition_next = 11
<operator>.notEquals remainder != 0
<operator>.assignment _1_binaryAddition_next = 5
<operator>.assignment _1_binaryAddition_next = 3
<operator>.greaterEqualsThan i >= 0
<operator>.assignment _1_binaryAddition_next = 3
IDENTIFIER binarySum return (binarySum);
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.modulo ((binary1 % 10 + binary2 % 10) + remainder) % 2
<operator>.division ((binary1 % 10 + binary2 % 10) + remainder) / 2
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.addition binarySum * 10 + sum[tmp___1]
<operator>.assignment _1_binaryAddition_next = 8
BLOCK <empty> <empty>
<operator>.assignment _1_binaryAddition_next = 8
BLOCK <empty> <empty>
<operator>.addition (binary1 % 10 + binary2 % 10) + remainder
<operator>.addition (binary1 % 10 + binary2 % 10) + remainder
<operator>.assignment _1_binaryAddition_next = 6
BLOCK <empty> <empty>
<operator>.assignment _1_binaryAddition_next = 1
BLOCK <empty> <empty>
<operator>.multiplication binarySum * 10
<operator>.assignment _1_binaryAddition_next = 10
<operator>.assignment _1_binaryAddition_next = 7
<operator>.addition binary1 % 10 + binary2 % 10
<operator>.addition binary1 % 10 + binary2 % 10
<operator>.assignment _1_binaryAddition_next = 5
<operator>.assignment _1_binaryAddition_next = 0
<operator>.modulo binary1 % 10
<operator>.modulo binary2 % 10
<operator>.modulo binary1 % 10
<operator>.modulo binary2 % 10
>>>PDG&79 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->38 0->39 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->58 0->59 0->60 0->61 0->62 0->63 0->64 0->65 0->66 0->67 0->68 0->69 0->70 0->73 0->74 0->75 0->76 0->77 0->78 2->1 2->42 2->75 3->1 3->43 3->76 6->1 6->1 10->1 10->1 10->17 10->18 10->26 10->27 10->31 10->35 10->36 10->48 11->1 11->1 11->28 11->45 11->53 11->54 11->62 11->63 12->1 12->1 12->50 12->68 17->1 17->1 18->1 18->1 18->17 18->26 18->27 18->31 18->35 18->36 18->48 19->1 19->1 19->1 20->1 20->1 20->1 20->28 20->45 20->53 20->54 20->62 20->63 21->1 21->1 21->42 21->75 22->1 22->1 22->43 22->76 26->1 26->1 27->1 27->1 27->17 27->18 27->26 27->31 27->35 27->36 27->48 28->1 28->1 28->1 31->1 31->1 31->17 31->18 31->26 31->27 31->35 31->36 31->48 35->1 35->1 36->1 36->1 36->17 36->18 36->26 36->27 36->31 36->35 36->48 37->1 37->1 37->1 37->50 37->68 40->1 41->1 41->1 42->1 42->1 42->58 42->69 42->75 43->1 43->1 43->60 43->70 43->76 44->1 44->1 45->1 45->1 45->28 45->53 45->54 45->62 45->63 45->64 45->73 46->1 46->1 47->1 47->1 48->1 48->1 48->17 48->18 48->26 48->27 48->31 48->35 48->36 48->66 48->74 49->1 49->1 50->40 53->19 53->19 54->1 54->20 54->20 57->1 57->1 58->1 58->1 60->1 60->1 63->1 64->1 64->1 66->1 66->1 68->37 68->37 68->57 68->57 69->1 69->1 70->1 70->1 72->1 72->1 73->1 73->1 74->1 74->1 75->53 75->53 75->62 75->62 75->71 75->71 75->77 76->53 76->53 76->62 76->62 76->71 76->71 76->78 77->21 77->54 77->54 77->63 77->63 77->72 77->72 78->22 78->54 78->54 78->63 78->63 78->72 78->72
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; int binaryAddition ( int binary1 , int binary2 ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } int binaryAddition ( int binary1 , int binary2 ) { int i ; int remainder ; int sum [ 20 ] ; int binarySum ; int tmp ; int tmp___0 ; int tmp___1 ; unsigned long _1_binaryAddition_next ; { { _1_binaryAddition_next = 13 ; } while ( 1 ) { switch ( _1_binaryAddition_next ) { case 13 : i = 0 ; remainder = 0 ; binarySum = 0 ; { _1_binaryAddition_next = 11 ; } break ; case 11 : ; if ( binary1 != 0 ) { { _1_binaryAddition_next = 8 ; } } else { { _1_binaryAddition_next = 10 ; } } break ; case 10 : ; if ( binary2 != 0 ) { { _1_binaryAddition_next = 8 ; } } else { { _1_binaryAddition_next = 7 ; } } break ; case 8 : tmp = i ; i ++ ; sum [ tmp ] = ( ( binary1 % 10 + binary2 % 10 ) + remainder ) % 2 ; remainder = ( ( binary1 % 10 + binary2 % 10 ) + remainder ) / 2 ; binary1 /= 10 ; binary2 /= 10 ; { _1_binaryAddition_next = 11 ; } break ; case 7 : ; if ( remainder != 0 ) { { _1_binaryAddition_next = 6 ; } } else { { _1_binaryAddition_next = 5 ; } } break ; case 6 : tmp___0 = i ; i ++ ; sum [ tmp___0 ] = remainder ; { _1_binaryAddition_next = 5 ; } break ; case 5 : i -- ; { _1_binaryAddition_next = 3 ; } break ; case 3 : ; if ( i >= 0 ) { { _1_binaryAddition_next = 1 ; } } else { { _1_binaryAddition_next = 0 ; } } break ; case 1 : tmp___1 = i ; i -- ; binarySum = binarySum * 10 + sum [ tmp___1 ] ; { _1_binaryAddition_next = 3 ; } break ; case 0 : ; return ( binarySum ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 4
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 4 <empty>
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 2 <empty>
RETURN return (1); return (1);
LITERAL 1 <empty>
<operator>.assignment num = (int )*(*(argv + 1) + 0)
<operator>.assignment f = fact(num)
printf printf("\nFactorial of %d is: %d\n", num, f)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 3
<operator>.lessThan argc < 2
LITERAL 1 return (1);
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
BLOCK <empty> <empty>
<operator>.cast (int )*(*(argv + 1) + 0)
fact fact(num)
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
<operator>.addition *(argv + 1) + 0
<operator>.addition argv + 1
>>>PDG&40 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->34 0->35 0->36 0->37 0->38 0->39 2->7 2->28 3->8 3->39 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 19->1 21->1 21->1 21->34 22->1 22->1 22->23 23->1 23->1 23->1 26->1 27->1 27->1 28->1 28->1 28->35 28->37 29->19 30->1 30->1 31->26 33->1 34->22 34->23 35->1 35->1 37->1 37->1 38->1 39->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern int ( /* missing proto */ fact ) ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; char * * _global_envp = ( char * * ) 0 ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int argc , char * * argv , char * * _formal_envp ) { int num ; int f ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 4 ; } while ( 1 ) { switch ( _1_main_next ) { case 4 : ; { _1_main_next = 3 ; } break ; case 3 : ; if ( argc < 2 ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : ; return ( 1 ) ; break ; case 1 : num = ( int ) * ( * ( argv + 1 ) + 0 ) ; f = fact ( num ) ; printf ( " \n \n " , num , f ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 17
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 22 <empty>
LITERAL 20 <empty>
<operator>.assignment tmp = max(freq, L)
<operator>.assignmentPlus result += (i / K + 1) * tmp
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 19 <empty>
printf printf("Case #%d: %d\n", n + 1, result)
<operator>.postIncrement n ++
BLOCK <empty> <empty>
LITERAL 18 <empty>
RETURN return (0); return (0);
LITERAL 17 <empty>
scanf scanf("%d", & N)
<operator>.assignment n = 0
BLOCK <empty> <empty>
LITERAL 15 <empty>
LITERAL 13 <empty>
<operator>.assignment result = 0
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 11 <empty>
LITERAL 9 <empty>
<operator>.assignment freq[i] = 0
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 8 <empty>
scanf scanf("%d%d%d", & P, & K, & L)
BLOCK <empty> <empty>
LITERAL 7 <empty>
LITERAL 6 <empty>
printf printf("IMPOSSIBLE\n")
BLOCK <empty> <empty>
LITERAL 5 <empty>
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 1 <empty>
scanf scanf("%d", & freq[i])
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
<operator>.assignment i = 0
BLOCK <empty> <empty>
<operator>.lessThan i < L
<operator>.assignment _1_main_next = 22
<operator>.assignment _1_main_next = 15
LITERAL 0 return (0);
<operator>.assignment _1_main_next = 15
<operator>.lessThan n < N
<operator>.assignment _1_main_next = 11
<operator>.lessThan i < 1000
<operator>.assignment _1_main_next = 11
<operator>.assignment _1_main_next = 7
<operator>.lessThan P * K < L
<operator>.assignment _1_main_next = 5
<operator>.assignment _1_main_next = 3
<operator>.lessThan i < L
<operator>.assignment _1_main_next = 3
<operator>.assignment _1_main_next = 22
BLOCK <empty> <empty>
max max(freq, L)
<operator>.multiplication (i / K + 1) * tmp
<operator>.addition n + 1
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 20
BLOCK <empty> <empty>
<operator>.addition i / K + 1
<operator>.assignment _1_main_next = 13
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 9
BLOCK <empty> <empty>
<operator>.multiplication P * K
<operator>.assignment _1_main_next = 6
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 19
<operator>.division i / K
<operator>.assignment _1_main_next = 18
<operator>.assignment _1_main_next = 8
<operator>.assignment _1_main_next = 5
<operator>.assignment _1_main_next = 0
>>>PDG&101 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->54 0->55 0->56 0->57 0->58 0->59 0->60 0->61 0->62 0->63 0->64 0->65 0->66 0->67 0->68 0->69 0->70 0->71 0->72 0->73 0->74 0->75 0->76 0->77 0->78 0->79 0->80 0->81 0->82 0->83 0->84 0->85 0->86 0->87 0->88 0->89 0->90 0->91 0->92 0->93 0->94 0->95 0->96 0->97 0->98 0->99 0->100 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 17->1 17->1 17->77 18->1 18->1 18->1 18->22 19->1 19->1 19->39 19->54 19->59 19->66 19->72 19->96 22->1 22->1 22->1 22->18 23->1 23->1 23->22 23->64 23->78 26->1 28->1 28->64 29->1 29->1 29->22 29->23 29->64 29->78 33->1 33->1 33->18 33->22 34->1 34->1 34->39 34->54 34->59 34->66 34->72 34->96 38->1 38->1 38->53 38->76 39->1 39->1 39->54 39->59 39->66 39->72 39->96 42->1 42->1 42->1 42->90 46->1 49->1 49->1 49->39 49->54 49->59 49->66 49->72 49->96 53->1 53->76 54->1 54->1 54->39 54->59 54->66 54->72 54->96 57->1 57->1 57->39 57->54 57->59 57->66 57->72 57->96 59->1 59->1 59->1 59->39 59->54 59->66 59->69 59->72 59->72 59->76 59->83 59->95 59->96 60->1 60->1 61->1 61->1 62->26 63->1 63->1 64->1 64->1 64->1 64->22 64->23 64->28 64->78 64->86 64->97 65->1 65->1 66->1 66->1 66->39 66->54 66->59 66->72 66->88 66->96 66->98 67->1 67->1 68->1 68->1 69->1 69->1 69->1 69->59 69->72 69->76 69->91 69->99 70->1 70->1 71->1 71->1 72->1 72->1 72->1 72->39 72->54 72->59 72->59 72->66 72->69 72->76 72->93 72->96 72->100 73->1 73->1 74->1 74->1 76->1 76->1 76->17 76->17 76->53 76->59 76->69 76->72 77->1 77->1 77->18 77->18 83->1 83->1 85->1 86->1 86->1 88->1 88->1 90->1 90->1 90->42 90->69 90->69 90->96 91->1 91->1 93->1 93->1 95->1 95->1 96->1 96->19 96->77 96->77 96->85 96->85 96->90 97->1 97->1 98->1 98->1 99->1 99->1 100->1 100->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int unlink ( char const * filename ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int ( /* missing proto */ scanf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int ( /* missing proto */ max ) ( ) ; extern double sqrt ( double x ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { int i ; int n ; int N ; int result ; int P ; int K ; int L ; int freq [ 1000 ] ; int tmp ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 17 ; } while ( 1 ) { switch ( _1_main_next ) { case 22 : ; if ( i < L ) { { _1_main_next = 20 ; } } else { { _1_main_next = 19 ; } } break ; case 20 : tmp = max ( freq , L ) ; result += ( i / K + 1 ) * tmp ; i ++ ; { _1_main_next = 22 ; } break ; case 19 : printf ( " \n " , n + 1 , result ) ; n ++ ; { _1_main_next = 15 ; } break ; case 18 : ; return ( 0 ) ; break ; case 17 : scanf ( " " , & N ) ; n = 0 ; { _1_main_next = 15 ; } break ; case 15 : ; if ( n < N ) { { _1_main_next = 13 ; } } else { { _1_main_next = 18 ; } } break ; case 13 : result = 0 ; i = 0 ; { _1_main_next = 11 ; } break ; case 11 : ; if ( i < 1000 ) { { _1_main_next = 9 ; } } else { { _1_main_next = 8 ; } } break ; case 9 : freq [ i ] = 0 ; i ++ ; { _1_main_next = 11 ; } break ; case 8 : scanf ( " " , & P , & K , & L ) ; { _1_main_next = 7 ; } break ; case 7 : ; if ( P * K < L ) { { _1_main_next = 6 ; } } else { { _1_main_next = 5 ; } } break ; case 6 : printf ( " \n " ) ; { _1_main_next = 5 ; } break ; case 5 : i = 0 ; { _1_main_next = 3 ; } break ; case 3 : ; if ( i < L ) { { _1_main_next = 1 ; } } else { { _1_main_next = 0 ; } } break ; case 1 : scanf ( " " , & freq [ i ] ) ; i ++ ; { _1_main_next = 3 ; } break ; case 0 : i = 0 ; { _1_main_next = 22 ; } break ; } } } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 34
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 34 <empty>
scanf scanf(" %d", & N)
<operator>.assignment n = 0
BLOCK <empty> <empty>
LITERAL 32 <empty>
LITERAL 30 <empty>
scanf scanf(" %d", & M)
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 28 <empty>
LITERAL 26 <empty>
scanf scanf(" %d", x + i)
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 25 <empty>
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 23 <empty>
LITERAL 21 <empty>
scanf scanf(" %d", y + i)
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 20 <empty>
sort sort(x, x + M)
sort sort(y, y + M)
<operator>.assignment sum = 0LL
<operator>.assignment d = 0
BLOCK <empty> <empty>
LITERAL 18 <empty>
LITERAL 17 <empty>
LITERAL 14 <empty>
<operator>.assignmentPlus sum += (long long )(x[d] * y[(M - d) - 1])
<operator>.postIncrement d ++
BLOCK <empty> <empty>
LITERAL 13 <empty>
<operator>.assignment u = M - 1
BLOCK <empty> <empty>
LITERAL 11 <empty>
LITERAL 10 <empty>
LITERAL 7 <empty>
<operator>.assignmentPlus sum += (long long )(x[u] * y[(M - u) - 1])
<operator>.postDecrement u --
BLOCK <empty> <empty>
LITERAL 6 <empty>
<operator>.assignment k = d
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
<operator>.assignmentPlus sum += (long long )(x[k] * y[(M - k) - 1])
assert assert(x[k] * y[(M - k) - 1] >= 0)
<operator>.postIncrement k ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("Case #%d: %d\n", n + 1, sum)
<operator>.postIncrement n ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 32
<operator>.lessThan n < N
<operator>.assignment _1_main_next = 28
<operator>.lessThan i < M
<operator>.assignment _1_main_next = 28
<operator>.assignment _1_main_next = 23
<operator>.lessThan i < M
<operator>.assignment _1_main_next = 23
<operator>.assignment _1_main_next = 18
<operator>.lessThan x[d] < 0
<operator>.greaterThan y[(M - d) - 1] > 0
<operator>.assignment _1_main_next = 18
<operator>.assignment _1_main_next = 11
<operator>.greaterThan x[u] > 0
<operator>.lessThan y[(M - u) - 1] < 0
<operator>.assignment _1_main_next = 11
<operator>.assignment _1_main_next = 4
<operator>.lessEqualsThan k <= u
<operator>.assignment _1_main_next = 4
<operator>.assignment _1_main_next = 32
LITERAL 0 return (0);
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.addition x + i
BLOCK <empty> <empty>
<operator>.addition y + i
<operator>.addition x + M
<operator>.addition y + M
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.cast (long long )(x[d] * y[(M - d) - 1])
<operator>.subtraction M - 1
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.cast (long long )(x[u] * y[(M - u) - 1])
BLOCK <empty> <empty>
<operator>.cast (long long )(x[k] * y[(M - k) - 1])
<operator>.greaterEqualsThan x[k] * y[(M - k) - 1] >= 0
<operator>.addition n + 1
<operator>.assignment _1_main_next = 30
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 26
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 21
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 17
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 14
BLOCK <empty> <empty>
<operator>.multiplication x[d] * y[(M - d) - 1]
<operator>.assignment _1_main_next = 10
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 7
BLOCK <empty> <empty>
<operator>.multiplication x[u] * y[(M - u) - 1]
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.multiplication x[k] * y[(M - k) - 1]
<operator>.multiplication x[k] * y[(M - k) - 1]
<operator>.assignment _1_main_next = 0
<operator>.assignment _1_main_next = 25
<operator>.assignment _1_main_next = 20
<operator>.assignment _1_main_next = 13
<operator>.subtraction (M - d) - 1
<operator>.assignment _1_main_next = 13
<operator>.assignment _1_main_next = 6
<operator>.subtraction (M - u) - 1
<operator>.assignment _1_main_next = 6
<operator>.assignment _1_main_next = 1
<operator>.subtraction M - d
<operator>.subtraction (M - d) - 1
<operator>.subtraction M - u
<operator>.subtraction (M - u) - 1
<operator>.subtraction (M - k) - 1
<operator>.subtraction (M - k) - 1
<operator>.subtraction M - d
<operator>.subtraction M - u
<operator>.subtraction M - k
<operator>.subtraction M - k
>>>PDG&152 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 0->59 0->60 0->61 0->62 0->63 0->65 0->66 0->67 0->68 0->69 0->70 0->71 0->72 0->73 0->74 0->75 0->76 0->77 0->78 0->79 0->80 0->81 0->82 0->83 0->84 0->85 0->86 0->87 0->88 0->89 0->90 0->91 0->92 0->93 0->94 0->95 0->96 0->97 0->98 0->99 0->100 0->101 0->102 0->104 0->105 0->106 0->108 0->110 0->111 0->112 0->113 0->114 0->115 0->116 0->117 0->118 0->119 0->120 0->121 0->122 0->123 0->124 0->125 0->126 0->127 0->128 0->129 0->130 0->131 0->132 0->133 0->134 0->135 0->136 0->137 0->138 0->139 0->140 0->141 0->142 0->143 0->144 0->145 0->146 0->147 0->148 0->149 0->150 0->151 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->74 17->1 17->1 17->68 17->69 17->74 17->111 21->1 21->38 21->39 21->76 21->79 21->99 21->100 21->104 21->142 21->144 21->148 21->149 21->150 21->151 22->1 22->1 22->26 22->27 22->34 22->35 22->76 22->79 22->96 22->98 26->1 27->1 27->1 27->26 27->34 27->35 27->76 27->79 27->96 27->98 30->1 30->1 30->26 30->27 30->34 30->35 30->76 30->79 30->96 30->98 34->1 35->1 35->1 35->26 35->27 35->34 35->76 35->79 35->96 35->98 38->1 38->1 38->1 38->26 38->82 38->86 38->96 38->99 38->122 38->127 38->130 38->131 39->1 39->1 39->1 39->34 39->83 39->87 39->98 39->100 39->122 39->127 39->130 39->131 40->1 40->1 40->46 40->55 40->63 40->68 41->1 41->1 41->59 41->142 41->148 46->1 46->1 46->1 46->55 46->63 46->68 47->1 47->1 47->59 47->142 47->148 50->1 50->1 50->1 50->90 50->144 50->149 55->1 55->1 55->1 55->46 55->63 55->68 56->1 56->1 56->90 56->144 56->149 59->1 59->1 59->1 59->90 59->150 63->1 63->1 63->1 63->46 63->55 63->68 64->1 64->1 65->1 65->1 65->90 65->150 68->1 68->1 68->1 68->46 68->55 68->63 69->1 69->1 69->68 69->74 69->111 72->1 73->1 73->1 74->1 74->1 74->1 74->16 74->68 74->69 74->111 74->112 74->132 75->1 75->1 76->1 76->1 76->1 76->21 76->26 76->27 76->34 76->35 76->38 76->39 76->79 76->79 76->96 76->98 76->99 76->100 76->104 76->114 76->133 76->142 76->144 76->148 76->149 76->150 77->1 77->1 78->1 78->1 79->1 79->1 79->1 79->21 79->26 79->27 79->34 79->35 79->38 79->39 79->76 79->76 79->96 79->98 79->99 79->100 79->104 79->116 79->134 79->142 79->144 79->148 79->149 79->150 80->1 80->1 81->1 81->1 82->1 82->1 82->26 82->38 82->86 82->96 82->99 82->118 82->122 82->127 82->130 82->131 82->135 83->1 83->1 83->34 83->39 83->87 83->98 83->100 83->120 83->122 83->127 83->130 83->131 83->137 84->1 84->1 85->1 85->1 86->1 86->1 86->26 86->38 86->82 86->96 86->99 86->122 86->123 86->127 86->130 86->131 86->138 87->1 87->1 87->34 87->39 87->83 87->98 87->100 87->122 87->125 87->127 87->130 87->131 87->140 88->1 88->1 89->1 89->1 90->1 90->1 90->1 90->128 90->141 90->144 90->149 90->150 91->1 91->1 92->1 92->1 93->72 96->1 98->1 100->1 103->1 104->1 104->21 104->38 104->39 104->50 104->50 104->76 104->79 104->99 104->100 104->142 104->144 104->148 104->149 104->150 107->1 110->1 110->64 110->64 112->1 112->1 114->1 114->1 116->1 116->1 118->1 118->1 120->1 120->1 122->1 122->1 122->26 122->34 122->38 122->39 122->46 122->46 122->82 122->83 122->86 122->87 122->96 122->98 122->99 122->100 122->103 122->103 122->127 122->127 122->130 122->130 122->131 122->131 123->1 123->1 125->1 125->1 127->1 127->1 127->26 127->34 127->38 127->39 127->55 127->55 127->82 127->83 127->86 127->87 127->96 127->98 127->99 127->100 127->107 127->107 127->122 127->122 127->130 127->130 127->131 127->131 128->1 128->1 130->63 130->63 130->109 130->109 130->131 130->131 131->1 131->1 131->26 131->34 131->38 131->39 131->82 131->83 131->86 131->87 131->96 131->98 131->99 131->100 131->110 131->110 131->122 131->122 131->127 131->127 131->130 131->130 132->1 132->1 133->1 133->1 134->1 134->1 135->1 135->1 136->1 137->1 137->1 138->1 138->1 139->1 140->1 140->1 141->1 141->1 142->1 142->1 142->21 142->38 142->39 142->59 142->76 142->79 142->99 142->100 142->104 142->136 142->136 142->144 142->148 142->148 142->149 142->150 143->1 144->1 144->1 144->21 144->38 144->39 144->76 144->79 144->90 144->99 144->100 144->104 144->139 144->139 144->142 144->148 144->149 144->149 144->150 145->1 147->1 148->1 148->21 148->38 148->39 148->47 148->76 148->79 148->99 148->100 148->104 148->142 148->143 148->143 148->144 148->149 148->150 149->1 149->21 149->38 149->39 149->56 149->76 149->79 149->99 149->100 149->104 149->142 149->144 149->145 149->145 149->148 149->150 150->146 150->146 150->151 150->151 151->1 151->21 151->38 151->39 151->65 151->76 151->79 151->99 151->100 151->104 151->142 151->144 151->147 151->147 151->148 151->149 151->150
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int ( /* missing proto */ sort ) ( ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int unlink ( char const * filename ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int ( /* missing proto */ assert ) ( ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern double ceil ( double x ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; char * * _global_envp = ( char * * ) 0 ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int ( /* missing proto */ scanf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { int N ; int M ; int n ; int i ; int d ; int u ; int k ; int x [ 1000 ] ; int y [ 1000 ] ; long long sum ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 34 ; } while ( 1 ) { switch ( _1_main_next ) { case 34 : scanf ( " " , & N ) ; n = 0 ; { _1_main_next = 32 ; } break ; case 32 : ; if ( n < N ) { { _1_main_next = 30 ; } } else { { _1_main_next = 0 ; } } break ; case 30 : scanf ( " " , & M ) ; i = 0 ; { _1_main_next = 28 ; } break ; case 28 : ; if ( i < M ) { { _1_main_next = 26 ; } } else { { _1_main_next = 25 ; } } break ; case 26 : scanf ( " " , x + i ) ; i ++ ; { _1_main_next = 28 ; } break ; case 25 : i = 0 ; { _1_main_next = 23 ; } break ; case 23 : ; if ( i < M ) { { _1_main_next = 21 ; } } else { { _1_main_next = 20 ; } } break ; case 21 : scanf ( " " , y + i ) ; i ++ ; { _1_main_next = 23 ; } break ; case 20 : sort ( x , x + M ) ; sort ( y , y + M ) ; sum = 0LL ; d = 0 ; { _1_main_next = 18 ; } break ; case 18 : ; if ( x [ d ] < 0 ) { { _1_main_next = 17 ; } } else { { _1_main_next = 13 ; } } break ; case 17 : ; if ( y [ ( M - d ) - 1 ] > 0 ) { { _1_main_next = 14 ; } } else { { _1_main_next = 13 ; } } break ; case 14 : sum += ( long long ) ( x [ d ] * y [ ( M - d ) - 1 ] ) ; d ++ ; { _1_main_next = 18 ; } break ; case 13 : u = M - 1 ; { _1_main_next = 11 ; } break ; case 11 : ; if ( x [ u ] > 0 ) { { _1_main_next = 10 ; } } else { { _1_main_next = 6 ; } } break ; case 10 : ; if ( y [ ( M - u ) - 1 ] < 0 ) { { _1_main_next = 7 ; } } else { { _1_main_next = 6 ; } } break ; case 7 : sum += ( long long ) ( x [ u ] * y [ ( M - u ) - 1 ] ) ; u -- ; { _1_main_next = 11 ; } break ; case 6 : k = d ; { _1_main_next = 4 ; } break ; case 4 : ; if ( k <= u ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : sum += ( long long ) ( x [ k ] * y [ ( M - k ) - 1 ] ) ; assert ( x [ k ] * y [ ( M - k ) - 1 ] >= 0 ) ; k ++ ; { _1_main_next = 4 ; } break ; case 1 : printf ( " \n " , n + 1 , sum ) ; n ++ ; { _1_main_next = 32 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 4
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 24 <empty>
LITERAL 23 <empty>
<operator>.assignment l = *(a + i)
BLOCK <empty> <empty>
LITERAL 22 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 21 <empty>
<operator>.assignment tmp___0 = malloc((unsigned long )(l + 1) * sizeof(int ))
<operator>.assignment b = (int *)tmp___0
memset memset(b  0  (unsigned long )(l + 1) * sizeof(*(b + 0)))
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 19 <empty>
LITERAL 17 <empty>
<operator>.postIncrement (*(b + *(a + i))) ++
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 16 <empty>
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 14 <empty>
LITERAL 12 <empty>
LITERAL 10 <empty>
LITERAL 8 <empty>
printf printf("%d ", i)
<operator>.postDecrement (*(b + i)) --
BLOCK <empty> <empty>
LITERAL 7 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 6 <empty>
free free(a)
free free(b)
BLOCK <empty> <empty>
LITERAL 5 <empty>
RETURN return (0); return (0);
LITERAL 4 <empty>
<operator>.assignment l = 0
printf printf("Enter size of array = ")
scanf scanf("%d", & n)
<operator>.assignment tmp = malloc((unsigned long )n * sizeof(int ))
<operator>.assignment a = (int *)tmp
printf printf("Enter %d elements in array :\n", n)
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 2 <empty>
LITERAL 0 <empty>
scanf scanf("%d", a + i)
BLOCK <empty> <empty>
<operator>.greaterThan *(a + i) > l
<operator>.assignment _1_main_next = 22
<operator>.assignment _1_main_next = 2
<operator>.assignment _1_main_next = 19
<operator>.lessThan i < n
<operator>.assignment _1_main_next = 19
<operator>.assignment _1_main_next = 14
<operator>.lessThan i < l + 1
<operator>.greaterThan *(b + i) > 0
<operator>.notEquals *(b + i) != 0
<operator>.assignment _1_main_next = 10
<operator>.assignment _1_main_next = 14
<operator>.assignment _1_main_next = 5
LITERAL 0 return (0);
<operator>.assignment _1_main_next = 2
<operator>.lessThan i < n
<operator>.assignment _1_main_next = 24
BLOCK <empty> <empty>
malloc malloc((unsigned long )(l + 1) * sizeof(int ))
<operator>.cast (int *)tmp___0
<operator>.multiplication (unsigned long )(l + 1) * sizeof(*(b + 0))
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
malloc malloc((unsigned long )n * sizeof(int ))
<operator>.cast (int *)tmp
BLOCK <empty> <empty>
<operator>.addition a + i
<operator>.assignment _1_main_next = 23
BLOCK <empty> <empty>
<operator>.addition a + i
<operator>.multiplication (unsigned long )(l + 1) * sizeof(int )
<operator>.cast (unsigned long )(l + 1)
<operator>.sizeOf sizeof(*(b + 0))
<operator>.assignment _1_main_next = 17
BLOCK <empty> <empty>
<operator>.addition b + *(a + i)
<operator>.addition l + 1
<operator>.assignment _1_main_next = 12
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 10
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 8
BLOCK <empty> <empty>
<operator>.addition b + i
<operator>.multiplication (unsigned long )n * sizeof(int )
<operator>.assignment _1_main_next = 0
BLOCK <empty> <empty>
<operator>.addition a + i
<operator>.assignment _1_main_next = 22
<operator>.cast (unsigned long )(l + 1)
<operator>.sizeOf sizeof(int )
<operator>.addition l + 1
<operator>.assignment _1_main_next = 16
<operator>.assignment _1_main_next = 6
<operator>.addition b + i
<operator>.assignment _1_main_next = 7
<operator>.addition b + i
<operator>.assignment _1_main_next = 7
<operator>.cast (unsigned long )n
<operator>.sizeOf sizeof(int )
<operator>.assignment _1_main_next = 21
<operator>.addition l + 1
<operator>.addition b + 0
<operator>.addition a + i
>>>PDG&131 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->18 0->19 0->20 0->21 0->22 0->24 0->25 0->26 0->27 0->28 0->29 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->57 0->58 0->59 0->60 0->61 0->62 0->63 0->64 0->65 0->66 0->67 0->68 0->69 0->70 0->71 0->72 0->73 0->74 0->75 0->76 0->77 0->78 0->79 0->80 0->81 0->82 0->84 0->85 0->86 0->87 0->88 0->89 0->91 0->92 0->93 0->94 0->95 0->96 0->97 0->98 0->100 0->101 0->102 0->103 0->104 0->105 0->106 0->107 0->108 0->109 0->110 0->111 0->112 0->113 0->114 0->115 0->116 0->118 0->119 0->120 0->121 0->122 0->123 0->124 0->125 0->127 0->128 0->129 0->130 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 17->1 17->1 17->1 17->65 17->72 17->85 17->97 17->98 17->103 17->116 17->118 17->128 20->1 20->1 20->31 20->40 20->44 20->63 20->69 20->72 20->80 20->93 20->96 20->114 20->121 20->123 20->130 23->1 23->1 23->24 23->84 24->1 24->1 24->25 24->129 25->1 25->1 25->1 25->48 25->102 25->110 25->121 25->123 26->1 26->1 26->20 26->31 26->40 26->44 26->63 26->69 26->72 26->80 26->93 26->96 26->114 26->121 26->123 26->130 30->1 30->1 31->1 31->1 31->20 31->40 31->44 31->63 31->69 31->72 31->80 31->93 31->96 31->114 31->121 31->123 31->130 34->1 34->1 34->20 34->31 34->40 34->44 34->63 34->69 34->72 34->80 34->93 34->96 34->114 34->121 34->123 34->130 40->1 40->20 40->31 40->44 40->63 40->69 40->72 40->80 40->93 40->96 40->110 40->114 40->121 40->123 40->130 41->1 41->1 44->1 44->1 44->20 44->31 44->40 44->63 44->69 44->72 44->80 44->93 44->96 44->114 44->121 44->123 44->130 47->1 47->63 47->93 47->96 47->114 47->130 48->1 48->102 48->110 48->121 48->123 51->1 53->1 53->1 53->65 53->72 53->85 53->97 53->98 53->103 53->116 53->118 53->128 54->1 55->1 55->58 55->69 55->80 55->111 55->125 56->1 56->1 56->57 56->91 57->1 57->1 57->1 57->47 57->63 57->93 57->96 57->114 57->130 58->1 58->1 58->55 58->69 58->80 58->111 58->125 59->1 59->1 59->20 59->31 59->40 59->44 59->63 59->69 59->72 59->80 59->93 59->96 59->114 59->121 59->123 59->130 63->1 65->1 65->1 65->1 65->63 65->72 65->85 65->94 65->97 65->98 65->103 65->115 65->116 65->118 65->128 66->1 66->1 67->1 67->1 68->1 68->1 69->1 69->1 69->1 69->20 69->31 69->40 69->44 69->55 69->58 69->63 69->72 69->80 69->80 69->93 69->96 69->100 69->111 69->114 69->119 69->121 69->123 69->125 69->130 70->1 70->1 71->1 71->1 72->1 72->1 72->1 72->20 72->31 72->40 72->44 72->63 72->69 72->80 72->93 72->96 72->104 72->114 72->120 72->121 72->123 72->130 73->1 73->1 73->106 73->122 74->1 74->1 74->108 74->124 75->1 75->1 76->1 76->1 77->1 77->1 78->51 79->1 79->1 80->1 80->1 80->1 80->20 80->31 80->40 80->44 80->55 80->58 80->63 80->69 80->69 80->72 80->93 80->96 80->111 80->112 80->114 80->121 80->123 80->125 80->127 80->130 81->1 81->1 83->1 83->23 84->1 85->1 85->25 90->1 90->56 91->1 93->1 93->1 94->1 94->1 96->1 96->1 97->83 98->1 99->1 100->1 100->1 102->1 102->1 103->1 104->1 104->1 106->1 106->1 108->1 108->1 110->1 110->1 111->1 111->90 112->1 112->1 114->1 114->1 115->1 115->1 117->1 118->1 119->1 119->1 120->1 120->1 121->1 121->1 122->1 122->1 123->1 123->1 124->1 124->1 126->1 127->1 127->1 130->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern int ( /* missing proto */ malloc ) ( ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern int ( /* missing proto */ free ) ( ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int ( /* missing proto */ scanf ) ( ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern double strtod ( char const * str , char const * endptr ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ memset ) ( ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { int i ; int n ; int l ; int * a ; int tmp ; int * b ; int tmp___0 ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 4 ; } while ( 1 ) { switch ( _1_main_next ) { case 24 : ; if ( * ( a + i ) > l ) { { _1_main_next = 23 ; } } else { { _1_main_next = 22 ; } } break ; case 23 : l = * ( a + i ) ; { _1_main_next = 22 ; } break ; case 22 : i ++ ; { _1_main_next = 2 ; } break ; case 21 : tmp___0 = malloc ( ( unsigned long ) ( l + 1 ) * sizeof ( int ) ) ; b = ( int * ) tmp___0 ; memset ( b , 0 , ( unsigned long ) ( l + 1 ) * sizeof ( * ( b + 0 ) ) ) ; i = 0 ; { _1_main_next = 19 ; } break ; case 19 : ; if ( i < n ) { { _1_main_next = 17 ; } } else { { _1_main_next = 16 ; } } break ; case 17 : ( * ( b + * ( a + i ) ) ) ++ ; i ++ ; { _1_main_next = 19 ; } break ; case 16 : i = 0 ; { _1_main_next = 14 ; } break ; case 14 : ; if ( i < l + 1 ) { { _1_main_next = 12 ; } } else { { _1_main_next = 6 ; } } break ; case 12 : ; if ( * ( b + i ) > 0 ) { { _1_main_next = 10 ; } } else { { _1_main_next = 7 ; } } break ; case 10 : ; if ( * ( b + i ) != 0 ) { { _1_main_next = 8 ; } } else { { _1_main_next = 7 ; } } break ; case 8 : printf ( " " , i ) ; ( * ( b + i ) ) -- ; { _1_main_next = 10 ; } break ; case 7 : i ++ ; { _1_main_next = 14 ; } break ; case 6 : free ( a ) ; free ( b ) ; { _1_main_next = 5 ; } break ; case 5 : ; return ( 0 ) ; break ; case 4 : l = 0 ; printf ( " " ) ; scanf ( " " , & n ) ; tmp = malloc ( ( unsigned long ) n * sizeof ( int ) ) ; a = ( int * ) tmp ; printf ( " \n " , n ) ; i = 0 ; { _1_main_next = 2 ; } break ; case 2 : ; if ( i < n ) { { _1_main_next = 0 ; } } else { { _1_main_next = 21 ; } } break ; case 0 : scanf ( " " , a + i ) ; { _1_main_next = 24 ; } break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD isGreaterThan
METHOD_RETURN int
PARAM char *a
PARAM char *b
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_isGreaterThan_next = 20
LITERAL 1 while (1)
IDENTIFIER _1_isGreaterThan_next switch(_1_isGreaterThan_next)
LITERAL 20 <empty>
<operator>.assignment tmp = strlen(a)
<operator>.assignment tmp___0 = strlen(b)
BLOCK <empty> <empty>
LITERAL 19 <empty>
LITERAL 18 <empty>
RETURN return (1); return (1);
LITERAL 17 <empty>
<operator>.assignment tmp___1 = strlen(a)
<operator>.assignment tmp___2 = strlen(b)
BLOCK <empty> <empty>
LITERAL 16 <empty>
LITERAL 15 <empty>
RETURN return (0); return (0);
LITERAL 14 <empty>
<operator>.assignment tmp___3 = strlen(a)
BLOCK <empty> <empty>
LITERAL 13 <empty>
LITERAL 12 <empty>
LITERAL 11 <empty>
RETURN return (1); return (1);
LITERAL 10 <empty>
RETURN return (0); return (0);
LITERAL 9 <empty>
<operator>.assignment tmp___4 = strlen(a)
<operator>.assignment i = tmp___4 - 1
BLOCK <empty> <empty>
LITERAL 7 <empty>
LITERAL 5 <empty>
LITERAL 4 <empty>
RETURN return (1); return (1);
LITERAL 3 <empty>
LITERAL 2 <empty>
RETURN return (0); return (0);
LITERAL 1 <empty>
<operator>.postDecrement i --
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (-1); return (-1);
<operator>.assignment _1_isGreaterThan_next = 19
<operator>.greaterThan tmp > tmp___0
LITERAL 1 return (1);
<operator>.assignment _1_isGreaterThan_next = 16
<operator>.lessThan tmp___1 < tmp___2
LITERAL 0 return (0);
<operator>.assignment _1_isGreaterThan_next = 13
<operator>.equals tmp___3 == 1
<operator>.greaterThan (int )*(a + 0) > (int )*(b + 0)
LITERAL 1 return (1);
LITERAL 0 return (0);
<operator>.assignment _1_isGreaterThan_next = 7
<operator>.greaterEqualsThan i >= 0
<operator>.greaterThan (int )*(a + i) > (int )*(b + i)
LITERAL 1 return (1);
<operator>.lessThan (int )*(a + i) < (int )*(b + i)
LITERAL 0 return (0);
<operator>.assignment _1_isGreaterThan_next = 7
<operator>.minus -1
strlen strlen(a)
strlen strlen(b)
BLOCK <empty> <empty>
strlen strlen(a)
strlen strlen(b)
BLOCK <empty> <empty>
strlen strlen(a)
BLOCK <empty> <empty>
BLOCK <empty> <empty>
strlen strlen(a)
<operator>.subtraction tmp___4 - 1
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_isGreaterThan_next = 18
BLOCK <empty> <empty>
<operator>.assignment _1_isGreaterThan_next = 15
BLOCK <empty> <empty>
<operator>.assignment _1_isGreaterThan_next = 12
BLOCK <empty> <empty>
<operator>.cast (int )*(a + 0)
<operator>.cast (int )*(b + 0)
<operator>.assignment _1_isGreaterThan_next = 11
BLOCK <empty> <empty>
<operator>.assignment _1_isGreaterThan_next = 5
BLOCK <empty> <empty>
<operator>.cast (int )*(a + i)
<operator>.cast (int )*(b + i)
<operator>.assignment _1_isGreaterThan_next = 4
BLOCK <empty> <empty>
<operator>.cast (int )*(a + i)
<operator>.cast (int )*(b + i)
<operator>.assignment _1_isGreaterThan_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_isGreaterThan_next = 17
<operator>.assignment _1_isGreaterThan_next = 14
<operator>.assignment _1_isGreaterThan_next = 9
<operator>.assignment _1_isGreaterThan_next = 10
<operator>.assignment _1_isGreaterThan_next = 0
<operator>.assignment _1_isGreaterThan_next = 3
<operator>.assignment _1_isGreaterThan_next = 1
<operator>.addition a + 0
<operator>.addition b + 0
<operator>.addition a + i
<operator>.addition b + i
<operator>.addition a + i
<operator>.addition b + i
>>>PDG&114 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->12 0->13 0->14 0->15 0->16 0->19 0->20 0->21 0->22 0->23 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->57 0->58 0->59 0->60 0->62 0->64 0->65 0->66 0->67 0->68 0->69 0->70 0->71 0->72 0->73 0->74 0->75 0->76 0->77 0->78 0->79 0->80 0->81 0->82 0->83 0->84 0->85 0->86 0->89 0->90 0->91 0->92 0->95 0->96 0->99 0->100 0->101 0->102 0->103 0->104 0->105 0->106 0->107 0->108 0->109 0->110 0->111 0->112 0->113 2->1 2->67 2->70 2->73 2->76 2->108 2->110 2->112 3->1 3->68 3->71 3->109 3->111 3->113 6->1 6->1 10->1 10->1 10->1 10->49 11->1 11->1 11->1 11->49 15->1 17->1 17->1 17->1 17->52 18->1 18->1 18->1 18->52 22->1 24->1 24->1 24->1 24->55 29->1 31->1 33->1 33->1 33->77 34->1 34->1 34->1 34->44 34->60 34->110 34->111 34->112 34->113 39->1 42->1 44->1 44->1 44->60 44->110 44->111 44->112 44->113 47->1 48->1 48->1 49->1 49->1 49->1 49->81 49->101 50->15 51->1 51->1 52->1 52->1 52->1 52->83 52->102 53->22 54->1 54->1 55->1 55->1 55->85 55->103 56->1 56->1 56->1 56->89 56->104 57->29 58->31 59->1 59->1 60->1 60->1 60->44 60->91 60->105 60->110 60->111 60->112 60->113 61->1 61->1 61->1 61->95 61->106 62->39 63->1 63->1 63->1 63->99 63->107 64->42 65->1 65->1 66->47 67->1 67->10 67->70 67->73 67->76 67->108 67->110 67->112 68->1 68->11 68->71 68->109 68->111 68->113 70->1 70->17 70->67 70->73 70->76 70->108 70->110 70->112 71->1 71->18 71->68 71->109 71->111 71->113 73->1 73->24 73->67 73->70 73->76 73->108 73->110 73->112 76->1 76->33 76->67 76->70 76->73 76->108 76->110 76->112 77->1 77->34 77->34 81->1 81->1 83->1 83->1 85->1 85->1 87->1 88->1 89->1 89->1 91->1 91->1 93->1 94->1 95->1 95->1 97->1 98->1 99->1 99->1 101->1 101->1 102->1 102->1 103->1 103->1 104->1 104->1 105->1 105->1 106->1 106->1 107->1 107->1 108->1 109->1 110->1 111->1 111->1 112->1 113->1 113->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; int isGreaterThan ( char * a , char * b ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern int ( /* missing proto */ strlen ) ( ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern double sqrt ( double x ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int isGreaterThan ( char * a , char * b ) { int tmp ; int tmp___0 ; int tmp___1 ; int tmp___2 ; int tmp___3 ; int i ; int tmp___4 ; unsigned long _1_isGreaterThan_next ; { { _1_isGreaterThan_next = 20 ; } while ( 1 ) { switch ( _1_isGreaterThan_next ) { case 20 : tmp = strlen ( a ) ; tmp___0 = strlen ( b ) ; { _1_isGreaterThan_next = 19 ; } break ; case 19 : ; if ( tmp > tmp___0 ) { { _1_isGreaterThan_next = 18 ; } } else { { _1_isGreaterThan_next = 17 ; } } break ; case 18 : ; return ( 1 ) ; break ; case 17 : tmp___1 = strlen ( a ) ; tmp___2 = strlen ( b ) ; { _1_isGreaterThan_next = 16 ; } break ; case 16 : ; if ( tmp___1 < tmp___2 ) { { _1_isGreaterThan_next = 15 ; } } else { { _1_isGreaterThan_next = 14 ; } } break ; case 15 : ; return ( 0 ) ; break ; case 14 : tmp___3 = strlen ( a ) ; { _1_isGreaterThan_next = 13 ; } break ; case 13 : ; if ( tmp___3 == 1 ) { { _1_isGreaterThan_next = 12 ; } } else { { _1_isGreaterThan_next = 9 ; } } break ; case 12 : ; if ( ( int ) * ( a + 0 ) > ( int ) * ( b + 0 ) ) { { _1_isGreaterThan_next = 11 ; } } else { { _1_isGreaterThan_next = 10 ; } } break ; case 11 : ; return ( 1 ) ; break ; case 10 : ; return ( 0 ) ; break ; case 9 : tmp___4 = strlen ( a ) ; i = tmp___4 - 1 ; { _1_isGreaterThan_next = 7 ; } break ; case 7 : ; if ( i >= 0 ) { { _1_isGreaterThan_next = 5 ; } } else { { _1_isGreaterThan_next = 0 ; } } break ; case 5 : ; if ( ( int ) * ( a + i ) > ( int ) * ( b + i ) ) { { _1_isGreaterThan_next = 4 ; } } else { { _1_isGreaterThan_next = 3 ; } } break ; case 4 : ; return ( 1 ) ; break ; case 3 : ; if ( ( int ) * ( a + i ) < ( int ) * ( b + i ) ) { { _1_isGreaterThan_next = 2 ; } } else { { _1_isGreaterThan_next = 1 ; } } break ; case 2 : ; return ( 0 ) ; break ; case 1 : i -- ; { _1_isGreaterThan_next = 7 ; } break ; case 0 : ; return ( -1 ) ; break ; } } } } void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } }
>>>Func
METHOD test
METHOD_RETURN void
PARAM void
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_test_next = 5
LITERAL 1 while (1)
IDENTIFIER _1_test_next switch(_1_test_next)
LITERAL 5 <empty>
<operator>.assignment sets[0][0] = 0
<operator>.assignment sets[0][1] = 0
<operator>.assignment sets[1][0] = 1
<operator>.assignment sets[1][1] = 1
<operator>.assignment sets[2][0] = 2
<operator>.assignment sets[2][1] = 10
<operator>.assignment sets[3][0] = 3
<operator>.assignment sets[3][1] = 11
<operator>.assignment sets[4][0] = 4
<operator>.assignment sets[4][1] = 100
<operator>.assignment sets[5][0] = 6
<operator>.assignment sets[5][1] = 110
<operator>.assignment sets[6][0] = 7
<operator>.assignment sets[6][1] = 111
<operator>.assignment i = 0
<operator>.assignment size = (int )(sizeof(sets) / sizeof(sets[0]))
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 1 <empty>
<operator>.assignment tmp = decimal_to_binary(sets[i][0])
assert assert(tmp == sets[i][1])
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return; return;
<operator>.assignment _1_test_next = 3
<operator>.lessThan i < size
<operator>.assignment _1_test_next = 3
<operator>.cast (int )(sizeof(sets) / sizeof(sets[0]))
BLOCK <empty> <empty>
decimal_to_binary decimal_to_binary(sets[i][0])
<operator>.equals tmp == sets[i][1]
<operator>.assignment _1_test_next = 1
BLOCK <empty> <empty>
<operator>.sizeOf sizeof(sets)
<operator>.sizeOf sizeof(sets[0])
<operator>.assignment _1_test_next = 0
>>>PDG&46 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->25 0->26 0->27 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->38 0->40 0->41 0->42 0->45 2->1 5->1 5->1 9->1 9->1 10->1 10->1 11->1 11->1 12->1 12->1 13->1 13->1 14->1 14->1 15->1 15->1 16->1 16->1 17->1 17->1 18->1 18->1 19->1 19->1 20->1 20->1 21->1 21->1 22->1 22->1 23->1 23->1 23->30 23->35 24->1 24->1 24->1 24->35 28->1 28->1 28->40 29->1 29->1 30->1 30->1 30->35 33->1 34->1 34->1 35->1 35->1 35->1 35->30 35->41 35->45 36->1 36->1 37->1 39->1 39->28 40->1 40->1 40->29 40->29 41->1 41->1 43->1 44->1 45->1 45->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int ( /* missing proto */ assert ) ( ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern int ( /* missing proto */ decimal_to_binary ) ( ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; void test ( void ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void test ( void ) { int sets [ 7 ] [ 2 ] ; int i ; int size ; int tmp ; unsigned long _1_test_next ; { { _1_test_next = 5 ; } while ( 1 ) { switch ( _1_test_next ) { case 5 : sets [ 0 ] [ 0 ] = 0 ; sets [ 0 ] [ 1 ] = 0 ; sets [ 1 ] [ 0 ] = 1 ; sets [ 1 ] [ 1 ] = 1 ; sets [ 2 ] [ 0 ] = 2 ; sets [ 2 ] [ 1 ] = 10 ; sets [ 3 ] [ 0 ] = 3 ; sets [ 3 ] [ 1 ] = 11 ; sets [ 4 ] [ 0 ] = 4 ; sets [ 4 ] [ 1 ] = 100 ; sets [ 5 ] [ 0 ] = 6 ; sets [ 5 ] [ 1 ] = 110 ; sets [ 6 ] [ 0 ] = 7 ; sets [ 6 ] [ 1 ] = 111 ; i = 0 ; size = ( int ) ( sizeof ( sets ) / sizeof ( sets [ 0 ] ) ) ; { _1_test_next = 3 ; } break ; case 3 : ; if ( i < size ) { { _1_test_next = 1 ; } } else { { _1_test_next = 0 ; } } break ; case 1 : tmp = decimal_to_binary ( sets [ i ] [ 0 ] ) ; assert ( tmp == sets [ i ] [ 1 ] ) ; i ++ ; { _1_test_next = 3 ; } break ; case 0 : ; return ; break ; } } } } void megaInit ( void ) { { } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD string_hash
METHOD_RETURN unsigned int
PARAM void *string
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_string_hash_next = 5
LITERAL 1 while (1)
IDENTIFIER _1_string_hash_next switch(_1_string_hash_next)
LITERAL 5 <empty>
<operator>.assignment result = 5381U
<operator>.assignment p = (unsigned char *)string
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 1 <empty>
<operator>.assignment result = ((result << 5) + result) + (unsigned int )*p
<operator>.postIncrement p ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (result); return (result);
<operator>.assignment _1_string_hash_next = 3
<operator>.notEquals (int )*p != 0
<operator>.assignment _1_string_hash_next = 3
IDENTIFIER result return (result);
<operator>.cast (unsigned char *)string
BLOCK <empty> <empty>
<operator>.addition ((result << 5) + result) + (unsigned int )*p
<operator>.cast (int )*p
<operator>.assignment _1_string_hash_next = 1
BLOCK <empty> <empty>
<operator>.addition (result << 5) + result
<operator>.cast (unsigned int )*p
<operator>.assignment _1_string_hash_next = 0
<operator>.shiftLeft result << 5
>>>PDG&33 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->27 0->28 0->29 0->31 0->32 2->1 2->10 2->23 5->1 5->1 9->1 9->1 9->22 9->32 10->1 10->1 10->1 10->15 14->1 14->1 14->1 14->22 14->32 15->1 15->1 18->1 19->1 19->1 20->1 20->1 20->27 20->31 21->1 21->1 22->18 23->1 25->1 25->1 26->1 27->1 27->1 29->1 30->1 31->1 31->1 32->14 32->14 32->25 32->25 32->29 32->29
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; unsigned int string_hash ( void * string ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } unsigned int string_hash ( void * string ) { unsigned int result ; unsigned char * p ; unsigned long _1_string_hash_next ; { { _1_string_hash_next = 5 ; } while ( 1 ) { switch ( _1_string_hash_next ) { case 5 : result = 5381U ; p = ( unsigned char * ) string ; { _1_string_hash_next = 3 ; } break ; case 3 : ; if ( ( int ) * p != 0 ) { { _1_string_hash_next = 1 ; } } else { { _1_string_hash_next = 0 ; } } break ; case 1 : result = ( ( result << 5 ) + result ) + ( unsigned int ) * p ; p ++ ; { _1_string_hash_next = 3 ; } break ; case 0 : ; return ( result ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD display
METHOD_RETURN void
PARAM int *array
PARAM int n
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_display_next = 6
LITERAL 1 while (1)
IDENTIFIER _1_display_next switch(_1_display_next)
LITERAL 6 <empty>
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
printf printf("%d "  *(array + i))
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("\n")
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return; return;
<operator>.assignment _1_display_next = 4
<operator>.lessThan i < n
<operator>.assignment _1_display_next = 4
<operator>.assignment _1_display_next = 0
BLOCK <empty> <empty>
<operator>.assignment _1_display_next = 2
BLOCK <empty> <empty>
<operator>.addition array + i
<operator>.assignment _1_display_next = 1
>>>PDG&31 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 2->1 2->29 3->1 3->23 6->1 6->1 10->1 10->1 10->15 10->23 10->29 14->1 14->1 15->1 15->1 15->23 15->29 18->1 21->1 22->1 22->1 23->1 23->1 23->1 23->15 23->27 23->29 23->30 24->1 24->1 25->1 25->1 27->1 27->1 29->1 30->1 30->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; void display ( int * array , int n ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } void display ( int * array , int n ) { int i ; unsigned long _1_display_next ; { { _1_display_next = 6 ; } while ( 1 ) { switch ( _1_display_next ) { case 6 : i = 0 ; { _1_display_next = 4 ; } break ; case 4 : ; if ( i < n ) { { _1_display_next = 2 ; } } else { { _1_display_next = 1 ; } } break ; case 2 : printf ( " " , * ( array + i ) ) ; i ++ ; { _1_display_next = 4 ; } break ; case 1 : printf ( " \n " ) ; { _1_display_next = 0 ; } break ; case 0 : ; return ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD pointer_equal
METHOD_RETURN int
PARAM void *location1
PARAM void *location2
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_pointer_equal_next = 0
LITERAL 1 while (1)
IDENTIFIER _1_pointer_equal_next switch(_1_pointer_equal_next)
LITERAL 0 <empty>
RETURN return ((unsigned long )location1 == (unsigned long )location2); return ((unsigned long )location1 == (unsigned long )location2);
<operator>.equals (unsigned long )location1 == (unsigned long )location2
<operator>.cast (unsigned long )location1
<operator>.cast (unsigned long )location2
>>>PDG&14 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->11 0->12 0->13 2->11 2->12 3->11 3->13 6->1 6->1 10->1 11->1 11->1 11->1 11->10 12->1 13->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; int pointer_equal ( void * location1 , void * location2 ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int pointer_equal ( void * location1 , void * location2 ) { unsigned long _1_pointer_equal_next ; { { _1_pointer_equal_next = 0 ; } while ( 1 ) { switch ( _1_pointer_equal_next ) { case 0 : ; return ( ( unsigned long ) location1 == ( unsigned long ) location2 ) ; break ; } } } } void megaInit ( void ) { { } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD test
METHOD_RETURN void
PARAM void
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_test_next = 11
LITERAL 1 while (1)
IDENTIFIER _1_test_next switch(_1_test_next)
LITERAL 11 <empty>
<operator>.assignment size = 10
<operator>.assignment tmp = calloc(size  sizeof(int ))
<operator>.assignment arr = (int *)tmp
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 9 <empty>
LITERAL 7 <empty>
<operator>.assignment tmp___0 = rand()
<operator>.assignment *(arr + i) = tmp___0 % 100
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 6 <empty>
bubbleSort bubbleSort(arr, size)
<operator>.assignment i___0 = 0
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
assert assert(*(arr + i___0) <= *(arr + (i___0 + 1)))
<operator>.postIncrement i___0 ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
free free(arr)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return; return;
<operator>.assignment _1_test_next = 9
<operator>.lessThan i < size
<operator>.assignment _1_test_next = 9
<operator>.assignment _1_test_next = 4
<operator>.lessThan i___0 < size - 1
<operator>.assignment _1_test_next = 4
<operator>.assignment _1_test_next = 0
calloc calloc(size  sizeof(int ))
<operator>.cast (int *)tmp
BLOCK <empty> <empty>
<operator>.modulo tmp___0 % 100
BLOCK <empty> <empty>
<operator>.lessEqualsThan *(arr + i___0) <= *(arr + (i___0 + 1))
<operator>.sizeOf sizeof(int )
<operator>.assignment _1_test_next = 7
BLOCK <empty> <empty>
<operator>.addition arr + i
<operator>.subtraction size - 1
<operator>.assignment _1_test_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_test_next = 6
<operator>.assignment _1_test_next = 1
<operator>.addition arr + i___0
<operator>.addition arr + (i___0 + 1)
<operator>.addition i___0 + 1
>>>PDG&59 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 2->1 5->1 5->1 9->1 9->10 9->21 9->35 9->41 9->51 10->1 10->1 10->11 10->42 11->1 11->1 11->1 11->21 11->30 11->50 11->56 11->57 12->1 12->1 12->18 12->35 12->50 16->1 16->1 16->44 17->1 17->1 17->1 18->1 18->1 18->35 18->50 21->1 21->1 21->1 21->30 21->35 21->50 21->51 21->56 21->57 22->1 22->1 22->27 22->38 22->56 22->57 22->58 26->1 26->1 27->1 27->1 27->38 27->56 27->57 27->58 30->1 30->21 30->50 30->56 30->57 33->1 34->1 34->1 35->1 35->1 35->1 35->18 35->21 35->48 35->50 35->51 35->54 36->1 36->1 37->1 37->1 38->1 38->1 38->1 38->27 38->52 38->55 38->56 38->57 38->58 39->1 39->1 40->1 40->1 41->1 42->1 44->1 44->17 44->17 46->1 46->1 46->26 46->26 47->1 48->1 48->1 50->1 51->1 51->21 51->35 51->38 51->38 52->1 52->1 54->1 54->1 55->1 55->1 57->1 57->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int ( /* missing proto */ calloc ) ( ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int ( /* missing proto */ assert ) ( ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int ( /* missing proto */ bubbleSort ) ( ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int ( /* missing proto */ rand ) ( ) ; extern int ( /* missing proto */ free ) ( ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern double strtod ( char const * str , char const * endptr ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; void test ( void ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } } void test ( void ) { int size ; int * arr ; int tmp ; int i ; int tmp___0 ; int i___0 ; unsigned long _1_test_next ; { { _1_test_next = 11 ; } while ( 1 ) { switch ( _1_test_next ) { case 11 : size = 10 ; tmp = calloc ( size , sizeof ( int ) ) ; arr = ( int * ) tmp ; i = 0 ; { _1_test_next = 9 ; } break ; case 9 : ; if ( i < size ) { { _1_test_next = 7 ; } } else { { _1_test_next = 6 ; } } break ; case 7 : tmp___0 = rand ( ) ; * ( arr + i ) = tmp___0 % 100 ; i ++ ; { _1_test_next = 9 ; } break ; case 6 : bubbleSort ( arr , size ) ; i___0 = 0 ; { _1_test_next = 4 ; } break ; case 4 : ; if ( i___0 < size - 1 ) { { _1_test_next = 2 ; } } else { { _1_test_next = 1 ; } } break ; case 2 : assert ( * ( arr + i___0 ) <= * ( arr + ( i___0 + 1 ) ) ) ; i___0 ++ ; { _1_test_next = 4 ; } break ; case 1 : free ( arr ) ; { _1_test_next = 0 ; } break ; case 0 : ; return ; break ; } } } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 1 <empty>
printf printf("Number: ")
scanf scanf("%d", & number)
<operator>.assignment tmp = fib(number)
printf printf("%d \n", tmp)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
fib fib(number)
>>>PDG&26 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->19 0->20 0->21 0->22 0->23 0->24 0->25 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 17->1 17->25 18->1 18->1 18->19 19->1 19->1 22->1 23->1 23->1 24->22 25->1 25->17 25->18
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ fib ) ( ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int ( /* missing proto */ scanf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern double log ( double x ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { int number ; int tmp ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 1 ; } while ( 1 ) { switch ( _1_main_next ) { case 1 : printf ( " " ) ; scanf ( " " , & number ) ; tmp = fib ( number ) ; printf ( " \n " , tmp ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD my_free
METHOD_RETURN void
PARAM void *p
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_my_free_next = 3
LITERAL 1 while (1)
IDENTIFIER _1_my_free_next switch(_1_my_free_next)
LITERAL 3 <empty>
LITERAL 2 <empty>
my_free_hook my_free_hook(p)
BLOCK <empty> <empty>
LITERAL 1 <empty>
free free(p)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return; return;
<operator>.assignment _1_my_free_next = 0
<operator>.assignment _1_my_free_next = 0
BLOCK <empty> <empty>
<operator>.assignment _1_my_free_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_my_free_next = 1
<operator>.addressOf & my_free_hook
>>>PDG&24 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 2->1 2->10 2->13 5->1 5->1 10->1 10->1 10->13 13->1 13->10 16->1 17->1 17->1 18->1 18->1 20->1 20->1 22->1 22->1 23->20 23->22
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; void my_free ( void * p ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern int ( /* missing proto */ free ) ( ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ my_free_hook ) ( ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void my_free ( void * p ) { unsigned long _1_my_free_next ; { { _1_my_free_next = 3 ; } while ( 1 ) { switch ( _1_my_free_next ) { case 3 : ; if ( & my_free_hook ) { { _1_my_free_next = 2 ; } } else { { _1_my_free_next = 1 ; } } break ; case 2 : my_free_hook ( p ) ; { _1_my_free_next = 0 ; } break ; case 1 : free ( p ) ; { _1_my_free_next = 0 ; } break ; case 0 : ; return ; break ; } } } } void megaInit ( void ) { { } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 6
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 6 <empty>
<operator>.assignment sum = 0
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
<operator>.assignmentPlus sum += i
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("Sum is: %d\n", sum)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 4
<operator>.lessThan i < (int )*(*(argv + 1) + 0)
<operator>.assignment _1_main_next = 4
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
BLOCK <empty> <empty>
<operator>.cast (int )*(*(argv + 1) + 0)
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
<operator>.addition *(argv + 1) + 0
<operator>.addition argv + 1
>>>PDG&41 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->36 0->37 0->38 0->39 0->40 2->7 3->8 3->40 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->21 16->25 17->1 17->1 17->21 17->22 17->30 21->1 21->1 21->25 22->1 22->1 22->21 22->30 25->1 25->1 25->21 28->1 29->1 29->1 30->1 30->1 30->1 30->21 30->22 30->36 30->38 31->1 31->1 32->1 32->1 33->28 35->1 36->1 36->1 38->1 38->1 39->1 40->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern double log ( double x ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int argc , char * * argv , char * * _formal_envp ) { int i ; int sum ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 6 ; } while ( 1 ) { switch ( _1_main_next ) { case 6 : sum = 0 ; i = 0 ; { _1_main_next = 4 ; } break ; case 4 : ; if ( i < ( int ) * ( * ( argv + 1 ) + 0 ) ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : sum += i ; i ++ ; { _1_main_next = 4 ; } break ; case 1 : printf ( " \n " , sum ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 21
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 21 <empty>
<operator>.assignment a[0] = 1
<operator>.assignment counter = 0
printf printf("Enter a whole number to Find its Factorial: ")
scanf scanf("%d", & n)
BLOCK <empty> <empty>
LITERAL 20 <empty>
LITERAL 19 <empty>
printf printf("Cannot Calculate factorials for negative numbers.")
BLOCK <empty> <empty>
LITERAL 17 <empty>
LITERAL 15 <empty>
<operator>.assignment temp = 0
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 13 <empty>
LITERAL 11 <empty>
<operator>.assignment temp = a[i] * n + temp
<operator>.assignment a[i] = temp % 10
<operator>.assignmentDivision temp /= 10
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 9 <empty>
LITERAL 7 <empty>
<operator>.postIncrement counter ++
<operator>.assignment a[counter] = temp % 10
<operator>.assignmentDivision temp /= 10
BLOCK <empty> <empty>
LITERAL 6 <empty>
<operator>.postDecrement n --
BLOCK <empty> <empty>
LITERAL 5 <empty>
<operator>.assignment i = counter
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 1 <empty>
printf printf("%d", a[i])
<operator>.postDecrement i --
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 20
<operator>.lessThan n < 0
<operator>.assignment _1_main_next = 0
<operator>.greaterEqualsThan n >= 2
<operator>.assignment _1_main_next = 13
<operator>.lessEqualsThan i <= counter
<operator>.assignment _1_main_next = 13
<operator>.greaterThan temp > 0
<operator>.assignment _1_main_next = 9
<operator>.assignment _1_main_next = 17
<operator>.assignment _1_main_next = 3
<operator>.greaterEqualsThan i >= 0
<operator>.assignment _1_main_next = 3
LITERAL 0 return (0);
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.addition a[i] * n + temp
<operator>.modulo temp % 10
BLOCK <empty> <empty>
<operator>.modulo temp % 10
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 19
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 15
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 11
BLOCK <empty> <empty>
<operator>.multiplication a[i] * n
<operator>.assignment _1_main_next = 7
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 17
<operator>.assignment _1_main_next = 5
<operator>.assignment _1_main_next = 9
<operator>.assignment _1_main_next = 6
<operator>.assignment _1_main_next = 0
>>>PDG&94 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->34 0->35 0->36 0->37 0->38 0->39 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 0->59 0->60 0->61 0->62 0->63 0->64 0->65 0->66 0->67 0->68 0->69 0->70 0->71 0->72 0->73 0->74 0->75 0->76 0->77 0->78 0->79 0->80 0->81 0->82 0->83 0->84 0->85 0->86 0->87 0->88 0->89 0->90 0->91 0->92 0->93 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 17->1 17->1 17->39 17->47 17->61 18->1 19->1 19->44 19->57 19->59 19->84 23->1 27->1 27->1 27->32 27->63 27->73 27->76 28->1 28->1 28->35 28->52 28->61 28->67 32->1 32->1 32->74 33->1 33->1 33->1 33->51 33->84 34->1 34->1 34->32 34->63 34->73 34->76 35->1 35->1 35->52 35->61 35->67 39->1 39->1 39->47 39->61 40->1 40->1 40->1 41->1 41->1 41->32 41->63 41->73 41->76 44->1 44->1 44->19 44->57 44->59 44->84 47->1 47->1 47->1 47->35 47->52 47->61 47->67 51->1 51->1 51->84 52->1 52->1 52->35 52->61 52->67 55->1 56->1 56->1 57->1 57->1 57->19 57->44 57->59 57->78 57->84 57->89 58->1 58->1 59->1 59->1 59->19 59->44 59->57 59->80 59->84 59->90 60->1 60->1 61->1 61->1 61->1 61->35 61->39 61->47 61->52 61->67 61->82 61->91 62->1 62->1 63->1 63->1 63->32 63->73 63->76 63->85 63->92 64->1 64->1 65->1 65->1 66->1 66->1 67->1 67->1 67->35 67->52 67->61 67->87 67->93 68->1 68->1 69->55 73->1 74->33 74->33 74->34 76->40 76->40 76->41 78->1 78->1 80->1 80->1 82->1 82->1 84->1 84->19 84->32 84->32 84->44 84->57 84->59 84->73 84->73 85->1 85->1 87->1 87->1 89->1 89->1 90->1 90->1 91->1 91->1 92->1 92->1 93->1 93->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int ( /* missing proto */ scanf ) ( ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { int a [ 200 ] ; int n ; int counter ; int temp ; int i ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 21 ; } while ( 1 ) { switch ( _1_main_next ) { case 21 : a [ 0 ] = 1 ; counter = 0 ; printf ( " " ) ; scanf ( " " , & n ) ; { _1_main_next = 20 ; } break ; case 20 : ; if ( n < 0 ) { { _1_main_next = 19 ; } } else { { _1_main_next = 17 ; } } break ; case 19 : printf ( " " ) ; { _1_main_next = 0 ; } break ; case 17 : ; if ( n >= 2 ) { { _1_main_next = 15 ; } } else { { _1_main_next = 5 ; } } break ; case 15 : temp = 0 ; i = 0 ; { _1_main_next = 13 ; } break ; case 13 : ; if ( i <= counter ) { { _1_main_next = 11 ; } } else { { _1_main_next = 9 ; } } break ; case 11 : temp = a [ i ] * n + temp ; a [ i ] = temp % 10 ; temp /= 10 ; i ++ ; { _1_main_next = 13 ; } break ; case 9 : ; if ( temp > 0 ) { { _1_main_next = 7 ; } } else { { _1_main_next = 6 ; } } break ; case 7 : counter ++ ; a [ counter ] = temp % 10 ; temp /= 10 ; { _1_main_next = 9 ; } break ; case 6 : n -- ; { _1_main_next = 17 ; } break ; case 5 : i = counter ; { _1_main_next = 3 ; } break ; case 3 : ; if ( i >= 0 ) { { _1_main_next = 1 ; } } else { { _1_main_next = 0 ; } } break ; case 1 : printf ( " " , a [ i ] ) ; i -- ; { _1_main_next = 3 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD sort
METHOD_RETURN void
PARAM int *a
PARAM int n
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_sort_next = 5
LITERAL 1 while (1)
IDENTIFIER _1_sort_next switch(_1_sort_next)
LITERAL 5 <empty>
BLOCK <empty> <empty>
LITERAL 4 <empty>
<operator>.assignment tmp = check_sorted(a, n)
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 1 <empty>
shuffle shuffle(a, n)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return; return;
<operator>.assignment _1_sort_next = 4
<operator>.assignment _1_sort_next = 3
IDENTIFIER tmp if (tmp)
<operator>.assignment _1_sort_next = 4
check_sorted check_sorted(a, n)
BLOCK <empty> <empty>
<operator>.assignment _1_sort_next = 0
BLOCK <empty> <empty>
<operator>.assignment _1_sort_next = 1
>>>PDG&29 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 2->1 2->16 2->24 3->1 3->16 3->24 6->1 6->1 12->1 12->1 12->1 16->1 16->1 16->1 16->24 16->24 19->1 20->1 20->1 21->1 21->1 23->1 23->1 24->1 24->1 24->12 24->12 24->16 24->16 26->1 26->1 28->1 28->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; void sort ( int * a , int n ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int ( /* missing proto */ check_sorted ) ( ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int ( /* missing proto */ shuffle ) ( ) ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void sort ( int * a , int n ) { int tmp ; unsigned long _1_sort_next ; { { _1_sort_next = 5 ; } while ( 1 ) { switch ( _1_sort_next ) { case 5 : ; { _1_sort_next = 4 ; } break ; case 4 : tmp = check_sorted ( a , n ) ; { _1_sort_next = 3 ; } break ; case 3 : ; if ( tmp ) { { _1_sort_next = 0 ; } } else { { _1_sort_next = 1 ; } } break ; case 1 : shuffle ( a , n ) ; { _1_sort_next = 4 ; } break ; case 0 : ; return ; break ; } } } } void megaInit ( void ) { { } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 1 <empty>
setup setup()
solve solve()
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
>>>PDG&23 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 17->1 20->1 21->1 21->1 22->20
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int ( /* missing proto */ solve ) ( ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int ( /* missing proto */ setup ) ( ) ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 1 ; } while ( 1 ) { switch ( _1_main_next ) { case 1 : setup ( ) ; solve ( ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD myAtoi
METHOD_RETURN int
PARAM char *str
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_myAtoi_next = 39
LITERAL 1 while (1)
IDENTIFIER _1_myAtoi_next switch(_1_myAtoi_next)
LITERAL 39 <empty>
<operator>.assignment minusFlag = 0
<operator>.assignment tmp = strlen(str)
<operator>.assignment length = tmp
<operator>.assignment result = 0L
<operator>.assignment counter = 0
BLOCK <empty> <empty>
LITERAL 37 <empty>
LITERAL 35 <empty>
<operator>.postIncrement counter ++
BLOCK <empty> <empty>
LITERAL 34 <empty>
<operator>.assignmentPlus str += counter
<operator>.assignment counter = 0
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 32 <empty>
LITERAL 30 <empty>
LITERAL 29 <empty>
LITERAL 28 <empty>
<operator>.assignment minusFlag = 1
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 27 <empty>
LITERAL 26 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 25 <empty>
LITERAL 24 <empty>
LITERAL 23 <empty>
RETURN return ((-0x7FFFFFFF-1)); return ((-0x7FFFFFFF-1));
LITERAL 22 <empty>
RETURN return (2147483647); return (2147483647);
LITERAL 21 <empty>
LITERAL 19 <empty>
LITERAL 17 <empty>
LITERAL 16 <empty>
LITERAL 14 <empty>
<operator>.assignment numberBuffer[counter] = *(str + i)
<operator>.postIncrement counter ++
BLOCK <empty> <empty>
LITERAL 13 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 12 <empty>
<operator>.assignment i___0 = 0
BLOCK <empty> <empty>
LITERAL 10 <empty>
LITERAL 8 <empty>
LITERAL 7 <empty>
<operator>.assignment tmp___0 = pow(10.0, counter - 1)
<operator>.assignmentMinus result -= (long )(((int )numberBuffer[i___0] - 48) * tmp___0)
BLOCK <empty> <empty>
LITERAL 6 <empty>
<operator>.assignment tmp___1 = pow(10.0, counter - 1)
<operator>.assignmentPlus result += (long )(((int )numberBuffer[i___0] - 48) * tmp___1)
BLOCK <empty> <empty>
LITERAL 5 <empty>
<operator>.postIncrement i___0 ++
<operator>.postDecrement counter --
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 3 <empty>
RETURN return (2147483647); return (2147483647);
LITERAL 2 <empty>
LITERAL 1 <empty>
RETURN return ((-0x7FFFFFFF-1)); return ((-0x7FFFFFFF-1));
LITERAL 0 <empty>
RETURN return ((int )result); return ((int )result);
<operator>.assignment _1_myAtoi_next = 37
<operator>.equals (int )*(str + counter) == 32
<operator>.assignment _1_myAtoi_next = 37
<operator>.assignment _1_myAtoi_next = 32
<operator>.lessThan i < length
<operator>.equals i == 0
<operator>.equals (int )*(str + 0) == 45
<operator>.assignment _1_myAtoi_next = 25
<operator>.equals (int )*(str + 0) == 43
<operator>.assignment _1_myAtoi_next = 25
<operator>.greaterThan counter > 10
IDENTIFIER minusFlag if (minusFlag)
<operator>.subtraction -0x7FFFFFFF-1
LITERAL 2147483647 return (2147483647);
<operator>.lessThan (int )*(str + i) < 48
<operator>.greaterThan (int )*(str + i) > 57
<operator>.equals counter == 0
<operator>.equals (int )*(str + i) == 48
<operator>.assignment _1_myAtoi_next = 13
<operator>.assignment _1_myAtoi_next = 32
<operator>.assignment _1_myAtoi_next = 10
<operator>.greaterThan counter > 0
IDENTIFIER minusFlag if (minusFlag)
<operator>.assignment _1_myAtoi_next = 5
<operator>.assignment _1_myAtoi_next = 5
<operator>.assignment _1_myAtoi_next = 10
<operator>.greaterThan result > 2147483647L
LITERAL 2147483647 return (2147483647);
<operator>.lessThan result < (-0x7FFFFFFF-1)
<operator>.subtraction -0x7FFFFFFF-1
<operator>.cast (int )result
strlen strlen(str)
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
pow pow(10.0, counter - 1)
<operator>.cast (long )(((int )numberBuffer[i___0] - 48) * tmp___0)
pow pow(10.0, counter - 1)
<operator>.cast (long )(((int )numberBuffer[i___0] - 48) * tmp___1)
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.cast (int )*(str + counter)
<operator>.assignment _1_myAtoi_next = 35
BLOCK <empty> <empty>
<operator>.assignment _1_myAtoi_next = 30
BLOCK <empty> <empty>
<operator>.assignment _1_myAtoi_next = 29
BLOCK <empty> <empty>
<operator>.cast (int )*(str + 0)
<operator>.assignment _1_myAtoi_next = 28
BLOCK <empty> <empty>
<operator>.cast (int )*(str + 0)
<operator>.assignment _1_myAtoi_next = 26
BLOCK <empty> <empty>
<operator>.assignment _1_myAtoi_next = 24
BLOCK <empty> <empty>
<operator>.assignment _1_myAtoi_next = 23
BLOCK <empty> <empty>
<operator>.minus -0x7FFFFFFF
<operator>.cast (int )*(str + i)
<operator>.assignment _1_myAtoi_next = 12
BLOCK <empty> <empty>
<operator>.cast (int )*(str + i)
<operator>.assignment _1_myAtoi_next = 12
BLOCK <empty> <empty>
<operator>.assignment _1_myAtoi_next = 16
BLOCK <empty> <empty>
<operator>.cast (int )*(str + i)
<operator>.assignment _1_myAtoi_next = 13
BLOCK <empty> <empty>
<operator>.addition str + i
<operator>.assignment _1_myAtoi_next = 8
BLOCK <empty> <empty>
<operator>.assignment _1_myAtoi_next = 7
BLOCK <empty> <empty>
<operator>.subtraction counter - 1
<operator>.multiplication ((int )numberBuffer[i___0] - 48) * tmp___0
<operator>.subtraction counter - 1
<operator>.multiplication ((int )numberBuffer[i___0] - 48) * tmp___1
<operator>.assignment _1_myAtoi_next = 3
BLOCK <empty> <empty>
<operator>.subtraction -0x7FFFFFFF-1
<operator>.assignment _1_myAtoi_next = 1
BLOCK <empty> <empty>
<operator>.minus -0x7FFFFFFF
<operator>.assignment _1_myAtoi_next = 34
<operator>.assignment _1_myAtoi_next = 12
<operator>.assignment _1_myAtoi_next = 25
<operator>.assignment _1_myAtoi_next = 27
<operator>.assignment _1_myAtoi_next = 25
<operator>.assignment _1_myAtoi_next = 21
<operator>.assignment _1_myAtoi_next = 22
<operator>.assignment _1_myAtoi_next = 19
<operator>.assignment _1_myAtoi_next = 17
<operator>.assignment _1_myAtoi_next = 14
<operator>.assignment _1_myAtoi_next = 14
<operator>.assignment _1_myAtoi_next = 4
<operator>.assignment _1_myAtoi_next = 6
<operator>.subtraction (int )numberBuffer[i___0] - 48
<operator>.subtraction (int )numberBuffer[i___0] - 48
<operator>.assignment _1_myAtoi_next = 2
<operator>.minus -0x7FFFFFFF
<operator>.assignment _1_myAtoi_next = 0
<operator>.addition str + counter
<operator>.addition str + 0
<operator>.addition str + 0
<operator>.addition str + i
<operator>.addition str + i
<operator>.addition str + i
<operator>.cast (int )numberBuffer[i___0]
<operator>.cast (int )numberBuffer[i___0]
>>>PDG&198 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->59 0->60 0->61 0->63 0->64 0->65 0->66 0->67 0->68 0->69 0->70 0->71 0->72 0->73 0->75 0->77 0->78 0->79 0->80 0->81 0->82 0->83 0->84 0->85 0->86 0->87 0->88 0->89 0->90 0->91 0->92 0->93 0->94 0->95 0->96 0->97 0->98 0->99 0->100 0->101 0->102 0->103 0->104 0->105 0->106 0->107 0->108 0->109 0->110 0->111 0->112 0->113 0->114 0->115 0->116 0->117 0->118 0->119 0->120 0->121 0->122 0->124 0->126 0->127 0->129 0->130 0->131 0->132 0->133 0->134 0->136 0->137 0->139 0->140 0->141 0->142 0->143 0->144 0->145 0->147 0->148 0->150 0->151 0->152 0->153 0->155 0->156 0->157 0->158 0->159 0->160 0->161 0->162 0->163 0->164 0->165 0->166 0->167 0->168 0->169 0->170 0->171 0->172 0->173 0->174 0->175 0->176 0->177 0->178 0->179 0->180 0->181 0->182 0->183 0->184 0->185 0->186 0->187 0->188 0->189 0->190 0->191 0->192 0->193 0->194 0->195 2->1 2->20 2->108 2->157 2->190 2->191 2->192 2->193 2->194 2->195 5->1 5->1 9->1 9->1 10->1 10->1 10->11 11->1 11->1 11->1 11->81 12->1 12->1 12->59 12->63 12->103 12->105 12->107 13->1 13->1 13->17 13->20 13->47 13->67 13->87 13->93 13->98 13->162 13->164 13->190 17->1 17->1 17->20 17->47 17->67 17->87 17->93 17->98 17->162 17->164 17->190 20->1 20->1 20->108 20->157 20->190 20->191 20->192 20->193 20->194 20->195 21->1 21->1 21->17 21->20 21->47 21->67 21->87 21->93 21->98 21->162 21->164 21->190 22->1 22->1 22->29 22->33 22->50 22->81 22->82 22->157 22->193 22->194 22->195 28->1 28->1 29->1 29->1 29->33 29->50 29->81 29->82 29->157 29->193 29->194 29->195 33->1 33->1 33->29 33->50 33->81 33->82 33->157 33->193 33->194 33->195 38->1 40->1 46->1 46->1 46->1 47->1 47->1 47->17 47->20 47->67 47->87 47->93 47->98 47->162 47->164 47->190 50->1 50->1 50->29 50->33 50->81 50->82 50->157 50->193 50->194 50->195 53->1 53->1 53->66 58->1 58->1 58->163 59->1 59->1 59->1 59->63 59->103 59->105 59->107 62->1 62->1 62->165 63->1 63->1 63->1 63->59 63->103 63->105 63->107 66->1 66->1 67->1 67->1 67->17 67->20 67->47 67->87 67->93 67->98 67->162 67->164 67->190 71->1 74->1 76->1 77->1 77->1 78->1 78->1 78->129 78->172 79->1 79->1 80->1 80->1 81->1 81->1 81->1 81->29 81->33 81->50 81->82 81->131 81->157 81->173 81->193 81->194 81->195 82->1 82->1 82->29 82->33 82->50 82->81 82->133 82->157 82->174 82->193 82->194 82->195 83->1 83->1 83->136 83->175 84->1 84->1 85->1 85->1 85->139 85->176 86->1 86->1 87->1 87->1 87->17 87->20 87->47 87->67 87->93 87->98 87->141 87->162 87->164 87->177 87->190 89->1 89->1 89->38 90->40 91->1 91->1 91->147 91->179 92->1 92->1 92->150 92->180 93->1 93->1 93->17 93->20 93->47 93->67 93->87 93->98 93->152 93->162 93->164 93->181 93->190 94->1 94->1 94->155 94->182 95->1 95->1 96->1 96->1 97->1 97->1 98->1 98->1 98->17 98->20 98->47 98->67 98->87 98->93 98->158 98->162 98->164 98->183 98->190 100->1 100->1 101->1 101->1 102->1 102->1 103->1 103->1 103->59 103->63 103->105 103->107 103->166 103->187 104->71 105->1 105->1 105->59 105->63 105->103 105->107 105->169 105->189 106->74 107->76 108->1 108->10 108->20 108->157 108->190 108->191 108->192 108->193 108->194 108->195 122->1 122->58 122->58 123->1 124->1 124->62 124->62 125->1 128->1 129->1 129->1 131->1 131->1 133->1 133->1 135->1 136->1 136->1 138->1 139->1 139->1 141->1 141->1 143->1 143->1 145->89 146->1 147->1 147->1 149->1 150->1 150->1 152->1 152->1 154->1 155->1 155->1 157->1 157->1 158->1 158->1 160->1 160->1 162->1 162->17 162->20 162->47 162->67 162->87 162->93 162->98 162->122 162->122 162->164 162->190 163->1 163->1 163->59 163->59 163->123 163->123 164->1 164->17 164->20 164->47 164->67 164->87 164->93 164->98 164->124 164->124 164->162 164->190 165->1 165->1 165->63 165->63 165->125 165->125 166->1 166->1 168->105 168->105 169->1 169->1 171->106 172->1 172->1 173->1 173->1 174->1 174->1 175->1 175->1 176->1 176->1 177->1 177->1 178->1 178->1 179->1 179->1 180->1 180->1 181->1 181->1 182->1 182->1 183->1 183->1 184->1 184->1 185->1 185->163 185->163 186->1 186->165 186->165 187->1 187->1 188->168 189->1 189->1 190->1 190->1 191->1 192->1 193->1 193->1 194->1 194->1 195->1 195->1 196->1 197->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern int ( /* missing proto */ strlen ) ( ) ; void main ( void ) ; extern int ( /* missing proto */ pow ) ( ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; int myAtoi ( char * str ) ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } int myAtoi ( char * str ) { int minusFlag ; int length ; int tmp ; long result ; char numberBuffer [ 11 ] ; int counter ; int i ; int i___0 ; int tmp___0 ; int tmp___1 ; unsigned long _1_myAtoi_next ; { { _1_myAtoi_next = 39 ; } while ( 1 ) { switch ( _1_myAtoi_next ) { case 39 : minusFlag = 0 ; tmp = strlen ( str ) ; length = tmp ; result = 0L ; counter = 0 ; { _1_myAtoi_next = 37 ; } break ; case 37 : ; if ( ( int ) * ( str + counter ) == 32 ) { { _1_myAtoi_next = 35 ; } } else { { _1_myAtoi_next = 34 ; } } break ; case 35 : counter ++ ; { _1_myAtoi_next = 37 ; } break ; case 34 : str += counter ; counter = 0 ; i = 0 ; { _1_myAtoi_next = 32 ; } break ; case 32 : ; if ( i < length ) { { _1_myAtoi_next = 30 ; } } else { { _1_myAtoi_next = 12 ; } } break ; case 30 : ; if ( i == 0 ) { { _1_myAtoi_next = 29 ; } } else { { _1_myAtoi_next = 25 ; } } break ; case 29 : ; if ( ( int ) * ( str + 0 ) == 45 ) { { _1_myAtoi_next = 28 ; } } else { { _1_myAtoi_next = 27 ; } } break ; case 28 : minusFlag = 1 ; i ++ ; { _1_myAtoi_next = 25 ; } break ; case 27 : ; if ( ( int ) * ( str + 0 ) == 43 ) { { _1_myAtoi_next = 26 ; } } else { { _1_myAtoi_next = 25 ; } } break ; case 26 : i ++ ; { _1_myAtoi_next = 25 ; } break ; case 25 : ; if ( counter > 10 ) { { _1_myAtoi_next = 24 ; } } else { { _1_myAtoi_next = 21 ; } } break ; case 24 : ; if ( minusFlag ) { { _1_myAtoi_next = 23 ; } } else { { _1_myAtoi_next = 22 ; } } break ; case 23 : ; return ( ( -0x7FFFFFFF - 1 ) ) ; break ; case 22 : ; return ( 2147483647 ) ; break ; case 21 : ; if ( ( int ) * ( str + i ) < 48 ) { { _1_myAtoi_next = 12 ; } } else { { _1_myAtoi_next = 19 ; } } break ; case 19 : ; if ( ( int ) * ( str + i ) > 57 ) { { _1_myAtoi_next = 12 ; } } else { { _1_myAtoi_next = 17 ; } } break ; case 17 : ; if ( counter == 0 ) { { _1_myAtoi_next = 16 ; } } else { { _1_myAtoi_next = 14 ; } } break ; case 16 : ; if ( ( int ) * ( str + i ) == 48 ) { { _1_myAtoi_next = 13 ; } } else { { _1_myAtoi_next = 14 ; } } break ; case 14 : numberBuffer [ counter ] = * ( str + i ) ; counter ++ ; { _1_myAtoi_next = 13 ; } break ; case 13 : __Cont : /* CIL Label */ i ++ ; { _1_myAtoi_next = 32 ; } break ; case 12 : i___0 = 0 ; { _1_myAtoi_next = 10 ; } break ; case 10 : ; if ( counter > 0 ) { { _1_myAtoi_next = 8 ; } } else { { _1_myAtoi_next = 4 ; } } break ; case 8 : ; if ( minusFlag ) { { _1_myAtoi_next = 7 ; } } else { { _1_myAtoi_next = 6 ; } } break ; case 7 : tmp___0 = pow ( 10.0 , counter - 1 ) ; result -= ( long ) ( ( ( int ) numberBuffer [ i___0 ] - 48 ) * tmp___0 ) ; { _1_myAtoi_next = 5 ; } break ; case 6 : tmp___1 = pow ( 10.0 , counter - 1 ) ; result += ( long ) ( ( ( int ) numberBuffer [ i___0 ] - 48 ) * tmp___1 ) ; { _1_myAtoi_next = 5 ; } break ; case 5 : i___0 ++ ; counter -- ; { _1_myAtoi_next = 10 ; } break ; case 4 : ; if ( result > 2147483647L ) { { _1_myAtoi_next = 3 ; } } else { { _1_myAtoi_next = 2 ; } } break ; case 3 : ; return ( 2147483647 ) ; break ; case 2 : ; if ( result < ( -0x7FFFFFFF - 1 ) ) { { _1_myAtoi_next = 1 ; } } else { { _1_myAtoi_next = 0 ; } } break ; case 1 : ; return ( ( -0x7FFFFFFF - 1 ) ) ; break ; case 0 : ; return ( ( int ) result ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD test
METHOD_RETURN void
PARAM void
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_test_next = 11
LITERAL 1 while (1)
IDENTIFIER _1_test_next switch(_1_test_next)
LITERAL 11 <empty>
<operator>.assignment size = 10
<operator>.assignment tmp = calloc(size  sizeof(int ))
<operator>.assignment arr = (int *)tmp
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 9 <empty>
LITERAL 7 <empty>
<operator>.assignment tmp___0 = rand()
<operator>.assignment *(arr + i) = tmp___0 % 100
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 6 <empty>
bubbleSort bubbleSort(arr, size)
<operator>.assignment i___0 = 0
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
assert assert(*(arr + i___0) <= *(arr + (i___0 + 1)))
<operator>.postIncrement i___0 ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
free free(arr)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return; return;
<operator>.assignment _1_test_next = 9
<operator>.lessThan i < size
<operator>.assignment _1_test_next = 9
<operator>.assignment _1_test_next = 4
<operator>.lessThan i___0 < size - 1
<operator>.assignment _1_test_next = 4
<operator>.assignment _1_test_next = 0
calloc calloc(size  sizeof(int ))
<operator>.cast (int *)tmp
BLOCK <empty> <empty>
<operator>.modulo tmp___0 % 100
BLOCK <empty> <empty>
<operator>.lessEqualsThan *(arr + i___0) <= *(arr + (i___0 + 1))
<operator>.sizeOf sizeof(int )
<operator>.assignment _1_test_next = 7
BLOCK <empty> <empty>
<operator>.addition arr + i
<operator>.subtraction size - 1
<operator>.assignment _1_test_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_test_next = 6
<operator>.assignment _1_test_next = 1
<operator>.addition arr + i___0
<operator>.addition arr + (i___0 + 1)
<operator>.addition i___0 + 1
>>>PDG&59 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 2->1 5->1 5->1 9->1 9->10 9->21 9->35 9->41 9->51 10->1 10->1 10->11 10->42 11->1 11->1 11->1 11->21 11->30 11->50 11->56 11->57 12->1 12->1 12->18 12->35 12->50 16->1 16->1 16->44 17->1 17->1 17->1 18->1 18->1 18->35 18->50 21->1 21->1 21->1 21->30 21->35 21->50 21->51 21->56 21->57 22->1 22->1 22->27 22->38 22->56 22->57 22->58 26->1 26->1 27->1 27->1 27->38 27->56 27->57 27->58 30->1 30->21 30->50 30->56 30->57 33->1 34->1 34->1 35->1 35->1 35->1 35->18 35->21 35->48 35->50 35->51 35->54 36->1 36->1 37->1 37->1 38->1 38->1 38->1 38->27 38->52 38->55 38->56 38->57 38->58 39->1 39->1 40->1 40->1 41->1 42->1 44->1 44->17 44->17 46->1 46->1 46->26 46->26 47->1 48->1 48->1 50->1 51->1 51->21 51->35 51->38 51->38 52->1 52->1 54->1 54->1 55->1 55->1 57->1 57->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int ( /* missing proto */ calloc ) ( ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int ( /* missing proto */ assert ) ( ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int ( /* missing proto */ bubbleSort ) ( ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int ( /* missing proto */ rand ) ( ) ; extern int ( /* missing proto */ free ) ( ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern double strtod ( char const * str , char const * endptr ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; void test ( void ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } } void test ( void ) { int size ; int * arr ; int tmp ; int i ; int tmp___0 ; int i___0 ; unsigned long _1_test_next ; { { _1_test_next = 11 ; } while ( 1 ) { switch ( _1_test_next ) { case 11 : size = 10 ; tmp = calloc ( size , sizeof ( int ) ) ; arr = ( int * ) tmp ; i = 0 ; { _1_test_next = 9 ; } break ; case 9 : ; if ( i < size ) { { _1_test_next = 7 ; } } else { { _1_test_next = 6 ; } } break ; case 7 : tmp___0 = rand ( ) ; * ( arr + i ) = tmp___0 % 100 ; i ++ ; { _1_test_next = 9 ; } break ; case 6 : bubbleSort ( arr , size ) ; i___0 = 0 ; { _1_test_next = 4 ; } break ; case 4 : ; if ( i___0 < size - 1 ) { { _1_test_next = 2 ; } } else { { _1_test_next = 1 ; } } break ; case 2 : assert ( * ( arr + i___0 ) <= * ( arr + ( i___0 + 1 ) ) ) ; i___0 ++ ; { _1_test_next = 4 ; } break ; case 1 : free ( arr ) ; { _1_test_next = 0 ; } break ; case 0 : ; return ; break ; } } } }
>>>Func
METHOD display
METHOD_RETURN void
PARAM int const   *arr
PARAM int n
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_display_next = 6
LITERAL 1 while (1)
IDENTIFIER _1_display_next switch(_1_display_next)
LITERAL 6 <empty>
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
printf printf("%d "  *(arr + i))
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("\n")
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return; return;
<operator>.assignment _1_display_next = 4
<operator>.lessThan i < n
<operator>.assignment _1_display_next = 4
<operator>.assignment _1_display_next = 0
BLOCK <empty> <empty>
<operator>.assignment _1_display_next = 2
BLOCK <empty> <empty>
<operator>.addition arr + i
<operator>.assignment _1_display_next = 1
>>>PDG&31 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 2->1 2->29 3->1 3->23 6->1 6->1 10->1 10->1 10->15 10->23 10->29 14->1 14->1 15->1 15->1 15->23 15->29 18->1 21->1 22->1 22->1 23->1 23->1 23->1 23->15 23->27 23->29 23->30 24->1 24->1 25->1 25->1 27->1 27->1 29->1 30->1 30->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; void display ( int const * arr , int n ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } void display ( int const * arr , int n ) { int i ; unsigned long _1_display_next ; { { _1_display_next = 6 ; } while ( 1 ) { switch ( _1_display_next ) { case 6 : i = 0 ; { _1_display_next = 4 ; } break ; case 4 : ; if ( i < n ) { { _1_display_next = 2 ; } } else { { _1_display_next = 1 ; } } break ; case 2 : printf ( " " , * ( arr + i ) ) ; i ++ ; { _1_display_next = 4 ; } break ; case 1 : printf ( " \n " ) ; { _1_display_next = 0 ; } break ; case 0 : ; return ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN void
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 14
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 14 <empty>
clrscr clrscr()
BLOCK <empty> <empty>
LITERAL 12 <empty>
printf printf("\n Menu: \n")
printf printf("1:Create Linked List \n")
printf printf("2:Delete Node \n")
printf printf("3:Traverse \n")
printf printf("4:Exit \n")
printf printf("\nEnter your choice: ")
scanf scanf("%d", & ch)
BLOCK <empty> <empty>
LITERAL 11 <empty>
LITERAL 10 <empty>
create create()
BLOCK <empty> <empty>
LITERAL 8 <empty>
printf printf("Enter the data value of the node to be deleted: ")
scanf scanf("%d", & k)
deletenode deletenode(k)
BLOCK <empty> <empty>
LITERAL 6 <empty>
traverse traverse()
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 1 <empty>
getch getch()
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return; return;
<operator>.assignment _1_main_next = 12
<operator>.assignment _1_main_next = 11
IDENTIFIER ch switch(ch)
<operator>.assignment _1_main_next = 3
<operator>.assignment _1_main_next = 3
<operator>.assignment _1_main_next = 3
<operator>.notEquals ch != 4
<operator>.assignment _1_main_next = 0
LITERAL 1 <empty>
BLOCK <empty> <empty>
LITERAL 2 <empty>
BLOCK <empty> <empty>
LITERAL 3 <empty>
BLOCK <empty> <empty>
LITERAL 4 <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 10
<operator>.assignment _1_main_next = 8
<operator>.assignment _1_main_next = 6
<operator>.assignment _1_main_next = 3
<operator>.assignment _1_main_next = 3
<operator>.assignment _1_main_next = 12
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
>>>PDG&71 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 0->59 0->60 0->61 0->62 0->63 0->64 0->65 0->66 0->67 0->68 0->69 0->70 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 19->1 20->1 21->1 22->1 23->1 24->1 25->1 25->51 29->1 32->1 33->1 33->34 34->1 34->1 34->33 37->1 41->1 44->1 45->1 45->1 46->1 46->1 48->1 48->1 49->1 49->1 50->1 50->1 51->1 51->1 51->25 51->68 51->70 52->1 52->1 63->1 63->1 64->1 64->1 65->1 65->1 66->1 66->1 67->1 67->1 68->1 68->1 70->1 70->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int unlink ( char const * filename ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int ( /* missing proto */ traverse ) ( ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern int ( /* missing proto */ deletenode ) ( ) ; extern unsigned long strlen ( char const * s ) ; void main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern int ( /* missing proto */ create ) ( ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; char * * _global_envp = ( char * * ) 0 ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int ( /* missing proto */ scanf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int ( /* missing proto */ clrscr ) ( ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ getch ) ( ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern double sqrt ( double x ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } void main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { int k ; int ch ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 14 ; } while ( 1 ) { switch ( _1_main_next ) { case 14 : clrscr ( ) ; { _1_main_next = 12 ; } break ; case 12 : printf ( " \n \n " ) ; printf ( " \n " ) ; printf ( " \n " ) ; printf ( " \n " ) ; printf ( " \n " ) ; printf ( " \n " ) ; scanf ( " " , & ch ) ; { _1_main_next = 11 ; } break ; case 11 : ; switch ( ch ) { case 1 : { _1_main_next = 10 ; } break ; case 2 : { _1_main_next = 8 ; } break ; case 3 : { _1_main_next = 6 ; } break ; case 4 : { _1_main_next = 3 ; } break ; default : { _1_main_next = 3 ; } break ; } break ; case 10 : create ( ) ; { _1_main_next = 3 ; } break ; case 8 : printf ( " " ) ; scanf ( " " , & k ) ; deletenode ( k ) ; { _1_main_next = 3 ; } break ; case 6 : traverse ( ) ; { _1_main_next = 3 ; } break ; case 3 : ; if ( ch != 4 ) { { _1_main_next = 12 ; } } else { { _1_main_next = 1 ; } } break ; case 1 : getch ( ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ; break ; } } } }
>>>Func
METHOD max
METHOD_RETURN int
PARAM int a
PARAM int b
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_max_next = 3
LITERAL 1 while (1)
IDENTIFIER _1_max_next switch(_1_max_next)
LITERAL 3 <empty>
LITERAL 2 <empty>
<operator>.assignment tmp = a
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operator>.assignment tmp = b
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (tmp); return (tmp);
<operator>.greaterThan a > b
<operator>.assignment _1_max_next = 0
<operator>.assignment _1_max_next = 0
IDENTIFIER tmp return (tmp);
BLOCK <empty> <empty>
<operator>.assignment _1_max_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_max_next = 1
>>>PDG&26 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 2->1 2->11 2->18 3->1 3->14 3->18 6->1 6->1 11->1 11->1 11->1 11->21 14->1 14->1 14->1 14->21 17->1 18->1 18->1 18->1 18->11 18->14 18->23 18->25 19->1 19->1 20->1 20->1 21->17 23->1 23->1 25->1 25->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; int max ( int a , int b ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } int max ( int a , int b ) { int tmp ; unsigned long _1_max_next ; { { _1_max_next = 3 ; } while ( 1 ) { switch ( _1_max_next ) { case 3 : ; if ( a > b ) { { _1_max_next = 2 ; } } else { { _1_max_next = 1 ; } } break ; case 2 : tmp = a ; { _1_max_next = 0 ; } break ; case 1 : tmp = b ; { _1_max_next = 0 ; } break ; case 0 : ; return ( tmp ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 4
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 4 <empty>
<operator>.assignment c = (unsigned char )*(*(argv + 1) + 0)
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 2 <empty>
printf printf("win\n")
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("lose\n")
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 3
<operator>.greaterThan (int )c > 127
<operator>.assignment _1_main_next = 0
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
<operator>.cast (unsigned char )*(*(argv + 1) + 0)
BLOCK <empty> <empty>
<operator>.cast (int )c
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.addition *(argv + 1) + 0
<operator>.assignment _1_main_next = 1
<operator>.addition argv + 1
>>>PDG&40 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->33 0->34 0->35 0->36 0->37 0->38 0->39 2->7 3->8 3->39 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->1 16->28 16->34 20->1 23->1 26->1 27->1 27->1 28->1 28->1 28->35 28->38 29->1 29->1 30->1 30->1 31->26 32->1 34->1 35->1 35->1 37->1 38->1 38->1 39->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern double log ( double x ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int argc , char * * argv , char * * _formal_envp ) { unsigned char c ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 4 ; } while ( 1 ) { switch ( _1_main_next ) { case 4 : c = ( unsigned char ) * ( * ( argv + 1 ) + 0 ) ; { _1_main_next = 3 ; } break ; case 3 : ; if ( ( int ) c > 127 ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : printf ( " \n " ) ; { _1_main_next = 0 ; } break ; case 1 : printf ( " \n " ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD swap
METHOD_RETURN void
PARAM int *first
PARAM int *second
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_swap_next = 1
LITERAL 1 while (1)
IDENTIFIER _1_swap_next switch(_1_swap_next)
LITERAL 1 <empty>
<operator>.assignment temp = *first
<operator>.assignment *first = *second
<operator>.assignment *second = temp
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return; return;
<operator>.assignment _1_swap_next = 0
>>>PDG&17 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->12 0->13 0->14 0->15 0->16 2->1 3->1 6->1 6->1 10->1 10->12 11->1 11->1 11->10 12->1 12->1 12->1 12->11 15->1 16->1 16->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void swap ( int * first , int * second ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void swap ( int * first , int * second ) { int temp ; unsigned long _1_swap_next ; { { _1_swap_next = 1 ; } while ( 1 ) { switch ( _1_swap_next ) { case 1 : temp = * first ; * first = * second ; * second = temp ; { _1_swap_next = 0 ; } break ; case 0 : ; return ; break ; } } } } void megaInit ( void ) { { } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char const   **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 6
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 6 <empty>
printf printf("Enter size of array:\n")
scanf scanf("%d", & n)
printf printf("Enter the elements of the array\n")
<operator>.assignment tmp = malloc((unsigned long )n * sizeof(int ))
<operator>.assignment arr = (int *)tmp
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
scanf scanf("%d", arr + i)
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("Original array: ")
display display(arr, n)
insertionSort insertionSort(arr, n)
printf printf("Sorted array: ")
display display(arr, n)
free free(arr)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 4
<operator>.lessThan i < n
<operator>.assignment _1_main_next = 4
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
malloc malloc((unsigned long )n * sizeof(int ))
<operator>.cast (int *)tmp
BLOCK <empty> <empty>
<operator>.addition arr + i
<operator>.multiplication (unsigned long )n * sizeof(int )
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.cast (unsigned long )n
<operator>.sizeOf sizeof(int )
<operator>.assignment _1_main_next = 1
>>>PDG&53 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->52 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 17->1 17->30 17->31 17->33 17->39 17->47 17->50 18->1 19->1 19->1 19->20 19->44 20->1 20->1 20->1 20->25 20->30 20->46 21->1 21->1 21->25 21->26 21->39 21->46 25->1 26->1 26->1 26->25 26->39 26->46 29->1 30->31 30->31 31->1 31->33 31->33 32->1 33->1 33->1 33->17 33->30 33->34 33->39 33->47 33->50 34->1 34->25 34->30 34->46 37->1 38->1 38->1 39->1 39->1 39->1 39->17 39->25 39->26 39->30 39->46 39->47 39->48 39->50 39->52 40->1 40->1 41->1 41->1 42->37 43->1 43->19 44->1 46->1 47->1 47->43 48->1 48->1 50->1 51->1 52->1 52->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern int ( /* missing proto */ malloc ) ( ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern double ceil ( double x ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern int ( /* missing proto */ free ) ( ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char const * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int ( /* missing proto */ scanf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int ( /* missing proto */ insertionSort ) ( ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int ( /* missing proto */ display ) ( ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int argc , char const * * argv , char * * _formal_envp ) { int n ; int i ; int * arr ; int tmp ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 6 ; } while ( 1 ) { switch ( _1_main_next ) { case 6 : printf ( " \n " ) ; scanf ( " " , & n ) ; printf ( " \n " ) ; tmp = malloc ( ( unsigned long ) n * sizeof ( int ) ) ; arr = ( int * ) tmp ; i = 0 ; { _1_main_next = 4 ; } break ; case 4 : ; if ( i < n ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : scanf ( " " , arr + i ) ; i ++ ; { _1_main_next = 4 ; } break ; case 1 : printf ( " " ) ; display ( arr , n ) ; insertionSort ( arr , n ) ; printf ( " " ) ; display ( arr , n ) ; free ( arr ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 6
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 6 <empty>
printf printf("Enter the number of vertices\n")
scanf scanf("%d", & vertices)
<operator>.assignment tmp = createGraph(vertices)
<operator>.assignment graph = (struct Graph *)tmp
printf printf("Enter the number of edges\n")
scanf scanf("%d", & edges)
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
printf printf("Edge %d \nEnter source: ", i + 1)
scanf scanf("%d", & src)
printf printf("Enter destination: ")
scanf scanf("%d", & dst)
addEdge addEdge(graph, src, dst)
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("Enter source of bfs\n")
scanf scanf("%d", & source)
bfs bfs(graph, source)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 4
<operator>.lessThan i < edges
<operator>.assignment _1_main_next = 4
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
createGraph createGraph(vertices)
<operator>.cast (struct Graph *)tmp
BLOCK <empty> <empty>
<operator>.addition i + 1
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
>>>PDG&52 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 17->1 17->45 18->1 18->1 18->19 18->46 19->1 19->1 19->1 19->30 19->36 20->1 21->1 21->41 22->1 22->1 22->26 22->31 22->41 22->48 26->1 26->1 27->1 27->30 28->1 29->1 29->30 30->1 30->1 30->1 30->1 30->27 30->29 30->36 31->1 31->1 31->26 31->41 31->48 34->1 35->1 35->36 36->1 36->1 36->1 36->30 36->35 39->1 40->1 40->1 41->1 41->1 41->1 41->21 41->26 41->31 41->48 41->49 41->51 42->1 42->1 43->1 43->1 44->39 45->1 45->17 45->18 46->1 49->1 49->1 51->1 51->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct Graph ; struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int ( /* missing proto */ addEdge ) ( ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; extern int ( /* missing proto */ bfs ) ( ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern int ( /* missing proto */ scanf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int ( /* missing proto */ createGraph ) ( ) ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { int vertices ; int edges ; int source ; int i ; int src ; int dst ; struct Graph * graph ; int tmp ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 6 ; } while ( 1 ) { switch ( _1_main_next ) { case 6 : printf ( " \n " ) ; scanf ( " " , & vertices ) ; tmp = createGraph ( vertices ) ; graph = ( struct Graph * ) tmp ; printf ( " \n " ) ; scanf ( " " , & edges ) ; i = 0 ; { _1_main_next = 4 ; } break ; case 4 : ; if ( i < edges ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : printf ( " \n " , i + 1 ) ; scanf ( " " , & src ) ; printf ( " " ) ; scanf ( " " , & dst ) ; addEdge ( graph , src , dst ) ; i ++ ; { _1_main_next = 4 ; } break ; case 1 : printf ( " \n " ) ; scanf ( " " , & source ) ; bfs ( graph , source ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD my_end_line
METHOD_RETURN char*
PARAM char *str
PARAM int inc
PARAM int *n
PARAM int option
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_my_end_line_next = 5
LITERAL 1 while (1)
IDENTIFIER _1_my_end_line_next switch(_1_my_end_line_next)
LITERAL 5 <empty>
LITERAL 4 <empty>
<operator>.postIncrement (*n) ++
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 2 <empty>
<operator>.assignment *n = 0
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operator>.assignment *(str + inc) = (char )'\000'
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (str); return (str);
<operator>.equals option == 1
<operator>.assignment _1_my_end_line_next = 1
<operator>.equals option == 2
<operator>.assignment _1_my_end_line_next = 1
<operator>.assignment _1_my_end_line_next = 0
IDENTIFIER str return (str);
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.cast (char )'\000'
<operator>.assignment _1_my_end_line_next = 4
BLOCK <empty> <empty>
<operator>.assignment _1_my_end_line_next = 2
BLOCK <empty> <empty>
<operator>.addition str + inc
<operator>.assignment _1_my_end_line_next = 3
<operator>.assignment _1_my_end_line_next = 1
>>>PDG&40 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 2->1 2->29 2->37 3->1 3->37 4->1 5->1 5->24 5->26 8->1 8->1 13->1 13->1 17->1 17->1 17->13 20->1 20->1 20->1 23->1 24->1 24->1 24->26 24->33 24->38 25->1 25->1 26->1 26->1 26->24 26->35 26->39 27->1 27->1 28->1 28->1 29->23 33->1 33->1 35->1 35->1 37->1 37->1 38->1 38->1 39->1 39->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; char * my_end_line ( char * str , int inc , int * n , int option ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; char * my_end_line ( char * str , int inc , int * n , int option ) { unsigned long _1_my_end_line_next ; { { _1_my_end_line_next = 5 ; } while ( 1 ) { switch ( _1_my_end_line_next ) { case 5 : ; if ( option == 1 ) { { _1_my_end_line_next = 4 ; } } else { { _1_my_end_line_next = 3 ; } } break ; case 4 : ( * n ) ++ ; { _1_my_end_line_next = 1 ; } break ; case 3 : ; if ( option == 2 ) { { _1_my_end_line_next = 2 ; } } else { { _1_my_end_line_next = 1 ; } } break ; case 2 : * n = 0 ; { _1_my_end_line_next = 1 ; } break ; case 1 : * ( str + inc ) = ( char ) ' \000 ' ; { _1_my_end_line_next = 0 ; } break ; case 0 : ; return ( str ) ; break ; } } } } void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } }
>>>Func
METHOD GenerateFilename
METHOD_RETURN void
PARAM char *out
PARAM char *in
PARAM char *add
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_GenerateFilename_next = 13
LITERAL 1 while (1)
IDENTIFIER _1_GenerateFilename_next switch(_1_GenerateFilename_next)
LITERAL 13 <empty>
sprintf sprintf(out, "%s", in)
<operator>.assignment tmp = strlen(out)
<operator>.assignment p = (out + tmp) - 1
BLOCK <empty> <empty>
LITERAL 11 <empty>
LITERAL 9 <empty>
LITERAL 7 <empty>
LITERAL 5 <empty>
LITERAL 4 <empty>
<operator>.assignment *p = (char )'\000'
BLOCK <empty> <empty>
LITERAL 2 <empty>
<operator>.postDecrement p --
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operator>.assignment tmp___0 = strlen(out)
sprintf sprintf(out + tmp___0, "%s", add)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return; return;
<operator>.assignment _1_GenerateFilename_next = 11
<operator>.greaterEqualsThan (unsigned long )p >= (unsigned long )out
<operator>.equals (int )*p == 47
<operator>.equals (int )*p == 92
<operator>.equals (int )*p == 46
<operator>.assignment _1_GenerateFilename_next = 1
<operator>.assignment _1_GenerateFilename_next = 11
<operator>.assignment _1_GenerateFilename_next = 0
strlen strlen(out)
<operator>.subtraction (out + tmp) - 1
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.cast (char )'\000'
strlen strlen(out)
<operator>.addition out + tmp___0
<operator>.addition out + tmp
<operator>.cast (unsigned long )p
<operator>.cast (unsigned long )out
<operator>.assignment _1_GenerateFilename_next = 9
BLOCK <empty> <empty>
<operator>.cast (int )*p
<operator>.assignment _1_GenerateFilename_next = 1
BLOCK <empty> <empty>
<operator>.cast (int )*p
<operator>.assignment _1_GenerateFilename_next = 1
BLOCK <empty> <empty>
<operator>.cast (int )*p
<operator>.assignment _1_GenerateFilename_next = 4
BLOCK <empty> <empty>
<operator>.assignment _1_GenerateFilename_next = 1
<operator>.assignment _1_GenerateFilename_next = 7
<operator>.assignment _1_GenerateFilename_next = 5
<operator>.assignment _1_GenerateFilename_next = 2
>>>PDG&66 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->54 0->55 0->57 0->58 0->60 0->61 0->62 0->63 0->64 0->65 2->1 2->11 2->32 2->46 2->50 3->1 3->11 4->1 4->27 7->1 7->1 11->1 11->1 11->39 12->1 12->1 12->40 12->48 13->1 13->1 13->1 13->23 13->32 13->49 20->1 20->1 20->1 20->23 20->32 20->33 20->34 20->35 20->49 20->53 20->56 20->59 23->1 23->1 23->32 23->49 26->1 26->1 26->27 26->47 27->1 27->1 27->1 30->1 31->1 31->1 32->1 32->1 32->1 32->51 32->62 33->1 33->1 33->54 33->63 34->1 34->1 34->57 34->64 35->1 35->1 35->60 35->65 36->1 36->1 37->1 37->1 38->1 38->1 39->11 39->12 39->32 39->40 39->46 39->48 39->50 40->1 40->13 40->13 46->11 46->26 46->27 46->32 46->47 46->50 47->1 47->1 48->1 48->1 49->1 50->1 51->1 51->1 53->1 54->1 54->1 56->1 57->1 57->1 59->1 60->1 60->1 62->1 62->1 63->1 63->1 64->1 64->1 65->1 65->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; void GenerateFilename ( char * out , char * in , char * add ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern int ( /* missing proto */ strlen ) ( ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern int ( /* missing proto */ sprintf ) ( ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void GenerateFilename ( char * out , char * in , char * add ) { char * p ; int tmp ; int tmp___0 ; unsigned long _1_GenerateFilename_next ; { { _1_GenerateFilename_next = 13 ; } while ( 1 ) { switch ( _1_GenerateFilename_next ) { case 13 : sprintf ( out , " " , in ) ; tmp = strlen ( out ) ; p = ( out + tmp ) - 1 ; { _1_GenerateFilename_next = 11 ; } break ; case 11 : ; if ( ( unsigned long ) p >= ( unsigned long ) out ) { { _1_GenerateFilename_next = 9 ; } } else { { _1_GenerateFilename_next = 1 ; } } break ; case 9 : ; if ( ( int ) * p == 47 ) { { _1_GenerateFilename_next = 1 ; } } else { { _1_GenerateFilename_next = 7 ; } } break ; case 7 : ; if ( ( int ) * p == 92 ) { { _1_GenerateFilename_next = 1 ; } } else { { _1_GenerateFilename_next = 5 ; } } break ; case 5 : ; if ( ( int ) * p == 46 ) { { _1_GenerateFilename_next = 4 ; } } else { { _1_GenerateFilename_next = 2 ; } } break ; case 4 : * p = ( char ) ' \000 ' ; { _1_GenerateFilename_next = 1 ; } break ; case 2 : p -- ; { _1_GenerateFilename_next = 11 ; } break ; case 1 : tmp___0 = strlen ( out ) ; sprintf ( out + tmp___0 , " " , add ) ; { _1_GenerateFilename_next = 0 ; } break ; case 0 : ; return ; break ; } } } } void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } }
>>>Func
METHOD fib
METHOD_RETURN void
PARAM unsigned long n
PARAM unsigned long *C
PARAM unsigned long *D
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_fib_next = 14
LITERAL 1 while (1)
IDENTIFIER _1_fib_next switch(_1_fib_next)
LITERAL 14 <empty>
LITERAL 13 <empty>
<operator>.assignment *(C + 0) = 0UL
BLOCK <empty> <empty>
LITERAL 12 <empty>
LITERAL 11 <empty>
<operator>.assignment *(D + 0) = 1UL
BLOCK <empty> <empty>
LITERAL 10 <empty>
RETURN return; return;
LITERAL 9 <empty>
fib fib(n >> 1, & c, & d)
<operator>.assignment a = c * ((d << 1) - c)
<operator>.assignment b = c * c + d * d
BLOCK <empty> <empty>
LITERAL 8 <empty>
LITERAL 7 <empty>
<operator>.assignment *(C + 0) = a
BLOCK <empty> <empty>
LITERAL 6 <empty>
LITERAL 5 <empty>
<operator>.assignment *(D + 0) = b
BLOCK <empty> <empty>
LITERAL 4 <empty>
RETURN return; return;
LITERAL 3 <empty>
<operator>.assignment *(C + 0) = b
BLOCK <empty> <empty>
LITERAL 2 <empty>
LITERAL 1 <empty>
<operator>.assignment *(D + 0) = a + b
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return; return;
<operator>.equals n == 0UL
<operator>.assignment _1_fib_next = 12
IDENTIFIER D if (D)
<operator>.assignment _1_fib_next = 10
<operator>.assignment _1_fib_next = 8
<operator>.equals n % 2UL == 0UL
<operator>.assignment _1_fib_next = 6
IDENTIFIER D if (D)
<operator>.assignment _1_fib_next = 4
<operator>.assignment _1_fib_next = 2
IDENTIFIER D if (D)
<operator>.assignment _1_fib_next = 0
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.arithmeticShiftRight n >> 1
<operator>.multiplication c * ((d << 1) - c)
<operator>.addition c * c + d * d
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.addition a + b
<operator>.assignment _1_fib_next = 13
BLOCK <empty> <empty>
<operator>.addition C + 0
<operator>.assignment _1_fib_next = 11
BLOCK <empty> <empty>
<operator>.addition D + 0
<operator>.subtraction (d << 1) - c
<operator>.multiplication c * c
<operator>.multiplication d * d
<operator>.modulo n % 2UL
<operator>.assignment _1_fib_next = 7
BLOCK <empty> <empty>
<operator>.addition C + 0
<operator>.assignment _1_fib_next = 5
BLOCK <empty> <empty>
<operator>.addition D + 0
<operator>.addition C + 0
<operator>.assignment _1_fib_next = 1
BLOCK <empty> <empty>
<operator>.addition D + 0
<operator>.assignment _1_fib_next = 9
<operator>.assignment _1_fib_next = 10
<operator>.shiftLeft d << 1
<operator>.assignment _1_fib_next = 3
<operator>.assignment _1_fib_next = 4
<operator>.assignment _1_fib_next = 0
>>>PDG&91 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 0->59 0->61 0->62 0->63 0->64 0->65 0->66 0->67 0->68 0->69 0->70 0->71 0->72 0->73 0->74 0->75 0->76 0->77 0->78 0->79 0->80 0->81 0->82 0->83 0->84 0->85 0->86 0->87 0->88 0->89 0->90 2->1 2->44 2->58 2->74 3->1 3->67 3->77 3->81 4->1 4->70 4->80 4->84 7->1 7->1 12->1 12->1 16->1 16->1 19->1 21->1 21->1 21->1 21->1 21->59 21->71 21->72 21->73 21->87 22->1 22->1 22->1 22->27 22->40 22->64 23->1 23->1 23->1 23->31 23->36 23->40 23->64 27->1 27->1 27->1 31->1 31->1 31->1 34->1 36->1 36->1 36->1 40->1 40->1 40->1 43->1 44->1 44->1 44->58 44->65 44->74 44->85 45->1 45->1 47->1 47->1 48->1 48->1 49->1 49->1 49->75 49->88 50->1 50->1 52->1 52->1 53->1 53->1 55->1 55->1 58->1 58->21 58->21 58->44 58->74 59->1 59->22 59->22 59->72 60->1 60->1 64->1 64->1 65->1 65->1 67->1 68->1 68->1 70->1 71->1 71->59 71->59 72->1 72->21 72->23 72->60 72->71 73->1 73->21 73->23 73->60 73->87 74->1 74->44 74->49 74->49 74->58 75->1 75->1 77->1 78->1 78->1 80->1 81->1 82->1 82->1 84->1 85->1 85->1 86->1 86->1 87->71 87->71 87->73 88->1 88->1 89->1 89->1 90->1 90->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; void fib ( unsigned long n , unsigned long * C , unsigned long * D ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } void main ( void ) { { megaInit ( ) ; } } void fib ( unsigned long n , unsigned long * C , unsigned long * D ) { unsigned long a ; unsigned long b ; unsigned long c ; unsigned long d ; unsigned long _1_fib_next ; { { _1_fib_next = 14 ; } while ( 1 ) { switch ( _1_fib_next ) { case 14 : ; if ( n == 0UL ) { { _1_fib_next = 13 ; } } else { { _1_fib_next = 9 ; } } break ; case 13 : * ( C + 0 ) = 0UL ; { _1_fib_next = 12 ; } break ; case 12 : ; if ( D ) { { _1_fib_next = 11 ; } } else { { _1_fib_next = 10 ; } } break ; case 11 : * ( D + 0 ) = 1UL ; { _1_fib_next = 10 ; } break ; case 10 : ; return ; break ; case 9 : fib ( n >> 1 , & c , & d ) ; a = c * ( ( d << 1 ) - c ) ; b = c * c + d * d ; { _1_fib_next = 8 ; } break ; case 8 : ; if ( n % 2UL == 0UL ) { { _1_fib_next = 7 ; } } else { { _1_fib_next = 3 ; } } break ; case 7 : * ( C + 0 ) = a ; { _1_fib_next = 6 ; } break ; case 6 : ; if ( D ) { { _1_fib_next = 5 ; } } else { { _1_fib_next = 4 ; } } break ; case 5 : * ( D + 0 ) = b ; { _1_fib_next = 4 ; } break ; case 4 : ; return ; break ; case 3 : * ( C + 0 ) = b ; { _1_fib_next = 2 ; } break ; case 2 : ; if ( D ) { { _1_fib_next = 1 ; } } else { { _1_fib_next = 0 ; } } break ; case 1 : * ( D + 0 ) = a + b ; { _1_fib_next = 0 ; } break ; case 0 : ; return ; break ; } } } }
>>>Func
METHOD ELFHash
METHOD_RETURN unsigned int
PARAM char *str
PARAM unsigned int len
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_ELFHash_next = 8
LITERAL 1 while (1)
IDENTIFIER _1_ELFHash_next switch(_1_ELFHash_next)
LITERAL 8 <empty>
<operator>.assignment hash = 0U
<operator>.assignment x = 0U
<operator>.assignment i = 0U
<operator>.assignment i = 0U
BLOCK <empty> <empty>
LITERAL 6 <empty>
LITERAL 4 <empty>
<operator>.assignment hash = (hash << 4) + (unsigned int )*str
<operator>.assignment x = (unsigned int )((long )hash & 4026531840L)
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 2 <empty>
<operators>.assignmentXor hash ^= x >> 24
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operators>.assignmentAnd hash &= ~ x
<operator>.postIncrement str ++
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (hash); return (hash);
<operator>.assignment _1_ELFHash_next = 6
<operator>.lessThan i < len
<operator>.assignment _1_ELFHash_next = 3
<operator>.notEquals x != 0U
<operator>.assignment _1_ELFHash_next = 1
<operator>.assignment _1_ELFHash_next = 6
IDENTIFIER hash return (hash);
BLOCK <empty> <empty>
<operator>.addition (hash << 4) + (unsigned int )*str
<operator>.cast (unsigned int )((long )hash & 4026531840L)
BLOCK <empty> <empty>
<operator>.arithmeticShiftRight x >> 24
<operator>.not ~ x
<operator>.assignment _1_ELFHash_next = 4
BLOCK <empty> <empty>
<operator>.shiftLeft hash << 4
<operator>.cast (unsigned int )*str
<operator>.and (long )hash & 4026531840L
<operator>.assignment _1_ELFHash_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_ELFHash_next = 0
<operator>.cast (long )hash
<operator>.assignment _1_ELFHash_next = 1
>>>PDG&54 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->41 0->42 0->43 0->44 0->45 0->46 0->48 0->49 0->50 0->51 0->52 0->53 2->1 2->26 3->1 3->32 6->1 6->1 10->1 10->1 10->22 10->25 10->37 10->46 11->1 11->1 11->34 11->42 11->43 13->1 13->1 13->27 13->32 17->1 17->1 17->22 17->25 17->37 17->46 17->48 17->52 18->1 18->1 18->1 18->34 18->42 18->43 22->1 22->1 22->25 22->37 22->46 25->1 25->1 25->22 25->37 25->46 26->1 26->1 27->1 27->1 27->32 30->1 31->1 31->1 32->1 32->1 32->1 32->27 32->44 32->51 33->1 33->1 34->1 34->1 34->42 34->43 34->49 34->53 35->1 35->1 36->1 36->1 37->30 39->1 39->1 40->1 42->1 42->22 42->22 42->34 42->43 43->1 43->25 43->34 43->42 44->1 44->1 46->17 46->17 46->39 46->39 47->1 48->1 48->18 48->18 48->40 48->40 49->1 49->1 51->1 51->1 52->1 53->1 53->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; unsigned int ELFHash ( char * str , unsigned int len ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; unsigned int ELFHash ( char * str , unsigned int len ) { unsigned int hash ; unsigned int x ; unsigned int i ; unsigned long _1_ELFHash_next ; { { _1_ELFHash_next = 8 ; } while ( 1 ) { switch ( _1_ELFHash_next ) { case 8 : hash = 0U ; x = 0U ; i = 0U ; i = 0U ; { _1_ELFHash_next = 6 ; } break ; case 6 : ; if ( i < len ) { { _1_ELFHash_next = 4 ; } } else { { _1_ELFHash_next = 0 ; } } break ; case 4 : hash = ( hash << 4 ) + ( unsigned int ) * str ; x = ( unsigned int ) ( ( long ) hash & 4026531840L ) ; { _1_ELFHash_next = 3 ; } break ; case 3 : ; if ( x != 0U ) { { _1_ELFHash_next = 2 ; } } else { { _1_ELFHash_next = 1 ; } } break ; case 2 : hash ^= x >> 24 ; { _1_ELFHash_next = 1 ; } break ; case 1 : hash &= ~ x ; str ++ ; i ++ ; { _1_ELFHash_next = 6 ; } break ; case 0 : ; return ( hash ) ; break ; } } } } void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } }
>>>Func
METHOD sort
METHOD_RETURN void
PARAM int *numbers
PARAM int size
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_sort_next = 9
LITERAL 1 while (1)
IDENTIFIER _1_sort_next switch(_1_sort_next)
LITERAL 9 <empty>
<operator>.assignment pos = 0
BLOCK <empty> <empty>
LITERAL 7 <empty>
LITERAL 5 <empty>
LITERAL 4 <empty>
<operator>.postIncrement pos ++
BLOCK <empty> <empty>
LITERAL 3 <empty>
<operator>.assignment tmp = *(numbers + (pos - 1))
<operator>.assignment *(numbers + (pos - 1)) = *(numbers + pos)
<operator>.assignment *(numbers + pos) = tmp
<operator>.postDecrement pos --
BLOCK <empty> <empty>
LITERAL 2 <empty>
LITERAL 1 <empty>
<operator>.assignment pos = 1
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return; return;
<operator>.assignment _1_sort_next = 7
<operator>.lessThan pos < size
<operator>.greaterEqualsThan *(numbers + pos) >= *(numbers + (pos - 1))
<operator>.assignment _1_sort_next = 7
<operator>.assignment _1_sort_next = 2
<operator>.equals pos == 0
<operator>.assignment _1_sort_next = 7
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_sort_next = 5
BLOCK <empty> <empty>
<operator>.assignment _1_sort_next = 4
BLOCK <empty> <empty>
<operator>.addition numbers + (pos - 1)
<operator>.addition numbers + (pos - 1)
<operator>.addition numbers + pos
<operator>.addition numbers + pos
<operator>.assignment _1_sort_next = 1
BLOCK <empty> <empty>
<operator>.assignment _1_sort_next = 0
<operator>.addition numbers + pos
<operator>.addition numbers + (pos - 1)
<operator>.assignment _1_sort_next = 3
<operator>.subtraction pos - 1
<operator>.subtraction pos - 1
<operator>.assignment _1_sort_next = 7
<operator>.subtraction pos - 1
>>>PDG&57 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 2->1 2->43 2->50 2->51 3->1 3->30 6->1 6->1 10->1 10->1 10->15 10->30 10->34 10->50 10->53 10->56 15->1 15->1 15->30 15->34 15->50 15->53 15->56 18->1 18->20 19->1 19->1 20->1 20->1 20->1 21->1 21->1 21->15 21->30 21->34 21->50 21->53 21->56 25->1 25->1 25->15 25->30 25->34 25->50 25->53 25->56 28->1 29->1 29->1 30->1 30->1 30->1 30->15 30->34 30->39 30->49 30->50 30->53 30->56 31->1 31->1 31->1 31->41 31->52 32->1 32->1 33->1 33->1 34->1 34->1 34->15 34->30 34->47 34->50 34->53 34->55 34->56 35->1 35->1 39->1 39->1 41->1 41->1 44->1 46->1 47->1 47->1 49->1 49->1 51->1 51->1 52->1 52->1 53->43 53->43 53->54 54->21 54->44 54->44 54->45 54->46 55->1 55->1 56->1 56->15 56->30 56->34 56->50 56->51 56->51 56->53
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; void sort ( int * numbers , int size ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } void sort ( int * numbers , int size ) { int pos ; int tmp ; unsigned long _1_sort_next ; { { _1_sort_next = 9 ; } while ( 1 ) { switch ( _1_sort_next ) { case 9 : pos = 0 ; { _1_sort_next = 7 ; } break ; case 7 : ; if ( pos < size ) { { _1_sort_next = 5 ; } } else { { _1_sort_next = 0 ; } } break ; case 5 : ; if ( * ( numbers + pos ) >= * ( numbers + ( pos - 1 ) ) ) { { _1_sort_next = 4 ; } } else { { _1_sort_next = 3 ; } } break ; case 4 : pos ++ ; { _1_sort_next = 7 ; } break ; case 3 : tmp = * ( numbers + ( pos - 1 ) ) ; * ( numbers + ( pos - 1 ) ) = * ( numbers + pos ) ; * ( numbers + pos ) = tmp ; pos -- ; { _1_sort_next = 2 ; } break ; case 2 : ; if ( pos == 0 ) { { _1_sort_next = 1 ; } } else { { _1_sort_next = 7 ; } } break ; case 1 : pos = 1 ; { _1_sort_next = 7 ; } break ; case 0 : ; return ; break ; } } } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD pointer_compare
METHOD_RETURN int
PARAM void *location1
PARAM void *location2
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_pointer_compare_next = 5
LITERAL 1 while (1)
IDENTIFIER _1_pointer_compare_next switch(_1_pointer_compare_next)
LITERAL 5 <empty>
LITERAL 4 <empty>
RETURN return (-1); return (-1);
LITERAL 3 <empty>
LITERAL 2 <empty>
RETURN return (1); return (1);
LITERAL 1 <empty>
RETURN return (0); return (0);
<operator>.lessThan (unsigned long )location1 < (unsigned long )location2
<operator>.minus -1
<operator>.greaterThan (unsigned long )location1 > (unsigned long )location2
LITERAL 1 return (1);
LITERAL 0 return (0);
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.cast (unsigned long )location1
<operator>.cast (unsigned long )location2
<operator>.assignment _1_pointer_compare_next = 4
BLOCK <empty> <empty>
<operator>.cast (unsigned long )location1
<operator>.cast (unsigned long )location2
<operator>.assignment _1_pointer_compare_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_pointer_compare_next = 3
<operator>.assignment _1_pointer_compare_next = 1
>>>PDG&34 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 2->1 2->17 2->19 2->24 2->28 3->1 3->17 3->19 3->25 3->29 6->1 6->1 11->1 14->1 16->1 17->1 17->1 17->1 17->26 17->32 18->1 18->11 19->1 19->1 19->1 19->30 19->33 20->14 21->16 24->1 25->1 26->1 26->1 28->1 29->1 30->1 30->1 32->1 32->1 33->1 33->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; int pointer_compare ( void * location1 , void * location2 ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int pointer_compare ( void * location1 , void * location2 ) { unsigned long _1_pointer_compare_next ; { { _1_pointer_compare_next = 5 ; } while ( 1 ) { switch ( _1_pointer_compare_next ) { case 5 : ; if ( ( unsigned long ) location1 < ( unsigned long ) location2 ) { { _1_pointer_compare_next = 4 ; } } else { { _1_pointer_compare_next = 3 ; } } break ; case 4 : ; return ( -1 ) ; break ; case 3 : ; if ( ( unsigned long ) location1 > ( unsigned long ) location2 ) { { _1_pointer_compare_next = 2 ; } } else { { _1_pointer_compare_next = 1 ; } } break ; case 2 : ; return ( 1 ) ; break ; case 1 : ; return ( 0 ) ; break ; } } } } void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } }
>>>Func
METHOD intToRoman
METHOD_RETURN char*
PARAM int num
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_intToRoman_next = 11
LITERAL 1 while (1)
IDENTIFIER _1_intToRoman_next switch(_1_intToRoman_next)
LITERAL 11 <empty>
<operator>.assignment tmp = malloc(16UL * sizeof(char ))
<operator>.assignment s = (char *)tmp
sprintf sprintf(number, "%i", num)
<operator>.assignment length = strlen(number)
BLOCK <empty> <empty>
LITERAL 10 <empty>
LITERAL 9 <empty>
<operator>.assignment tmp___0 = getOne((int )number[3])
<operator>.assignment tmp___1 = getTen((int )number[2])
<operator>.assignment tmp___2 = getHundred((int )number[1])
<operator>.assignment tmp___3 = getThousand((int )number[0])
sprintf sprintf(s, "%s%s%s%s", tmp___3, tmp___2, tmp___1, tmp___0)
BLOCK <empty> <empty>
LITERAL 7 <empty>
<operator>.assignment tmp___4 = getOne((int )number[2])
<operator>.assignment tmp___5 = getTen((int )number[1])
<operator>.assignment tmp___6 = getHundred((int )number[0])
sprintf sprintf(s, "%s%s%s", tmp___6, tmp___5, tmp___4)
BLOCK <empty> <empty>
LITERAL 5 <empty>
<operator>.assignment tmp___7 = getOne((int )number[1])
<operator>.assignment tmp___8 = getTen((int )number[0])
sprintf sprintf(s, "%s%s", tmp___8, tmp___7)
BLOCK <empty> <empty>
LITERAL 3 <empty>
<operator>.assignment tmp___9 = getOne((int )number[0])
<operator>.assignment s = (char *)tmp___9
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (s); return (s);
<operator>.assignment _1_intToRoman_next = 10
IDENTIFIER length switch(length)
<operator>.assignment _1_intToRoman_next = 0
<operator>.assignment _1_intToRoman_next = 0
<operator>.assignment _1_intToRoman_next = 0
<operator>.assignment _1_intToRoman_next = 0
IDENTIFIER s return (s);
malloc malloc(16UL * sizeof(char ))
<operator>.cast (char *)tmp
strlen strlen(number)
LITERAL 4 <empty>
BLOCK <empty> <empty>
LITERAL 3 <empty>
BLOCK <empty> <empty>
LITERAL 2 <empty>
BLOCK <empty> <empty>
LITERAL 1 <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
getOne getOne((int )number[3])
getTen getTen((int )number[2])
getHundred getHundred((int )number[1])
getThousand getThousand((int )number[0])
getOne getOne((int )number[2])
getTen getTen((int )number[1])
getHundred getHundred((int )number[0])
getOne getOne((int )number[1])
getTen getTen((int )number[0])
getOne getOne((int )number[0])
<operator>.cast (char *)tmp___9
<operator>.multiplication 16UL * sizeof(char )
<operator>.assignment _1_intToRoman_next = 9
<operator>.assignment _1_intToRoman_next = 7
<operator>.assignment _1_intToRoman_next = 5
<operator>.assignment _1_intToRoman_next = 3
<operator>.assignment _1_intToRoman_next = 0
<operator>.cast (int )number[3]
<operator>.cast (int )number[2]
<operator>.cast (int )number[1]
<operator>.cast (int )number[0]
<operator>.cast (int )number[2]
<operator>.cast (int )number[1]
<operator>.cast (int )number[0]
<operator>.cast (int )number[1]
<operator>.cast (int )number[0]
<operator>.cast (int )number[0]
<operator>.sizeOf sizeof(char )
>>>PDG&86 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->10 0->11 0->13 0->14 0->15 0->20 0->21 0->22 0->26 0->27 0->28 0->31 0->32 0->33 0->35 0->36 0->37 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->68 0->69 0->70 0->71 0->72 0->73 0->74 2->1 2->11 5->1 5->1 9->1 9->1 9->10 9->47 10->1 10->1 10->1 10->20 10->26 10->31 10->45 11->1 11->1 11->48 12->1 12->1 12->1 16->1 16->1 16->20 17->1 17->1 17->20 18->1 18->1 18->20 19->1 19->1 19->20 20->1 20->1 20->1 20->1 20->1 20->1 20->26 20->31 20->45 23->1 23->1 23->26 24->1 24->1 24->26 25->1 25->1 25->26 26->1 26->1 26->1 26->1 26->1 26->20 26->31 26->45 29->1 29->1 29->31 30->1 30->1 30->31 31->1 31->1 31->1 31->1 31->20 31->26 31->45 34->1 34->1 34->35 34->68 35->1 35->1 35->1 35->20 35->26 35->31 35->45 38->1 39->1 39->1 41->1 41->1 42->1 42->1 43->1 43->1 44->1 44->1 45->38 46->1 46->9 47->1 48->1 48->11 48->12 48->58 48->59 48->60 48->61 48->62 48->63 48->64 48->65 48->66 48->67 48->75 48->76 48->77 48->78 48->79 48->80 48->81 48->82 48->83 48->84 58->1 58->16 59->1 59->17 60->1 60->18 61->1 61->19 62->1 62->23 63->1 63->24 64->1 64->25 65->1 65->29 66->1 66->30 67->1 67->34 68->1 69->46 70->1 70->1 71->1 71->1 72->1 72->1 73->1 73->1 74->1 74->1 75->1 76->1 77->1 78->1 79->1 80->1 81->1 82->1 83->1 84->1 85->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern int ( /* missing proto */ getOne ) ( ) ; extern int ( /* missing proto */ malloc ) ( ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern int ( /* missing proto */ getTen ) ( ) ; extern int ( /* missing proto */ strlen ) ( ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern long clock ( void ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; char * intToRoman ( int num ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int ( /* missing proto */ getHundred ) ( ) ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern int ( /* missing proto */ sprintf ) ( ) ; extern double sqrt ( double x ) ; extern int ( /* missing proto */ getThousand ) ( ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } } char * intToRoman ( int num ) { int length ; char number [ 5 ] ; char * s ; int tmp ; int tmp___0 ; int tmp___1 ; int tmp___2 ; int tmp___3 ; int tmp___4 ; int tmp___5 ; int tmp___6 ; int tmp___7 ; int tmp___8 ; int tmp___9 ; unsigned long _1_intToRoman_next ; { { _1_intToRoman_next = 11 ; } while ( 1 ) { switch ( _1_intToRoman_next ) { case 11 : tmp = malloc ( 16UL * sizeof ( char ) ) ; s = ( char * ) tmp ; sprintf ( number , " " , num ) ; length = strlen ( number ) ; { _1_intToRoman_next = 10 ; } break ; case 10 : ; switch ( length ) { case 4 : { _1_intToRoman_next = 9 ; } break ; case 3 : { _1_intToRoman_next = 7 ; } break ; case 2 : { _1_intToRoman_next = 5 ; } break ; case 1 : { _1_intToRoman_next = 3 ; } break ; default : { _1_intToRoman_next = 0 ; } break ; } break ; case 9 : tmp___0 = getOne ( ( int ) number [ 3 ] ) ; tmp___1 = getTen ( ( int ) number [ 2 ] ) ; tmp___2 = getHundred ( ( int ) number [ 1 ] ) ; tmp___3 = getThousand ( ( int ) number [ 0 ] ) ; sprintf ( s , " " , tmp___3 , tmp___2 , tmp___1 , tmp___0 ) ; { _1_intToRoman_next = 0 ; } break ; case 7 : tmp___4 = getOne ( ( int ) number [ 2 ] ) ; tmp___5 = getTen ( ( int ) number [ 1 ] ) ; tmp___6 = getHundred ( ( int ) number [ 0 ] ) ; sprintf ( s , " " , tmp___6 , tmp___5 , tmp___4 ) ; { _1_intToRoman_next = 0 ; } break ; case 5 : tmp___7 = getOne ( ( int ) number [ 1 ] ) ; tmp___8 = getTen ( ( int ) number [ 0 ] ) ; sprintf ( s , " " , tmp___8 , tmp___7 ) ; { _1_intToRoman_next = 0 ; } break ; case 3 : tmp___9 = getOne ( ( int ) number [ 0 ] ) ; s = ( char * ) tmp___9 ; { _1_intToRoman_next = 0 ; } break ; case 0 : ; return ( s ) ; break ; } } } }
>>>Func
METHOD RSHash
METHOD_RETURN unsigned int
PARAM char *str
PARAM unsigned int len
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_RSHash_next = 5
LITERAL 1 while (1)
IDENTIFIER _1_RSHash_next switch(_1_RSHash_next)
LITERAL 5 <empty>
<operator>.assignment b = 378551U
<operator>.assignment a = 63689U
<operator>.assignment hash = 0U
<operator>.assignment i = 0U
<operator>.assignment i = 0U
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 1 <empty>
<operator>.assignment hash = hash * a + (unsigned int )*str
<operator>.assignmentMultiplication a *= b
<operator>.postIncrement str ++
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (hash); return (hash);
<operator>.assignment _1_RSHash_next = 3
<operator>.lessThan i < len
<operator>.assignment _1_RSHash_next = 3
IDENTIFIER hash return (hash);
BLOCK <empty> <empty>
<operator>.addition hash * a + (unsigned int )*str
<operator>.assignment _1_RSHash_next = 1
BLOCK <empty> <empty>
<operator>.multiplication hash * a
<operator>.cast (unsigned int )*str
<operator>.assignment _1_RSHash_next = 0
>>>PDG&36 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->19 0->20 0->21 0->22 0->23 0->25 0->26 0->27 0->28 0->29 0->31 0->32 0->33 0->35 2->1 2->20 3->1 3->26 6->1 6->1 10->1 10->1 10->19 11->1 11->1 11->33 12->1 12->1 12->28 12->33 14->1 14->1 14->21 14->26 18->1 18->1 18->1 18->28 18->33 19->1 19->1 19->1 19->33 20->1 20->1 21->1 21->1 21->26 24->1 25->1 25->1 26->1 26->1 26->1 26->21 26->31 26->35 27->1 27->1 28->24 30->1 30->1 31->1 31->1 33->18 33->18 33->19 33->30 33->30 34->1 35->1 35->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern void perror ( char const * str ) ; extern long clock ( void ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; unsigned int RSHash ( char * str , unsigned int len ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } unsigned int RSHash ( char * str , unsigned int len ) { unsigned int b ; unsigned int a ; unsigned int hash ; unsigned int i ; unsigned long _1_RSHash_next ; { { _1_RSHash_next = 5 ; } while ( 1 ) { switch ( _1_RSHash_next ) { case 5 : b = 378551U ; a = 63689U ; hash = 0U ; i = 0U ; i = 0U ; { _1_RSHash_next = 3 ; } break ; case 3 : ; if ( i < len ) { { _1_RSHash_next = 1 ; } } else { { _1_RSHash_next = 0 ; } } break ; case 1 : hash = hash * a + ( unsigned int ) * str ; a *= b ; str ++ ; i ++ ; { _1_RSHash_next = 3 ; } break ; case 0 : ; return ( hash ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD PJWHash
METHOD_RETURN unsigned int
PARAM char *str
PARAM unsigned int len
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_PJWHash_next = 8
LITERAL 1 while (1)
IDENTIFIER _1_PJWHash_next switch(_1_PJWHash_next)
LITERAL 8 <empty>
<operator>.assignment BitsInUnsignedInt = (unsigned int )(sizeof(unsigned int ) * 8UL)
<operator>.assignment ThreeQuarters = (BitsInUnsignedInt * 3U) / 4U
<operator>.assignment OneEighth = BitsInUnsignedInt / 8U
<operator>.assignment HighBits = 4294967295U << (BitsInUnsignedInt - OneEighth)
<operator>.assignment hash = 0U
<operator>.assignment test = 0U
<operator>.assignment i = 0U
<operator>.assignment i = 0U
BLOCK <empty> <empty>
LITERAL 6 <empty>
LITERAL 4 <empty>
<operator>.assignment hash = (hash << OneEighth) + (unsigned int )*str
<operator>.assignment test = hash & HighBits
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 2 <empty>
<operator>.assignment hash = (hash ^ (test >> ThreeQuarters)) & ~ HighBits
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operator>.postIncrement str ++
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (hash); return (hash);
<operator>.assignment _1_PJWHash_next = 6
<operator>.lessThan i < len
<operator>.assignment _1_PJWHash_next = 3
<operator>.notEquals test != 0U
<operator>.assignment _1_PJWHash_next = 1
<operator>.assignment _1_PJWHash_next = 6
IDENTIFIER hash return (hash);
<operator>.cast (unsigned int )(sizeof(unsigned int ) * 8UL)
<operator>.division (BitsInUnsignedInt * 3U) / 4U
<operator>.division BitsInUnsignedInt / 8U
<operator>.shiftLeft 4294967295U << (BitsInUnsignedInt - OneEighth)
BLOCK <empty> <empty>
<operator>.addition (hash << OneEighth) + (unsigned int )*str
<operator>.and hash & HighBits
BLOCK <empty> <empty>
<operator>.and (hash ^ (test >> ThreeQuarters)) & ~ HighBits
<operator>.multiplication sizeof(unsigned int ) * 8UL
<operator>.multiplication BitsInUnsignedInt * 3U
<operator>.subtraction BitsInUnsignedInt - OneEighth
<operator>.assignment _1_PJWHash_next = 4
BLOCK <empty> <empty>
<operator>.shiftLeft hash << OneEighth
<operator>.cast (unsigned int )*str
<operator>.assignment _1_PJWHash_next = 2
BLOCK <empty> <empty>
<operator>.xor hash ^ (test >> ThreeQuarters)
<operator>.not ~ HighBits
<operator>.sizeOf sizeof(unsigned int )
<operator>.assignment _1_PJWHash_next = 0
<operator>.assignment _1_PJWHash_next = 1
<operator>.arithmeticShiftRight test >> ThreeQuarters
>>>PDG&65 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->23 0->24 0->25 0->27 0->28 0->29 0->30 0->31 0->32 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->42 0->43 0->44 0->45 0->47 0->48 0->50 0->51 0->52 0->53 0->54 0->55 0->57 0->58 0->59 0->60 0->62 0->63 0->64 2->1 2->29 3->1 3->35 6->1 6->1 10->1 10->1 10->51 11->1 11->1 11->1 11->64 12->1 12->1 12->52 13->1 13->1 13->1 13->47 13->60 14->1 14->1 14->40 14->55 14->59 15->1 15->1 15->37 15->64 17->1 17->1 17->30 17->35 21->1 21->1 21->47 22->1 22->1 22->1 22->37 22->64 26->1 26->1 26->1 26->40 26->55 26->59 29->1 29->1 30->1 30->1 30->35 33->1 34->1 34->1 35->1 35->1 35->1 35->30 35->53 35->62 36->1 36->1 37->1 37->1 37->57 37->63 37->64 38->1 38->1 39->1 39->1 40->33 41->1 42->1 42->11 42->11 43->12 43->12 43->52 44->1 44->13 44->13 46->1 46->1 47->1 47->1 47->22 47->22 47->40 47->55 47->59 47->60 49->1 49->1 49->26 49->26 50->10 50->41 51->42 51->42 51->43 52->1 52->1 52->44 52->44 52->55 53->1 53->1 55->1 55->21 55->21 55->46 55->46 56->1 57->1 57->1 59->1 59->49 59->49 60->1 60->47 60->49 61->1 62->1 62->1 63->1 63->1 64->1 64->1 64->37 64->59 64->59
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; unsigned int PJWHash ( char * str , unsigned int len ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; unsigned int PJWHash ( char * str , unsigned int len ) { unsigned int BitsInUnsignedInt ; unsigned int ThreeQuarters ; unsigned int OneEighth ; unsigned int HighBits ; unsigned int hash ; unsigned int test ; unsigned int i ; unsigned long _1_PJWHash_next ; { { _1_PJWHash_next = 8 ; } while ( 1 ) { switch ( _1_PJWHash_next ) { case 8 : BitsInUnsignedInt = ( unsigned int ) ( sizeof ( unsigned int ) * 8UL ) ; ThreeQuarters = ( BitsInUnsignedInt * 3U ) / 4U ; OneEighth = BitsInUnsignedInt / 8U ; HighBits = 4294967295U << ( BitsInUnsignedInt - OneEighth ) ; hash = 0U ; test = 0U ; i = 0U ; i = 0U ; { _1_PJWHash_next = 6 ; } break ; case 6 : ; if ( i < len ) { { _1_PJWHash_next = 4 ; } } else { { _1_PJWHash_next = 0 ; } } break ; case 4 : hash = ( hash << OneEighth ) + ( unsigned int ) * str ; test = hash & HighBits ; { _1_PJWHash_next = 3 ; } break ; case 3 : ; if ( test != 0U ) { { _1_PJWHash_next = 2 ; } } else { { _1_PJWHash_next = 1 ; } } break ; case 2 : hash = ( hash ^ ( test >> ThreeQuarters ) ) & ~ HighBits ; { _1_PJWHash_next = 1 ; } break ; case 1 : str ++ ; i ++ ; { _1_PJWHash_next = 6 ; } break ; case 0 : ; return ( hash ) ; break ; } } } } void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } }
>>>Func
METHOD findLengthOfLCIS
METHOD_RETURN int
PARAM int *nums
PARAM int numsSize
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_findLengthOfLCIS_next = 13
LITERAL 1 while (1)
IDENTIFIER _1_findLengthOfLCIS_next switch(_1_findLengthOfLCIS_next)
LITERAL 13 <empty>
<operator>.assignment maxval = 1
<operator>.assignment count = 1
BLOCK <empty> <empty>
LITERAL 12 <empty>
LITERAL 11 <empty>
RETURN return (0); return (0);
LITERAL 10 <empty>
<operator>.assignment i = 1
BLOCK <empty> <empty>
LITERAL 8 <empty>
LITERAL 6 <empty>
LITERAL 5 <empty>
<operator>.postIncrement count ++
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 3 <empty>
<operator>.assignment maxval = count
BLOCK <empty> <empty>
LITERAL 2 <empty>
<operator>.assignment count = 1
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (maxval); return (maxval);
<operator>.assignment _1_findLengthOfLCIS_next = 12
<operator>.equals numsSize == 0
LITERAL 0 return (0);
<operator>.assignment _1_findLengthOfLCIS_next = 8
<operator>.lessThan i < numsSize
<operator>.greaterThan *(nums + i) > *(nums + (i - 1))
<operator>.assignment _1_findLengthOfLCIS_next = 4
<operator>.greaterEqualsThan count >= maxval
<operator>.assignment _1_findLengthOfLCIS_next = 1
<operator>.assignment _1_findLengthOfLCIS_next = 1
<operator>.assignment _1_findLengthOfLCIS_next = 8
IDENTIFIER maxval return (maxval);
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_findLengthOfLCIS_next = 11
BLOCK <empty> <empty>
<operator>.assignment _1_findLengthOfLCIS_next = 6
BLOCK <empty> <empty>
<operator>.assignment _1_findLengthOfLCIS_next = 5
BLOCK <empty> <empty>
<operator>.assignment _1_findLengthOfLCIS_next = 3
BLOCK <empty> <empty>
<operator>.assignment _1_findLengthOfLCIS_next = 10
<operator>.assignment _1_findLengthOfLCIS_next = 0
<operator>.addition nums + i
<operator>.addition nums + (i - 1)
<operator>.assignment _1_findLengthOfLCIS_next = 2
<operator>.assignment _1_findLengthOfLCIS_next = 1
<operator>.subtraction i - 1
>>>PDG&67 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->36 0->37 0->38 0->39 0->40 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 0->59 0->60 0->61 0->62 0->63 0->64 0->65 0->66 2->1 2->62 3->1 3->37 3->40 6->1 6->1 10->1 10->1 10->43 10->47 11->1 11->1 11->22 11->26 11->43 15->1 17->1 17->1 17->32 17->40 17->62 17->66 22->1 22->1 22->26 22->43 26->1 26->1 26->1 26->43 26->47 29->1 29->1 29->22 29->26 29->43 32->1 32->1 32->40 32->62 32->66 35->1 36->1 36->1 37->1 37->1 37->40 37->52 37->60 38->15 39->1 39->1 40->1 40->1 40->1 40->32 40->37 40->54 40->61 40->62 40->66 41->1 41->1 41->1 41->56 41->64 42->1 42->1 43->1 43->1 43->1 43->22 43->26 43->47 43->58 43->65 44->1 44->1 45->1 45->1 46->1 46->1 47->35 52->1 52->1 54->1 54->1 56->1 56->1 58->1 58->1 60->1 60->1 61->1 61->1 63->1 63->1 64->1 64->1 65->1 65->1 66->1 66->32 66->40 66->62 66->63 66->63
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; int findLengthOfLCIS ( int * nums , int numsSize ) ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void main ( void ) { { megaInit ( ) ; } } int findLengthOfLCIS ( int * nums , int numsSize ) { int maxval ; int i ; int count ; unsigned long _1_findLengthOfLCIS_next ; { { _1_findLengthOfLCIS_next = 13 ; } while ( 1 ) { switch ( _1_findLengthOfLCIS_next ) { case 13 : maxval = 1 ; count = 1 ; { _1_findLengthOfLCIS_next = 12 ; } break ; case 12 : ; if ( numsSize == 0 ) { { _1_findLengthOfLCIS_next = 11 ; } } else { { _1_findLengthOfLCIS_next = 10 ; } } break ; case 11 : ; return ( 0 ) ; break ; case 10 : i = 1 ; { _1_findLengthOfLCIS_next = 8 ; } break ; case 8 : ; if ( i < numsSize ) { { _1_findLengthOfLCIS_next = 6 ; } } else { { _1_findLengthOfLCIS_next = 0 ; } } break ; case 6 : ; if ( * ( nums + i ) > * ( nums + ( i - 1 ) ) ) { { _1_findLengthOfLCIS_next = 5 ; } } else { { _1_findLengthOfLCIS_next = 2 ; } } break ; case 5 : count ++ ; { _1_findLengthOfLCIS_next = 4 ; } break ; case 4 : ; if ( count >= maxval ) { { _1_findLengthOfLCIS_next = 3 ; } } else { { _1_findLengthOfLCIS_next = 1 ; } } break ; case 3 : maxval = count ; { _1_findLengthOfLCIS_next = 1 ; } break ; case 2 : count = 1 ; { _1_findLengthOfLCIS_next = 1 ; } break ; case 1 : i ++ ; { _1_findLengthOfLCIS_next = 8 ; } break ; case 0 : ; return ( maxval ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD power
METHOD_RETURN int
PARAM int x
PARAM unsigned int y
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_power_next = 6
LITERAL 1 while (1)
IDENTIFIER _1_power_next switch(_1_power_next)
LITERAL 6 <empty>
LITERAL 5 <empty>
RETURN return (1); return (1);
LITERAL 4 <empty>
LITERAL 3 <empty>
<operator>.assignment tmp = power(x, y / 2U)
<operator>.assignment tmp___0 = power(x, y / 2U)
BLOCK <empty> <empty>
LITERAL 2 <empty>
RETURN return (tmp * tmp___0); return (tmp * tmp___0);
LITERAL 1 <empty>
<operator>.assignment tmp___1 = power(x, y / 2U)
<operator>.assignment tmp___2 = power(x, y / 2U)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return ((x * tmp___1) * tmp___2); return ((x * tmp___1) * tmp___2);
<operator>.equals y == 0U
LITERAL 1 return (1);
<operator>.equals y % 2U == 0U
<operator>.assignment _1_power_next = 2
<operator>.multiplication tmp * tmp___0
<operator>.assignment _1_power_next = 0
<operator>.multiplication (x * tmp___1) * tmp___2
BLOCK <empty> <empty>
BLOCK <empty> <empty>
power power(x, y / 2U)
power power(x, y / 2U)
power power(x, y / 2U)
power power(x, y / 2U)
<operator>.assignment _1_power_next = 5
BLOCK <empty> <empty>
<operator>.modulo y % 2U
<operator>.assignment _1_power_next = 3
BLOCK <empty> <empty>
<operator>.division y / 2U
<operator>.division y / 2U
<operator>.division y / 2U
<operator>.division y / 2U
<operator>.multiplication x * tmp___1
<operator>.assignment _1_power_next = 4
<operator>.assignment _1_power_next = 1
>>>PDG&50 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->16 0->17 0->19 0->22 0->23 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->49 2->1 2->34 2->36 2->47 3->1 3->25 3->40 3->43 3->45 6->1 6->1 11->1 14->1 14->1 14->29 15->1 15->1 15->1 15->29 18->1 20->1 20->1 20->47 21->1 21->1 21->1 21->31 24->1 25->1 25->1 25->38 25->40 25->43 25->45 25->48 26->11 27->1 27->1 27->41 27->49 28->1 28->1 29->18 30->1 30->1 31->24 34->14 34->14 34->35 35->1 35->1 35->15 35->15 35->34 35->36 35->47 36->20 36->20 36->37 37->1 37->1 37->21 37->21 37->34 37->36 37->47 38->1 38->1 40->1 40->25 40->27 40->27 40->43 40->45 41->1 41->1 43->34 43->34 43->44 44->1 44->25 44->35 44->35 44->40 44->43 44->45 45->36 45->36 45->46 46->1 46->25 46->37 46->37 46->40 46->43 46->45 47->31 47->31 48->1 48->1 49->1 49->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; int power ( int x , unsigned int y ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int power ( int x , unsigned int y ) { int tmp ; int tmp___0 ; int tmp___1 ; int tmp___2 ; unsigned long _1_power_next ; { { _1_power_next = 6 ; } while ( 1 ) { switch ( _1_power_next ) { case 6 : ; if ( y == 0U ) { { _1_power_next = 5 ; } } else { { _1_power_next = 4 ; } } break ; case 5 : ; return ( 1 ) ; break ; case 4 : ; if ( y % 2U == 0U ) { { _1_power_next = 3 ; } } else { { _1_power_next = 1 ; } } break ; case 3 : tmp = power ( x , y / 2U ) ; tmp___0 = power ( x , y / 2U ) ; { _1_power_next = 2 ; } break ; case 2 : ; return ( tmp * tmp___0 ) ; break ; case 1 : tmp___1 = power ( x , y / 2U ) ; tmp___2 = power ( x , y / 2U ) ; { _1_power_next = 0 ; } break ; case 0 : ; return ( ( x * tmp___1 ) * tmp___2 ) ; break ; } } } } void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } }
>>>Func
METHOD getRow
METHOD_RETURN int*
PARAM int rowIndex
PARAM int *returnSize
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_getRow_next = 15
LITERAL 1 while (1)
IDENTIFIER _1_getRow_next switch(_1_getRow_next)
LITERAL 15 <empty>
<operator>.assignment colIndex = rowIndex + 1
<operator>.assignment tmp = malloc(sizeof(int ) * (unsigned long )colIndex)
<operator>.assignment ans = (int *)tmp
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 13 <empty>
LITERAL 11 <empty>
<operator>.assignment *(ans + i) = 1
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 10 <empty>
<operator>.assignment *returnSize = colIndex
<operator>.assignment r = 2
BLOCK <empty> <empty>
LITERAL 8 <empty>
LITERAL 6 <empty>
<operator>.assignment c = r - 1
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 2 <empty>
<operator>.assignmentPlus *(ans + c) += *(ans + (c - 1))
<operator>.postDecrement c --
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operator>.postIncrement r ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (ans); return (ans);
<operator>.assignment _1_getRow_next = 13
<operator>.lessThan i < colIndex
<operator>.assignment _1_getRow_next = 13
<operator>.assignment _1_getRow_next = 8
<operator>.lessEqualsThan r <= rowIndex
<operator>.assignment _1_getRow_next = 4
<operator>.greaterThan c > 0
<operator>.assignment _1_getRow_next = 4
<operator>.assignment _1_getRow_next = 8
IDENTIFIER ans return (ans);
<operator>.addition rowIndex + 1
malloc malloc(sizeof(int ) * (unsigned long )colIndex)
<operator>.cast (int *)tmp
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.subtraction r - 1
BLOCK <empty> <empty>
<operator>.multiplication sizeof(int ) * (unsigned long )colIndex
<operator>.assignment _1_getRow_next = 11
BLOCK <empty> <empty>
<operator>.addition ans + i
<operator>.assignment _1_getRow_next = 6
BLOCK <empty> <empty>
<operator>.assignment _1_getRow_next = 2
BLOCK <empty> <empty>
<operator>.addition ans + c
<operator>.addition ans + (c - 1)
<operator>.sizeOf sizeof(int )
<operator>.cast (unsigned long )colIndex
<operator>.assignment _1_getRow_next = 10
<operator>.assignment _1_getRow_next = 0
<operator>.assignment _1_getRow_next = 1
<operator>.subtraction c - 1
>>>PDG&71 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->27 0->28 0->29 0->31 0->32 0->33 0->34 0->35 0->36 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->47 0->48 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 0->59 0->60 0->61 0->62 0->63 0->64 0->66 0->67 0->68 0->69 0->70 2->1 2->10 2->42 2->48 3->1 6->1 6->1 10->1 10->1 10->21 10->39 10->55 10->66 11->1 11->1 11->12 11->50 12->1 12->1 12->1 12->47 12->58 12->63 12->64 13->1 13->1 13->18 13->39 13->58 17->1 17->1 18->1 18->1 18->39 18->58 21->1 21->1 21->1 22->1 22->1 22->34 22->42 22->53 26->1 26->1 26->1 26->44 26->63 26->70 30->1 30->1 30->1 31->1 31->1 31->44 31->63 31->70 34->1 34->1 34->42 34->53 37->1 38->1 38->1 39->1 39->1 39->1 39->18 39->21 39->56 39->58 39->67 40->1 40->1 41->1 41->1 42->1 42->1 42->1 42->10 42->34 42->48 42->53 42->59 42->68 43->1 43->1 44->1 44->1 44->61 44->63 44->69 44->70 45->1 45->1 46->1 46->1 47->37 48->1 49->1 49->11 50->1 53->1 53->26 53->26 53->34 53->42 55->1 55->49 56->1 56->1 58->1 59->1 59->1 61->1 61->1 64->1 64->1 65->1 66->1 67->1 67->1 68->1 68->1 69->1 69->1 70->31 70->64 70->64
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern int ( /* missing proto */ malloc ) ( ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; int * getRow ( int rowIndex , int * returnSize ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int * getRow ( int rowIndex , int * returnSize ) { int colIndex ; int * ans ; int tmp ; int i ; int r ; int c ; unsigned long _1_getRow_next ; { { _1_getRow_next = 15 ; } while ( 1 ) { switch ( _1_getRow_next ) { case 15 : colIndex = rowIndex + 1 ; tmp = malloc ( sizeof ( int ) * ( unsigned long ) colIndex ) ; ans = ( int * ) tmp ; i = 0 ; { _1_getRow_next = 13 ; } break ; case 13 : ; if ( i < colIndex ) { { _1_getRow_next = 11 ; } } else { { _1_getRow_next = 10 ; } } break ; case 11 : * ( ans + i ) = 1 ; i ++ ; { _1_getRow_next = 13 ; } break ; case 10 : * returnSize = colIndex ; r = 2 ; { _1_getRow_next = 8 ; } break ; case 8 : ; if ( r <= rowIndex ) { { _1_getRow_next = 6 ; } } else { { _1_getRow_next = 0 ; } } break ; case 6 : c = r - 1 ; { _1_getRow_next = 4 ; } break ; case 4 : ; if ( c > 0 ) { { _1_getRow_next = 2 ; } } else { { _1_getRow_next = 1 ; } } break ; case 2 : * ( ans + c ) += * ( ans + ( c - 1 ) ) ; c -- ; { _1_getRow_next = 4 ; } break ; case 1 : r ++ ; { _1_getRow_next = 8 ; } break ; case 0 : ; return ( ans ) ; break ; } } } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 9
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 9 <empty>
<operator>.assignment sum = 0
<operator>.assignment i = 0
BLOCK <empty> <empty>
LITERAL 7 <empty>
LITERAL 5 <empty>
LITERAL 4 <empty>
<operator>.assignmentMultiplication sum *= i
BLOCK <empty> <empty>
LITERAL 3 <empty>
<operator>.assignmentPlus sum += i
BLOCK <empty> <empty>
LITERAL 2 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("Sum is: %d\n", sum)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 7
<operator>.lessThan i < (int )*(*(argv + 1) + 0)
<operator>.equals sum == 8128
<operator>.assignment _1_main_next = 2
<operator>.assignment _1_main_next = 2
<operator>.assignment _1_main_next = 7
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.cast (int )*(*(argv + 1) + 0)
<operator>.assignment _1_main_next = 5
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 4
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 1
<operator>.assignment _1_main_next = 3
<operator>.addition *(argv + 1) + 0
<operator>.addition argv + 1
>>>PDG&54 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 2->7 3->8 3->53 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->22 16->25 16->31 16->37 17->1 17->1 17->22 17->25 17->28 17->36 22->1 22->1 22->1 22->25 22->31 22->37 25->1 25->1 25->1 25->22 25->31 25->37 28->1 28->1 28->22 28->25 28->36 31->1 31->1 31->22 31->25 31->37 34->1 35->1 35->1 36->1 36->1 36->1 36->22 36->25 36->28 36->46 36->50 37->1 37->1 37->22 37->25 37->31 37->48 37->51 38->1 38->1 39->1 39->1 40->1 40->1 41->1 41->1 42->34 45->1 46->1 46->1 48->1 48->1 50->1 50->1 51->1 51->1 52->1 53->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int argc , char * * argv , char * * _formal_envp ) { int i ; int sum ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 9 ; } while ( 1 ) { switch ( _1_main_next ) { case 9 : sum = 0 ; i = 0 ; { _1_main_next = 7 ; } break ; case 7 : ; if ( i < ( int ) * ( * ( argv + 1 ) + 0 ) ) { { _1_main_next = 5 ; } } else { { _1_main_next = 1 ; } } break ; case 5 : ; if ( sum == 8128 ) { { _1_main_next = 4 ; } } else { { _1_main_next = 3 ; } } break ; case 4 : sum *= i ; { _1_main_next = 2 ; } break ; case 3 : sum += i ; { _1_main_next = 2 ; } break ; case 2 : i ++ ; { _1_main_next = 7 ; } break ; case 1 : printf ( " \n " , sum ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 4
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 4 <empty>
<operator>.assignment c = (unsigned char )*(*(argv + 1) + 0)
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 2 <empty>
printf printf("win\n")
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("lose\n")
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 3
<operator>.equals (int )c == 127
<operator>.assignment _1_main_next = 0
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
<operator>.cast (unsigned char )*(*(argv + 1) + 0)
BLOCK <empty> <empty>
<operator>.cast (int )c
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.addition *(argv + 1) + 0
<operator>.assignment _1_main_next = 1
<operator>.addition argv + 1
>>>PDG&40 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->17 0->18 0->19 0->20 0->21 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->33 0->34 0->35 0->36 0->37 0->38 0->39 2->7 3->8 3->39 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->1 16->28 16->34 20->1 23->1 26->1 27->1 27->1 28->1 28->1 28->35 28->38 29->1 29->1 30->1 30->1 31->26 32->1 34->1 35->1 35->1 37->1 38->1 38->1 39->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern double log ( double x ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int argc , char * * argv , char * * _formal_envp ) { unsigned char c ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 4 ; } while ( 1 ) { switch ( _1_main_next ) { case 4 : c = ( unsigned char ) * ( * ( argv + 1 ) + 0 ) ; { _1_main_next = 3 ; } break ; case 3 : ; if ( ( int ) c == 127 ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : printf ( " \n " ) ; { _1_main_next = 0 ; } break ; case 1 : printf ( " \n " ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD int_compare
METHOD_RETURN int
PARAM void *vlocation1
PARAM void *vlocation2
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_int_compare_next = 6
LITERAL 1 while (1)
IDENTIFIER _1_int_compare_next switch(_1_int_compare_next)
LITERAL 6 <empty>
<operator>.assignment location1 = (int *)vlocation1
<operator>.assignment location2 = (int *)vlocation2
BLOCK <empty> <empty>
LITERAL 5 <empty>
LITERAL 4 <empty>
RETURN return (-1); return (-1);
LITERAL 3 <empty>
LITERAL 2 <empty>
RETURN return (1); return (1);
LITERAL 1 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_int_compare_next = 5
<operator>.lessThan *location1 < *location2
<operator>.minus -1
<operator>.greaterThan *location1 > *location2
LITERAL 1 return (1);
LITERAL 0 return (0);
<operator>.cast (int *)vlocation1
<operator>.cast (int *)vlocation2
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_int_compare_next = 4
BLOCK <empty> <empty>
<operator>.assignment _1_int_compare_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_int_compare_next = 3
<operator>.assignment _1_int_compare_next = 1
>>>PDG&37 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->16 0->17 0->18 0->19 0->20 0->21 0->23 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 2->1 2->10 2->27 3->1 3->11 3->28 6->1 6->1 10->1 10->1 10->1 11->1 11->1 11->1 15->1 18->1 20->1 21->1 21->1 22->1 22->1 22->1 22->24 22->24 22->31 22->35 23->1 23->15 24->1 24->1 24->1 24->22 24->22 24->33 24->36 25->18 26->20 27->1 28->1 31->1 31->1 33->1 33->1 35->1 35->1 36->1 36->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; int int_compare ( void * vlocation1 , void * vlocation2 ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int int_compare ( void * vlocation1 , void * vlocation2 ) { int * location1 ; int * location2 ; unsigned long _1_int_compare_next ; { { _1_int_compare_next = 6 ; } while ( 1 ) { switch ( _1_int_compare_next ) { case 6 : location1 = ( int * ) vlocation1 ; location2 = ( int * ) vlocation2 ; { _1_int_compare_next = 5 ; } break ; case 5 : ; if ( * location1 < * location2 ) { { _1_int_compare_next = 4 ; } } else { { _1_int_compare_next = 3 ; } } break ; case 4 : ; return ( -1 ) ; break ; case 3 : ; if ( * location1 > * location2 ) { { _1_int_compare_next = 2 ; } } else { { _1_int_compare_next = 1 ; } } break ; case 2 : ; return ( 1 ) ; break ; case 1 : ; return ( 0 ) ; break ; } } } } void main ( void ) { { megaInit ( ) ; } } void megaInit ( void ) { { } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int _formal_argc
PARAM char **_formal_argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = _formal_argc
<operator>.assignment _global_argv = _formal_argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 10
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 10 <empty>
<operator>.assignment i = 1ULL
BLOCK <empty> <empty>
LITERAL 8 <empty>
LITERAL 6 <empty>
<operator>.assignment tmp = isP(i)
BLOCK <empty> <empty>
LITERAL 5 <empty>
LITERAL 4 <empty>
<operator>.assignment tmp___0 = isP(i * i)
BLOCK <empty> <empty>
LITERAL 3 <empty>
LITERAL 2 <empty>
printf printf("%llu,\n", i * i)
BLOCK <empty> <empty>
LITERAL 1 <empty>
<operator>.postIncrement i ++
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 8
<operator>.lessThan i < 10000000ULL
<operator>.assignment _1_main_next = 5
IDENTIFIER tmp if (tmp)
<operator>.assignment _1_main_next = 3
IDENTIFIER tmp___0 if (tmp___0)
<operator>.assignment _1_main_next = 1
<operator>.assignment _1_main_next = 8
LITERAL 0 return (0);
BLOCK <empty> <empty>
isP isP(i)
BLOCK <empty> <empty>
isP isP(i * i)
BLOCK <empty> <empty>
<operator>.multiplication i * i
<operator>.assignment _1_main_next = 6
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 4
BLOCK <empty> <empty>
<operator>.multiplication i * i
<operator>.assignment _1_main_next = 2
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 0
<operator>.assignment _1_main_next = 1
<operator>.assignment _1_main_next = 1
>>>PDG&60 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->16 0->17 0->18 0->19 0->21 0->22 0->23 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->43 0->44 0->45 0->46 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 0->59 2->7 3->8 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->31 16->36 16->45 16->49 16->54 20->1 20->1 20->1 24->1 24->1 24->1 28->1 28->1 31->1 31->1 31->36 31->45 31->49 31->54 34->1 35->1 35->1 36->1 36->1 36->31 36->45 36->49 36->50 36->54 36->57 37->1 37->1 39->1 39->1 41->1 41->1 42->1 42->1 43->34 45->1 45->20 45->31 45->36 45->49 45->54 47->1 47->24 49->1 49->28 49->31 49->36 49->45 49->54 50->1 50->1 52->1 52->1 54->1 54->31 54->36 54->45 54->47 54->49 55->1 55->1 57->1 57->1 58->1 58->1 59->1 59->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int ( /* missing proto */ printf ) ( ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int scanf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern int ( /* missing proto */ isP ) ( ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; void megaInit ( void ) { { } } int main ( int _formal_argc , char * * _formal_argv , char * * _formal_envp ) { unsigned long long i ; int tmp ; int tmp___0 ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = _formal_argc ; _global_argv = _formal_argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 10 ; } while ( 1 ) { switch ( _1_main_next ) { case 10 : i = 1ULL ; { _1_main_next = 8 ; } break ; case 8 : ; if ( i < 10000000ULL ) { { _1_main_next = 6 ; } } else { { _1_main_next = 0 ; } } break ; case 6 : tmp = isP ( i ) ; { _1_main_next = 5 ; } break ; case 5 : ; if ( tmp ) { { _1_main_next = 4 ; } } else { { _1_main_next = 1 ; } } break ; case 4 : tmp___0 = isP ( i * i ) ; { _1_main_next = 3 ; } break ; case 3 : ; if ( tmp___0 ) { { _1_main_next = 2 ; } } else { { _1_main_next = 1 ; } } break ; case 2 : printf ( " \n " , i * i ) ; { _1_main_next = 1 ; } break ; case 1 : i ++ ; { _1_main_next = 8 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } }
>>>Func
METHOD main
METHOD_RETURN int
PARAM int argc
PARAM char **argv
PARAM char **_formal_envp
BLOCK <empty> <empty>
megaInit megaInit()
<operator>.assignment _global_argc = argc
<operator>.assignment _global_argv = argv
<operator>.assignment _global_envp = _formal_envp
<operator>.assignment _BARRIER_0 = 1
BLOCK <empty> <empty>
<operator>.assignment _1_main_next = 7
LITERAL 1 while (1)
IDENTIFIER _1_main_next switch(_1_main_next)
LITERAL 7 <empty>
<operator>.assignment c = (unsigned char )*(*(argv + 1) + 0)
BLOCK <empty> <empty>
LITERAL 6 <empty>
LITERAL 5 <empty>
printf printf("if-1-win ")
<operator>.assignment x = (unsigned char )(((int )c / 3) * 2)
BLOCK <empty> <empty>
LITERAL 4 <empty>
LITERAL 3 <empty>
printf printf("if-2-win\n")
BLOCK <empty> <empty>
LITERAL 2 <empty>
printf printf("if-2-lose\n")
BLOCK <empty> <empty>
LITERAL 1 <empty>
printf printf("if-1-lose\n")
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (0); return (0);
<operator>.assignment _1_main_next = 6
<operator>.greaterThan (int )c > 63
<operator>.assignment _1_main_next = 4
<operator>.equals (int )x == 127
<operator>.assignment _1_main_next = 0
<operator>.assignment _1_main_next = 0
<operator>.assignment _1_main_next = 0
LITERAL 0 return (0);
<operator>.cast (unsigned char )*(*(argv + 1) + 0)
BLOCK <empty> <empty>
<operator>.cast (unsigned char )(((int )c / 3) * 2)
BLOCK <empty> <empty>
<operator>.cast (int )c
<operator>.assignment _1_main_next = 5
BLOCK <empty> <empty>
<operator>.multiplication ((int )c / 3) * 2
<operator>.cast (int )x
<operator>.assignment _1_main_next = 3
BLOCK <empty> <empty>
<operator>.addition *(argv + 1) + 0
<operator>.assignment _1_main_next = 1
<operator>.division (int )c / 3
<operator>.assignment _1_main_next = 2
<operator>.cast (int )c
<operator>.addition argv + 1
>>>PDG&60 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->10 0->11 0->12 0->13 0->14 0->15 0->17 0->18 0->19 0->20 0->22 0->23 0->24 0->25 0->26 0->27 0->28 0->29 0->30 0->31 0->32 0->33 0->34 0->35 0->36 0->37 0->38 0->39 0->40 0->41 0->42 0->44 0->46 0->47 0->48 0->49 0->50 0->51 0->52 0->53 0->54 0->55 0->56 0->57 0->58 0->59 2->7 3->8 3->59 4->9 6->1 7->1 7->1 7->1 8->1 8->1 8->1 9->1 9->1 9->1 10->1 10->1 12->1 12->1 16->1 16->1 16->1 16->36 16->47 16->56 16->58 20->1 21->1 21->1 21->1 21->38 21->51 25->1 28->1 31->1 34->1 35->1 35->1 36->1 36->1 36->48 36->55 37->1 37->1 38->1 38->1 38->52 38->57 39->1 39->1 40->1 40->1 41->1 41->1 42->34 43->1 45->1 47->1 48->1 48->1 50->1 50->21 50->21 50->45 50->45 51->1 52->1 52->1 54->1 55->1 55->1 56->1 56->50 56->50 57->1 57->1 58->1 59->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fclose ( void * stream ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; char * * _global_argv = ( char * * ) 0 ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern void * malloc ( unsigned long size ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; int main ( int argc , char * * argv , char * * _formal_envp ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; int _global_argc = 0 ; void megaInit ( void ) ; char * * _global_envp = ( char * * ) 0 ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int ( /* missing proto */ printf ) ( ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern float strtof ( char const * str , char const * endptr ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int main ( int argc , char * * argv , char * * _formal_envp ) { unsigned char c ; unsigned char x ; int _BARRIER_0 ; unsigned long _1_main_next ; { megaInit ( ) ; _global_argc = argc ; _global_argv = argv ; _global_envp = _formal_envp ; _BARRIER_0 = 1 ; { _1_main_next = 7 ; } while ( 1 ) { switch ( _1_main_next ) { case 7 : c = ( unsigned char ) * ( * ( argv + 1 ) + 0 ) ; { _1_main_next = 6 ; } break ; case 6 : ; if ( ( int ) c > 63 ) { { _1_main_next = 5 ; } } else { { _1_main_next = 1 ; } } break ; case 5 : printf ( " " ) ; x = ( unsigned char ) ( ( ( int ) c / 3 ) * 2 ) ; { _1_main_next = 4 ; } break ; case 4 : ; if ( ( int ) x == 127 ) { { _1_main_next = 3 ; } } else { { _1_main_next = 2 ; } } break ; case 3 : printf ( " \n " ) ; { _1_main_next = 0 ; } break ; case 2 : printf ( " \n " ) ; { _1_main_next = 0 ; } break ; case 1 : printf ( " \n " ) ; { _1_main_next = 0 ; } break ; case 0 : ; return ( 0 ) ; break ; } } } } void megaInit ( void ) { { } }
>>>Func
METHOD inorderTraversal
METHOD_RETURN int*
PARAM struct TreeNode *root
PARAM int *returnSize
BLOCK <empty> <empty>
BLOCK <empty> <empty>
<operator>.assignment _1_inorderTraversal_next = 1
LITERAL 1 while (1)
IDENTIFIER _1_inorderTraversal_next switch(_1_inorderTraversal_next)
LITERAL 1 <empty>
<operator>.assignment tmp = malloc(256UL * sizeof(int ))
<operator>.assignment res = (int *)tmp
<operator>.assignment *returnSize = 0
processTraversal processTraversal(root, res, returnSize)
BLOCK <empty> <empty>
LITERAL 0 <empty>
RETURN return (res); return (res);
<operator>.assignment _1_inorderTraversal_next = 0
IDENTIFIER res return (res);
malloc malloc(256UL * sizeof(int ))
<operator>.cast (int *)tmp
<operator>.multiplication 256UL * sizeof(int )
<operator>.sizeOf sizeof(int )
>>>PDG&23 0->2 0->3 0->4 0->5 0->6 0->7 0->8 0->9 0->11 0->12 0->13 0->14 0->15 0->17 0->18 0->20 0->21 2->1 2->13 3->1 3->13 6->1 6->1 10->1 10->1 10->11 10->20 11->1 11->1 11->13 12->1 12->1 12->13 13->1 13->1 13->1 13->1 13->18 16->1 17->1 17->1 18->16 19->1 19->10 20->1 21->19 22->1
>>>Token /* Generated by CIL v. 1.7.0 */ /* print_CIL_Input is false */ struct TreeNode ; struct _IO_FILE ; struct timeval ; extern int pthread_cond_signal ( int * cond ) ; extern void exit ( int status ) ; extern int fseek ( struct _IO_FILE * stream , long offs , int whence ) ; extern int fclose ( void * stream ) ; extern int ( /* missing proto */ processTraversal ) ( ) ; extern int close ( int filedes ) ; extern int pthread_create ( void * thread , void * attr , void * start_routine , void * arg ) ; extern int fcntl ( int filedes , int cmd , ... ) ; extern int unlink ( char const * filename ) ; extern int pthread_mutex_lock ( int * mutex ) ; struct timeval { long tv_sec ; long tv_usec ; } ; extern int pthread_cond_init ( int * cond , int * attr ) ; extern unsigned long strtoul ( char const * str , char const * endptr , int base ) ; extern int raise ( int sig ) ; extern void abort ( ) ; extern int atoi ( char const * s ) ; extern int ( /* missing proto */ malloc ) ( ) ; extern double ceil ( double x ) ; extern int getpagesize ( ) ; extern int posix_memalign ( void * * memptr , unsigned long alignment , unsigned long size ) ; extern int pthread_cond_broadcast ( int * cond ) ; extern int pthread_join ( void * thread , void * * value_ptr ) ; extern int rand ( ) ; extern void free ( void * ptr ) ; extern unsigned long strlen ( char const * s ) ; void main ( void ) ; extern unsigned long write ( int filedes , void * buf , unsigned long nbyte ) ; extern long strtol ( char const * str , char const * endptr , int base ) ; extern int gettimeofday ( struct timeval * tv , void * tz ) ; void megaInit ( void ) ; extern int fscanf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int printf ( char const * format , ... ) ; extern long clock ( void ) ; extern void perror ( char const * str ) ; extern int scanf ( char const * format , ... ) ; extern unsigned long read ( int filedes , void * buf , unsigned long nbyte ) ; extern int pthread_mutex_unlock ( int * mutex ) ; extern int gethostname ( char * name , unsigned long namelen ) ; extern int pthread_cond_wait ( int * cond , int * mutex ) ; extern float strtof ( char const * str , char const * endptr ) ; extern void qsort ( void * base , unsigned long nel , unsigned long width , int ( * compar ) ( void * a , void * b ) ) ; extern unsigned long strnlen ( char const * s , unsigned long maxlen ) ; extern double strtod ( char const * str , char const * endptr ) ; extern int pthread_mutex_init ( int * mutex , int * attr ) ; extern int strcmp ( char const * a , char const * b ) ; extern void * fopen ( char const * filename , char const * mode ) ; extern double difftime ( long tv1 , long tv0 ) ; extern void signal ( int sig , void * func ) ; extern long time ( long * tloc ) ; int * inorderTraversal ( struct TreeNode * root , int * returnSize ) ; typedef struct _IO_FILE FILE ; extern int fprintf ( struct _IO_FILE * stream , char const * format , ... ) ; extern int strncmp ( char const * s1 , char const * s2 , unsigned long maxlen ) ; extern int open ( char const * filename , int oflag , ... ) ; extern double sqrt ( double x ) ; extern double log ( double x ) ; extern int snprintf ( char * str , unsigned long size , char const * format , ... ) ; extern void * memcpy ( void * s1 , void const * s2 , unsigned long size ) ; int * inorderTraversal ( struct TreeNode * root , int * returnSize ) { int * res ; int tmp ; unsigned long _1_inorderTraversal_next ; { { _1_inorderTraversal_next = 1 ; } while ( 1 ) { switch ( _1_inorderTraversal_next ) { case 1 : tmp = malloc ( 256UL * sizeof ( int ) ) ; res = ( int * ) tmp ; * returnSize = 0 ; processTraversal ( root , res , returnSize ) ; { _1_inorderTraversal_next = 0 ; } break ; case 0 : ; return ( res ) ; break ; } } } } void megaInit ( void ) { { } } void main ( void ) { { megaInit ( ) ; } }
>>>Func
